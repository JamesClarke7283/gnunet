.\" This file is part of GNUnet.
.\" Copyright (C) 2001-2019 GNUnet e.V.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the file
.\" FDL-1.3.
.\"
.\" A copy of the license is also available from the Free Software
.\" Foundation Web site at http://www.gnu.org/licenses/fdl.html}.
.\"
.\" Alternately, this document is also available under the General
.\" Public License, version 3 or later, as published by the Free Software
.\" Foundation.  A copy of the license is included in the file
.\" GPL3.
.\"
.\" A copy of the license is also available from the Free Software
.\" Foundation Web site at http://www.gnu.org/licenses/gpl.html
.\"
.\" SPDX-License-Identifier: GPL3.0-or-later OR FDL1.3-or-later
.\"
.Dd September 5, 2013
.Dt GNUNET-IDENTITY 1
.Os
.Sh NAME
.Nm gnunet-identity
.Nd maintain (create, delete or list) or perform actions with egos
.Sh SYNOPSIS
.Nm
.Op Fl C Ar NAME | Fl -create= Ns Ar NAME
.Op Fl D Ar NAME | Fl -delete= Ns Ar NAME
.Op Fl d | -display
.Op Fl e Ar NAME | Fl -ego= Ns Ar NAME
.Op Fl h | -help
.Op Fl k Ar PUBLIC_KEY | Fl -key= Ns Ar PUBLIC_KEY
.Op Fl m | -monitor
.Op Fl p | -private-keys
.Op Fl q | -quiet
.Op Fl R Ar MESSAGE | Fl -read= Ns Ar MESSAGE
.Op Fl V | -verbose
.Op Fl W Ar MESSAGE | Fl -write= Ns Ar MESSAGE
.Op Fl X | -eddsa
.Sh DESCRIPTION
.Nm
is a tool for managing egos.
An ego is the persona that controls a namespace.
It is identical to a public-private ECC key pair.
.Pp
gnunet-identity can be used to list all of the egos that were
created locally, to create new egos, and to delete
existing egos (the namespace will continue to exist, but it will
be impossible to add additional data to it).
.Pp
In addition, it is possible to encrypt and decrypt messages (arbitrary strings)
using a given public key (for encryption) or ego (for decryption).
.Pp
Creating a new ego requires using the
.Fl C
option together with an identifier (name) that is to be used for
the new ego.
This identifier is only used locally for this peer and not shared
with other peers.
The options are as follows:
.Bl -tag -width indent
.It Fl C Ar NAME | Fl -create= Ns Ar NAME
Creates a new ego with the given
.Ar NAME .
.It Fl D Ar NAME | Fl -delete= Ns Ar NAME
Delete the ego with the given
.Ar NAME .
.It Fl d | -display
Display all of our egos.
.It Fl e Ar NAME | Fl -ego= Ns Ar NAME
Perform "set" operation with the respective ego or restrict "display"
operation to the respective ego.
.It Fl h | -help
Print the help page.
.It Fl k Ar PUBLIC_KEY | Fl -key= Ns Ar PUBLIC_KEY
The public key to use for a message recipient. Use together with
.Fl W .
The recipient can obtain the desired ego's public key using the "display"
operation.
.It Fl m | -monitor
Run in monitor mode, listing all ouf our egos until CTRL-C is pressed.
Each ego is listed together with a unique pointer value; if
egos are renamed, that pointer value remains the same,
if egos are deleted, they are listed one more time with a name of "<null>".
.It Fl p | -private-keys
Print the private keys (in Crockford Base32 encoding), and not just the public
keys. The second column shows the public key, the third column shows the
private key.
.It Fl q | -quiet
Be quiet, in particular outputs only the public key when listing egos.
.It Fl R Ar MESSAGE | Fl -read= Ns Ar MESSAGE
Decrypt (read) a message using the respective ego private key. Use together with
.Fl e .
The message consists of an ephemeral key and the ciphertext, separated by a dot.
Such messages can be created with
.Fl W .
.It Fl V | -verbose
Be verbose, in particular outputs the public key of freshly created egos.
.It Fl W Ar MESSAGE | Fl -write= Ns Ar MESSAGE
Encrypt (write) the given message for the identity given with
.Fl k .
The output contains an ephemeral message public key and the message separated
by a dot. The entire line needs to be transferred to the recipient, who can use
.Fl R
to decrypt the message.
.It Fl X | -eddsa
Use EdDSA instead of ECDSA.
.El
.Sh FILES
.Pa ~/.local/share/gnunet/identity/egos
Directory where the egos are stored by default
.\".Sh EXAMPLES
.Sh SEE ALSO
.Xr gnunet-gns 1 ,
.Xr gnunet-namestore 1
.sp
The full documentation for gnunet is maintained as a Texinfo manual.
If the
.Xr info 1
and gnunet programs are properly installed at your site, the command
.Pp
.Dl info gnunet
.Pp
should give you access to the complete handbook,
.Pp
.Dl info gnunet-c-tutorial
.Pp
will give you access to a tutorial for developers.
.sp
Depending on your installation, this information is also available in
.Xr gnunet 7 and
.Xr gnunet-c-tutorial 7 .
.\".Sh HISTORY
.\".Sh AUTHORS
.Sh BUGS
Report bugs by using
.Lk https://bugs.gnunet.org
or by sending electronic mail to
.Aq Mt gnunet-developers@gnu.org .

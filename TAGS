
doc/old/tutorial/examples/011.c,17
disconnects 2,5

doc/old/tutorial/examples/001.c,45
static int ret;5,88
run 8,117
main 18,275

doc/old/tutorial/examples/023.c,41
libgnunet_plugin_block_SERVICE_init 2,7

doc/old/tutorial/examples/012.c,23
peerstore_handle 4,61

doc/old/tutorial/examples/019.c,23
message_sent_cont 1,0

doc/old/tutorial/examples/003.c,103
struct GNUNET_MQ_MessageHandlers handlers[handlers1,0
struct GNUNET_MQ_Handle *mq;mq5,89
mq 7,119

doc/old/tutorial/examples/testbed_test.c,353
#define NUM_PEERS 8,190
static struct GNUNET_TESTBED_Operation *dht_op;dht_op10,212
static struct GNUNET_DHT_Handle *dht_handle;dht_handle12,261
struct MyContext15,308
  int ht_len;17,327
} ctxt;18,341
static int result;21,351
shutdown_task 25,384
service_connect_comp 38,566
dht_ca 51,868
dht_da 61,1061
test_master 71,1235
main 88,1704

doc/old/tutorial/examples/018.c,16
dht_handle 1,0

doc/old/tutorial/examples/005.c,128
struct GNUNET_MQ_Envelope *env;env1,0
struct GNUNET_MessageHeader *msg;msg2,32
env 4,67
               payload_size)7,187

doc/old/tutorial/examples/002.c,174
static char *string_option;string_option1,0
static int a_flag;2,28
  struct GNUNET_GETOPT_CommandLineOption options[options5,55
  string_option 14,403
  a_flag 15,427

doc/old/tutorial/examples/026.c,90
get_callback 2,12
get_resp_callback 15,377
put_callback 30,873
monitor_handle 45,1332

doc/old/tutorial/examples/024.c,41
libgnunet_plugin_block_SERVICE_done 2,7

doc/old/tutorial/examples/020.c,45
get_result_iterator 2,12
get_handle 15,532

doc/old/tutorial/examples/010.c,14
connects 2,7

doc/old/tutorial/examples/004.c,104
struct GNUNET_MessageHeader1,0
  uint16_t size GNUNET_PACKED;3,30
  uint16_t type GNUNET_PACKED;4,61

doc/old/tutorial/examples/006.c,110
handle_fix 2,12
check_var 8,99
handle_var 15,222
struct GNUNET_MQ_MessageHandler handlers[handlers20,301

doc/old/tutorial/examples/021.c,36
block_plugin_SERVICE_evaluate 2,42

doc/old/tutorial/examples/022.c,35
block_plugin_SERVICE_get_key 2,11

doc/old/tutorial/examples/008.c,64
run 2,12
client_connect_cb 9,141
client_disconnect_cb 17,300

aarch64-linux-android/meson-private/sanitycheckc.c,14
int main(1,0

aarch64-linux-android/src/include/gnunet_config.h,295
#define GNUNET_CONFIG_H22,833
#define GNUNET_VERSION 34,1038
#define GNUNET_MAJOR_VERSION 37,1104
#define GNUNET_MINOR_VERSION 40,1156
#define GNUNET_MICRO_VERSION 43,1208
#define GNUNET_EXPERIMENTAL 46,1287
#define GNUNET_CURL_GNUTLS 49,1364
#define GNUNET_FS_EXTRACTOR_ENABLED 56,1549

aarch64-linux-android/gnunet_private_config.h,1254
#define GNUNET_DEFAULT_INTERFACE 8,109
#define HAVE_ATOLL 10,150
#define HAVE_FREEIFADDRS 12,172
#define HAVE_GETADDRINFO 14,200
#define HAVE_GETHOSTBYNAME 16,228
#define HAVE_GETHOSTBYNAME2 18,258
#define HAVE_GETIFADDRS 20,289
#define HAVE_GETRESGID 22,316
#define HAVE_GETRLIMIT 24,342
#define HAVE_GETRUSAGE 26,368
#define HAVE_INITGROUPS 28,394
#define HAVE_MALLOC_USABLE_SIZE 30,421
#define HAVE_MREMAP 32,456
#define HAVE_RANDOM 34,479
#define HAVE_SETRESUID 36,502
#define HAVE_SETRLIMIT 38,528
#define HAVE_SRANDOM 40,554
#define HAVE_STAT 42,578
#define HAVE_STAT64 44,599
#define HAVE_STATFS 46,622
#define HAVE_STATVFS 48,645
#define HAVE_STRNDUP 50,669
#define HAVE_STRNLEN 52,693
#define HAVE_TIMEGM 54,717
#define HAVE_WAIT4 56,740
#define IFCONFIG 58,762
#define IPTABLES 60,801
#define JAVAPORT 62,840
#define PACKAGE_VERSION 64,860
#define PATH_TO_IP 66,894
#define PKGDATADIRECTORY 68,929
#define START_ON_DEMAND 70,979
#define SYSCONFDIR 72,1008
#define UNIXONLY 74,1043
#define VCS_VERSION 76,1063
#define build_target 78,1097
#undef enable_experimental80,1127
#define extractor 82,1155
#define gnunet_major_version 84,1176
#define gnunet_minor_version 86,1208
#define gnunet_version 88,1241

src/lib/util/test_crypto_elligator.c,222
#define ITER 6,89
testDirectMap 12,253
testInverseMap 52,1285
testGeneratePkScalarMult 96,2625
testInverseDirect 130,3801
testTimeKeyGenerate 162,4793
testTimeDecoding 188,5442
elligatorKEM 222,6264
main 252,7154

src/lib/util/getopt_helpers.c,1303
#define LOG(30,986
print_version 43,1393
GNUNET_GETOPT_option_version 58,1737
#define BORDER 77,2118
format_help 89,2477
GNUNET_GETOPT_option_help 192,5052
increment_value 223,5964
GNUNET_GETOPT_option_increment_uint 239,6291
GNUNET_GETOPT_option_verbose 257,6769
set_one 287,7610
GNUNET_GETOPT_option_flag 303,7896
set_string 335,8915
GNUNET_GETOPT_option_string 352,9274
GNUNET_GETOPT_option_loglevel 373,9824
set_filename 401,10605
GNUNET_GETOPT_option_filename 418,10989
GNUNET_GETOPT_option_logfile 439,11551
GNUNET_GETOPT_option_cfgfile 457,11959
set_ulong 487,12915
GNUNET_GETOPT_option_ulong 508,13388
set_timetravel_time 542,14545
GNUNET_GETOPT_option_timetravel 590,15653
set_relative_time 621,16720
GNUNET_GETOPT_option_relative_time 641,17243
set_absolute_time 675,18457
GNUNET_GETOPT_option_absolute_time 695,18980
set_timestamp 729,20195
GNUNET_GETOPT_option_timestamp 759,21011
set_uint 793,22157
GNUNET_GETOPT_option_uint 822,22817
set_uint16 856,23909
GNUNET_GETOPT_option_uint16 887,24627
struct Base32Context910,25179
  void *val;val915,25259
  size_t val_size;920,25327
set_base32 938,25945
free_bc 969,26732
GNUNET_GETOPT_option_base32_fixed_size 976,26818
GNUNET_GETOPT_option_mandatory 1002,27611
GNUNET_GETOPT_option_exclusive 1010,27774

src/lib/util/bio.c,2280
#define LOG(29,957
#define PATH_MAX 35,1110
#define BIO_BUFFER_SIZE 42,1174
enum IOType51,1411
  IO_FILE 56,1485
  IO_BUFFER,61,1557
struct GNUNET_BIO_ReadHandle68,1615
  enum IOType type;73,1683
  struct GNUNET_DISK_FileHandle *fd;fd78,1771
  char *emsg;emsg83,1871
  char *buffer;buffer88,1932
  size_t have;93,2006
  size_t size;98,2064
  off_t pos;103,2131
GNUNET_BIO_read_open_file 114,2302
GNUNET_BIO_read_open_buffer 139,2965
GNUNET_BIO_read_close 162,3556
GNUNET_BIO_read_set_error 187,3952
read_from_file 204,4462
read_from_buffer 262,5922
GNUNET_BIO_read 291,6771
GNUNET_BIO_read_string 330,7785
GNUNET_BIO_read_float 392,9352
GNUNET_BIO_read_double 409,9773
GNUNET_BIO_read_int32 427,10259
GNUNET_BIO_read_int64 449,10819
struct GNUNET_BIO_WriteHandle465,11156
  enum IOType type;470,11225
  struct GNUNET_DISK_FileHandle *fd;fd475,11313
  char *emsg;emsg480,11413
  void *buffer;buffer487,11604
  size_t have;492,11678
  size_t size;497,11736
GNUNET_BIO_write_open_file 508,11917
GNUNET_BIO_write_open_buffer 535,12692
GNUNET_BIO_write_close 556,13267
GNUNET_BIO_flush 607,14360
GNUNET_BIO_get_buffer_contents 643,15383
write_to_file 675,16360
write_to_buffer 731,17784
GNUNET_BIO_write 752,18360
GNUNET_BIO_write_string 789,19228
GNUNET_BIO_write_float 812,19830
GNUNET_BIO_write_double 829,20225
GNUNET_BIO_write_int32 847,20695
GNUNET_BIO_write_int64 867,21195
read_spec_handler_object 889,21815
GNUNET_BIO_read_spec_object 908,22396
read_spec_handler_string 935,23073
GNUNET_BIO_read_spec_string 956,23778
read_spec_handler_int32 982,24442
GNUNET_BIO_read_spec_int32 1001,24970
read_spec_handler_int64 1026,25566
GNUNET_BIO_read_spec_int64 1045,26094
GNUNET_BIO_read_spec_float 1066,26519
GNUNET_BIO_read_spec_double 1086,26928
GNUNET_BIO_read_spec_commit 1108,27423
write_spec_handler_object 1135,28133
GNUNET_BIO_write_spec_object 1154,28701
write_spec_handler_string 1182,29391
GNUNET_BIO_write_spec_string 1201,29941
write_spec_handler_int32 1227,30579
GNUNET_BIO_write_spec_int32 1246,31126
write_spec_handler_int64 1272,31749
GNUNET_BIO_write_spec_int64 1291,32296
GNUNET_BIO_write_spec_float 1314,32775
GNUNET_BIO_write_spec_double 1336,33238
GNUNET_BIO_write_spec_commit 1359,33763

src/lib/util/test_crypto_hash_context.c,33
#define LEN 29,942
main 32,964

src/lib/util/crypto_pkey.c,1141
check_key_type 32,1022
GNUNET_CRYPTO_private_key_clear 47,1245
GNUNET_CRYPTO_private_key_get_length 64,1602
GNUNET_CRYPTO_public_key_get_length 85,2127
GNUNET_CRYPTO_private_key_length_by_type 102,2529
GNUNET_CRYPTO_read_public_key_from_buffer 120,2919
GNUNET_CRYPTO_write_public_key_to_buffer 145,3705
GNUNET_CRYPTO_read_private_key_from_buffer 163,4303
GNUNET_CRYPTO_write_private_key_to_buffer 188,5095
GNUNET_CRYPTO_signature_get_length 206,5677
GNUNET_CRYPTO_signature_get_raw_length_by_type 225,6111
GNUNET_CRYPTO_read_signature_from_buffer 243,6476
GNUNET_CRYPTO_write_signature_to_buffer 263,7103
GNUNET_CRYPTO_sign_raw_ 281,7702
GNUNET_CRYPTO_sign_ 308,8556
GNUNET_CRYPTO_signature_verify_ 334,9317
GNUNET_CRYPTO_signature_verify_raw_ 363,10345
GNUNET_CRYPTO_encrypt_old 394,11443
GNUNET_CRYPTO_encrypt 433,12882
GNUNET_CRYPTO_decrypt 484,14871
GNUNET_CRYPTO_decrypt_old 533,16715
GNUNET_CRYPTO_public_key_to_string 568,17970
GNUNET_CRYPTO_private_key_to_string 578,18261
GNUNET_CRYPTO_public_key_from_string 588,18580
GNUNET_CRYPTO_private_key_from_string 604,19077
GNUNET_CRYPTO_key_get_public 619,19576

src/lib/util/test_speedup.c,175
static struct GNUNET_TIME_Absolute start;31,963
static struct GNUNET_TIME_Absolute end;36,1065
static unsigned int cycles;41,1158
run 51,1319
check 72,1674
main 84,1895

src/lib/util/resolver.h,374
#define RESOLVER_H26,886
struct GNUNET_RESOLVER_GetMessage43,1414
  struct GNUNET_MessageHeader header;48,1512
  int32_t direction GNUNET_PACKED;54,1644
  int32_t af GNUNET_PACKED;59,1753
  uint32_t client_id GNUNET_PACKED;65,1933
struct GNUNET_RESOLVER_ResponseMessage72,2100
  struct GNUNET_MessageHeader header;77,2203
  uint32_t client_id GNUNET_PACKED;83,2377

src/lib/util/test_scheduler_delay.c,194
static struct GNUNET_TIME_Absolute target;30,1044
static int i;32,1088
static unsigned long long cumDelta;34,1103
#define INCR 36,1140
#define MAXV 38,1157
test_task 47,1267
main 74,2026

src/lib/util/test_crypto_kdf.c,44
main 37,1336
#define RND_BLK_SIZE 39,1346

src/lib/util/resolver_api.c,1862
#define LOG(33,1050
#define LOG_STRERROR(35,1131
#define MAX_HOSTNAME 42,1409
static const char *loopback[loopback48,1483
static const struct GNUNET_CONFIGURATION_Handle *resolver_cfg;resolver_cfg58,1588
static struct GNUNET_MQ_Handle *mq;mq64,1768
static struct GNUNET_RESOLVER_RequestHandle *req_head;req_head69,1841
static struct GNUNET_RESOLVER_RequestHandle *req_tail;req_tail74,1933
static uint32_t last_request_id;79,2046
static struct GNUNET_TIME_Relative backoff;84,2129
static struct GNUNET_SCHEDULER_Task *r_task;r_task89,2208
static struct GNUNET_SCHEDULER_Task *s_task;s_task95,2359
struct GNUNET_RESOLVER_RequestHandle103,2603
  struct GNUNET_RESOLVER_RequestHandle *next;next108,2690
  struct GNUNET_RESOLVER_RequestHandle *prev;prev113,2789
  GNUNET_RESOLVER_AddressCallback addr_callback;119,2922
  GNUNET_RESOLVER_HostnameCallback name_callback;125,3056
  void *cls;cls130,3151
  struct GNUNET_TIME_Absolute timeout;135,3217
  struct GNUNET_SCHEDULER_Task *task;task141,3377
  int af;146,3457
  uint32_t id;151,3544
  int was_transmitted;159,3740
  int was_queued;164,3819
  int direction;169,3900
  int received_response;174,3974
  size_t data_len;179,4062
check_config 191,4280
GNUNET_RESOLVER_connect 258,6066
GNUNET_RESOLVER_disconnect 270,6304
shutdown_task 306,7011
check_disconnect 319,7236
no_resolve 348,7943
mq_error_handler 410,9189
process_requests 427,9489
check_response 476,10812
handle_response 496,11281
numeric_resolution 652,15685
loopback_resolution 728,17874
reconnect_task 792,19359
reconnect 828,20328
handle_lookup_timeout 880,21624
GNUNET_RESOLVER_ip_get 940,23285
numeric_reverse 1030,25953
GNUNET_RESOLVER_hostname_get 1072,27004
GNUNET_RESOLVER_local_fqdn_get 1149,29101
GNUNET_RESOLVER_hostname_resolve 1235,31259
GNUNET_RESOLVER_request_cancel 1268,32308

src/lib/util/dnsstub.c,1400
#define DNS_RETRANSMIT_DELAY 32,1037
struct GNUNET_DNSSTUB_RequestSocket45,1279
  struct GNUNET_NETWORK_Handle *dnsout4;dnsout450,1378
  struct GNUNET_NETWORK_Handle *dnsout6;dnsout655,1481
  GNUNET_DNSSTUB_ResultCallback rc;60,1570
  void *rc_cls;rc_cls65,1643
  struct GNUNET_SCHEDULER_Task *read_task;read_task70,1720
  struct GNUNET_SCHEDULER_Task *retry_task;retry_task75,1826
  struct DnsServer *ds_pos;ds_pos80,1929
  struct GNUNET_DNSSTUB_Context *ctx;ctx85,2009
  void *request;request90,2091
  size_t request_len;95,2157
struct DnsServer102,2227
  struct DnsServer *next;next107,2278
  struct DnsServer *prev;prev112,2337
  struct sockaddr_storage ss;117,2413
struct GNUNET_DNSSTUB_Context124,2488
  struct GNUNET_DNSSTUB_RequestSocket *sockets;sockets129,2581
  struct DnsServer *dns_head;dns_head134,2676
  struct DnsServer *dns_tail;dns_tail139,2753
  struct GNUNET_TIME_Relative retry_freq;144,2838
  unsigned int num_sockets;149,2926
cleanup_rs 159,3100
open_socket 196,3840
get_request_socket 245,4948
do_dns_read 291,6064
schedule_read 403,9149
read_response 426,9883
transmit_query 454,10693
GNUNET_DNSSTUB_resolve 526,12822
GNUNET_DNSSTUB_resolve_cancel 562,13767
GNUNET_DNSSTUB_start 586,14286
GNUNET_DNSSTUB_add_dns_ip 613,14938
GNUNET_DNSSTUB_add_dns_sa 665,16284
GNUNET_DNSSTUB_set_retry 692,16856
GNUNET_DNSSTUB_stop 705,17107

src/lib/util/crypto_pow.c,32
GNUNET_CRYPTO_pow_hash 42,1370

src/lib/util/regex.c,466
#define DOT 33,1079
GNUNET_TUN_ipv4toregexsearch 37,1134
GNUNET_TUN_ipv6toregexsearch 50,1474
nibble_to_regex 75,2193
num_to_regex 138,3508
needs_parens 177,4382
compute_policy 222,5062
port_to_regex 504,12537
address_to_regex 576,14176
ipv4_to_regex 622,14993
ipv6_to_regex 655,15655
GNUNET_TUN_ipv4policy2regex 682,16178
GNUNET_TUN_ipv6policy2regex 725,16970
GNUNET_TUN_service_name_to_hash 772,17977
GNUNET_TUN_compute_service_cadet_port 791,18494

src/lib/util/test_uri.c,467
#define KNRM 7,110
#define KBLU 8,134
#define KGRN 9,159
#define KERR 10,184
#define mu_group(13,276
#define mu_assert(16,381
#define mu_silent_assert(25,679
#define mu_run_test(33,895
int tests_run;39,1027
strcmp_wrap 42,1054
#define assert_struct(58,1285
test_parse_http_url_ok 85,2653
test_parse_http_rel_url_ok 398,10985
test_parse_url_fail 493,13228
test_split_path_ok 559,14902
test_parse_query_ok 627,17290
all_tests 807,24443
main 828,24931

src/lib/util/crypto_ecc_dlog.c,589
struct GNUNET_CRYPTO_EccDlogContext37,1207
  unsigned int max;42,1311
  unsigned int mem;47,1426
  struct GNUNET_CONTAINER_MultiPeerMap *map;map55,1736
  gcry_ctx_t ctx;60,1852
GNUNET_CRYPTO_ecc_dlog_prepare 65,1913
GNUNET_CRYPTO_ecc_dlog 112,3571
GNUNET_CRYPTO_ecc_random_mod_n 195,5806
GNUNET_CRYPTO_ecc_dlog_release 202,5928
GNUNET_CRYPTO_ecc_dexp 210,6086
GNUNET_CRYPTO_ecc_dexp_mpi 223,6440
GNUNET_CRYPTO_ecc_add 235,6774
GNUNET_CRYPTO_ecc_pmul_mpi 249,7163
GNUNET_CRYPTO_ecc_rnd 263,7602
GNUNET_CRYPTO_ecc_rnd_mpi 285,8264
GNUNET_CRYPTO_ecc_scalar_from_int 295,8532

src/lib/util/speedup.c,278
#define LOG(31,1009
static struct GNUNET_TIME_Relative interval;34,1086
static struct GNUNET_TIME_Relative delta;36,1132
static struct GNUNET_SCHEDULER_Task *speedup_task;speedup_task38,1175
do_speedup 42,1240
GNUNET_SPEEDUP_start_ 60,1744
GNUNET_SPEEDUP_stop_ 100,3107

src/lib/util/test_scheduler.c,533
static struct GNUNET_DISK_PipeHandle *p;p29,924
static const struct GNUNET_DISK_FileHandle *fds[fds31,966
static struct GNUNET_SCHEDULER_Task *never_run_task;never_run_task33,1019
task2 37,1086
task3 50,1338
taskWrt 60,1433
taskNeverRun 75,1783
taskLastRd 82,1847
taskLastSig 92,1947
taskLastShutdown 103,2092
taskRd 113,2199
task4 131,2663
task1 153,3351
check 174,3877
taskShutdown 187,4054
checkShutdown 203,4340
taskSig 216,4530
checkSignal 238,5098
taskCancel 251,5292
checkCancel 266,5561
main 279,5748

src/lib/util/crypto_cs.c,520
GNUNET_CRYPTO_cs_private_key_generate 45,1397
GNUNET_CRYPTO_cs_private_key_get_public 52,1542
map_to_scalar_subgroup 69,2096
GNUNET_CRYPTO_cs_r_derive 79,2294
GNUNET_CRYPTO_cs_r_get_public 98,2868
GNUNET_CRYPTO_cs_blinding_secrets_derive 108,3198
static const unsigned char L_BIG_ENDIAN[L_BIG_ENDIAN136,4215
cs_full_domain_hash 151,4694
calc_r_dash 209,6518
GNUNET_CRYPTO_cs_calc_blinded_c 240,7682
GNUNET_CRYPTO_cs_sign_derive 284,9091
GNUNET_CRYPTO_cs_unblind 318,10460
GNUNET_CRYPTO_cs_verify 330,10866

src/lib/util/test_socks.c,548
#define PORT 29,920
#define MYNAME 31,940
static struct GNUNET_MQ_Handle *mq;mq33,970
static struct GNUNET_SERVER_Handle *server;server35,1007
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1052
#define MY_TYPE 39,1101
struct CopyContext41,1122
  struct GNUNET_SERVER_Client *client;client43,1143
  struct GNUNET_MessageHeader *cpy;cpy44,1182
copy_msg 48,1236
echo_cb 68,1837
static struct GNUNET_SERVER_MessageHandler handlers[handlers90,2697
handle_bounce 97,2863
mq_error_handler 122,3517
task 130,3658
main 178,5055

src/lib/util/test_crypto_ecc_dlog.c,181
#define CURVE 38,1262
#define MAX_FACT 43,1330
#define MAX_MEM 48,1419
#define TEST_ITER 53,1478
#define MATH_MAX 58,1551
test_dlog 67,1676
test_math 148,3938
main 192,5104

src/lib/util/bandwidth.c,661
#define LOG(31,970
GNUNET_BANDWIDTH_value_init 40,1205
GNUNET_BANDWIDTH_value_min 57,1539
GNUNET_BANDWIDTH_value_max 73,1949
GNUNET_BANDWIDTH_value_sum 89,2359
GNUNET_BANDWIDTH_value_get_available_until 97,2588
GNUNET_BANDWIDTH_value_get_delay_for 122,3360
excess_trigger 150,4142
update_excess 168,4514
GNUNET_BANDWIDTH_tracker_init2 252,7545
GNUNET_BANDWIDTH_tracker_init 279,8417
GNUNET_BANDWIDTH_tracker_notification_stop 302,9090
update_tracker 321,9525
GNUNET_BANDWIDTH_tracker_consume 368,10968
GNUNET_BANDWIDTH_tracker_get_delay 424,12422
GNUNET_BANDWIDTH_tracker_get_available 464,13568
GNUNET_BANDWIDTH_tracker_update_quota 492,14405

src/lib/util/test_container_dll.c,158
struct Element34,965
  struct Element *prev;prev39,1037
  struct Element *next;next44,1113
  unsigned int value;49,1169
cmp_elem 62,1401
main 73,1579

src/lib/util/crypto_ecc_gnsrecord.c,379
#define CURVE 34,1099
derive_h 48,1489
GNUNET_CRYPTO_eddsa_sign_derived 72,2094
GNUNET_CRYPTO_ecdsa_sign_derived 175,4807
GNUNET_CRYPTO_ecdsa_private_key_derive 196,5496
GNUNET_CRYPTO_ecdsa_public_key_derive 241,6757
GNUNET_CRYPTO_eddsa_private_key_derive 294,8436
GNUNET_CRYPTO_eddsa_public_key_derive 381,10880
GNUNET_CRYPTO_eddsa_key_get_public_from_scalar 437,12566

src/lib/util/perf_crypto_hash.c,73
perfHash 34,1040
perfHashSmall 47,1250
perfHKDF 60,1458
main 79,1881

src/lib/util/test_crypto_blind.c,14
main 32,1018

src/lib/util/container_bloomfilter.c,1280
#define LOG(46,1725
#define LOG_STRERROR(49,1819
#define LOG_STRERROR_FILE(52,1931
struct GNUNET_CONTAINER_BloomFilter58,2235
  char *bitArray;bitArray63,2323
  char *filename;filename68,2382
  struct GNUNET_DISK_FileHandle *fh;fh73,2447
  unsigned int addressesPerElement;78,2547
  size_t bitArraySize;83,2627
GNUNET_CONTAINER_bloomfilter_get_element_addresses 88,2662
GNUNET_CONTAINER_bloomfilter_get_size 98,2843
GNUNET_CONTAINER_bloomfilter_copy 108,3035
setBit 125,3539
clearBit 145,3978
testBit 164,4381
incrementBit 188,4926
decrementBit 239,6142
#define BUFFSIZE 295,7459
make_empty_file 305,7696
(*BitIterator)BitIterator350,8813
iterateBits 365,9215
incrementBitCallback 410,10349
decrementBitCallback 432,10860
testBitCallback 454,11407
GNUNET_CONTAINER_bloomfilter_load 472,11762
GNUNET_CONTAINER_bloomfilter_init 613,15761
GNUNET_CONTAINER_bloomfilter_get_raw_data 639,16396
GNUNET_CONTAINER_bloomfilter_free 654,16695
GNUNET_CONTAINER_bloomfilter_clear 667,16951
GNUNET_CONTAINER_bloomfilter_test 679,17198
GNUNET_CONTAINER_bloomfilter_add 697,17497
GNUNET_CONTAINER_bloomfilter_or 710,17801
GNUNET_CONTAINER_bloomfilter_or2 736,18487
GNUNET_CONTAINER_bloomfilter_remove 767,19214
GNUNET_CONTAINER_bloomfilter_resize 782,19538

src/lib/util/crypto_paillier.c,258
GNUNET_CRYPTO_paillier_create 40,1216
GNUNET_CRYPTO_paillier_encrypt1 121,4097
GNUNET_CRYPTO_paillier_encrypt 221,7333
GNUNET_CRYPTO_paillier_decrypt 328,10623
GNUNET_CRYPTO_paillier_hom_add 392,12679
GNUNET_CRYPTO_paillier_hom_get_remaining 455,14676

src/lib/util/os_priority.c,1551
#define LOG(33,1020
#define LOG_STRERROR(35,1100
#define LOG_STRERROR_FILE(38,1202
#define GNUNET_OS_CONTROL_PIPE 41,1334
struct GNUNET_OS_Process44,1392
  pid_t pid;49,1456
  struct GNUNET_DISK_FileHandle *control_pipe;control_pipe55,1584
static struct GNUNET_OS_Process current_process;62,1674
static struct GNUNET_SCHEDULER_Task *pch;pch67,1782
static struct GNUNET_SCHEDULER_Task *spch;spch72,1873
shutdown_pch 81,2069
parent_control_handler 98,2435
GNUNET_OS_install_parent_control_handler 133,3481
GNUNET_OS_process_current 202,5455
GNUNET_OS_process_kill 210,5548
GNUNET_OS_process_get_pid 253,6518
GNUNET_OS_process_destroy 260,6608
open_dev_null 277,6973
start_process 317,8248
GNUNET_OS_start_process_vap 573,15705
GNUNET_OS_start_process_va 591,16381
GNUNET_OS_start_process 626,17465
GNUNET_OS_start_process_v 649,18246
GNUNET_OS_start_process_s 665,18726
process_status 796,21768
GNUNET_OS_process_status 859,23010
GNUNET_OS_process_wait_status 868,23271
GNUNET_OS_process_wait 877,23541
struct GNUNET_OS_CommandHandle897,23897
  struct GNUNET_OS_Process *eip;eip902,23963
  struct GNUNET_DISK_PipeHandle *opipe;opipe907,24041
  const struct GNUNET_DISK_FileHandle *r;r912,24124
  GNUNET_OS_LineProcessor proc;917,24225
  void *proc_cls;proc_cls922,24296
  char buf[buf927,24355
  struct GNUNET_SCHEDULER_Task *rtask;rtask932,24415
  struct GNUNET_TIME_Absolute timeout;937,24490
  size_t off;942,24575
GNUNET_OS_command_stop 947,24599
cmd_read 968,25129
GNUNET_OS_command_run 1021,26592

src/lib/util/test_regex.c,119
#define DOT 32,1044
test_iptoregex 36,1105
test_policy4toregex 76,2075
test_policy6toregex 102,2514
main 132,3073

src/lib/util/mq.c,3239
#define LOG(30,947
struct GNUNET_MQ_Envelope33,1019
  struct GNUNET_MQ_Envelope *next;next39,1149
  struct GNUNET_MQ_Envelope *prev;prev45,1286
  struct GNUNET_MessageHeader *mh;mh52,1452
  struct GNUNET_MQ_Handle *parent_queue;parent_queue57,1568
  GNUNET_SCHEDULER_TaskCallback sent_cb;62,1674
  void *sent_cls;sent_cls67,1756
  enum GNUNET_MQ_PriorityPreferences priority;74,1920
  int have_custom_options;79,2040
struct GNUNET_MQ_Handle86,2110
  struct GNUNET_MQ_MessageHandler *handlers;handlers91,2218
  GNUNET_MQ_SendImpl send_impl;97,2359
  GNUNET_MQ_DestroyImpl destroy_impl;102,2461
  GNUNET_MQ_CancelImpl cancel_impl;107,2563
  void *impl_state;impl_state112,2647
  GNUNET_MQ_ErrorHandler error_handler;117,2731
  void *error_handler_cls;error_handler_cls122,2820
  struct GNUNET_SCHEDULER_Task *send_task;send_task127,2915
  struct GNUNET_MQ_Envelope *envelope_head;envelope_head132,3019
  struct GNUNET_MQ_Envelope *envelope_tail;envelope_tail137,3124
  struct GNUNET_MQ_Envelope *current_envelope;current_envelope144,3361
  struct GNUNET_CONTAINER_MultiHashMap32 *assoc_map;assoc_map149,3464
  struct GNUNET_MQ_DestroyNotificationHandle *dnh_head;dnh_head154,3590
  struct GNUNET_MQ_DestroyNotificationHandle *dnh_tail;dnh_tail159,3719
  enum GNUNET_MQ_PriorityPreferences priority;165,3878
  uint32_t assoc_id;172,4067
  unsigned int queue_length;177,4153
  bool in_flight;182,4252
GNUNET_MQ_inject_message 187,4280
GNUNET_MQ_handle_message 205,4724
GNUNET_MQ_inject_error 269,6417
GNUNET_MQ_discard 285,6771
GNUNET_MQ_get_length 293,6904
GNUNET_MQ_send 304,7057
GNUNET_MQ_unsent_head 344,8236
GNUNET_MQ_env_copy 359,8585
GNUNET_MQ_send_copy 370,8866
impl_send_continue 394,9584
GNUNET_MQ_impl_send_continue 421,10318
GNUNET_MQ_impl_send_in_flight 444,10950
GNUNET_MQ_queue_for_callbacks 465,11533
GNUNET_MQ_set_handlers_closure 489,12315
GNUNET_MQ_impl_current 500,12610
GNUNET_MQ_impl_state 509,12811
GNUNET_MQ_msg_ 516,12921
GNUNET_MQ_msg_copy 533,13331
GNUNET_MQ_msg_nested_mh_ 548,13681
GNUNET_MQ_assoc_add 575,14442
GNUNET_MQ_assoc_get 604,15172
GNUNET_MQ_assoc_remove 622,15637
GNUNET_MQ_notify_sent 638,16058
struct GNUNET_MQ_DestroyNotificationHandle653,16478
  struct GNUNET_MQ_DestroyNotificationHandle *prev;prev658,16555
  struct GNUNET_MQ_DestroyNotificationHandle *next;next663,16640
  struct GNUNET_MQ_Handle *mq;mq668,16733
  GNUNET_SCHEDULER_TaskCallback cb;673,16800
  void *cb_cls;cb_cls678,16873
GNUNET_MQ_destroy 683,16899
GNUNET_MQ_extract_nested_mh_ 740,18433
GNUNET_MQ_send_cancel 768,19122
GNUNET_MQ_get_current_envelope 813,20495
GNUNET_MQ_get_last_envelope 820,20621
GNUNET_MQ_env_set_options 830,20785
GNUNET_MQ_env_get_options 839,21014
GNUNET_MQ_env_combine_options 852,21293
GNUNET_MQ_set_options 871,21998
GNUNET_MQ_env_get_msg 879,22175
GNUNET_MQ_env_next 886,22294
GNUNET_MQ_destroy_notify 893,22423
GNUNET_MQ_destroy_notify_cancel 911,22903
GNUNET_MQ_dll_insert_head 924,23189
GNUNET_MQ_dll_insert_tail 935,23510
GNUNET_MQ_dll_remove 946,23846
GNUNET_MQ_copy_handlers 957,24181
GNUNET_MQ_copy_handlers2 975,24678
GNUNET_MQ_count_handlers 1000,25473
GNUNET_MQ_preference_to_string 1013,25685

src/lib/util/helper.c,1679
struct GNUNET_HELPER_SendHandle34,1153
  struct GNUNET_HELPER_SendHandle *next;next39,1231
  struct GNUNET_HELPER_SendHandle *prev;prev44,1317
  const struct GNUNET_MessageHeader *msg;msg49,1434
  struct GNUNET_HELPER_Handle *h;h54,1526
  GNUNET_HELPER_Continuation cont;59,1612
  void *cont_cls;cont_cls64,1684
  unsigned int wpos;69,1744
struct GNUNET_HELPER_Handle76,1813
  struct GNUNET_DISK_PipeHandle *helper_in;helper_in81,1903
  struct GNUNET_DISK_PipeHandle *helper_out;helper_out86,2003
  const struct GNUNET_DISK_FileHandle *fh_from_helper;fh_from_helper91,2109
  const struct GNUNET_DISK_FileHandle *fh_to_helper;fh_to_helper96,2220
  struct GNUNET_OS_Process *helper_proc;helper_proc101,2320
  struct GNUNET_MessageStreamTokenizer *mst;mst106,2452
  GNUNET_HELPER_ExceptionCallback exp_cb;111,2538
  void *cb_cls;cb_cls116,2624
  struct GNUNET_HELPER_SendHandle *sh_head;sh_head121,2707
  struct GNUNET_HELPER_SendHandle *sh_tail;sh_tail126,2817
  char *binary_name;binary_name131,2894
  char **binary_argv;binary_argv136,2981
  struct GNUNET_SCHEDULER_Task *read_task;read_task141,3051
  struct GNUNET_SCHEDULER_Task *write_task;write_task146,3142
  struct GNUNET_SCHEDULER_Task *restart_task;restart_task151,3218
  int with_control_pipe;156,3348
  unsigned int retry_back_off;161,3440
GNUNET_HELPER_kill 166,3507
GNUNET_HELPER_wait 206,4492
stop_helper 262,5892
helper_read 292,6433
start_helper 382,9094
restart_task 446,11649
GNUNET_HELPER_start 460,11946
GNUNET_HELPER_destroy 499,13143
GNUNET_HELPER_stop 536,14146
helper_write 550,14395
GNUNET_HELPER_send 613,16305
GNUNET_HELPER_send_cancel 653,17503

src/lib/util/compress.c,59
GNUNET_try_compression 33,1002
GNUNET_decompress 70,1794

src/lib/util/common_endian.c,123
#define LOG(32,1010
GNUNET_htonll 37,1119
GNUNET_ntohll 54,1370
GNUNET_hton_double 70,1603
GNUNET_ntoh_double 83,1781

src/lib/util/test_service.c,321
#define MY_TYPE 32,1003
#define TIMEOUT 34,1024
static int global_ret 36,1066
static struct GNUNET_MQ_Handle *mq;mq38,1094
static struct GNUNET_SCHEDULER_Task *tt;tt43,1156
handle_recv 47,1211
connect_cb 73,1822
disconnect_cb 91,2219
timeout_task 110,2553
service_init 132,2957
check 164,3841
main 199,4852

src/lib/util/peer.c,518
#define LOG(30,1008
struct PeerEntry33,1082
  struct GNUNET_PeerIdentity id;38,1140
  GNUNET_PEER_Id pid;44,1325
  unsigned int rc;49,1412
static struct PeerEntry **table;table56,1481
static struct GNUNET_CONTAINER_MultiPeerMap *map;map63,1647
static unsigned int size;68,1730
static unsigned int free_list_start;74,1874
GNUNET_PEER_search 84,2078
GNUNET_PEER_intern 108,2569
GNUNET_PEER_decrement_rcs 157,3836
GNUNET_PEER_change_rc 192,4662
GNUNET_PEER_resolve 220,5427
GNUNET_PEER_resolve2 234,5723

src/lib/util/os_installation.c,889
#define LOG(46,1282
#define LOG_STRERROR_FILE(49,1370
static const struct GNUNET_OS_ProjectData default_pd 60,1742
static const struct GNUNET_OS_ProjectData *current_pd current_pd81,2389
static const struct GNUNET_OS_ProjectData *gettextinit;gettextinit88,2626
GNUNET_OS_project_data_default 95,2796
GNUNET_OS_project_data_get 105,2940
GNUNET_OS_init 122,3256
get_path_from_proc_maps 146,3722
get_path_from_proc_exe 186,4558
typedef int (*MyNSGetExecutablePathProto)MyNSGetExecutablePathProto231,5729
get_path_from_NSGetExecutablePath 240,5927
get_path_from_dyld_image 278,6730
get_path_from_PATH 318,7481
get_path_from_GNUNET_PREFIX 367,8515
os_get_gnunet_path 388,9031
os_get_exec_path 428,10168
GNUNET_OS_installation_get_path 451,10675
GNUNET_OS_get_libexec_binary_path 684,18001
GNUNET_OS_get_suid_binary_path 719,19097
GNUNET_OS_check_helper_binary 759,20203

src/lib/util/os_network.c,140
#define LOG(35,1082
#define LOG_STRERROR_FILE(36,1160
try_ifconfig 52,1761
try_ip 245,7012
GNUNET_OS_network_interfaces_list 397,10909

src/lib/util/test_time.c,13
main 30,930

src/lib/util/test_crypto_rsa.c,70
#define KEY_SIZE 32,1065
main 36,1093
#define RND_BLK_SIZE 39,1131

src/lib/util/speedup.h,26
#define SPEEDUP_H_28,957

src/lib/util/test_common_allocation.c,74
check 31,983
#define MAX_TESTVAL 33,998
check2 140,3181
main 163,3672

src/lib/util/crypto_rsa.c,1832
#define LOG(34,1106
struct GNUNET_CRYPTO_RsaPrivateKey40,1241
  gcry_sexp_t sexp;45,1343
struct GNUNET_CRYPTO_RsaPublicKey52,1422
  gcry_sexp_t sexp;57,1522
struct GNUNET_CRYPTO_RsaSignature64,1582
  gcry_sexp_t sexp;69,1681
struct RsaBlindingKey76,1741
  gcry_mpi_t r;81,1814
key_from_sexp 95,2125
GNUNET_CRYPTO_rsa_private_key_create 144,3263
GNUNET_CRYPTO_rsa_private_key_free 173,4044
GNUNET_CRYPTO_rsa_private_key_encode 181,4188
GNUNET_CRYPTO_rsa_private_key_decode 204,4797
GNUNET_CRYPTO_rsa_private_key_get_public 233,5517
GNUNET_CRYPTO_rsa_public_key_free 268,6412
struct GNUNET_CRYPTO_RsaPublicKeyHeaderP280,6640
  uint16_t modulus_length GNUNET_PACKED;285,6739
  uint16_t public_exponent_length GNUNET_PACKED;290,6834
GNUNET_CRYPTO_rsa_public_key_check 301,7032
GNUNET_CRYPTO_rsa_public_key_encode 325,7540
GNUNET_CRYPTO_rsa_public_key_hash 407,9638
GNUNET_CRYPTO_rsa_public_key_decode 423,10076
rsa_gcd_validate 501,11905
rsa_blinding_key_derive 522,12341
GNUNET_CRYPTO_rsa_signature_cmp 602,15304
GNUNET_CRYPTO_rsa_public_key_cmp 628,15881
GNUNET_CRYPTO_rsa_private_key_cmp 654,16464
GNUNET_CRYPTO_rsa_public_key_len 680,17064
rsa_blinding_key_free 702,17480
numeric_mpi_alloc_n_print 717,17797
rsa_full_domain_hash 755,18929
GNUNET_CRYPTO_rsa_blinded_message_free 799,20328
GNUNET_CRYPTO_rsa_blind 807,20485
mpi_to_sexp 894,22802
rsa_sign_mpi 915,23300
GNUNET_CRYPTO_rsa_sign_blinded 970,24730
GNUNET_CRYPTO_rsa_sign_fdh 992,25414
GNUNET_CRYPTO_rsa_signature_free 1015,26106
GNUNET_CRYPTO_rsa_signature_encode 1023,26247
GNUNET_CRYPTO_rsa_signature_decode 1063,27275
GNUNET_CRYPTO_rsa_public_key_dup 1099,28043
GNUNET_CRYPTO_rsa_unblind 1118,28629
GNUNET_CRYPTO_rsa_verify 1199,30846
GNUNET_CRYPTO_rsa_private_key_dup 1248,32263
GNUNET_CRYPTO_rsa_signature_dup 1268,32858

src/lib/util/disk.h,30
#define GNUNET_DISK_H_27,922

src/lib/util/test_crypto_ecdhe.c,14
main 33,1004

src/lib/util/crypto_kdf.c,112
#define LOG(34,1008
GNUNET_CRYPTO_kdf_v 38,1119
GNUNET_CRYPTO_kdf 62,2147
GNUNET_CRYPTO_kdf_mod_mpi 87,2716

src/lib/util/perf_scheduler.c,164
#define RUNS 30,992
static struct GNUNET_SCHEDULER_Task *task;task32,1020
run 36,1077
do_shutdown 53,1326
first 61,1424
perf_scheduler 74,1675
main 85,1807

src/lib/util/perf_crypto_paillier.c,14
main 33,1004

src/lib/util/common_logging.c,2879
#define BULK_DELAY_THRESHOLD 36,1084
#define BULK_REPEAT_THRESHOLD 43,1303
#define BULK_TRACK_SIZE 49,1414
#define COMP_TRACK_SIZE 55,1520
#define DATE_STR_SIZE 61,1617
#define ROTATION_KEEP 66,1682
#define PATH_MAX 72,1788
struct CustomLogger79,1861
  struct CustomLogger *next;next84,1923
  GNUNET_Logger logger;89,1984
  void *logger_cls;logger_cls94,2046
static GNUNET_THREAD_LOCAL struct GNUNET_AsyncScopeSave current_async_scope;102,2178
static GNUNET_THREAD_LOCAL char last_bulk[BULK_TRACK_SIZE] __nonstring;109,2448
static GNUNET_THREAD_LOCAL enum GNUNET_ErrorType last_bulk_kind;114,2563
static GNUNET_THREAD_LOCAL struct GNUNET_TIME_Absolute last_bulk_time;119,2689
static GNUNET_THREAD_LOCAL unsigned int last_bulk_repeat;124,2831
static GNUNET_THREAD_LOCAL char last_bulk_comp[last_bulk_comp129,2965
static char *component;component134,3065
static char *component_nopid;component_nopid139,3134
static char *log_file_name;log_file_name144,3227
static enum GNUNET_ErrorType min_level;149,3286
static struct CustomLogger *loggers;loggers154,3373
static GNUNET_THREAD_LOCAL int skip_log 159,3453
static FILE *GNUNET_stderr;GNUNET_stderr164,3565
struct LogDef169,3644
  regex_t component_regex;174,3698
  regex_t file_regex;179,3759
  regex_t function_regex;184,3819
  int from_line;190,3949
  int to_line;196,4079
  int level;203,4245
  int force;209,4401
static struct LogDef *logdefs;logdefs217,4502
static int logdefs_size;222,4588
static int logdefs_len;227,4668
static int gnunet_log_parsed;232,4770
static int gnunet_force_log_parsed;237,4884
static int gnunet_force_log_present;242,5002
get_type 254,5265
GNUNET_abort_ 278,5912
resize_logdefs 289,6072
log_rotate 302,6332
GNUNET_b2s 324,6882
setup_log_file 352,7510
add_definition 439,9730
GNUNET_get_log_call_status 500,11386
parse_definitions 570,13887
parse_all_definitions 704,17049
GNUNET_log_setup 729,17656
GNUNET_logger_add 774,18736
GNUNET_logger_remove 788,19004
output_message 820,19663
flush_bulk 916,22496
GNUNET_log_skip 956,23539
GNUNET_get_log_skip 980,23863
mylog 995,24155
GNUNET_log_nocheck 1093,26739
GNUNET_log_from_nocheck 1113,27233
GNUNET_error_type_to_string 1132,27672
GNUNET_h2s 1157,28357
GNUNET_h2s2 1178,29004
GNUNET_p2s 1189,29247
GNUNET_p2s2 1202,29574
GNUNET_e2s 1215,29902
GNUNET_e2s2 1228,30229
GNUNET_sh2s 1250,30788
GNUNET_uuid2s 1270,31236
GNUNET_h2s_full 1289,31722
GNUNET_i2s 1307,32191
GNUNET_i2s2 1332,32865
GNUNET_i2s_full 1354,33389
GNUNET_a2s 1377,34024
#define LEN 1379,34086
#undef LEN1383,34280
GNUNET_log_config_missing 1442,35893
GNUNET_log_config_invalid 1455,36220
GNUNET_async_scope_enter 1477,36744
GNUNET_async_scope_restore 1492,37100
GNUNET_async_scope_fresh 1504,37332
GNUNET_async_scope_get 1518,37676
GNUNET_util_cl_init 1528,37841
GNUNET_util_cl_fini 1538,37952

src/lib/util/test_bio.c,346
#define TESTSTRING 27,950
#define TESTNUMBER64 28,982
test_normal_rw 32,1036
test_nullstring_rw 117,3933
test_emptystring_rw 152,5120
test_bigstring_rw 187,6252
test_directory_r 221,7401
test_nullfile_rw 243,7954
test_fullfile_rw 267,8492
test_fakestring_rw 316,10003
check_string_rw 352,11200
check_file_rw 363,11436
main 374,11653

src/lib/util/common_allocation.c,592
#define LOG(36,1094
#define LOG_STRERROR(39,1190
#define INT_MAX 43,1320
GNUNET_xmalloc_ 48,1363
GNUNET_xnew_array_2d_ 73,2011
GNUNET_xnew_array_3d_ 94,2767
GNUNET_xmemdup_ 126,4125
GNUNET_xmalloc_unchecked_ 156,4825
GNUNET_xrealloc_ 175,5157
#define BAADFOOD_STR 219,6120
#define BAADFOOD_STR 222,6200
#define M_SIZE(229,6327
#define M_SIZE(231,6391
GNUNET_xfree_ 235,6438
GNUNET_xstrdup_ 259,6894
strnlen 281,7369
GNUNET_xstrndup_ 299,7554
GNUNET_xgrow_ 322,8094
GNUNET_asprintf 364,8973
GNUNET_snprintf 390,9450
GNUNET_copy_message 411,9860
GNUNET_is_zero_ 425,10160

src/lib/util/nc.c,771
#define LOG(32,1006
struct SubscriberList38,1139
  struct SubscriberList *next;next43,1210
  struct SubscriberList *prev;prev48,1289
  struct GNUNET_NotificationContext *nc;nc53,1382
  struct GNUNET_MQ_DestroyNotificationHandle *mq_nh;mq_nh59,1523
  struct GNUNET_MQ_Handle *mq;mq64,1628
struct GNUNET_NotificationContext76,2042
  struct SubscriberList *subscribers_head;subscribers_head81,2148
  struct SubscriberList *subscribers_tail;subscribers_tail86,2262
  unsigned int queue_length;91,2384
handle_mq_destroy 101,2527
GNUNET_notification_context_create 122,3135
GNUNET_notification_context_destroy 138,3460
GNUNET_notification_context_add 161,3997
GNUNET_notification_context_broadcast 190,4866
GNUNET_notification_context_get_size 216,5575

src/lib/util/proc_compat.c,21
GN_memrchr_ 39,1101

src/lib/util/crypto_blind_sign.c,1010
GNUNET_CRYPTO_blinding_input_values_decref 26,879
GNUNET_CRYPTO_blind_sign_priv_decref 50,1342
GNUNET_CRYPTO_blind_sign_pub_decref 79,2058
GNUNET_CRYPTO_unblinded_sig_decref 107,2740
GNUNET_CRYPTO_blinded_sig_decref 136,3434
GNUNET_CRYPTO_blinded_message_decref 166,4157
GNUNET_CRYPTO_blinded_message_incref 189,4617
GNUNET_CRYPTO_blinding_input_values_incref 198,4773
GNUNET_CRYPTO_bsign_pub_incref 207,4939
GNUNET_CRYPTO_bsign_priv_incref 216,5114
GNUNET_CRYPTO_ub_sig_incref 225,5293
GNUNET_CRYPTO_blind_sig_incref 233,5450
GNUNET_CRYPTO_bsign_pub_cmp 242,5584
GNUNET_CRYPTO_ub_sig_cmp 266,6195
GNUNET_CRYPTO_blind_sig_cmp 290,6882
GNUNET_CRYPTO_blinded_message_cmp 314,7594
GNUNET_CRYPTO_blind_sign_keys_create 343,8627
GNUNET_CRYPTO_blind_sign_keys_create_va 364,9226
GNUNET_CRYPTO_get_blinding_input_values 430,11119
GNUNET_CRYPTO_message_blind_to_sign 470,12293
GNUNET_CRYPTO_blind_sign 535,14037
GNUNET_CRYPTO_blind_sig_unblind 592,15568
GNUNET_CRYPTO_blind_sig_verify 668,17690

src/lib/util/consttime_memcmp.c,102
#define consttime_memcmp 28,1260
#define USE_VOLATILE_TEMPORARY 128,5386
consttime_memcmp 131,5424

src/lib/util/test_child_management.c,235
static struct GNUNET_ChildWaitHandle *cwh;cwh31,902
static int global_ret;33,946
static struct GNUNET_OS_Process *pid;pid35,970
child_completed_callback 39,1022
do_shutdown 86,2166
test_child_management 107,2575
main 166,4413

src/lib/util/perf_crypto_cs.c,51
#define ITER 33,1094
eval 40,1190
main 180,5802

src/lib/util/crypto_edx25519.c,410
#define CURVE 35,1123
GNUNET_CRYPTO_edx25519_key_clear 38,1153
GNUNET_CRYPTO_edx25519_key_create_from_seed 45,1310
GNUNET_CRYPTO_edx25519_key_create 65,1795
GNUNET_CRYPTO_edx25519_key_get_public 79,2218
GNUNET_CRYPTO_edx25519_sign_ 103,3114
GNUNET_CRYPTO_edx25519_verify_ 186,5158
derive_h 217,6126
GNUNET_CRYPTO_edx25519_private_key_derive 239,6653
GNUNET_CRYPTO_edx25519_public_key_derive 333,9213

src/lib/util/test_crypto_eddsa.c,277
#define ITER 32,1024
#define KEYFILE 34,1041
#define PERF 36,1094
static struct GNUNET_CRYPTO_EddsaPrivateKey key;39,1120
testSignVerify 43,1182
testDeriveSignVerify 105,3026
testSignPerformance 175,5446
testCreateFromFile 217,6593
perf_keygen 253,7998
main 274,8505

src/lib/util/test_strings.c,174
#define WANT(29,921
#define WANTNF(35,1298
#define WANTB(40,1651
#define URLENCODE_TEST_VECTOR_PLAIN 43,1745
#define URLENCODE_TEST_VECTOR_ENCODED 45,1813
main 49,1906

src/lib/util/buffer.c,376
GNUNET_buffer_prealloc 35,1147
GNUNET_buffer_ensure_remaining 55,1676
GNUNET_buffer_write 86,2510
GNUNET_buffer_write_str 103,2922
GNUNET_buffer_reap_str 123,3391
GNUNET_buffer_reap 149,4031
GNUNET_buffer_clear 164,4372
GNUNET_buffer_write_path 180,4756
GNUNET_buffer_write_fstr 209,5367
GNUNET_buffer_write_vfstr 230,5791
GNUNET_buffer_write_data_encoded 264,6598

src/lib/util/test_common_logging_dummy.c,199
#undef GNUNET_EXTRA_LOGGING31,1018
#define GNUNET_EXTRA_LOGGING 32,1046
#define OUTPUT_DELAY 39,1280
my_log 43,1386
expensive_func 62,1766
#define pr(71,1871
#define pr2(83,2674
main 97,3482

src/lib/util/crypto_hash.c,982
#define LOG(32,1023
#define LOG_STRERROR_FILE(34,1103
GNUNET_CRYPTO_hash 41,1471
GNUNET_CRYPTO_hash_to_enc 55,1775
GNUNET_CRYPTO_hash_from_string2 72,2374
GNUNET_CRYPTO_hash_distance_u32 89,2902
GNUNET_CRYPTO_hash_create_random 100,3171
GNUNET_CRYPTO_hash_difference 111,3485
GNUNET_CRYPTO_hash_sum 123,3841
GNUNET_CRYPTO_hash_xor 135,4184
GNUNET_CRYPTO_hash_to_aes_key 152,4784
GNUNET_CRYPTO_hash_count_leading_zeros 177,5573
GNUNET_CRYPTO_hash_count_tailing_zeros 199,6153
GNUNET_CRYPTO_hash_cmp 221,6720
GNUNET_CRYPTO_hash_xorcmp 243,7149
GNUNET_CRYPTO_hmac_derive_key 267,7837
GNUNET_CRYPTO_hmac_derive_key_v 286,8266
GNUNET_CRYPTO_hmac_raw 300,8656
GNUNET_CRYPTO_hmac 330,9439
struct GNUNET_HashContext340,9769
  gcry_md_hd_t hd;345,9851
GNUNET_CRYPTO_hash_context_start 350,9903
GNUNET_CRYPTO_hash_context_read 366,10267
GNUNET_CRYPTO_hash_context_copy 377,10574
GNUNET_CRYPTO_hash_context_finish 390,10852
GNUNET_CRYPTO_hash_context_abort 408,11321

src/lib/util/perf_crypto_rsa.c,29
eval 38,1080
main 201,6876

src/lib/util/scheduler.c,5577
#define LOG(32,1050
#define LOG_STRERROR(34,1128
#define USE_LSOF 46,1504
#define EXECINFO 51,1613
#define DEBUG_FDS 56,1693
#define MAX_TRACE_DEPTH 61,1777
#define PROFILE_DELAYS 68,1951
#define DELAY_THRESHOLD 74,2090
struct GNUNET_SCHEDULER_Handle82,2270
  struct GNUNET_NETWORK_FDSet *rs;rs89,2454
  struct GNUNET_NETWORK_FDSet *ws;ws96,2641
  struct GNUNET_SIGNAL_Context *shc_int;shc_int101,2724
  struct GNUNET_SIGNAL_Context *shc_term;shc_term106,2814
  struct GNUNET_SIGNAL_Context *shc_gterm;shc_gterm112,2939
  struct GNUNET_SIGNAL_Context *shc_quit;shc_quit118,3038
  struct GNUNET_SIGNAL_Context *shc_hup;shc_hup123,3128
  struct GNUNET_SIGNAL_Context *shc_pipe;shc_pipe128,3218
struct GNUNET_SCHEDULER_Task135,3308
  struct GNUNET_SCHEDULER_Task *next;next140,3379
  struct GNUNET_SCHEDULER_Task *prev;prev145,3458
  GNUNET_SCHEDULER_TaskCallback callback;150,3542
  void *callback_cls;callback_cls155,3631
  struct GNUNET_SCHEDULER_FdInfo *fds;fds160,3734
  struct GNUNET_SCHEDULER_FdInfo fdx;167,3940
  unsigned int fds_len;172,4022
  int own_handles;179,4263
  struct GNUNET_TIME_Absolute timeout;185,4393
  struct GNUNET_TIME_Absolute start_time;191,4498
  enum GNUNET_SCHEDULER_Reason reason;199,4758
  enum GNUNET_SCHEDULER_Priority priority;204,4830
  int read_fd;209,4955
  int write_fd;214,5050
  int lifeness;220,5188
  int on_shutdown;225,5252
  int in_ready_list;230,5321
  char **backtrace_strings;backtrace_strings237,5504
  int num_backtrace_strings;242,5586
  struct GNUNET_AsyncScopeSave scope;248,5698
static struct GNUNET_SCHEDULER_Task pass_end_marker;256,5926
struct Scheduled262,6056
  struct Scheduled *prev;prev264,6075
  struct Scheduled *next;next266,6102
  struct GNUNET_SCHEDULER_Task *task;task271,6180
  struct GNUNET_SCHEDULER_FdInfo *fdi;fdi277,6333
  enum GNUNET_SCHEDULER_EventType et;283,6488
struct DriverContext290,6586
  struct Scheduled *scheduled_head;scheduled_head296,6722
  struct Scheduled *scheduled_tail;scheduled_tail302,6872
  struct GNUNET_TIME_Absolute timeout;308,7005
static const struct GNUNET_SCHEDULER_Driver *scheduler_driver;scheduler_driver319,7326
static struct GNUNET_SCHEDULER_Task *pending_head;pending_head324,7445
static struct GNUNET_SCHEDULER_Task *pending_tail;pending_tail329,7552
static struct GNUNET_SCHEDULER_Task *shutdown_head;shutdown_head334,7659
static struct GNUNET_SCHEDULER_Task *shutdown_tail;shutdown_tail339,7767
static struct GNUNET_SCHEDULER_Task *pending_timeout_head;pending_timeout_head348,8079
static struct GNUNET_SCHEDULER_Task *pending_timeout_tail;pending_timeout_tail357,8398
static struct GNUNET_SCHEDULER_Task *pending_timeout_last;pending_timeout_last363,8569
static struct GNUNET_SCHEDULER_Task *active_task;active_task368,8682
GNUNET_SCHEDULER_Task *ready_head[ready_head374,8827
GNUNET_SCHEDULER_Task *ready_tail[ready_tail380,8990
static struct GNUNET_SCHEDULER_Task *install_parent_control_task;install_parent_control_task387,9256
static struct GNUNET_SCHEDULER_Task *shutdown_pipe_task;shutdown_pipe_task393,9417
static unsigned int ready_count;398,9521
static enum GNUNET_SCHEDULER_Priority current_priority;404,9646
static enum GNUNET_SCHEDULER_Priority max_priority_added;410,9785
static int current_lifeness;415,9906
static enum GNUNET_SCHEDULER_Priority work_priority;420,10003
static GNUNET_SCHEDULER_select scheduler_select;426,10167
static struct GNUNET_SCHEDULER_TaskContext tc;431,10262
static void *scheduler_select_cls;scheduler_select_cls436,10352
GNUNET_SCHEDULER_set_select 447,10637
check_priority 462,11013
get_timeout 477,11399
remove_pass_end_marker 515,12136
set_work_priority 528,12466
queue_ready_task 546,12937
GNUNET_SCHEDULER_shutdown 567,13553
dump_backtrace 600,14333
destroy_task 621,14718
static struct GNUNET_DISK_PipeHandle *shutdown_pipe_handle;shutdown_pipe_handle660,15600
static pid_t my_pid;666,15756
sighandler_pipe 672,15836
sighandler_shutdown 682,15962
shutdown_if_no_lifeness 699,16513
GNUNET_SCHEDULER_run 725,17116
GNUNET_SCHEDULER_get_task_context 758,18183
GNUNET_SCHEDULER_get_load 775,18618
init_fd_info 797,19159
driver_add_multiple 915,22880
install_parent_control_handler 937,23405
shutdown_pipe_cb 946,23569
GNUNET_SCHEDULER_cancel 981,24733
init_backtrace 1047,26347
GNUNET_SCHEDULER_add_with_reason_and_priority 1075,27066
GNUNET_SCHEDULER_add_at_with_priority 1119,28545
GNUNET_SCHEDULER_add_delayed_with_priority 1208,31445
GNUNET_SCHEDULER_add_with_priority 1232,32254
GNUNET_SCHEDULER_add_at 1255,33167
GNUNET_SCHEDULER_add_delayed 1278,34023
GNUNET_SCHEDULER_add_now 1305,35115
GNUNET_SCHEDULER_add_shutdown 1340,36075
GNUNET_SCHEDULER_add_now_with_lifeness 1373,37018
check_fd 1393,37552
add_without_sets 1440,38948
GNUNET_SCHEDULER_add_read_net 1512,41769
GNUNET_SCHEDULER_add_read_net_with_priority 1546,43287
GNUNET_SCHEDULER_add_write_net 1583,44995
GNUNET_SCHEDULER_add_net_with_priority 1620,46645
GNUNET_SCHEDULER_add_read_file 1662,48485
GNUNET_SCHEDULER_add_write_file 1695,49844
GNUNET_SCHEDULER_add_file_with_priority 1731,51327
extract_handles 1754,52261
GNUNET_SCHEDULER_add_select 1836,55112
GNUNET_SCHEDULER_task_ready 1953,59566
GNUNET_SCHEDULER_do_work 1998,61442
GNUNET_SCHEDULER_driver_init 2208,68909
GNUNET_SCHEDULER_driver_done 2283,72024
select_loop 2312,72954
select_add 2468,77522
select_del 2499,78423
select_set_wakeup 2529,79035
GNUNET_SCHEDULER_driver_select 2545,79350
GNUNET_SCHEDULER_begin_async_scope 2572,80068

src/lib/util/test_crypto_ecdh_ecdsa.c,33
test_ecdh 34,1055
main 72,2287

src/lib/util/signal.c,486
#define LOG(31,988
struct GNUNET_SIGNAL_Context34,1064
  struct GNUNET_SIGNAL_Context *next;next36,1095
  struct GNUNET_SIGNAL_Context *prev;prev38,1134
  int sig;40,1173
  GNUNET_SIGNAL_Handler method;42,1185
  struct sigaction oldsig;44,1218
static struct GNUNET_SIGNAL_Context *sc_head;sc_head47,1249
static struct GNUNET_SIGNAL_Context *sc_tail;sc_tail49,1296
GNUNET_SIGNAL_handler_install 52,1374
GNUNET_SIGNAL_handler_uninstall 78,1943
GNUNET_SIGNAL_raise 98,2444

src/lib/util/test_crypto_random.c,27
test 31,945
main 65,1729

src/lib/util/tun.c,372
#define FRESH_TTL 34,1087
GNUNET_TUN_initialize_ipv4_header 47,1415
GNUNET_TUN_initialize_ipv6_header 82,2761
GNUNET_TUN_calculate_tcp4_checksum 102,3501
GNUNET_TUN_calculate_tcp6_checksum 132,4687
GNUNET_TUN_calculate_udp4_checksum 160,5822
GNUNET_TUN_calculate_udp6_checksum 191,7083
GNUNET_TUN_calculate_icmp_checksum 222,8305
GNUNET_TUN_sockaddr_cmp 246,8982

src/lib/util/crypto_random.c,693
#define LOG(32,1031
#define LOG_STRERROR(34,1113
#undef RANDOM42,1357
#undef SRANDOM45,1393
#define RANDOM(47,1415
#define SRANDOM(48,1453
#undef RAND_MAX50,1517
#define RAND_MAX 52,1540
static int32_t glibc_weak_rand32_state 55,1602
glibc_weak_srand32 59,1653
glibc_weak_rand32 66,1729
get_weak_random 84,2067
GNUNET_CRYPTO_seed_weak_random 91,2142
GNUNET_CRYPTO_zero_keys 110,2469
GNUNET_CRYPTO_random_block 133,2922
GNUNET_CRYPTO_random_u32 178,4111
GNUNET_CRYPTO_random_permute 238,5499
GNUNET_CRYPTO_random_u64 262,5971
GNUNET_CRYPTO_random_timeflake 316,7138
w_malloc 342,7826
w_check 353,7999
GNUNET_CRYPTO_random_init 364,8145
GNUNET_CRYPTO_random_fini 403,9373

src/lib/util/benchmark.h,1764
#define BENCHMARK_H_28,938
#define MAX_BENCHMARK_URL_LEN 36,1091
#define BENCHMARK_START(39,1147
#define BENCHMARK_END(42,1279
#define BENCHMARK_START(57,1888
#define BENCHMARK_END(58,1937
struct UrlRequestData65,2043
  char request_url[request_url70,2127
  unsigned int status;75,2206
  uint64_t count;80,2280
  uint64_t bytes_sent;85,2370
  uint64_t bytes_received;90,2485
  struct GNUNET_TIME_Relative time;95,2568
  struct GNUNET_TIME_Relative time_max;100,2648
  struct GNUNET_TIME_Relative time_min;105,2732
#define GNUNET_DECLARE_BENCHMARK_OP(108,2776
struct BenchmarkData115,2954
  GNUNET_DECLARE_BENCHMARK_OP 117,2977
  GNUNET_DECLARE_BENCHMARK_OP 118,3019
  GNUNET_DECLARE_BENCHMARK_OP 119,3063
  GNUNET_DECLARE_BENCHMARK_OP 120,3113
  GNUNET_DECLARE_BENCHMARK_OP 121,3167
  GNUNET_DECLARE_BENCHMARK_OP 122,3211
  GNUNET_DECLARE_BENCHMARK_OP 123,3261
  GNUNET_DECLARE_BENCHMARK_OP 124,3315
  GNUNET_DECLARE_BENCHMARK_OP 125,3359
  GNUNET_DECLARE_BENCHMARK_OP 126,3405
  GNUNET_DECLARE_BENCHMARK_OP 127,3449
  GNUNET_DECLARE_BENCHMARK_OP 128,3499
  GNUNET_DECLARE_BENCHMARK_OP 129,3553
  GNUNET_DECLARE_BENCHMARK_OP 130,3597
  GNUNET_DECLARE_BENCHMARK_OP 131,3643
  GNUNET_DECLARE_BENCHMARK_OP 132,3681
  GNUNET_DECLARE_BENCHMARK_OP 133,3734
  GNUNET_DECLARE_BENCHMARK_OP 134,3785
  GNUNET_DECLARE_BENCHMARK_OP 135,3837
  GNUNET_DECLARE_BENCHMARK_OP 136,3875
  GNUNET_DECLARE_BENCHMARK_OP 137,3918
  GNUNET_DECLARE_BENCHMARK_OP 138,3974
  GNUNET_DECLARE_BENCHMARK_OP 139,4034
  GNUNET_DECLARE_BENCHMARK_OP 140,4084
  GNUNET_DECLARE_BENCHMARK_OP 141,4129
  struct UrlRequestData *urd;urd143,4174
  unsigned int urd_len;145,4205
  unsigned int urd_capacity;147,4230
#undef GNUNET_DECLARE_BENCHMARK_OP150,4263

src/lib/util/service.c,4487
#define LOG(40,1182
#define LOG_STRERROR(42,1258
#define LOG_STRERROR_FILE(45,1362
struct ServiceListenContext52,1561
  struct ServiceListenContext *next;next57,1623
  struct ServiceListenContext *prev;prev62,1693
  struct GNUNET_SERVICE_Handle *sh;sh67,1788
  struct GNUNET_NETWORK_Handle *listen_socket;listen_socket72,1870
  struct GNUNET_SCHEDULER_Task *listen_task;listen_task77,1971
enum SuspendReason84,2067
  SUSPEND_STATE_NONE 89,2130
  SUSPEND_STATE_APP 94,2200
  SUSPEND_STATE_EMFILE 99,2275
  SUSPEND_STATE_APP_AND_EMFILE 104,2357
  SUSPEND_STATE_SHUTDOWN 109,2464
struct GNUNET_SERVICE_Handle116,2530
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg121,2597
  const char *service_name;service_name126,2685
  GNUNET_SERVICE_InitCallback service_init_cb;131,2766
  GNUNET_SERVICE_ConnectHandler connect_cb;136,2870
  GNUNET_SERVICE_DisconnectHandler disconnect_cb;141,2993
  void *cb_cls;cb_cls146,3126
  struct ServiceListenContext *slc_head;slc_head151,3214
  struct ServiceListenContext *slc_tail;slc_tail156,3327
  struct GNUNET_SERVICE_Client *clients_head;clients_head161,3414
  struct GNUNET_SERVICE_Client *clients_tail;clients_tail166,3506
  struct GNUNET_MQ_MessageHandler *handlers;handlers171,3611
  void *task_cls;task_cls176,3695
  struct GNUNET_STRINGS_IPv4NetworkPolicy *v4_denied;v4_denied182,3780
  struct GNUNET_STRINGS_IPv6NetworkPolicy *v6_denied;v6_denied187,3900
  struct GNUNET_STRINGS_IPv4NetworkPolicy *v4_allowed;v4_allowed193,4051
  struct GNUNET_STRINGS_IPv6NetworkPolicy *v6_allowed;v6_allowed199,4203
  int match_uid;206,4474
  int match_gid;215,4840
  enum SuspendReason suspend_state;220,4909
  enum GNUNET_SERVICE_Options options;225,4976
  int ready_confirm_fd;232,5179
  bool require_found;238,5309
struct GNUNET_SERVICE_Client245,5398
  struct GNUNET_SERVICE_Client *next;next250,5461
  struct GNUNET_SERVICE_Client *prev;prev255,5532
  struct GNUNET_SERVICE_Handle *sh;sh260,5625
  struct GNUNET_NETWORK_Handle *sock;sock265,5702
  struct GNUNET_MQ_Handle *mq;mq270,5788
  struct GNUNET_MessageStreamTokenizer *mst;mst275,5884
  struct GNUNET_SCHEDULER_Task *warn_task;warn_task281,6026
  struct GNUNET_SCHEDULER_Task *drop_task;drop_task287,6169
  struct GNUNET_SCHEDULER_Task *recv_task;recv_task293,6303
  struct GNUNET_SCHEDULER_Task *send_task;send_task298,6403
  const struct GNUNET_MessageHeader *msg;msg303,6522
  void *user_context;user_context309,6649
  struct GNUNET_TIME_Absolute warn_start;315,6764
  size_t msg_pos;320,6881
  bool persist;327,7084
  bool is_monitor;334,7283
  bool needs_continue;339,7398
  uint16_t warn_type;344,7498
have_non_monitor_clients 356,7747
do_suspend 380,8304
service_shutdown 407,9011
check_ipv4_listed 439,9883
check_ipv6_listed 462,10476
do_send 492,11190
service_mq_send 561,13032
service_mq_cancel 589,13867
service_mq_error_handler 612,14483
warn_no_client_continue 637,15213
service_client_mst_cb 670,16417
service_client_recv 701,17476
start_client 746,18800
accept_client 783,20271
do_resume 877,23222
service_main 906,24126
process_acl4 937,25037
process_acl6 978,26304
add_unixpath 1018,27443
get_server_addresses 1062,29012
open_listen_socket 1358,38176
setup_service 1466,41446
get_user_name 1618,46197
set_user_id 1639,46699
get_pid_file_name 1689,47910
pid_file_delete 1709,48373
detach_terminal 1730,48837
teardown_service 1814,50737
return_agpl 1843,51511
GNUNET_SERVICE_start 1867,52197
finish_client_drop 1903,53246
GNUNET_SERVICE_stop 1938,54235
GNUNET_SERVICE_run_ 1957,54667
struct ServiceHandleList2186,61561
  struct ServiceHandleList *prev;prev2189,61600
  struct ServiceHandleList *next;next2192,61647
  struct GNUNET_SERVICE_Handle *sh;sh2195,61722
static struct ServiceHandleList *hll_head;hll_head2199,61785
static struct ServiceHandleList *hll_tail;hll_tail2202,61852
GNUNET_SERVICE_register_ 2206,61901
do_registered_services_shutdown 2238,63127
launch_registered_services 2265,63806
GNUNET_SERVICE_main 2287,64345
GNUNET_SERVICE_suspend 2402,67651
GNUNET_SERVICE_resume 2410,67772
resume_client_receive 2424,68072
GNUNET_SERVICE_client_continue 2455,69007
GNUNET_SERVICE_client_disable_continue_warning 2472,69448
GNUNET_SERVICE_client_drop 2484,69684
GNUNET_SERVICE_shutdown 2533,71031
GNUNET_SERVICE_client_mark_monitor 2549,71422
GNUNET_SERVICE_client_persist 2559,71674
GNUNET_SERVICE_client_get_mq 2566,71791

src/lib/util/test_common_logging.c,29
my_log 31,979
main 41,1138

src/lib/util/mst.c,465
#define ALIGN_FACTOR 33,1021
#define ALIGN_FACTOR 35,1050
#define LOG(38,1081
struct GNUNET_MessageStreamTokenizer44,1203
  GNUNET_MessageTokenizerCallback cb;49,1299
  void *cb_cls;cb_cls54,1374
  size_t curr_buf;59,1449
  size_t off;64,1538
  size_t pos;69,1616
  struct GNUNET_MessageHeader *hdr;hdr74,1710
GNUNET_MST_create 86,1957
GNUNET_MST_from_buffer 101,2338
GNUNET_MST_read 338,9246
GNUNET_MST_next 387,10684
GNUNET_MST_destroy 404,11058

src/lib/util/test_container_multihashmap32.c,77
#define ABORT(32,1014
#define CHECK(35,1202
testMap 38,1256
main 96,4026

src/lib/util/test_common_logging_runtime_loglevels.c,708
#define VERBOSE 30,1002
#define MAX_SKIP_DELAY 36,1183
#define OUTPUT_DELAY 43,1408
static int ok;46,1518
static int phase 48,1534
static struct GNUNET_OS_Process *proc;proc50,1557
static struct GNUNET_DISK_PipeHandle *pipe_stdout;pipe_stdout53,1660
static struct GNUNET_SCHEDULER_Task *die_task;die_task55,1712
static struct GNUNET_SCHEDULER_Task *read_task;read_task57,1760
end_task 64,1850
read_output_line 100,2551
#define LOG_MAX_NUM_LINES 205,5467
#define LOG_MAX_LINE_LENGTH 209,5547
#define LOG_BUFFER_SIZE 211,5581
static char buf[buf213,5645
static char *buf_ptr;buf_ptr215,5680
static int bytes;217,5703
read_call 221,5735
runone 347,10176
task 438,12297
main 446,12350

src/lib/util/crypto_elligator.c,2126
static const uint8_t lookupTable[lookupTable41,1344
#define P_BITS 91,3434
#define P_BYTES 92,3493
#define P_LIMBS 93,3546
static const unsigned char p_bytes[p_bytes97,3662
static const unsigned char negative_1_bytes[negative_1_bytes104,3913
static const unsigned char negative_2_bytes[negative_2_bytes111,4173
static const unsigned char divide_negative_1_2_bytes[divide_negative_1_2_bytes118,4433
static const unsigned char divide_plus_p_3_8_bytes[divide_plus_p_3_8_bytes125,4702
static const unsigned char divide_minus_p_1_2_bytes[divide_minus_p_1_2_bytes132,4969
static const unsigned char square_root_negative_1_bytes[square_root_negative_1_bytes139,5237
static const unsigned char A_bytes[A_bytes146,5509
static const unsigned char negative_A_bytes[negative_A_bytes153,5760
static const unsigned char u_bytes[u_bytes160,6020
static const unsigned char inverted_u_bytes[inverted_u_bytes167,6271
static const unsigned char d_bytes[d_bytes174,6531
static mp_limb_t p[p181,6782
static mp_limb_t negative_1[negative_1182,6811
static mp_limb_t negative_2[negative_2183,6849
static mp_limb_t divide_negative_1_2[divide_negative_1_2184,6887
static mp_limb_t divide_plus_p_3_8[divide_plus_p_3_8185,6934
static mp_limb_t divide_minus_p_1_2[divide_minus_p_1_2186,6979
static mp_limb_t square_root_negative_1[square_root_negative_1187,7025
static mp_limb_t A[A188,7075
static mp_limb_t negative_A[negative_A189,7104
static mp_limb_t u[u190,7142
static mp_limb_t inverted_u[inverted_u191,7171
static mp_limb_t d[d192,7209
static mp_size_t scratch_space_length;194,7239
decode_bytes 198,7299
encode_bytes 212,7581
GNUNET_CRYPTO_ecdhe_elligator_initialize 225,7834
least_square_root 304,10199
GNUNET_CRYPTO_ecdhe_elligator_encoding 342,11341
elligator_direct_map 410,13487
GNUNET_CRYPTO_ecdhe_elligator_decoding 470,15383
convert_from_ed_to_curve 504,16618
GNUNET_CRYPTO_ecdhe_elligator_generate_public_key 570,18594
GNUNET_CRYPTO_ecdhe_elligator_key_create 600,19468
GNUNET_CRYPTO_eddsa_elligator_kem_encaps 652,21030
GNUNET_CRYPTO_eddsa_elligator_kem_decaps 666,21409

src/lib/util/uri.c,244
natoi 36,1410
is_relative 57,1733
parse_scheme 71,2045
find_and_terminate 103,2728
find_fragment 120,3102
find_query 127,3195
find_path 134,3285
GNUNET_uri_parse 160,3956
GNUNET_uri_split_path 261,5954
GNUNET_uri_parse_query 313,7308

src/lib/util/perf_crypto_asymmetric.c,271
static struct GNUNET_TIME_Absolute start;31,994
#define l 33,1037
struct TestSig35,1052
  struct GNUNET_CRYPTO_EccSignaturePurpose purp;37,1069
  struct GNUNET_HashCode h;38,1118
  struct GNUNET_CRYPTO_EddsaSignature sig;39,1146
log_duration 44,1206
main 63,1708

src/lib/util/test_program.c,82
static int setme1;29,918
static int setme2;31,938
runner 38,1014
main 54,1370

src/lib/util/program.c,732
#define LOG(35,1084
#define LOG_STRERROR_FILE(37,1160
struct CommandContext43,1330
  char *const *args;args48,1386
  char *cfgfile;cfgfile53,1475
  GNUNET_PROGRAM_Main task;58,1532
  void *task_cls;task_cls63,1599
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg68,1657
shutdown_task 76,1773
program_main 88,1965
cmd_sorter 111,2476
GNUNET_PROGRAM_run2 132,3018
GNUNET_PROGRAM_run 400,11414
struct DaemonHandleList422,12119
  struct DaemonHandleList *prev;prev425,12157
  struct DaemonHandleList *next;next428,12203
  GNUNET_PROGRAM_Main d;431,12263
static struct DaemonHandleList *hll_head hll_head435,12314
static struct DaemonHandleList *hll_tail hll_tail438,12386
GNUNET_DAEMON_register 441,12467

src/lib/util/perf_mq.c,556
#define NUM_TRANSMISSIONS 32,996
#define RECEIVER_THROTTLE 37,1087
static unsigned int received_cnt;40,1186
struct MyMessage45,1251
  struct GNUNET_MessageHeader header;47,1270
  uint32_t x GNUNET_PACKED;48,1308
static int global_ret;53,1367
static struct GNUNET_SCHEDULER_Task *task;task55,1391
static struct GNUNET_MQ_Handle *cmq;cmq57,1435
do_shutdown 61,1486
error_cb 87,1964
handle_dummy 97,2111
handle_dummy2 114,2417
notify_sent_cb 137,2802
do_send 156,3125
run 194,3968
connect_cb 225,4860
disconnect_cb 243,5249
main 254,5417

src/lib/util/perf_crypto_symmetric.c,35
perfEncrypt 33,1031
main 60,1772

src/lib/util/configuration_helper.c,180
print_filename_option 38,1216
print_option 75,2185
print_section_name 97,2563
GNUNET_CONFIGURATION_config_tool_run 108,2719
GNUNET_CONFIGURATION_config_settings_free 294,7899

src/lib/util/test_scheduler_hogging_priority.c,213
static int count 4,50
static int final_count;5,72
static void end 7,97
static void self_rescheduling 14,201
static void noop 33,737
static void indirection 37,771
static void init 44,1051
int main 51,1177

src/lib/util/socks.c,1841
#define LOG(33,1023
#define LOG_STRERROR(35,1097
#define SOCKS5_AUTH_REJECT 40,1230
#define SOCKS5_AUTH_NOAUTH 41,1294
#define SOCKS5_AUTH_GSSAPI 42,1355
#define SOCKS5_AUTH_USERPASS 43,1400
#define SOCKS5_AUTH_CHAP 44,1454
#define SOCKS5_AUTH_EAP 45,1522
#define SOCKS5_AUTH_MAF 46,1590
#define SOCKS5_REP_SUCCEEDED 50,1692
#define SOCKS5_REP_FAIL 51,1742
#define SOCKS5_REP_NALLOWED 52,1805
#define SOCKS5_REP_NUNREACH 53,1878
#define SOCKS5_REP_HUNREACH 54,1937
#define SOCKS5_REP_REFUSED 55,1993
#define SOCKS5_REP_EXPIRED 56,2050
#define SOCKS5_REP_CNOTSUP 57,2100
#define SOCKS5_REP_ANOTSUP 58,2160
#define SOCKS5_REP_INVADDR 59,2220
SOCKS5_REP_names 62,2288
SOCK5_proto_string 112,3341
#define SOCKS5_step_greet 128,3663
#define SOCKS5_step_auth 129,3691
#define SOCKS5_step_cmd 130,3718
#define SOCKS5_step_done 131,3744
struct GNUNET_SOCKS_Handshake136,3814
  struct GNUNET_CONNECTION_Handle *socks5_connection;socks5_connection141,3897
  struct GNUNET_CONNECTION_Handle *target_connection;target_connection146,4016
  struct GNUNET_CONNECTION_TransmitHandle *th;th151,4130
  int step;156,4229
  unsigned char outbuf[outbuf161,4302
  unsigned char 166,4408
  unsigned char inbuf[inbuf171,4487
  unsigned char *instart;instart176,4591
  unsigned char *inend;inend177,4617
#define register_reciever_wants(189,4937
SOCKS5_handshake_done 204,5352
SOCKS5_handshake_step 216,5565
receiver 330,8279
register_reciever 354,8851
transmit_ready 373,9394
register_sender 430,11464
GNUNET_SOCKS_init_handshake 460,12599
GNUNET_SOCKS_init_handshake_noauth 509,14016
GNUNET_SOCKS_set_handshake_destination 524,14278
    struct in_addr in4;530,14480
    struct in6_addr in6;531,14504
GNUNET_SOCKS_run_handshake 574,15581
GNUNET_SOCKS_check_service 594,16179
GNUNET_SOCKS_do_connect 611,16810

src/lib/util/test_common_endian.c,36
#define CHECK(28,932
main 31,1008

src/lib/util/gnunet_error_codes.c,438
#define MHD_HTTP_UNINITIALIZED 29,998
struct ErrorCodeAndHint34,1089
  enum GNUNET_ErrorCode ec;39,1148
  const char *hint;hint44,1204
  unsigned int http_code;49,1264
static const struct ErrorCodeAndHint code_hint_pairs[code_hint_pairs56,1352
static const unsigned int code_hint_pairs_length 197,4810
GNUNET_ErrorCode_get_hint 202,4881
GNUNET_ErrorCode_get_http_status 228,5366
GNUNET_ErrorCode_get_http_status_safe 254,5854

src/lib/util/crypto_ecc.c,1737
#define EXTRA_CHECKS 34,1070
#define CURVE 59,1948
#define LOG(61,1973
#define LOG_STRERROR(63,2052
#define LOG_STRERROR_FILE(66,2159
#define LOG_GCRY(75,2487
key_from_sexp 97,3351
decode_private_ecdsa_key 155,4639
GNUNET_CRYPTO_ecdsa_key_get_public 187,5344
GNUNET_CRYPTO_eddsa_key_get_public 198,5632
GNUNET_CRYPTO_ecdhe_key_get_public 214,6133
GNUNET_CRYPTO_ecdsa_public_key_to_string 225,6428
GNUNET_CRYPTO_eddsa_public_key_to_string 252,7089
GNUNET_CRYPTO_eddsa_private_key_to_string 279,7750
GNUNET_CRYPTO_ecdsa_private_key_to_string 306,8472
GNUNET_CRYPTO_ecdsa_public_key_from_string 333,9218
GNUNET_CRYPTO_eddsa_public_key_from_string 358,9885
GNUNET_CRYPTO_eddsa_private_key_from_string 383,10552
buffer_clear 415,11323
GNUNET_CRYPTO_ecdhe_key_clear 430,11553
GNUNET_CRYPTO_ecdsa_key_clear 437,11704
GNUNET_CRYPTO_eddsa_key_clear 444,11855
GNUNET_CRYPTO_ecdhe_key_create 451,12006
GNUNET_CRYPTO_ecdsa_key_create 462,12336
GNUNET_CRYPTO_eddsa_key_create 477,12725
GNUNET_CRYPTO_ecdsa_key_get_anonymous 497,13530
data_to_ecdsa_value 528,14269
GNUNET_CRYPTO_ecdsa_sign_ 551,14954
GNUNET_CRYPTO_eddsa_sign_raw 601,16294
GNUNET_CRYPTO_eddsa_sign_ 622,16913
GNUNET_CRYPTO_ecdsa_verify_ 646,17664
GNUNET_CRYPTO_eddsa_verify_ 705,19466
GNUNET_CRYPTO_ecc_ecdh 729,20135
GNUNET_CRYPTO_eddsa_ecdh 742,20582
GNUNET_CRYPTO_eddsa_kem_decaps 764,21338
GNUNET_CRYPTO_ecdsa_ecdh 774,21696
GNUNET_CRYPTO_ecdh_eddsa 792,22256
GNUNET_CRYPTO_eddsa_kem_encaps 809,22866
GNUNET_CRYPTO_ecdsa_fo_kem_encaps 822,23316
GNUNET_CRYPTO_eddsa_fo_kem_encaps 855,24351
fo_kem_decaps 890,25441
GNUNET_CRYPTO_eddsa_fo_kem_decaps 923,26360
GNUNET_CRYPTO_ecdsa_fo_kem_decaps 939,26870
GNUNET_CRYPTO_ecdh_ecdsa 955,27374

src/lib/util/test_hexcoder.c,42
#define TESTSTRING 31,1022
main 35,1062

src/lib/util/test_container_heap.c,74
iterator_callback 32,941
nstrcmp 41,1137
check 50,1275
main 287,10679

src/lib/util/test_strings_to_data.c,13
main 30,933

src/lib/util/test_crypto_paillier.c,80
test_crypto 34,1014
test_hom_simple 78,2473
test_hom 137,4389
main 229,7260

src/lib/util/test_container_multihashmap.c,77
#define ABORT(31,978
#define CHECK(37,1301
testMap 40,1355
main 126,5920

src/lib/util/test_crypto_cs.c,322
#define ITER 32,1110
test_create_priv 36,1140
test_generate_pub 54,1555
test_derive_rsecret 93,2605
test_generate_rpublic 136,3904
test_derive_blindingsecrets 172,4900
test_calc_blindedc 213,6183
test_blind_sign 324,9955
test_unblinds 378,11782
test_blind_verify 429,13543
test_verify 459,14690
main 486,15535

src/lib/util/crypto_mpi.c,192
#define LOG(33,1013
#define LOG_GCRY(40,1242
adjust 55,1804
GNUNET_CRYPTO_mpi_print_unsigned 79,2244
GNUNET_CRYPTO_mpi_scan_unsigned 132,3550
GNUNET_CRYPTO_mpi_scan_unsigned_le 160,4259

src/lib/util/test_crypto_hkdf.c,69
tc1 38,1368
tc2 68,2488
tc3 117,5087
tc8 141,5960
main 174,7338

src/lib/util/test_plugin_plug.c,79
libgnunet_plugin_utiltest_init 29,899
libgnunet_plugin_utiltest_done 38,1021

src/lib/util/container_multiuuidmap.c,1829
#define LOG(30,1012
#define NEXT_CACHE_SIZE 39,1341
struct BigMapEntry45,1425
  void *value;value50,1483
  struct BigMapEntry *next;next55,1571
  struct GNUNET_Uuid key;60,1636
struct SmallMapEntry67,1735
  void *value;value72,1795
  struct SmallMapEntry *next;next77,1883
  const struct GNUNET_Uuid *key;key82,1950
union MapEntry89,2017
  struct SmallMapEntry *sme;sme94,2114
  struct BigMapEntry *bme;bme99,2211
struct GNUNET_CONTAINER_MultiUuidmap106,2295
  union MapEntry *map;map111,2371
  unsigned int size;116,2442
  unsigned int map_length;121,2508
  int use_small_entries;127,2689
  unsigned int modification_counter;133,2854
  union MapEntry next_cache[next_cache140,3064
  unsigned int next_cache_off;146,3212
struct GNUNET_CONTAINER_MultiUuidmapIterator154,3335
  union MapEntry me;159,3428
  unsigned int idx;164,3489
  unsigned int modification_counter;170,3607
  const struct GNUNET_CONTAINER_MultiUuidmap *map;map175,3694
GNUNET_CONTAINER_multiuuidmap_create 195,4631
GNUNET_CONTAINER_multiuuidmap_destroy 214,5073
idx_of 263,6086
GNUNET_CONTAINER_multiuuidmap_size 275,6323
GNUNET_CONTAINER_multiuuidmap_get 283,6444
GNUNET_CONTAINER_multiuuidmap_iterate 307,7022
update_next_cache_bme 374,8637
update_next_cache_sme 391,9139
GNUNET_CONTAINER_multiuuidmap_remove 401,9436
GNUNET_CONTAINER_multiuuidmap_remove_all 456,10741
GNUNET_CONTAINER_multiuuidmap_contains 536,12232
GNUNET_CONTAINER_multiuuidmap_contains_value 560,12820
grow 590,13566
GNUNET_CONTAINER_multiuuidmap_put 643,14821
GNUNET_CONTAINER_multiuuidmap_get_multiple 720,16888
GNUNET_CONTAINER_multiuuidmap_get_random 787,18583
GNUNET_CONTAINER_multiuuidmap_iterator_create 836,19714
GNUNET_CONTAINER_multiuuidmap_iterator_next 850,20091
GNUNET_CONTAINER_multiuuidmap_iterator_destroy 895,21210

src/lib/util/client.c,1874
#define LOG(37,1166
#define CONNECT_RETRY_TIMEOUT 45,1434
struct AddressProbe59,1727
  struct AddressProbe *next;next64,1789
  struct AddressProbe *prev;prev69,1866
  const struct sockaddr *addr;addr74,1977
  struct GNUNET_NETWORK_Handle *sock;sock79,2050
  struct ClientState *cstate;cstate84,2143
  socklen_t addrlen;89,2207
  struct GNUNET_SCHEDULER_Task *task;task94,2300
struct ClientState101,2413
  struct GNUNET_NETWORK_Handle *sock;sock106,2491
  struct GNUNET_RESOLVER_RequestHandle *dns_active;dns_active111,2612
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg116,2701
  struct AddressProbe *ap_head;ap_head122,2842
  struct AddressProbe *ap_tail;ap_tail128,2966
  char *service_name;service_name133,3054
  char *hostname;hostname138,3112
  const struct GNUNET_MessageHeader *msg;msg143,3204
  struct GNUNET_SCHEDULER_Task *retry_task;retry_task148,3307
  struct GNUNET_SCHEDULER_Task *send_task;send_task153,3411
  struct GNUNET_SCHEDULER_Task *recv_task;recv_task158,3514
  struct GNUNET_MessageStreamTokenizer *mst;mst163,3607
  struct GNUNET_MQ_Handle *mq;mq168,3703
  struct GNUNET_TIME_Absolute receive_timeout;173,3802
  struct GNUNET_TIME_Relative back_off;179,3939
  unsigned long long port;184,4024
  size_t msg_off;189,4122
  unsigned int attempts;194,4194
  int in_destroy;201,4384
connect_fail_continuation 221,4735
transmit_ready 250,5775
recv_message 335,8288
cancel_aps 361,8921
connection_client_destroy_impl 386,9580
receive_ready 440,10878
connect_success_continuation 483,12106
try_unixpath 511,13043
connect_probe_continuation 583,15280
try_connect_using_address 638,16999
test_service_configuration 726,19732
start_connect 787,21760
connection_client_send_impl 841,23136
connection_client_cancel_impl 873,23988
GNUNET_CLIENT_test 903,24908
GNUNET_CLIENT_connect 1057,29174

src/lib/util/test_peer.c,147
#define NUMBER_OF_PEERS 31,961
static struct GNUNET_PeerIdentity pidArr[pidArr36,1033
generatePeerIdList 40,1106
check 56,1470
main 125,3384

src/lib/util/perf_crypto_ecc_dlog.c,135
#define CURVE 39,1283
#define MAX_FACT 44,1356
#define MAX_MEM 49,1455
#define TEST_ITER 54,1516
test_dlog 64,1717
main 142,3915

src/lib/util/test_disk.c,279
#define TESTSTRING 30,987
testReadWrite 34,1035
testOpenClose 86,2482
static int ok;110,3234
scan_callback 114,3262
testDirScan 123,3397
iter_callback 154,3993
testDirIter 165,4120
testCanonicalize 203,4795
testChangeOwner 219,5043
testDirMani 229,5218
main 271,5983

src/lib/util/test_scheduler_hogging_cancel.c,240
static int count 4,50
static int final_count;5,72
static struct GNUNET_SCHEDULER_Task *t4;t46,96
static void end 8,138
static void self_rescheduling 15,242
static void to_be_canceled 34,818
static void init 40,885
int main 47,1032

src/lib/util/crypto_hash_file.c,655
#define LOG(31,986
#define LOG_STRERROR_FILE(34,1113
struct GNUNET_CRYPTO_FileHashContext44,1527
  GNUNET_CRYPTO_HashCompletedCallback callback;49,1617
  void *callback_cls;callback_cls54,1705
  unsigned char *buffer;buffer59,1756
  char *filename;filename64,1832
  struct GNUNET_DISK_FileHandle *fh;fh69,1885
  gcry_md_hd_t md;74,1957
  uint64_t fsize;79,2012
  uint64_t offset;84,2064
  struct GNUNET_SCHEDULER_Task *task;task89,2127
  enum GNUNET_SCHEDULER_Priority priority;94,2200
  size_t bsize;99,2272
file_hash_finish 108,2396
file_hash_task 126,2857
GNUNET_CRYPTO_hash_file 169,4090
GNUNET_CRYPTO_hash_file_cancel 225,5759

src/lib/util/test_crypto_symmetric.c,114
#define TESTSTRING 30,976
#define INITVALUE 31,1010
testSymcipher 34,1093
verifyCrypto 75,2281
main 157,4985

src/lib/util/crypto_hkdf.c,227
#define LOG(40,1625
hkdf_expand 48,1865
GNUNET_CRYPTO_hkdf_expand_v 178,5342
GNUNET_CRYPTO_hkdf_expand 190,5704
GNUNET_CRYPTO_hkdf_gnunet_v 206,6100
GNUNET_CRYPTO_hkdf_gnunet 233,6957
GNUNET_CRYPTO_hkdf_extract 258,7662

src/lib/util/nt.c,691
#define INTERFACE_PROCESSING_INTERVAL 32,1082
GNUNET_NT_to_string 37,1202
struct NT_Network71,1795
  struct NT_Network *next;next76,1847
  struct NT_Network *prev;prev81,1907
  struct sockaddr *network;network86,1969
  struct sockaddr *netmask;netmask91,2056
  socklen_t length;96,2142
struct GNUNET_NT_InterfaceScanner103,2211
  struct NT_Network *net_head;net_head108,2291
  struct NT_Network *net_tail;net_tail113,2367
  struct GNUNET_SCHEDULER_Task *interface_task;interface_task118,2471
delete_networks 128,2633
interface_proc 157,3623
get_addresses 283,7756
GNUNET_NT_scanner_get_type 307,8349
GNUNET_NT_scanner_init 405,11163
GNUNET_NT_scanner_done 426,11631

src/lib/util/test_plugin.c,30
test_cb 30,931
main 51,1425

src/lib/util/plugin.c,719
#define LOG(32,971
struct PluginList37,1088
  struct PluginList *next;next42,1148
  char *name;name47,1214
  void *handle;handle52,1261
static int initialized;59,1319
static char *old_dlsearchpath;old_dlsearchpath64,1394
static struct PluginList *plugins;plugins69,1469
plugin_init 76,1550
plugin_fini 120,2372
resolve_function 141,2809
GNUNET_PLUGIN_test 168,3460
GNUNET_PLUGIN_load 198,4046
GNUNET_PLUGIN_unload 242,5003
struct LoadAllContext287,5869
  const char *basename;basename292,5957
  void *arg;arg297,6051
  GNUNET_PLUGIN_LoaderCallback cb;302,6116
  void *cb_cls;cb_cls307,6187
find_libraries 321,6543
GNUNET_PLUGIN_load_all 359,7519
GNUNET_PLUGIN_load_all_in_context 386,8192

src/lib/util/test_tun.c,54
static int ret;30,957
test_udp 33,986
main 69,2032

src/lib/util/crypto_ecc_setup.c,458
#define LOG(31,1017
#define LOG_STRERROR(33,1096
#define LOG_STRERROR_FILE(36,1197
#define LOG_GCRY(44,1478
read_from_file 66,2315
GNUNET_CRYPTO_eddsa_key_from_file 144,4371
GNUNET_CRYPTO_ecdsa_key_from_file 201,6133
GNUNET_CRYPTO_eddsa_key_create_from_configuration 247,7475
GNUNET_CRYPTO_get_peer_identity 274,8293
GNUNET_CRYPTO_sign_by_peer_identity 293,8881
GNUNET_CRYPTO_verify_peer_identity 316,9669
GNUNET_CRYPTO_eddsa_setup_key 337,10480

src/lib/util/getopt.c,911
#define LOG(51,1560
#define LOG_STRERROR(53,1635
#define _(61,1912
#define _(63,1951
struct GNoption88,3039
  const char *name;name90,3057
  int has_arg;93,3213
  int *flag;flag94,3228
  int val;95,3241
static char *GNoptarg GNoptarg119,4186
static int GNoptind 134,4755
static char *nextchar;nextchar143,5063
static enum { REQUIRE_ORDER,175,6504
static enum { REQUIRE_ORDER, PERMUTE,175,6504
static enum { REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER 175,6504
static enum { REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER } ordering;175,6504
static char *posixly_correct;posixly_correct178,6625
#define my_index 186,6901
my_index 196,7052
static int first_nonopt;230,7965
static int last_nonopt;231,7990
#define SWAP_FLAGS(233,8015
exchange 251,8583
_getopt_initialize 316,10382
GN_getopt_internal 406,13901
#define NONOPTION_P 430,14732
GNgetopt_long 870,27581
GNUNET_GETOPT_run 884,27940

src/lib/util/strings.c,2056
#define LOG(37,1071
#define LOG_STRERROR(39,1147
GNUNET_STRINGS_buffer_fill 44,1259
GNUNET_STRINGS_buffer_tokenize 72,1816
GNUNET_STRINGS_byte_size_fancy 106,2486
GNUNET_strlcpy 138,3058
struct ConversionTable155,3350
  const char *name;name160,3437
  unsigned long long value;165,3506
convert_with_table 181,4015
GNUNET_STRINGS_fancy_size_to_bytes 236,5260
GNUNET_STRINGS_fancy_time_to_relative 260,6074
GNUNET_STRINGS_fancy_time_to_absolute 302,7420
GNUNET_STRINGS_fancy_time_to_timestamp 334,8539
GNUNET_STRINGS_conv 343,8820
GNUNET_STRINGS_to_utf8 405,10747
GNUNET_STRINGS_from_utf8 417,11035
GNUNET_STRINGS_utf8_normalize 429,11329
GNUNET_STRINGS_utf8_tolower 450,11802
GNUNET_STRINGS_utf8_toupper 472,12331
GNUNET_STRINGS_filename_expand 495,12870
GNUNET_STRINGS_relative_time_to_string 570,14491
GNUNET_STRINGS_absolute_time_to_string 617,15929
GNUNET_STRINGS_get_short_name 640,16625
getValue__ 659,17052
GNUNET_STRINGS_data_to_string 709,17713
GNUNET_STRINGS_data_to_string_alloc 764,18895
GNUNET_STRINGS_string_to_data 789,19433
GNUNET_STRINGS_string_to_data_alloc 855,20801
GNUNET_STRINGS_parse_uri 897,21850
GNUNET_STRINGS_path_is_absolute 958,23110
GNUNET_STRINGS_check_filename 1000,24146
GNUNET_STRINGS_to_address_ipv6 1033,25129
GNUNET_STRINGS_to_address_ipv4 1103,27171
GNUNET_STRINGS_to_address_ip 1141,28171
GNUNET_STRINGS_parse_socket_addr 1156,28709
_make_continuous_arg_copy 1201,29864
GNUNET_STRINGS_get_utf8_args 1230,30571
parse_port_policy 1253,31190
GNUNET_STRINGS_parse_ipv4_policy 1298,32244
GNUNET_STRINGS_parse_ipv6_policy 1473,37259
#define FILLCHAR 1615,40756
static char *cvt cvt1616,40777
GNUNET_STRINGS_base64_encode 1622,40917
GNUNET_STRINGS_base64url_encode 1671,41836
#define cvtfind(1701,42444
#define CHECK_CRLF 1711,42783
GNUNET_STRINGS_base64_decode 1724,43462
#undef CHECK_CRLF1778,44630
GNUNET_STRINGS_base64url_decode 1782,44657
GNUNET_STRINGS_urldecode 1831,45653
GNUNET_STRINGS_urlencode 1885,46784
GNUNET_STRINGS_get_suffix_from_binary_name 2059,51948

src/lib/util/benchmark.c,317
static pthread_key_t key;37,1099
static pthread_once_t key_once 42,1177
write_benchmark_data 51,1321
#define WRITE_BENCHMARK_OP(85,2329
#undef WRITE_BENCHMARK_OP121,3832
main_thread_destructor 166,5591
thread_destructor 182,5849
make_key 199,6168
get_benchmark_data 212,6475
get_url_benchmark_data 242,7165

src/lib/util/test_getopt.c,140
testMinimal 30,959
testVerbose 45,1238
testVersion 68,1691
testAbout 85,2081
testLogOpts 101,2436
testFlagNum 133,3168
main 161,3876

src/lib/util/test_container_bloomfilter.c,143
#define K 31,1002
#define SIZE 32,1014
#define TESTFILE 33,1033
bernd_interop 37,1085
nextHC 80,2247
add_iterator 87,2369
main 101,2579

src/lib/util/perf_malloc.c,57
perf_malloc 32,1007
perf_realloc 47,1197
main 73,1679

src/lib/util/test_configuration.c,798
  EDIT_NOTHING,34,1047
  EDIT_SECTION,35,1063
  EDIT_ALL,36,1079
  ADD_NEW_SECTION,37,1091
  ADD_NEW_ENTRY,38,1110
  REMOVE_SECTION,39,1127
  REMOVE_ENTRY,40,1145
  COMPARE,41,1161
  PRINT42,1172
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg45,1184
static struct GNUNET_CONFIGURATION_Handle *cfg_default;cfg_default46,1232
struct DiffsCBData48,1289
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg50,1310
  struct GNUNET_CONFIGURATION_Handle *cfgDiffs;cfgDiffs51,1353
  const char *section;section52,1401
  int callBackOption;53,1424
  int status;54,1446
initDiffsCBData 59,1477
diffsCallBack 74,1742
editConfiguration 176,4603
checkDiffs 233,5738
testConfig 301,7954
static const char *want[want377,9406
check 386,9507
testConfigFilenames 401,9703
main 490,11766

src/lib/util/test_mq.c,665
#define NUM_TRANSMISSIONS 31,966
#define RECEIVER_THROTTLE 36,1053
static unsigned int received_cnt;39,1152
struct MyMessage44,1217
  struct GNUNET_MessageHeader header;46,1236
  uint32_t x GNUNET_PACKED;47,1274
static int global_ret;52,1333
static struct GNUNET_SCHEDULER_Task *tt;tt54,1357
static struct GNUNET_SCHEDULER_Task *dt;dt56,1399
static struct GNUNET_MQ_Handle *cmq;cmq58,1441
do_shutdown 62,1492
do_timeout 79,1695
error_cb 98,2082
client_continue 108,2229
handle_dummy 118,2368
handle_dummy2 139,2872
notify_sent_cb 158,3222
run 182,3656
connect_cb 235,5201
disconnect_cb 253,5590
test1 264,5766
test2 283,6189
main 303,6721

src/lib/util/container_heap.c,1316
#define LOG(32,962
#define EXTRA_CHECKS 35,1087
struct GNUNET_CONTAINER_HeapNode40,1140
  struct GNUNET_CONTAINER_Heap *heap;heap45,1219
  struct GNUNET_CONTAINER_HeapNode *parent;parent50,1288
  struct GNUNET_CONTAINER_HeapNode *left_child;left_child55,1362
  struct GNUNET_CONTAINER_HeapNode *right_child;right_child60,1441
  void *element;element65,1521
  GNUNET_CONTAINER_HeapCostType cost;70,1579
  unsigned int tree_size;76,1717
struct GNUNET_CONTAINER_Heap82,1786
  struct GNUNET_CONTAINER_HeapNode *root;root87,1852
  struct GNUNET_CONTAINER_HeapNode *walk_pos;walk_pos92,1949
  unsigned int size;97,2045
  enum GNUNET_CONTAINER_HeapOrder order;102,2108
check 113,2283
#define CHECK(127,2681
#define CHECK(129,2714
GNUNET_CONTAINER_heap_create 134,2787
GNUNET_CONTAINER_heap_destroy 145,2996
GNUNET_CONTAINER_heap_peek 153,3132
GNUNET_CONTAINER_heap_peek2 171,3636
GNUNET_CONTAINER_heap_get_size 186,4015
GNUNET_CONTAINER_heap_node_get_cost 193,4146
node_iterator 210,4581
GNUNET_CONTAINER_heap_iterate 227,5114
GNUNET_CONTAINER_heap_walk_get_next 236,5389
insert_node 264,6097
GNUNET_CONTAINER_heap_insert 317,7447
GNUNET_CONTAINER_heap_remove_root 344,8125
remove_node 390,9282
GNUNET_CONTAINER_heap_remove_node 460,11140
GNUNET_CONTAINER_heap_update_cost 485,11731

src/lib/util/test_crypto_hash.c,206
static char block[block30,985
#define FILENAME 32,1012
test 35,1057
test_encoding 61,1604
test_arithmetic 71,1725
finished_task 143,3881
file_hasher 161,4221
test_file_hash 173,4571
main 200,5152

src/lib/util/container_multipeermap.c,1844
#define LOG(30,1002
#define NEXT_CACHE_SIZE 39,1331
struct BigMapEntry44,1414
  void *value;value49,1472
  struct BigMapEntry *next;next54,1560
  struct GNUNET_PeerIdentity key;59,1625
struct SmallMapEntry66,1732
  void *value;value71,1792
  struct SmallMapEntry *next;next76,1880
  const struct GNUNET_PeerIdentity *key;key81,1947
union MapEntry88,2022
  struct SmallMapEntry *sme;sme93,2119
  struct BigMapEntry *bme;bme98,2216
struct GNUNET_CONTAINER_MultiPeerMap105,2300
  union MapEntry *map;map110,2376
  unsigned int size;115,2447
  unsigned int map_length;120,2513
  int use_small_entries;126,2694
  unsigned int modification_counter;132,2859
  union MapEntry next_cache[next_cache139,3069
  unsigned int next_cache_off;145,3217
struct GNUNET_CONTAINER_MultiPeerMapIterator153,3340
  union MapEntry me;158,3433
  unsigned int idx;163,3494
  unsigned int modification_counter;169,3612
  const struct GNUNET_CONTAINER_MultiPeerMap *map;map174,3699
GNUNET_CONTAINER_multipeermap_create 179,3794
GNUNET_CONTAINER_multipeermap_destroy 199,4274
idx_of 248,5287
GNUNET_CONTAINER_multipeermap_size 260,5532
GNUNET_CONTAINER_multipeermap_get 268,5653
GNUNET_CONTAINER_multipeermap_iterate 292,6212
update_next_cache_bme 362,7858
update_next_cache_sme 379,8360
GNUNET_CONTAINER_multipeermap_remove 389,8657
GNUNET_CONTAINER_multipeermap_remove_all 444,9970
GNUNET_CONTAINER_multipeermap_contains 524,11469
GNUNET_CONTAINER_multipeermap_contains_value 548,12065
grow 578,12819
GNUNET_CONTAINER_multipeermap_put 632,14079
GNUNET_CONTAINER_multipeermap_get_multiple 703,15836
GNUNET_CONTAINER_multipeermap_get_random 770,17526
GNUNET_CONTAINER_multipeermap_iterator_create 829,18780
GNUNET_CONTAINER_multipeermap_iterator_next 843,19157
GNUNET_CONTAINER_multipeermap_iterator_destroy 888,20284

src/lib/util/network.c,2112
#define LOG(31,1004
#define LOG_STRERROR_FILE(32,1079
#define LOG_STRERROR(37,1437
#define DEBUG_NETWORK 41,1659
#define INVALID_SOCKET 45,1727
struct GNUNET_NETWORK_Handle52,1799
  int fd;54,1830
  int af;59,1883
  int type;64,1930
  socklen_t addrlen;69,1985
  struct sockaddr *addr;addr74,2059
GNUNET_NETWORK_test_pf 79,2120
GNUNET_NETWORK_shorten_unixpath 143,3054
GNUNET_NETWORK_unix_precheck 178,3912
#define FD_COPY(219,5190
GNUNET_NETWORK_socket_set_blocking 224,5311
socket_set_inheritable 261,6102
socket_set_nosigpipe 284,6526
socket_set_nodelay 308,7006
initialize_network_handle 335,7795
GNUNET_NETWORK_socket_accept 392,9040
GNUNET_NETWORK_socket_bind 439,10240
GNUNET_NETWORK_socket_close 508,12170
GNUNET_NETWORK_socket_free_memory_only_ 565,13572
GNUNET_NETWORK_socket_box_native 579,13900
GNUNET_NETWORK_socket_connect 601,14411
GNUNET_NETWORK_socket_getsockopt 626,15046
GNUNET_NETWORK_socket_listen 651,15694
GNUNET_NETWORK_socket_recvfrom_amount 670,16094
GNUNET_NETWORK_socket_recvfrom 687,16411
GNUNET_NETWORK_socket_recv 716,17143
GNUNET_NETWORK_socket_send 737,17507
GNUNET_NETWORK_socket_sendto 771,18278
GNUNET_NETWORK_socket_setsockopt 805,19127
GNUNET_NETWORK_socket_create 832,19964
GNUNET_NETWORK_socket_shutdown 860,20635
GNUNET_NETWORK_socket_disable_corking 881,21214
GNUNET_NETWORK_fdset_zero 917,21983
GNUNET_NETWORK_fdset_set 931,22186
GNUNET_NETWORK_fdset_isset 949,22580
GNUNET_NETWORK_fdset_add 964,22901
GNUNET_NETWORK_fdset_copy 984,23326
GNUNET_NETWORK_get_fd 1000,23662
GNUNET_NETWORK_get_addr 1013,23877
GNUNET_NETWORK_get_addrlen 1026,24110
GNUNET_NETWORK_fdset_copy_native 1040,24361
GNUNET_NETWORK_fdset_set_native 1057,24690
GNUNET_NETWORK_fdset_test_native 1075,25134
GNUNET_NETWORK_fdset_handle_set 1091,25483
GNUNET_NETWORK_fdset_handle_set_first 1113,26061
GNUNET_NETWORK_fdset_handle_isset 1128,26431
GNUNET_NETWORK_fdset_overlap 1144,26813
GNUNET_NETWORK_fdset_create 1170,27329
GNUNET_NETWORK_fdset_destroy 1186,27586
GNUNET_NETWORK_test_port_free 1200,27900
GNUNET_NETWORK_socket_select 1260,29884

src/lib/util/test_crypto_crc.c,54
static int expected[expected33,1088
main 209,13748

src/lib/util/load.c,556
#define LOG(31,966
struct GNUNET_LOAD_Value36,1089
  struct GNUNET_TIME_Relative autodecline;41,1190
  struct GNUNET_TIME_Absolute last_update;46,1302
  uint64_t cummulative_delay;53,1521
  uint64_t cummulative_squared_delay;60,1739
  uint64_t cummulative_request_count;65,1871
  double runavg_delay;72,2110
  double load;79,2330
internal_update 84,2362
GNUNET_LOAD_value_init 125,3350
GNUNET_LOAD_value_set_decline 143,3756
calculate_load 157,4042
GNUNET_LOAD_get_load 201,5402
GNUNET_LOAD_get_average 216,5671
GNUNET_LOAD_update 237,6105

src/lib/util/test_crypto_ecdh_eddsa.c,33
test_ecdh 34,1055
main 72,2287

src/lib/util/container_multihashmap32.c,1474
#define LOG(32,1072
#define NEXT_CACHE_SIZE 42,1402
struct MapEntry47,1467
  uint32_t key;52,1521
  void *value;value57,1575
  struct MapEntry *next;next62,1663
struct GNUNET_CONTAINER_MultiHashMap3268,1744
  struct MapEntry **map;map73,1822
  unsigned int size;78,1895
  unsigned int map_length;83,1962
  unsigned int modification_counter;89,2129
  struct MapEntry *next_cache[next_cache96,2339
  unsigned int next_cache_off;102,2489
struct GNUNET_CONTAINER_MultiHashMap32Iterator110,2612
  struct MapEntry *me;me115,2708
  unsigned int idx;120,2771
  unsigned int modification_counter;126,2889
  const struct GNUNET_CONTAINER_MultiHashMap32 *map;map131,2976
GNUNET_CONTAINER_multihashmap32_create 142,3192
GNUNET_CONTAINER_multihashmap32_destroy 166,3685
idx_of 192,4252
GNUNET_CONTAINER_multihashmap32_size 200,4424
GNUNET_CONTAINER_multihashmap32_get 208,4549
GNUNET_CONTAINER_multihashmap32_iterate 226,4830
update_next_cache 270,5893
GNUNET_CONTAINER_multihashmap32_remove 280,6168
GNUNET_CONTAINER_multihashmap32_remove_all 315,6781
GNUNET_CONTAINER_multihashmap32_contains 358,7486
GNUNET_CONTAINER_multihashmap32_contains_value 376,7806
grow 400,8255
GNUNET_CONTAINER_multihashmap32_put 449,9524
GNUNET_CONTAINER_multihashmap32_get_multiple 491,10412
GNUNET_CONTAINER_multihashmap32_iterator_create 536,11806
GNUNET_CONTAINER_multihashmap32_iterator_next 564,12866
GNUNET_CONTAINER_multihashmap32_iterator_destroy 599,13695

src/lib/util/dnsparser.c,1441
GNUNET_DNSPARSER_check_label 53,1554
GNUNET_DNSPARSER_check_name 79,2423
GNUNET_DNSPARSER_free_soa 108,3059
GNUNET_DNSPARSER_free_cert 124,3319
GNUNET_DNSPARSER_free_srv 139,3566
GNUNET_DNSPARSER_free_uri 154,3797
GNUNET_DNSPARSER_free_mx 169,4026
GNUNET_DNSPARSER_free_record 184,4247
parse_name 233,5504
GNUNET_DNSPARSER_parse_name 353,8562
GNUNET_DNSPARSER_parse_query 372,9189
GNUNET_DNSPARSER_parse_soa 410,10340
GNUNET_DNSPARSER_parse_mx 455,11859
GNUNET_DNSPARSER_parse_srv 496,13010
GNUNET_DNSPARSER_parse_uri 537,14320
GNUNET_DNSPARSER_parse_cert 579,15718
GNUNET_DNSPARSER_parse_record 620,17150
GNUNET_DNSPARSER_parse 727,20259
GNUNET_DNSPARSER_duplicate_record 808,22961
GNUNET_DNSPARSER_duplicate_soa_record 863,24334
GNUNET_DNSPARSER_duplicate_cert_record 881,24752
GNUNET_DNSPARSER_duplicate_mx_record 898,25152
GNUNET_DNSPARSER_duplicate_srv_record 914,25524
GNUNET_DNSPARSER_duplicate_uri_record 931,25902
GNUNET_DNSPARSER_free_packet 947,26203
GNUNET_DNSPARSER_builder_add_name 982,27475
GNUNET_DNSPARSER_builder_add_query 1059,29528
GNUNET_DNSPARSER_builder_add_mx 1096,30854
GNUNET_DNSPARSER_builder_add_cert 1125,31853
GNUNET_DNSPARSER_builder_add_soa 1172,33327
GNUNET_DNSPARSER_builder_add_srv 1213,34697
GNUNET_DNSPARSER_builder_add_uri 1249,35869
add_record 1284,37079
GNUNET_DNSPARSER_pack 1392,40453
GNUNET_DNSPARSER_bin_to_hex 1489,43137
GNUNET_DNSPARSER_hex_to_bin 1512,43690

src/lib/util/crypto_symmetric.c,303
#define LOG(33,1089
GNUNET_CRYPTO_symmetric_create_session_key 42,1327
setup_cipher_aes 64,1981
setup_cipher_twofish 94,2986
GNUNET_CRYPTO_symmetric_encrypt 131,4420
GNUNET_CRYPTO_symmetric_decrypt 169,5903
GNUNET_CRYPTO_symmetric_derive_iv 203,7033
GNUNET_CRYPTO_symmetric_derive_iv_v 221,7610

src/lib/util/test_os_start_process.c,699
static const char *test_phrase test_phrase34,1125
static int ok;36,1174
static struct GNUNET_OS_Process *proc;proc38,1190
static struct GNUNET_DISK_PipeHandle *hello_pipe_stdin;hello_pipe_stdin43,1297
static struct GNUNET_DISK_PipeHandle *hello_pipe_stdout;hello_pipe_stdout48,1422
static struct GNUNET_SCHEDULER_Task *die_task;die_task50,1480
struct read_context52,1528
  char buf[buf54,1550
  int buf_offset;55,1566
  const struct GNUNET_DISK_FileHandle *stdout_read_handle;stdout_read_handle56,1584
static struct read_context rc;60,1648
end_task 64,1693
read_call 79,2064
run_task 120,3088
check_run 181,5077
check_kill 193,5205
check_instant_kill 236,6586
main 275,7798

src/lib/util/crypto_crc.c,411
#define LOG(34,1124
typedef unsigned int GNUNET_uLong;38,1273
typedef unsigned long GNUNET_uLong;40,1338
#define Z_NULL 45,1432
#define POLYNOMIAL 48,1452
static GNUNET_uLong crc_table[crc_table49,1497
crc_init 57,1730
gn_crc32 87,2617
GNUNET_CRYPTO_crc32_n 99,2863
GNUNET_CRYPTO_crc16_step 110,3042
GNUNET_CRYPTO_crc16_finish 123,3278
GNUNET_CRYPTO_crc16_n 133,3411
GNUNET_CRYPTO_crc8_n 151,3791

src/lib/util/test_os_network.c,28
proc 35,1122
main 79,2472

src/lib/util/child_management.c,794
#define LOG(35,1095
struct GNUNET_ChildWaitHandle41,1203
  struct GNUNET_ChildWaitHandle *next;next46,1282
  struct GNUNET_ChildWaitHandle *prev;prev50,1372
  struct GNUNET_OS_Process *proc;proc54,1459
  GNUNET_ChildCompletedCallback cb;58,1575
  void *cb_cls;cb_cls62,1651
static struct GNUNET_DISK_PipeHandle *sigpipe;sigpipe69,1729
static struct GNUNET_SIGNAL_Context *shc_chld;shc_chld71,1777
static struct GNUNET_SCHEDULER_Task *sig_task;sig_task73,1825
static struct GNUNET_ChildWaitHandle *cwh_head;cwh_head75,1873
static struct GNUNET_ChildWaitHandle *cwh_tail;cwh_tail77,1922
maint_child_death 86,2123
sighandler_child_death 142,3623
child_management_start 161,4078
child_management_done 181,4596
GNUNET_wait_child 198,4959
GNUNET_wait_child_cancel 231,5900

src/lib/util/disk.c,2399
#define LOG(30,988
#define LOG_STRERROR(32,1061
#define LOG_STRERROR_FILE(35,1156
#define COPY_BLK_SIZE 41,1329
#define _IFMT 58,1602
#define _IFLNK 59,1643
#define S_ISLNK(60,1686
struct GNUNET_DISK_PipeHandle67,1781
  struct GNUNET_DISK_FileHandle *fd[fd73,1901
struct GetFileSizeData81,2029
  uint64_t total;86,2099
  int include_sym_links;91,2184
  int single_file_mode;96,2298
translate_unix_perms 108,2524
get_size_rec 145,3498
GNUNET_DISK_handle_invalid 185,4519
GNUNET_DISK_file_handle_size 192,4684
GNUNET_DISK_file_seek 205,4929
GNUNET_DISK_file_size 221,5287
GNUNET_DISK_file_get_identifiers 240,5795
mktemp_name 292,6786
GNUNET_DISK_fix_permissions 320,7324
GNUNET_DISK_mkdtemp 339,7913
GNUNET_DISK_file_backup 359,8256
GNUNET_DISK_mktemp 380,8672
GNUNET_DISK_directory_test 403,9144
file_test_internal 443,10014
GNUNET_DISK_file_test 482,10789
GNUNET_DISK_file_test_read 489,10907
GNUNET_DISK_directory_create 496,11030
GNUNET_DISK_directory_create_for_file 582,12985
GNUNET_DISK_file_read 622,13796
GNUNET_DISK_file_read_non_blocking 636,14052
GNUNET_DISK_fn_read 664,14681
GNUNET_DISK_file_write 686,15202
GNUNET_DISK_file_write_blocking 701,15465
GNUNET_DISK_fn_write 725,16062
GNUNET_DISK_directory_scan 814,18369
glob_match 916,21223
struct GlobClosure956,22035
  const char *glob;glob958,22056
  GNUNET_FileNameCallback cb;959,22076
  void *cls;cls960,22106
  int nres;965,22193
glob_cb 978,22513
GNUNET_DISK_glob 1009,23115
remove_helper 1077,24736
GNUNET_DISK_directory_remove 1087,24914
GNUNET_DISK_file_copy 1126,26005
GNUNET_DISK_filename_canonicalize 1191,27800
GNUNET_DISK_file_change_owner 1213,28156
GNUNET_DISK_file_open 1237,28717
GNUNET_DISK_file_close 1308,30408
GNUNET_DISK_get_handle_from_int_fd 1330,30781
GNUNET_DISK_get_handle_from_native 1346,31089
struct GNUNET_DISK_MapHandle1360,31309
  void *addr;addr1365,31393
  size_t len;1370,31449
#define MAP_FAILED 1375,31487
GNUNET_DISK_file_map 1380,31536
GNUNET_DISK_file_unmap 1411,32266
GNUNET_DISK_file_sync 1427,32571
GNUNET_DISK_pipe 1444,32920
GNUNET_DISK_pipe_from_fd 1461,33204
GNUNET_DISK_pipe_close_end 1534,34834
GNUNET_DISK_pipe_detach_end 1560,35359
GNUNET_DISK_pipe_close 1587,35831
GNUNET_DISK_pipe_handle 1617,36612
GNUNET_DISK_internal_file_handle_ 1634,36929
purge_cfg_dir 1655,37475
GNUNET_DISK_purge_cfg_dir 1679,38063

src/lib/util/configuration.c,3711
#define LOG(30,1031
#define LOG_STRERROR_FILE(32,1099
struct ConfigEntry38,1257
  struct ConfigEntry *next;next43,1318
  char *key;key48,1383
  char *val;val53,1439
  char *hint_filename;hint_filename58,1512
  unsigned int hint_lineno;63,1598
struct ConfigSection70,1671
  struct ConfigSection *next;next75,1734
  struct ConfigEntry *entries;entries80,1805
  char *name;name85,1874
  bool inaccessible;93,2105
  char *hint_secret_filename;hint_secret_filename98,2182
  char *hint_secret_stat;hint_secret_stat103,2290
  char *hint_inlined_from_filename;hint_inlined_from_filename108,2385
  unsigned int hint_inlined_from_line;113,2490
struct ConfigFile116,2533
  char *source_filename;source_filename121,2587
  unsigned int level;126,2672
  struct ConfigFile *prev;prev128,2695
  struct ConfigFile *next;next130,2723
  char *hint_restrict_section;hint_restrict_section136,2831
  bool hint_inaccessible;141,2922
struct GNUNET_CONFIGURATION_Handle148,2990
  struct ConfigSection *sections;sections153,3068
  struct ConfigFile *loaded_files_head;loaded_files_head158,3149
  struct ConfigFile *loaded_files_tail;loaded_files_tail163,3236
  unsigned int current_nest_level;168,3333
  bool diagnostics;173,3406
  enum GNUNET_GenericReturnValue dirty;180,3585
  bool load_called;185,3708
  char *main_filename;main_filename190,3790
  const char *restrict_section;restrict_section197,3972
struct DiffHandle205,4087
  const struct GNUNET_CONFIGURATION_Handle *cfg_default;cfg_default207,4107
  struct GNUNET_CONFIGURATION_Handle *cfgDiff;cfgDiff209,4165
GNUNET_CONFIGURATION_enable_diagnostics 214,4222
GNUNET_CONFIGURATION_create 222,4415
GNUNET_CONFIGURATION_destroy 307,7139
GNUNET_CONFIGURATION_parse_and_run 329,7771
struct CollectFilesContext354,8392
  char **files;files359,8469
  unsigned int files_length;364,8528
collect_files_cb 378,8866
find_section 398,9353
pstrcmp 411,9620
handle_inline 423,9858
find_entry 647,16449
set_entry_hint 683,17317
GNUNET_CONFIGURATION_deserialize 700,17771
GNUNET_CONFIGURATION_parse 967,24810
GNUNET_CONFIGURATION_is_dirty 1086,28138
do_skip 1100,28409
GNUNET_CONFIGURATION_serialize 1128,29262
GNUNET_CONFIGURATION_serialize_diagnostics 1226,31822
GNUNET_CONFIGURATION_write 1337,35512
GNUNET_CONFIGURATION_iterate 1397,37323
GNUNET_CONFIGURATION_iterate_section_values 1416,37853
GNUNET_CONFIGURATION_iterate_sections 1445,38630
GNUNET_CONFIGURATION_remove_section 1464,38982
copy_entry 1513,40281
GNUNET_CONFIGURATION_dup 1528,40687
compare_entries 1549,41368
GNUNET_CONFIGURATION_get_diff 1569,41977
GNUNET_CONFIGURATION_write_diffs 1583,42386
GNUNET_CONFIGURATION_set_value_string 1599,42791
GNUNET_CONFIGURATION_set_value_number 1641,43750
GNUNET_CONFIGURATION_get_value_number 1660,44357
GNUNET_CONFIGURATION_get_value_float 1680,44830
GNUNET_CONFIGURATION_get_value_time 1700,45287
GNUNET_CONFIGURATION_get_value_size 1724,45973
GNUNET_CONFIGURATION_get_value_string 1751,46738
GNUNET_CONFIGURATION_get_value_choice 1770,47136
GNUNET_CONFIGURATION_get_data 1801,47886
GNUNET_CONFIGURATION_have_value 1833,48678
expand_dollar 1861,49751
GNUNET_CONFIGURATION_expand_dollar 2016,53116
GNUNET_CONFIGURATION_get_value_filename 2041,53660
GNUNET_CONFIGURATION_get_value_yesno 2066,54270
GNUNET_CONFIGURATION_iterate_value_filenames 2086,54695
escape_name 2160,56033
test_match 2199,56747
GNUNET_CONFIGURATION_append_value_filename 2208,56909
GNUNET_CONFIGURATION_remove_value_filename 2246,58104
GNUNET_CONFIGURATION_load_from 2330,59915
GNUNET_CONFIGURATION_default_filename 2378,61308
GNUNET_CONFIGURATION_default 2420,62435
GNUNET_CONFIGURATION_load 2495,64751

src/lib/util/container_multishortmap.c,1865
#define LOG(30,1003
#define NEXT_CACHE_SIZE 39,1333
struct BigMapEntry45,1417
  void *value;value50,1475
  struct BigMapEntry *next;next55,1563
  struct GNUNET_ShortHashCode key;60,1628
struct SmallMapEntry67,1736
  void *value;value72,1796
  struct SmallMapEntry *next;next77,1884
  const struct GNUNET_ShortHashCode *key;key82,1951
union MapEntry89,2027
  struct SmallMapEntry *sme;sme94,2124
  struct BigMapEntry *bme;bme99,2221
struct GNUNET_CONTAINER_MultiShortmap106,2305
  union MapEntry *map;map111,2382
  unsigned int size;116,2453
  unsigned int map_length;121,2519
  int use_small_entries;127,2700
  unsigned int modification_counter;133,2865
  union MapEntry next_cache[next_cache140,3075
  unsigned int next_cache_off;146,3223
struct GNUNET_CONTAINER_MultiShortmapIterator154,3347
  union MapEntry me;159,3441
  unsigned int idx;164,3502
  unsigned int modification_counter;170,3620
  const struct GNUNET_CONTAINER_MultiShortmap *map;map175,3707
GNUNET_CONTAINER_multishortmap_create 195,4646
GNUNET_CONTAINER_multishortmap_destroy 214,5091
idx_of 263,6106
GNUNET_CONTAINER_multishortmap_size 275,6353
GNUNET_CONTAINER_multishortmap_get 283,6476
GNUNET_CONTAINER_multishortmap_iterate 307,7038
update_next_cache_bme 374,8652
update_next_cache_sme 391,9155
GNUNET_CONTAINER_multishortmap_remove 401,9426
GNUNET_CONTAINER_multishortmap_remove_all 457,10673
GNUNET_CONTAINER_multishortmap_contains 537,12148
GNUNET_CONTAINER_multishortmap_contains_value 561,12720
grow 591,13477
GNUNET_CONTAINER_multishortmap_put 644,14733
GNUNET_CONTAINER_multishortmap_get_multiple 722,16715
GNUNET_CONTAINER_multishortmap_get_random 789,18409
GNUNET_CONTAINER_multishortmap_iterator_create 838,19531
GNUNET_CONTAINER_multishortmap_iterator_next 852,19912
GNUNET_CONTAINER_multishortmap_iterator_destroy 897,21042

src/lib/util/container_multihashmap.c,1906
#define LOG(30,1002
#define NEXT_CACHE_SIZE 39,1331
struct BigMapEntry45,1415
  void *value;value50,1473
  struct BigMapEntry *next;next55,1561
  struct GNUNET_HashCode key;60,1626
struct SmallMapEntry67,1729
  void *value;value72,1789
  struct SmallMapEntry *next;next77,1877
  const struct GNUNET_HashCode *key;key82,1944
union MapEntry89,2015
  struct SmallMapEntry *sme;sme94,2112
  struct BigMapEntry *bme;bme99,2209
struct GNUNET_CONTAINER_MultiHashMap106,2293
  union MapEntry *map;map111,2369
  unsigned int size;116,2440
  unsigned int map_length;121,2506
  int use_small_entries;127,2687
  unsigned int modification_counter;133,2852
  union MapEntry next_cache[next_cache140,3062
  unsigned int next_cache_off;146,3210
struct GNUNET_CONTAINER_MultiHashMapIterator154,3333
  union MapEntry me;159,3427
  unsigned int idx;164,3488
  unsigned int modification_counter;170,3606
  const struct GNUNET_CONTAINER_MultiHashMap *map;map175,3693
GNUNET_CONTAINER_multihashmap_create 180,3788
GNUNET_CONTAINER_multihashmap_destroy 215,4775
idx_of 264,5788
GNUNET_CONTAINER_multihashmap_size 273,5990
GNUNET_CONTAINER_multihashmap_get 281,6111
GNUNET_CONTAINER_multihashmap_iterate 309,6686
update_next_cache_bme 379,8337
update_next_cache_sme 396,8839
GNUNET_CONTAINER_multihashmap_remove 406,9136
GNUNET_CONTAINER_multihashmap_remove_all 464,10460
remove_all 552,12148
GNUNET_CONTAINER_multihashmap_clear 571,12586
GNUNET_CONTAINER_multihashmap_contains 582,12822
GNUNET_CONTAINER_multihashmap_contains_value 610,13434
grow 644,14204
GNUNET_CONTAINER_multihashmap_put 710,15851
GNUNET_CONTAINER_multihashmap_get_multiple 781,17631
GNUNET_CONTAINER_multihashmap_get_random 848,19333
GNUNET_CONTAINER_multihashmap_iterator_create 908,20607
GNUNET_CONTAINER_multihashmap_iterator_next 922,20984
GNUNET_CONTAINER_multihashmap_iterator_destroy 967,22107

src/lib/util/test_crypto_edx25519.c,280
#define ITER 32,1030
#define KEYFILE 34,1047
#define PERF 36,1103
static struct GNUNET_CRYPTO_Edx25519PrivateKey key;39,1129
testSignVerify 43,1194
testDeriveSignVerify 105,3083
testSignPerformance 177,5414
testCreateFromFile 220,6613
perf_keygen 259,8072
main 280,8585

src/lib/util/test_container_multipeermap.c,77
#define ABORT(31,984
#define CHECK(37,1307
testMap 40,1361
main 126,5938

src/lib/util/time.c,2635
#define ATOMIC30,1002
#define ATOMIC 34,1070
#define __STDC_NO_ATOMICS__ 36,1099
#define ATOMIC37,1129
#define LOG(41,1159
static long long timestamp_offset;46,1321
GNUNET_TIME_set_offset 49,1362
GNUNET_TIME_get_offset 56,1449
GNUNET_TIME_absolute_approx_eq 63,1513
GNUNET_TIME_absolute_to_timestamp 79,2035
GNUNET_TIME_timestamp_hton 91,2345
GNUNET_TIME_timestamp_ntoh 101,2552
GNUNET_TIME_absolute_get 111,2757
GNUNET_TIME_timestamp_get 125,3094
GNUNET_TIME_relative_get_zero_ 133,3236
GNUNET_TIME_absolute_get_zero_ 142,3363
GNUNET_TIME_relative_get_unit_ 151,3490
GNUNET_TIME_relative_get_millisecond_ 160,3623
GNUNET_TIME_relative_get_second_ 169,3766
GNUNET_TIME_relative_get_minute_ 178,3913
GNUNET_TIME_relative_get_hour_ 187,4065
GNUNET_TIME_relative_get_forever_ 196,4220
GNUNET_TIME_absolute_get_forever_ 205,4373
GNUNET_TIME_timestamp2s 214,4511
GNUNET_TIME_absolute2s 239,5249
GNUNET_TIME_relative2s 264,5964
GNUNET_TIME_relative_to_absolute 316,7435
GNUNET_TIME_relative_to_timestamp 335,7949
GNUNET_TIME_relative_min 343,8141
GNUNET_TIME_relative_max 351,8347
GNUNET_TIME_absolute_min 359,8553
GNUNET_TIME_absolute_max 367,8759
GNUNET_TIME_timestamp_max 375,8966
GNUNET_TIME_timestamp_min 383,9195
GNUNET_TIME_absolute_round_down 391,9423
GNUNET_TIME_absolute_get_remaining 405,9774
GNUNET_TIME_absolute_get_difference 421,10224
GNUNET_TIME_absolute_get_duration 436,10673
GNUNET_TIME_absolute_add 450,11041
GNUNET_TIME_absolute_subtract 469,11595
GNUNET_TIME_relative_multiply 484,12054
GNUNET_TIME_relative_multiply_double 504,12571
GNUNET_TIME_relative_saturating_multiply 531,13168
GNUNET_TIME_relative_divide 550,13685
GNUNET_TIME_calculate_eta 564,14046
GNUNET_TIME_relative_add 585,14674
GNUNET_TIME_relative_subtract 603,15175
GNUNET_TIME_relative_hton 618,15598
GNUNET_TIME_relative_ntoh 628,15798
GNUNET_TIME_absolute_hton 638,16001
GNUNET_TIME_absolute_is_never 648,16178
GNUNET_TIME_relative_is_forever 655,16325
GNUNET_TIME_relative_is_zero 662,16474
GNUNET_TIME_absolute_is_past 669,16580
GNUNET_TIME_absolute_is_future 679,16773
GNUNET_TIME_absolute_from_ms 689,16991
GNUNET_TIME_absolute_from_s 703,17366
GNUNET_TIME_timestamp_from_s 716,17707
GNUNET_TIME_timestamp_to_s 730,18051
GNUNET_TIME_absolute_ntoh 737,18221
GNUNET_TIME_get_current_year 747,18406
GNUNET_TIME_time_to_year 761,18586
my_timegm 779,18915
GNUNET_TIME_year_to_time 801,19180
GNUNET_TIME_randomized_backoff 830,19745
GNUNET_TIME_absolute_is_zero 844,20137
GNUNET_TIME_randomize 851,20266
GNUNET_TIME_absolute_get_monotonic 860,20457
GNUNET_util_time_fini 985,24074

src/lib/util/test_client.c,259
static int global_ret;29,951
static struct GNUNET_MQ_Handle *client_mq;client_mq31,975
#define MY_TYPE 33,1019
handle_echo 40,1123
handle_bounce 57,1590
mq_error_handler 78,2196
task 86,2337
connect_cb 129,3725
disconnect_cb 145,4026
main 158,4230

src/lib/util/test_crypto_ecdsa.c,223
#define ITER 32,1030
#define PERF 34,1047
static struct GNUNET_CRYPTO_EcdsaPrivateKey key;37,1073
testSignVerify 41,1135
testDeriveSignVerify 104,2931
testSignPerformance 182,5482
perf_keygen 219,6485
main 241,6997

src/lib/pq/pq_event.c,820
struct GNUNET_DB_EventHandler33,1001
  struct GNUNET_ShortHashCode sh;38,1064
  GNUNET_DB_EventCallback cb;43,1144
  void *cb_cls;cb_cls48,1211
  struct GNUNET_PQ_Context *db;db53,1290
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task58,1364
es_to_sh 69,1551
sh_to_channel 93,2173
channel_to_sh 116,2721
es_to_channel 135,3279
struct NotifyContext150,3549
  void *extra;extra155,3634
  size_t extra_size;160,3696
do_notify 174,4001
GNUNET_PQ_event_do_poll 189,4281
do_scheduler_notify 272,6787
scheduler_fd_cb 313,8075
manage_subscribe 351,9084
register_notify 397,10462
GNUNET_PQ_event_reconnect_ 412,10772
event_timeout 433,11365
GNUNET_PQ_event_listen 445,11552
GNUNET_PQ_event_listen_cancel 487,12967
GNUNET_PQ_get_event_notify_channel 522,13985
GNUNET_PQ_event_notify 537,14272

src/lib/pq/pq_exec.c,102
GNUNET_PQ_make_execute 30,975
GNUNET_PQ_make_try_execute 42,1165
GNUNET_PQ_exec_statements 54,1357

src/lib/pq/pq_query_helper.c,2334
qconv_null 47,1732
GNUNET_PQ_query_param_null 72,2290
qconv_fixed 98,3134
GNUNET_PQ_query_param_fixed_size 121,3683
GNUNET_PQ_query_param_string 137,3984
GNUNET_PQ_query_param_bool 145,4171
qconv_uint16 170,5085
GNUNET_PQ_query_param_uint16 199,5786
qconv_uint32 227,6686
GNUNET_PQ_query_param_uint32 256,7387
qconv_uint64 284,8287
GNUNET_PQ_query_param_uint64 313,8996
qconv_int64 341,9896
GNUNET_PQ_query_param_int64 370,10592
qconv_rsa_public_key 398,11489
GNUNET_PQ_query_param_rsa_public_key 426,12295
qconv_rsa_signature 454,13215
GNUNET_PQ_query_param_rsa_signature 482,14010
qconv_rel_time 509,14925
GNUNET_PQ_query_param_relative_time 540,15751
qconv_abs_time 568,16679
GNUNET_PQ_query_param_absolute_time 599,17505
GNUNET_PQ_query_param_absolute_time_nbo 613,17760
GNUNET_PQ_query_param_timestamp 621,17947
GNUNET_PQ_query_param_timestamp_nbo 628,18114
struct qconv_array_cls641,18407
  const size_t *sizes;sizes649,18695
  size_t same_size;655,18841
  bool continuous;662,19060
  enum array_types typ;667,19124
  Oid oid;672,19192
qconv_array_cls_cleanup 680,19329
qconv_array 705,20327
#define RETURN_UNLESS(734,20934
query_param_array_generic 997,27596
GNUNET_PQ_query_param_array_bool 1030,28237
GNUNET_PQ_query_param_array_uint16 1052,28890
GNUNET_PQ_query_param_array_uint32 1074,29555
GNUNET_PQ_query_param_array_uint64 1096,30220
GNUNET_PQ_query_param_array_bytes 1118,30885
GNUNET_PQ_query_param_array_ptrs_bytes 1141,31553
GNUNET_PQ_query_param_array_bytes_same_size 1164,32239
GNUNET_PQ_query_param_array_ptrs_bytes_same_size 1187,32921
GNUNET_PQ_query_param_array_string 1210,33621
GNUNET_PQ_query_param_array_ptrs_string 1232,34267
GNUNET_PQ_query_param_array_abs_time 1254,34931
GNUNET_PQ_query_param_array_ptrs_abs_time 1276,35638
GNUNET_PQ_query_param_array_rel_time 1298,36353
GNUNET_PQ_query_param_array_ptrs_rel_time 1320,37060
GNUNET_PQ_query_param_array_timestamp 1342,37775
GNUNET_PQ_query_param_array_ptrs_timestamp 1364,38486
qconv_blind_sign_pub 1400,39878
GNUNET_PQ_query_param_blind_sign_pub 1472,41702
qconv_blind_sign_priv 1500,42632
GNUNET_PQ_query_param_blind_sign_priv 1572,44479
qconv_unblinded_sig 1600,45414
GNUNET_PQ_query_param_unblinded_sig 1673,47235
qconv_blinded_sig 1701,48163
GNUNET_PQ_query_param_blinded_sig 1773,49971

src/lib/pq/test_pq.c,333
static struct GNUNET_PQ_Context *db;db34,1060
static int ret;39,1144
static struct GNUNET_DB_EventHandler *eh;eh44,1190
static struct GNUNET_SCHEDULER_Task *tt;tt49,1258
postgres_prepare 59,1456
run_queries 127,3827
event_end 414,14706
timeout_cb 433,14992
event_sched_cb 448,15172
sched_tests 467,15538
main 494,16288

src/lib/pq/pq_prepare.c,101
GNUNET_PQ_make_prepare 30,967
GNUNET_PQ_prepare_once 43,1183
GNUNET_PQ_prepare_statements 88,2644

src/lib/pq/pq_result_helper.c,2239
GNUNET_PQ_result_spec_allow_null 35,1095
clean_varsize_blob 55,1495
extract_varsize_blob 83,2190
GNUNET_PQ_result_spec_variable_size 130,3239
extract_fixed_blob 160,4110
GNUNET_PQ_result_spec_fixed_size 213,5412
extract_rsa_public_key 242,6252
clean_rsa_public_key 295,7456
GNUNET_PQ_result_spec_rsa_public_key 310,7705
extract_rsa_signature 338,8555
clean_rsa_signature 390,9755
GNUNET_PQ_result_spec_rsa_signature 405,10005
extract_string 433,10851
clean_string 485,11940
GNUNET_PQ_result_spec_string 500,12126
extract_bool 528,12917
GNUNET_PQ_result_spec_bool 571,13865
extract_rel_time 598,14617
GNUNET_PQ_result_spec_relative_time 647,15760
extract_abs_time 675,16584
GNUNET_PQ_result_spec_absolute_time 724,17727
GNUNET_PQ_result_spec_absolute_time_nbo 739,18046
extract_timestamp 764,18884
GNUNET_PQ_result_spec_timestamp 825,20292
extract_timestamp_nbo 853,21110
GNUNET_PQ_result_spec_timestamp_nbo 878,21767
extract_uint16 906,22600
GNUNET_PQ_result_spec_uint16 952,23563
extract_uint32 980,24355
GNUNET_PQ_result_spec_uint32 1026,25318
extract_uint64 1054,26110
GNUNET_PQ_result_spec_uint64 1110,27417
extract_int64 1138,28209
GNUNET_PQ_result_spec_int64 1194,29503
struct array_result_cls1212,29923
  Oid oid;1215,30039
  enum array_types typ;1218,30071
  size_t same_size;1221,30154
  size_t *num;num1224,30240
  size_t **sizes;sizes1228,30396
extract_array_generic 1248,31131
  #define FAIL_IF(1266,31457
  #undef FAIL_IF1503,38042
array_cleanup 1511,38136
GNUNET_PQ_result_spec_array_bool 1530,38473
GNUNET_PQ_result_spec_array_uint16 1558,39119
GNUNET_PQ_result_spec_array_uint32 1586,39773
GNUNET_PQ_result_spec_array_uint64 1614,40427
GNUNET_PQ_result_spec_array_abs_time 1642,41081
GNUNET_PQ_result_spec_array_rel_time 1670,41758
GNUNET_PQ_result_spec_array_timestamp 1698,42435
GNUNET_PQ_result_spec_array_variable_size 1726,43115
GNUNET_PQ_result_spec_array_fixed_size 1756,43812
GNUNET_PQ_result_spec_array_string 1786,44506
extract_blind_sign_pub 1827,45665
clean_blind_sign_pub 1925,48040
GNUNET_PQ_result_spec_blind_sign_pub 1937,48269
extract_blind_sign_priv 1966,49168
clean_blind_sign_priv 2058,51352
GNUNET_PQ_result_spec_blind_sign_priv 2070,51588

src/lib/pq/pq_eval.c,324
#define PQ_DIAG_SQLSTATE_DEADLOCK 32,1022
#define PQ_DIAG_SQLSTATE_UNIQUE_VIOLATION 37,1134
#define PQ_DIAG_SQLSTATE_SERIALIZATION_FAILURE 42,1254
GNUNET_PQ_eval_result 46,1338
GNUNET_PQ_eval_prepared_non_select 135,4778
GNUNET_PQ_eval_prepared_multi_select 165,5675
GNUNET_PQ_eval_prepared_singleton_select 199,6626

src/lib/pq/pq_connect.c,418
pq_notice_receiver_cb 40,1296
pq_notice_processor_cb 57,1670
GNUNET_PQ_connect 69,1919
GNUNET_PQ_connect2 86,2482
GNUNET_PQ_exec_sql 144,4190
GNUNET_PQ_run_sql 224,6640
GNUNET_PQ_reconnect_if_down 314,9400
GNUNET_PQ_get_oid_by_name 326,9637
load_initial_oids 396,11478
GNUNET_PQ_reconnect 427,12127
GNUNET_PQ_connect_with_cfg 619,17437
GNUNET_PQ_connect_with_cfg2 635,18089
GNUNET_PQ_disconnect 684,19767

src/lib/pq/pq.c,153
GNUNET_PQ_exec_prepared 33,1077
GNUNET_PQ_cleanup_query_params_closures 123,3879
GNUNET_PQ_cleanup_result 139,4214
GNUNET_PQ_extract_result 149,4458

src/lib/pq/pq.h,1325
#define PQ_H26,903
struct GNUNET_PQ_Context35,1015
  PGconn *conn;conn40,1078
  struct GNUNET_PQ_ExecuteStatement *es;es45,1151
  struct GNUNET_PQ_PreparedStatement *ps;ps50,1231
  unsigned int ps_len;55,1318
  unsigned int ps_off;60,1396
  char *config_str;config_str65,1480
  char *load_path;load_path70,1547
  char *auto_suffix;auto_suffix75,1629
  struct GNUNET_CONTAINER_MultiShortmap *channel_map;channel_map80,1702
  struct GNUNET_SCHEDULER_Task *event_task;event_task85,1814
  struct GNUNET_NETWORK_Handle *rfd;rfd90,1919
  struct GNUNET_TIME_Relative resubscribe_backoff;95,2012
  enum GNUNET_PQ_Options flags;100,2115
    unsigned int cap;109,2362
    unsigned int num;112,2426
    struct name2oid117,2635
      const char *name;name119,2661
      Oid oid;120,2685
    } *table;table121,2700
  } oids;123,2715
enum array_types131,2792
  array_of_bool,133,2811
  array_of_uint16,134,2828
  array_of_uint32,135,2847
  array_of_uint64,136,2866
  array_of_byte,137,2885
  array_of_string,138,2948
  array_of_abs_time,139,3001
  array_of_rel_time,140,3022
  array_of_timestamp,141,3043
  array_of_MAX,142,3065
struct pq_array_header150,3315
  uint32_t ndim;152,3340
  uint32_t has_null;153,3414
  uint32_t oid;154,3435
  uint32_t dim;155,3451
  uint32_t lbound;156,3496

src/lib/testing/testing_api_cmd_exec.c,576
#define LOG(30,1023
struct BashScriptState32,1078
  struct GNUNET_TESTING_AsyncContext ac;37,1161
  GNUNET_ChildCompletedCallback cb;43,1325
  struct GNUNET_ChildWaitHandle *cwh;cwh48,1412
  struct GNUNET_OS_Process *start_proc;start_proc53,1496
  char **args;args58,1603
  enum GNUNET_OS_ProcessStatusType expected_type;63,1636
  unsigned long int expected_exit_code;68,1704
exec_bash_script_cleanup 77,1843
child_completed_callback 112,2738
exec_bash_script_run 143,3580
traits 168,4202
GNUNET_TESTING_cmd_exec 187,4688
GNUNET_TESTING_cmd_exec_va 217,5455

src/lib/testing/testing_api_cmd_stat.c,89
stat_cmd 46,1268
do_stat 101,2926
stat_run 137,3637
GNUNET_TESTING_cmd_stat 150,4008

src/lib/testing/testing_api_cmd_barrier_reached.c,330
#define LOG(34,1085
struct BarrierReachedState40,1193
  struct GNUNET_TESTING_AsyncContext ac;45,1280
  const char *label;label50,1366
  const char *barrier_name;barrier_name55,1496
barrier_reached_run 67,1632
barrier_reached_cleanup 138,3760
barrier_reached_traits 156,4148
GNUNET_TESTING_cmd_barrier_reached 173,4597

src/lib/testing/testing_api_topology.c,1111
#define LOG(38,1408
#define CONNECT_ADDRESS_TEMPLATE 40,1483
#define ROUTER_CONNECT_ADDRESS_TEMPLATE 42,1536
#define KNOWN_CONNECT_ADDRESS_TEMPLATE 44,1595
#define PREFIX_TCP 46,1653
#define PREFIX_UDP 48,1679
#define PREFIX_TCP_NATTED 50,1705
#define PREFIX_UDP_NATTED 52,1745
get_first_value 65,2216
get_key 93,2885
get_first_string_value 114,3517
get_second_value 134,4131
get_value 164,4989
get_connect_value 204,6262
node_connections 313,9856
log_nodes 366,11340
log_namespaces 413,12711
log_topo 432,13281
get_node_info 460,14403
GNUNET_TESTING_get_node 542,17048
GNUNET_TESTING_get_connections 564,17685
free_nodes_cb 582,18180
free_namespaces_cb 614,19187
free_value_cb 630,19596
free_subnets_cb 643,19791
free_carriers_cb 661,20209
GNUNET_TESTING_free_topology 687,20946
GNUNET_TESTING_calculate_num 722,22242
GNUNET_TESTING_get_address 748,22843
GNUNET_TESTING_get_additional_connects 808,24225
GNUNET_TESTING_get_plugin_from_topo 838,25086
create_subnet_peers 847,25236
create_subnets 873,26158
create_peers 914,27688
GNUNET_TESTING_get_topo_from_string_ 942,28735

src/lib/testing/testing_api_barrier.c,43
GNUNET_TESTING_barrier_name_hash_ 39,1375

src/lib/testing/testing_api_main.c,302
struct MainParams36,1145
  const struct GNUNET_TESTING_Command *commands;commands42,1224
  struct GNUNET_TESTING_Interpreter *is;is47,1308
  struct GNUNET_TIME_Relative timeout;52,1396
  int rv;57,1484
handle_result 68,1657
do_shutdown 94,2122
loop_run 113,2459
GNUNET_TESTING_main 127,2779

src/lib/testing/testing_api_topology.h,3324
#define NETJAIL_H28,1007
struct GNUNET_TESTING_NetjailRouter37,1128
  unsigned int tcp_port;42,1206
  unsigned int udp_port;47,1272
enum GNUNET_TESTING_NodeType54,1352
  GNUNET_TESTING_SUBNET_NODE,59,1418
  GNUNET_TESTING_GLOBAL_NODE64,1485
struct GNUNET_TESTING_AddressPrefix70,1586
  struct GNUNET_TESTING_AddressPrefix *prev;prev75,1684
  struct GNUNET_TESTING_AddressPrefix *next;next80,1786
  char *address_prefix;address_prefix85,1869
struct GNUNET_TESTING_NodeConnection97,2012
  struct GNUNET_TESTING_NodeConnection *prev;prev102,2115
  struct GNUNET_TESTING_NodeConnection *next;next107,2222
  unsigned int namespace_n;113,2402
  unsigned int node_n;118,2498
  enum GNUNET_TESTING_NodeType node_type;123,2587
  struct GNUNET_TESTING_NetjailNode *node;node128,2687
  struct GNUNET_TESTING_AddressPrefix *address_prefixes_head;address_prefixes_head133,2833
  struct GNUNET_TESTING_AddressPrefix *address_prefixes_tail;address_prefixes_tail138,2998
struct GNUNET_TESTING_NetjailNode144,3105
  struct GNUNET_TESTING_NodeConnection *node_connections_head;node_connections_head149,3238
  struct GNUNET_TESTING_NodeConnection *node_connections_tail;node_connections_tail154,3399
  char *plugin;plugin159,3529
  unsigned int is_global;164,3616
  unsigned int namespace_n;169,3710
  unsigned int node_n;174,3795
  unsigned int node_number;179,3893
  unsigned int additional_connects;184,4065
  unsigned int expected_reaches;189,4170
struct GNUNET_TESTING_NetjailNamespace195,4240
  unsigned int namespace_n;200,4324
  struct GNUNET_TESTING_NetjailRouter *router;router205,4392
  struct GNUNET_CONTAINER_MultiShortmap *nodes;nodes210,4503
struct GNUNET_TESTING_NetjailBackbonePeer216,4581
  unsigned int number;221,4705
struct GNUNET_TESTING_NetjailCarrierPeer227,4758
  unsigned int number;232,4881
struct GNUNET_TESTING_NetjailCarrier238,4928
  unsigned int number;243,5047
  unsigned int index;248,5120
  unsigned int number_peers;253,5185
  unsigned int number_subnets;258,5259
  struct GNUNET_CONTAINER_MultiShortmap *subnets;subnets263,5337
  struct GNUNET_CONTAINER_MultiShortmap *peers;peers268,5432
struct GNUNET_TESTING_NetjailSubnet274,5511
  unsigned int number;279,5629
  unsigned int index;284,5701
  unsigned int number_peers;289,5765
  struct GNUNET_CONTAINER_MultiShortmap *peers;peers294,5839
struct GNUNET_TESTING_NetjailSubnetPeer300,5915
  unsigned int number;305,6037
struct GNUNET_TESTING_NetjailTopology311,6105
  unsigned long long default_subnets;317,6202
  unsigned long long default_carrier_peers;322,6295
  unsigned long long default_subnet_peers;327,6393
  char *plugin;plugin331,6506
  unsigned long long num_backbone_peers;336,6574
  unsigned long long num_carriers;341,6653
  struct GNUNET_CONTAINER_MultiShortmap *carriers;carriers346,6740
  struct GNUNET_CONTAINER_MultiShortmap *backbone_peers;backbone_peers351,6843
  unsigned int total;356,6962
  unsigned int namespaces_n;361,7021
  unsigned int nodes_m;366,7096
  unsigned int nodes_x;371,7168
  struct GNUNET_CONTAINER_MultiShortmap *map_namespaces;map_namespaces376,7278
  struct GNUNET_CONTAINER_MultiShortmap *map_globals;map_globals381,7418
  unsigned int additional_connects;386,7582
#define GNUNET_TESTING_SIMPLE_NETJAIL_TRAITS(484,10168

src/lib/testing/testing_api_loop.h,229
#define TESTING_API_LOOP_H27,903
(*GNUNET_TESTING_cmd_helper_write_cb)GNUNET_TESTING_cmd_helper_write_cb38,1142
struct GNUNET_TESTING_PluginFunctions45,1298
  void *cls;cls51,1391
  (*start_testcase)start_testcase67,2290

src/lib/testing/testing_api_cmd_get_topo.c,489
#define LOG(33,1051
struct TopologyState35,1129
  const char *label;label40,1195
  struct GNUNET_TESTING_NetjailTopology *topology;topology45,1258
  const char *topology_string;topology_string51,1451
  char *topology_alloc;topology_alloc57,1575
  const char *file_name;file_name62,1662
cleanup 70,1785
traits 88,2106
get_topo_string_from_file 108,2633
run 156,3780
GNUNET_TESTING_cmd_load_topology_from_file 177,4281
GNUNET_TESTING_cmd_load_topology_from_string 197,4636

src/lib/testing/testing_api_cmd_batch.h,39
#define TESTING_API_CMD_BATCH_H27,913

src/lib/testing/test_testing_api.c,13
main 30,909

src/lib/testing/testing_api_cmd_netjail_start.c,441
#define LOG(31,1052
struct NetJailState37,1163
  struct GNUNET_TESTING_AsyncContext ac;42,1243
  struct GNUNET_ChildWaitHandle *cwh;cwh44,1285
  struct GNUNET_OS_Process *start_proc;start_proc49,1377
  const char *topology_cmd_label;topology_cmd_label54,1477
  const char *script;script59,1544
netjail_start_cleanup 69,1666
child_completed_callback 98,2359
netjail_start_run 127,3082
GNUNET_TESTING_cmd_netjail_setup 205,5216

src/lib/testing/testing_api_traits.c,72
GNUNET_TESTING_SIMPLE_TRAITS 32,1067
GNUNET_TESTING_get_trait 62,1794

src/lib/testing/testing_api_loop.c,2492
struct SendContext37,1234
  struct SendContext *next;next39,1255
  struct SendContext *prev;prev40,1283
  struct GNUNET_HELPER_SendHandle *send_handle;send_handle45,1349
  struct GNUNET_TESTING_Interpreter *is;is47,1398
struct GNUNET_TESTING_Interpreter54,1552
  struct GNUNET_HELPER_Handle **helpers;helpers59,1677
  GNUNET_TESTING_ResultCallback rc;64,1775
  void *rc_cls;rc_cls69,1848
  struct GNUNET_TESTING_Command *commands;commands74,1917
  struct GNUNET_CONTAINER_MultiShortmap *barriers;barriers79,2011
  struct GNUNET_SCHEDULER_Task *task;task84,2120
  struct GNUNET_SCHEDULER_Task *final_task;final_task89,2212
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task94,2295
  struct GNUNET_CONTAINER_MultiHashMap *vars;vars99,2404
  struct SendContext *sender_head;sender_head101,2451
  struct SendContext *sender_tail;sender_tail102,2486
  GNUNET_TESTING_cmd_helper_write_cb parent_writer;107,2588
  unsigned int cmds_n;112,2707
  unsigned int n_helpers;117,2778
  int ip;124,2997
  enum GNUNET_GenericReturnValue result;130,3130
  bool finishing;135,3219
  bool skip;141,3339
GNUNET_TESTING_interpreter_lookup_command 147,3396
GNUNET_TESTING_interpreter_get_command 205,5147
send_finished 226,5705
GNUNET_TESTING_loop_notify_children_ 241,6077
GNUNET_TESTING_loop_notify_parent_ 267,6912
finish_test 283,7315
GNUNET_TESTING_interpreter_next_ 353,8984
GNUNET_TESTING_interpreter_run_cmd_ 395,10082
interpreter_run 442,11186
GNUNET_TESTING_interpreter_fail 465,11729
GNUNET_TESTING_interpreter_skip 510,12944
GNUNET_TESTING_async_fail 519,13089
GNUNET_TESTING_async_finish 528,13288
do_timeout 551,13798
setup_is 564,14062
GNUNET_TESTING_run 604,15167
start_testcase 626,15787
GNUNET_TESTING_make_plugin 679,17257
GNUNET_TESTING_add_netjail_helper_ 703,17945
GNUNET_TESTING_get_barrier2_ 713,18237
GNUNET_TESTING_get_barrier_ 722,18538
GNUNET_TESTING_add_barrier_ 737,18958
GNUNET_TESTING_barrier_count_ 755,19518
GNUNET_TESTING_barrier_iterate_ 763,19690
GNUNET_TESTING_interpreter_commands_iterate 776,20015
GNUNET_TESTING_interpreter_current_cmd_touch 810,20534
GNUNET_TESTING_interpreter_current_cmd_inc_tries 819,20705
GNUNET_TESTING_interpreter_current_cmd_get_label 827,20852
struct RewindIpState837,21030
  const char *target_label;target_label842,21119
  unsigned int counter;849,21332
seek_batch 864,21763
rewind_ip_run 929,23430
rewind_ip_free 998,24904
GNUNET_TESTING_cmd_rewind_ip 1007,25024

src/lib/testing/testing_api_barrier.h,349
#define TESTING_API_BARRIER_H28,922
struct GNUNET_TESTING_Barrier33,992
  struct GNUNET_ShortHashCode barrier_id;36,1025
  struct GNUNET_TESTING_AsyncContext **waiting;waiting42,1195
  unsigned int cnt_waiting;47,1293
  unsigned int expected_reaches;52,1403
  unsigned int reached;58,1541
  bool inherited;63,1632
  bool satisfied;69,1781

src/lib/testing/gnunet-testing-netjail-launcher.c,39
#define TIMEOUT 30,1047
main 33,1130

src/lib/testing/gnunet-cmds-helper.c,1305
#define LOG(47,1812
#define LOG_DEBUG(52,1902
struct WriteContext57,2028
  struct WriteContext *next;next60,2051
  struct WriteContext *prev;prev62,2081
  void *data;data67,2146
  size_t length;72,2201
  size_t pos;77,2301
static struct WriteContext *wc_head;wc_head81,2320
static struct WriteContext *wc_tail;wc_tail83,2358
static struct GNUNET_TESTING_Interpreter *is;is85,2396
static const char *my_node_id;my_node_id87,2443
static struct GNUNET_TESTING_PluginFunctions *plugin;plugin92,2526
static char *plugin_name;plugin_name97,2612
  struct GNUNET_TESTING_NetjailTopology *njt;njt102,2671
static struct GNUNET_MessageStreamTokenizer *tokenizer;tokenizer107,2758
static struct GNUNET_DISK_FileHandle *stdin_fd;stdin_fd112,2849
static struct GNUNET_DISK_FileHandle *stdout_fd;stdout_fd117,2932
static struct GNUNET_SCHEDULER_Task *read_task_id;read_task_id122,3027
static struct GNUNET_SCHEDULER_Task *write_task_id;write_task_id127,3125
static int global_ret;132,3222
static bool finished;138,3356
do_shutdown 147,3451
write_task 193,4304
write_message 241,5471
finished_cb 267,6131
check_helper_init 283,6524
handle_helper_init 310,7193
handle_helper_barrier_crossable 367,8995
tokenizer_cb 415,10409
read_task 443,11077
run 494,12336
main 528,13340

src/lib/testing/testing_api_cmd_signal.c,178
struct SignalState31,905
  const char *process_label;process_label36,987
  int signal;41,1069
signal_run 52,1227
signal_cleanup 88,2194
GNUNET_TESTING_cmd_signal 105,2486

src/lib/testing/testing_api_cmd_netjail_start_cmds_helper.c,1250
#define LOG(37,1188
struct NetJailState50,1488
  struct GNUNET_TESTING_Interpreter *is;is56,1627
  struct GNUNET_TESTING_AsyncContext ac;61,1727
  const char *topology_cmd_label;topology_cmd_label66,1814
  struct GNUNET_HELPER_Handle **helpers;helpers71,1906
  struct GNUNET_TIME_Relative timeout;76,2000
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task81,2071
  struct TestingSystemCount *tbc_head;tbc_head86,2150
  struct TestingSystemCount *tbc_tail;tbc_tail91,2222
  const char *topology_data;topology_data96,2316
  unsigned int n_helpers;101,2393
  unsigned int n_finished;106,2477
  bool failed;111,2568
struct TestingSystemCount118,2737
  struct TestingSystemCount *next;next124,2798
  struct TestingSystemCount *prev;prev129,2866
  struct GNUNET_HELPER_SendHandle *shandle;shandle134,2950
  struct NetJailState *ns;ns139,3066
clear_msg 154,3345
handle_helper_barrier_reached 176,3845
handle_helper_local_finished 231,5312
helper_mst 265,6132
exp_cb 303,7078
add_barrier 320,7427
send_start_messages 337,7750
start_helper 406,9895
do_timeout 466,11599
netjail_exec_run 485,11990
netjail_exec_cleanup 532,13229
netjail_exec_traits 552,13659
GNUNET_TESTING_cmd_netjail_start_helpers 579,14339

src/lib/testing/testing_api_cmd_barrier_create.c,113
barrier_traits 42,1318
barrier_cleanup 65,1846
barrier_run 80,2056
GNUNET_TESTING_cmd_barrier_create 91,2293

src/lib/testing/testing_cmds.h,832
#define TESTING_CMDS_H28,988
#define HELPER_CMDS_BINARY 32,1040
#define NETJAIL_EXEC_SCRIPT 34,1089
struct GNUNET_TESTING_CommandHelperInit41,1244
  struct GNUNET_MessageHeader header;46,1349
  uint32_t barrier_count GNUNET_PACKED;51,1445
struct GNUNET_TESTING_CommandLocalFinished59,1575
  struct GNUNET_MessageHeader header;64,1692
  uint32_t rv GNUNET_PACKED;69,1795
struct GNUNET_TESTING_CommandBarrierReached77,1937
  struct GNUNET_MessageHeader header;79,1983
  struct GNUNET_ShortHashCode barrier_key;80,2021
struct GNUNET_TESTING_CommandBarrierInherited89,2229
  struct GNUNET_MessageHeader header;91,2277
  struct GNUNET_ShortHashCode barrier_key;92,2315
struct GNUNET_TESTING_CommandBarrierSatisfied99,2419
  struct GNUNET_MessageHeader header;101,2467
  struct GNUNET_ShortHashCode barrier_key;102,2505

src/lib/testing/testing_api_cmds.c,141
GNUNET_TESTING_command_new_ac 34,1139
GNUNET_TESTING_set_label 59,1671
GNUNET_TESTING_cmd_set_var 75,1979
GNUNET_TESTING_cmd_end 85,2134

src/lib/testing/testing_api_cmd_batch.c,441
struct BatchState35,1129
  struct GNUNET_TESTING_Command *batch;batch40,1178
  struct GNUNET_TESTING_CommandLabel label;45,1247
  unsigned int batch_ip;50,1335
batch_run 61,1467
batch_cleanup 94,2297
batch_traits 117,2808
GNUNET_TESTING_cmd_batch 150,3764
GNUNET_TESTING_cmd_batch_next_ 178,4575
GNUNET_TESTING_cmd_is_batch_ 203,5152
GNUNET_TESTING_cmd_batch_get_current_ 210,5295
GNUNET_TESTING_cmd_batch_set_current_ 220,5513

src/lib/testing/testing_api_cmd_finish.c,532
struct FinishState34,1150
  void *cls;cls39,1256
  const char *async_label;async_label45,1377
  GNUNET_SCHEDULER_TaskCallback old_notify;50,1469
  void *old_notify_cls;old_notify_cls55,1563
  struct GNUNET_SCHEDULER_Task *finish_task;finish_task61,1698
  struct GNUNET_TESTING_AsyncContext ac;66,1789
  struct GNUNET_TIME_Relative timeout;71,1890
done_finish 83,2108
timeout_finish 105,2616
run_finish 123,3041
cleanup_finish 174,4566
GNUNET_TESTING_cmd_finish 188,4852
GNUNET_TESTING_cmd_make_unblocking 209,5316

src/lib/json/json_mhd.c,326
#define REQUEST_BUFFER_INITIAL 37,1202
struct Buffer43,1283
  char *data;data48,1333
  size_t fill;53,1398
  size_t alloc;58,1468
  size_t max;63,1531
buffer_init 78,1844
buffer_deinit 104,2468
buffer_append 122,2916
inflate_data 156,3789
GNUNET_JSON_post_parser 265,7019
GNUNET_JSON_post_parser_cleanup 367,9737

src/lib/json/json.c,147
GNUNET_JSON_parse 32,1027
GNUNET_JSON_spec_mark_optional 82,2371
GNUNET_JSON_parse_free 94,2613
set_json 116,3353
GNUNET_JSON_getopt 141,3934

src/lib/json/test_json_mhd.c,133
#define MAX_SIZE 33,1066
static json_t *bigj;bigj35,1096
static int global_ret;37,1118
access_handler_cb 41,1161
main 103,2603

src/lib/json/test_json.c,123
test_timestamp 37,1085
test_rel_time 86,2443
test_raw 125,3469
test_rsa 156,4242
test_boolean 198,5765
main 229,6662

src/lib/json/json_helper.c,1753
GNUNET_JSON_spec_end 33,1072
string_to_cipher 52,1396
parse_fixed_data 77,2134
GNUNET_JSON_spec_fixed 117,3047
parse_fixed64_data 144,3668
GNUNET_JSON_spec_fixed64 181,4523
parse_variable_data 208,5155
clean_variable_data 244,5958
GNUNET_JSON_spec_varsize 258,6238
parse_string 287,6903
GNUNET_JSON_spec_string 306,7251
parse_json 329,7797
clean_json 351,8236
GNUNET_JSON_spec_json 365,8460
parse_object_const 392,9063
GNUNET_JSON_spec_object_const 409,9435
parse_array_const 435,10032
GNUNET_JSON_spec_array_const 452,10400
parse_bool 478,10995
GNUNET_JSON_spec_bool 500,11354
parse_double 526,11928
GNUNET_JSON_spec_double 543,12239
parse_u8 569,12824
GNUNET_JSON_spec_uint8 593,13270
parse_u16 619,13854
GNUNET_JSON_spec_uint16 643,14306
parse_u32 669,14897
GNUNET_JSON_spec_uint32 693,15349
parse_u64 719,15940
GNUNET_JSON_spec_uint64 738,16294
parse_i64 764,16884
GNUNET_JSON_spec_int64 783,17236
parse_timestamp 811,17902
GNUNET_JSON_spec_timestamp 862,19144
parse_timestamp_nbo 885,19726
GNUNET_JSON_spec_timestamp_nbo 907,20286
parse_rel_time 930,20888
GNUNET_JSON_spec_relative_time 977,21936
parse_rsa_public_key 1000,22526
clean_rsa_public_key 1047,23644
GNUNET_JSON_spec_rsa_public_key 1061,23921
parse_rsa_signature 1085,24524
clean_rsa_signature 1132,25635
GNUNET_JSON_spec_rsa_signature 1146,25914
parse_boolean 1173,26580
GNUNET_JSON_spec_boolean 1190,26924
parse_blinded_message 1216,27526
clean_blinded_message 1314,30340
GNUNET_JSON_spec_blinded_message 1329,30689
parse_blinded_sig 1356,31365
clean_blinded_sig 1448,33842
GNUNET_JSON_spec_blinded_signature 1464,34143
parse_unblinded_sig 1487,34766
clean_unblinded_sig 1580,37341
GNUNET_JSON_spec_unblinded_signature 1595,37653

src/lib/json/json_pack.c,869
GNUNET_JSON_pack_ 29,938
GNUNET_JSON_pack_end_ 69,1806
GNUNET_JSON_pack_allow_null 80,1948
GNUNET_JSON_pack_bool 88,2080
GNUNET_JSON_pack_double 101,2297
GNUNET_JSON_pack_string 114,2517
GNUNET_JSON_pack_uint64 127,2744
GNUNET_JSON_pack_int64 145,3100
GNUNET_JSON_pack_object_steal 165,3524
GNUNET_JSON_pack_object_incref 187,3957
GNUNET_JSON_pack_array_steal 210,4418
GNUNET_JSON_pack_array_incref 232,4847
GNUNET_JSON_pack_data_varsize 255,5304
GNUNET_JSON_pack_data64_varsize 272,5680
GNUNET_JSON_pack_timestamp 289,6066
GNUNET_JSON_pack_timestamp_nbo 310,6468
GNUNET_JSON_pack_time_rel 319,6734
GNUNET_JSON_pack_time_rel_nbo 332,7055
GNUNET_JSON_pack_rsa_public_key 341,7315
GNUNET_JSON_pack_rsa_signature 354,7609
GNUNET_JSON_pack_unblinded_signature 367,7902
GNUNET_JSON_pack_blinded_message 404,8982
GNUNET_JSON_pack_blinded_sig 445,10151

src/lib/json/json_generator.c,260
GNUNET_JSON_from_data 31,1046
GNUNET_JSON_from_data64 52,1475
GNUNET_JSON_from_timestamp 81,2057
GNUNET_JSON_from_timestamp_nbo 125,2920
GNUNET_JSON_from_time_rel 132,3080
GNUNET_JSON_from_rsa_public_key 176,3872
GNUNET_JSON_from_rsa_signature 192,4233

src/lib/gnsrecord/test_gnsrecord_crypto.c,471
#define RECORDS 28,1001
#define TEST_RECORD_TYPE 30,1020
#define TEST_RECORD_DATALEN 32,1072
#define TEST_RECORD_DATA 34,1105
#define TEST_REMOVE_RECORD_TYPE 36,1135
#define TEST_REMOVE_RECORD_DATALEN 38,1173
#define TEST_REMOVE_RECORD_DATA 40,1213
static struct GNUNET_GNSRECORD_Data *s_rd;s_rd43,1251
static char *s_name;s_name45,1295
static int res;47,1317
create_record 51,1373
rd_decrypt_cb 70,1904
test_with_type 96,2644
run 157,5003
main 191,6075

src/lib/gnsrecord/gnsrecord_crypto.c,1083
#define LOG(31,1039
ecdsa_symmetric_decrypt 34,1120
ecdsa_symmetric_encrypt 61,1949
eddsa_symmetric_decrypt 88,2801
eddsa_symmetric_encrypt 112,3516
GNR_derive_block_aes_key 129,3935
GNR_derive_block_xsalsa_key 158,4970
block_get_size_ecdsa 186,6082
block_sign_ecdsa 200,6392
block_sign_eddsa 241,7841
GNUNET_GNSRECORD_block_sign 275,9165
block_create_ecdsa 324,10649
block_get_size_eddsa 406,13623
block_create_eddsa 434,14414
GNUNET_GNSRECORD_block_calculate_size 512,17402
GNUNET_GNSRECORD_block_create 539,18114
struct KeyCacheLine587,19686
  struct GNUNET_CRYPTO_EcdsaPrivateKey key;592,19740
  struct GNUNET_CRYPTO_EcdsaPublicKey pkey;597,19825
block_create2 602,19912
#define CSIZE 620,20555
#undef CSIZE634,20969
GNUNET_GNSRECORD_block_create_unsigned 663,21869
GNUNET_GNSRECORD_block_create2 676,22468
GNUNET_GNSRECORD_block_verify 695,23193
block_decrypt_ecdsa 734,24494
block_decrypt_eddsa 859,28772
GNUNET_GNSRECORD_block_decrypt 985,33107
GNUNET_GNSRECORD_query_from_private_key 1024,34322
GNUNET_GNSRECORD_query_from_public_key 1052,35133

src/lib/gnsrecord/gnsrecord_misc.c,712
#define LOG(36,1162
GNUNET_GNSRECORD_string_normalize 39,1242
GNUNET_GNSRECORD_label_check 47,1429
GNUNET_GNSRECORD_z2s 64,1792
GNUNET_GNSRECORD_records_cmp 93,2587
GNUNET_GNSRECORD_record_get_expiration_time 143,4118
GNUNET_GNSRECORD_is_expired 208,6172
GNUNET_GNSRECORD_pkey_to_zkey 231,6871
GNUNET_GNSRECORD_zkey_to_pkey 256,7503
GNUNET_GNSRECORD_identity_from_data 268,7824
GNUNET_GNSRECORD_data_from_identity 297,8665
GNUNET_GNSRECORD_is_zonekey_type 316,9283
GNUNET_GNSRECORD_block_get_size 330,9496
GNUNET_GNSRECORD_block_get_expiration 337,9637
GNUNET_GNSRECORD_query_from_block 356,10183
GNUNET_GNSRECORD_record_to_identity_key 380,10891
GNUNET_GNSRECORD_normalize_record_set 406,11624

src/lib/gnsrecord/perf_gnsrecord_crypto.c,331
#define ROUNDS 28,1001
#define RECORDS 30,1022
#define TEST_RECORD_TYPE 32,1041
#define TEST_RECORD_DATALEN 34,1072
#define TEST_RECORD_DATA 36,1105
#define TEST_REMOVE_RECORD_TYPE 38,1135
#define TEST_REMOVE_RECORD_DATALEN 40,1173
#define TEST_REMOVE_RECORD_DATA 42,1213
create_record 46,1289
run 66,1845
main 117,3543

src/lib/gnsrecord/gnsrecord_serialization.c,455
#define LOG(35,1177
#define DEBUG_GNSRECORDS 41,1382
struct NetworkRecord49,1503
  uint64_t expiration_time GNUNET_PACKED;55,1646
  uint16_t data_size GNUNET_PACKED;60,1753
  uint16_t flags GNUNET_PACKED;65,1849
  uint32_t record_type GNUNET_PACKED;70,1947
GNUNET_GNSRECORD_records_get_size 78,2026
GNUNET_GNSRECORD_records_serialize 136,3309
GNUNET_GNSRECORD_records_deserialize_get_size 199,5026
GNUNET_GNSRECORD_records_deserialize 244,6220

src/lib/gnsrecord/gnsrecord.c,544
#define LOG(34,1122
struct Plugin40,1228
  char *library_name;library_name45,1289
  struct GNUNET_GNSRECORD_PluginFunctions *api;api50,1341
static struct Plugin **gns_plugins;gns_plugins57,1427
static unsigned int num_plugins;62,1504
static int once;67,1597
add_plugin 78,1791
init 99,2319
GNSRECORD_fini 117,2723
GNUNET_GNSRECORD_value_to_string 155,3657
GNUNET_GNSRECORD_string_to_value 177,4244
GNUNET_GNSRECORD_typename_to_number 200,4928
GNUNET_GNSRECORD_number_to_typename 227,5631
GNUNET_GNSRECORD_is_critical 247,6092

src/lib/gnsrecord/test_gnsrecord_serialization.c,76
#define TIMEOUT 28,990
static int res;30,1069
run 34,1099
main 140,3759

src/lib/gnsrecord/test_gnsrecord_testvectors.c,790
int res;8,170
struct GnsTv10,180
  uint32_t expected_rd_count;12,195
  struct GNUNET_GNSRECORD_Data expected_rd[expected_rd13,225
  char *d;d14,275
  char *zid;zid15,286
  char *ztld;ztld16,299
  char *label;label17,313
  char *q;q18,328
  char *rdata;rdata19,339
  char *rrblock;rrblock20,354
  char *k;k21,371
  char *nonce;nonce22,382
struct RevocationTv25,401
  char *d;d27,423
  char *zid;zid28,434
  char *ztld;ztld29,447
  char *m;m30,461
  char *proof;proof31,472
  int diff;32,487
  int epochs;33,499
struct RevocationTv rtvs[rtvs36,517
struct GnsTv tvs[tvs112,2697
print_bytes_ 402,11367
print_bytes 432,11864
parsehex 441,11990
res_checker 472,12563
check_derivations_edkey 529,14113
check_derivations_pkey 567,15513
main 603,16737

src/lib/gnsrecord/json_gnsrecord.c,973
#define GNUNET_JSON_GNSRECORD_VALUE 31,1030
#define GNUNET_JSON_GNSRECORD_RECORD_DATA 32,1074
#define GNUNET_JSON_GNSRECORD_TYPE 33,1123
#define GNUNET_JSON_GNSRECORD_RELATIVE_EXPIRATION_TIME 34,1172
#define GNUNET_JSON_GNSRECORD_ABSOLUTE_EXPIRATION_TIME 35,1249
#define GNUNET_JSON_GNSRECORD_FLAG_MAINTENANCE 36,1326
#define GNUNET_JSON_GNSRECORD_FLAG_PRIVATE 37,1390
#define GNUNET_JSON_GNSRECORD_FLAG_SUPPLEMENTAL 38,1446
#define GNUNET_JSON_GNSRECORD_FLAG_RELATIVE 39,1512
#define GNUNET_JSON_GNSRECORD_FLAG_SHADOW 40,1581
#define GNUNET_JSON_GNSRECORD_RECORD_NAME 41,1635
struct GnsRecordInfo43,1692
  char **name;name45,1715
  unsigned int *rd_count;rd_count47,1731
  struct GNUNET_GNSRECORD_Data **rd;rd49,1758
cleanup_recordinfo 54,1812
parse_record 84,2551
parse_record_data 195,6954
parse_gnsrecordobject 219,7654
clean_gnsrecordobject 266,8984
GNUNET_GNSRECORD_JSON_spec_gnsrecord 281,9354
GNUNET_GNSRECORD_JSON_from_gnsrecord 310,10411

src/lib/gnsrecord/gnsrecord_pow.c,786
struct BestPow37,1160
  uint64_t pow;42,1204
  unsigned int bits;47,1270
struct GNUNET_GNSRECORD_PowCalculationHandle55,1373
  struct BestPow best[best60,1463
  struct GNUNET_GNSRECORD_PowP *pow;pow65,1552
  uint64_t current_pow;70,1632
  unsigned int epochs;76,1771
  unsigned int difficulty;81,1855
static struct GNUNET_CRYPTO_PowSalt salt 85,1887
calculate_score 94,2097
GNR_create_signature_message 105,2361
check_signature_identity 125,3091
check_signature 148,3731
GNUNET_GNSRECORD_check_pow 166,4266
sign_pow_identity 268,7317
sign_pow 300,8355
GNUNET_GNSRECORD_pow_init 318,8805
GNUNET_GNSRECORD_pow_start 326,9042
cmp_pow_value 355,9862
GNUNET_GNSRECORD_pow_round 372,10410
GNUNET_GNSRECORD_proof_get_size 434,12206
GNUNET_GNSRECORD_pow_stop 457,12786

src/lib/gnsrecord/gnsrecord_crypto.h,144
struct GNRBlockPS38,1254
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;44,1386
  struct GNUNET_TIME_AbsoluteNBO expiration_time;49,1486

src/lib/gnsrecord/gnunet-gnsrecord-tvg.c,228
static char *d_pkey d_pkey36,1143
static char *d_edkey d_edkey39,1236
parsehex 44,1342
print_bytes_ 65,1719
print_bytes 95,2216
print_record 104,2350
run_pkey 144,3635
run_edkey 283,8922
run 437,14773
main 515,17468

src/lib/gnsrecord/test_gnsrecord_block_expiration.c,308
#define RECORDS 28,1001
#define TEST_RECORD_TYPE 30,1020
#define TEST_RECORD_DATALEN 32,1051
#define TEST_RECORD_DATA 34,1084
#define TEST_REMOVE_RECORD_TYPE 36,1114
#define TEST_REMOVE_RECORD_DATALEN 38,1152
#define TEST_REMOVE_RECORD_DATA 40,1192
static int res;42,1229
run 46,1259
main 102,3440

src/lib/block/bg_bf.c,403
struct BfGroupInternals35,1131
  struct GNUNET_CONTAINER_BloomFilter *bf;bf40,1238
  uint32_t bf_mutator;45,1368
  uint32_t bf_size;50,1424
bf_group_serialize_cb 64,1805
bf_group_mark_seen_cb 99,2784
bf_group_merge_cb 128,3685
bf_group_destroy_cb 150,4251
GNUNET_BLOCK_GROUP_bf_create 173,5035
GNUNET_BLOCK_GROUP_bf_test_and_set 232,6876
GNUNET_BLOCK_GROUP_compute_bloomfilter_size 268,8046

src/lib/block/block.c,878
struct Plugin37,1132
  char *library_name;library_name42,1193
  struct GNUNET_BLOCK_PluginFunctions *api;api47,1245
struct GNUNET_BLOCK_Context54,1345
  struct Plugin **plugins;plugins59,1414
  unsigned int num_plugins;64,1488
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg69,1553
struct MinglePacker79,1699
  struct GNUNET_HashCode in;84,1753
  uint32_t mingle GNUNET_PACKED;89,1814
GNUNET_BLOCK_mingle_hash 96,1884
add_plugin 119,2408
GNUNET_BLOCK_context_create 140,2992
GNUNET_BLOCK_context_destroy 156,3478
GNUNET_BLOCK_group_serialize 175,3957
GNUNET_BLOCK_group_destroy 192,4376
GNUNET_BLOCK_group_merge 201,4525
find_plugin 231,5206
GNUNET_BLOCK_group_create 247,5579
GNUNET_BLOCK_get_key 276,6376
GNUNET_BLOCK_check_query 296,7010
GNUNET_BLOCK_check_block 319,7750
GNUNET_BLOCK_check_reply 337,8343
GNUNET_BLOCK_group_set_seen 363,9345

src/lib/curl/curl.c,2023
#define DEBUG 38,1152
#define CURL_STRERROR(47,1338
#define JSON_WARN(58,1899
static int curl_fail;71,2376
struct GNUNET_CURL_Job76,2480
  struct GNUNET_CURL_Job *next;next81,2545
  struct GNUNET_CURL_Job *prev;prev86,2618
  CURL *easy_handle;easy_handle91,2692
  struct GNUNET_CURL_Context *ctx;ctx96,2757
  GNUNET_CURL_JobCompletionCallback jcc;101,2844
  void *jcc_cls;jcc_cls106,2923
  GNUNET_CURL_RawJobCompletionCallback jcc_raw;111,2992
  void *jcc_raw_cls;jcc_raw_cls116,3082
  struct GNUNET_CURL_DownloadBuffer db;121,3161
  struct curl_slist *job_headers;job_headers127,3306
  struct GNUNET_TIME_Absolute start_time;132,3385
struct GNUNET_CURL_Context139,3451
  CURLM *multi;multi144,3515
  CURLSH *share;share149,3567
  struct GNUNET_CURL_Job *jobs_head;jobs_head154,3625
  struct GNUNET_CURL_Job *jobs_tail;jobs_tail159,3703
  struct curl_slist *common_headers;common_headers164,3806
  const char *async_scope_id_header;async_scope_id_header170,3940
  GNUNET_CURL_RescheduleCallback cb;176,4071
  void *cb_cls;cb_cls181,4145
  char *userpass;userpass187,4279
  char *certtype;certtype192,4365
  char *certfile;certfile197,4448
  char *keyfile;keyfile203,4556
  char *keypass;keypass208,4634
GNUNET_CURL_set_userpass 214,4662
GNUNET_CURL_set_tlscert 224,4881
GNUNET_CURL_init 246,5558
GNUNET_CURL_enable_async_scope_header 281,6347
GNUNET_CURL_is_valid_scope_id 289,6564
download_cb 314,7379
setup_job_headers 351,8192
setup_job 406,9673
GNUNET_CURL_extend_headers 467,11218
GNUNET_CURL_job_add_raw 485,11732
GNUNET_CURL_job_add2 509,12440
GNUNET_CURL_job_add_with_ct_json 560,14040
GNUNET_CURL_job_add 582,14792
GNUNET_CURL_job_cancel 596,15169
is_json 621,15884
GNUNET_CURL_download_get_result_ 649,16666
GNUNET_CURL_append_header 734,18842
GNUNET_CURL_perform2 747,19158
GNUNET_CURL_perform 819,21443
GNUNET_CURL_get_select_info 828,21666
GNUNET_CURL_fini 861,22702
GNUNET_CURL_constructor__ 881,23266
GNUNET_CURL_destructor__ 899,23624

src/lib/curl/curl_reschedule.c,453
struct GNUNET_CURL_RescheduleContext38,1269
  struct GNUNET_SCHEDULER_Task *task;task43,1340
  struct GNUNET_CURL_Context *ctx;ctx48,1415
  GNUNET_CURL_RawParser parser;53,1496
  GNUNET_CURL_ResponseCleaner cleaner;58,1578
GNUNET_CURL_gnunet_rc_create_with_parser 63,1661
clean_result 84,2198
GNUNET_CURL_gnunet_rc_create 91,2299
GNUNET_CURL_gnunet_rc_destroy 104,2587
context_task 118,2900
GNUNET_CURL_gnunet_scheduler_reschedule 170,4628

src/lib/sq/sq_exec.c,103
GNUNET_SQ_make_execute 36,1121
GNUNET_SQ_make_try_execute 55,1472
GNUNET_SQ_exec_statements 76,2015

src/lib/sq/sq_result_helper.c,816
extract_var_blob 42,1425
clean_var_blob 99,2635
GNUNET_SQ_result_spec_variable_size 119,3014
extract_fixed_blob 148,3784
GNUNET_SQ_result_spec_fixed_size 198,4953
extract_utf8_string 225,5674
clean_utf8_string 269,6671
GNUNET_SQ_result_spec_string 288,6998
extract_rsa_pub 315,7672
clean_rsa_pub 362,8731
GNUNET_SQ_result_spec_rsa_public_key 381,9071
extract_rsa_sig 408,9774
clean_rsa_sig 455,10851
GNUNET_SQ_result_spec_rsa_signature 474,11194
extract_abs_time 501,11911
GNUNET_SQ_result_spec_absolute_time 534,12757
extract_abs_time_nbo 560,13479
GNUNET_SQ_result_spec_absolute_time_nbo 593,14376
extract_uint16 619,15100
GNUNET_SQ_result_spec_uint16 655,15884
extract_uint32 681,16549
GNUNET_SQ_result_spec_uint32 717,17333
extract_uint64 743,17998
GNUNET_SQ_result_spec_uint64 772,18671

src/lib/sq/sq_query_helper.c,588
bind_fixed_blob 41,1409
GNUNET_SQ_query_param_fixed_size 66,2063
bind_string 92,2795
GNUNET_SQ_query_param_string 123,3513
bind_rsa_pub 147,4164
GNUNET_SQ_query_param_rsa_public_key 182,5075
bind_rsa_sig 207,5798
GNUNET_SQ_query_param_rsa_signature 242,6705
bind_abstime 266,7389
GNUNET_SQ_query_param_absolute_time 295,8148
bind_nbotime 320,8875
GNUNET_SQ_query_param_absolute_time_nbo 349,9665
bind_u16 375,10443
GNUNET_SQ_query_param_uint16 399,10979
bind_u32 424,11657
GNUNET_SQ_query_param_uint32 448,12210
bind_u64 473,12888
GNUNET_SQ_query_param_uint64 497,13441

src/lib/sq/sq_prepare.c,59
GNUNET_SQ_make_prepare 37,1142
GNUNET_SQ_prepare 50,1363

src/lib/sq/sq.c,118
GNUNET_SQ_bind 30,964
GNUNET_SQ_extract_result 75,2229
GNUNET_SQ_cleanup_result 104,2927
GNUNET_SQ_reset 119,3220

src/lib/sq/test_sq.c,56
sq_prepare 39,1171
run_queries 66,1750
main 226,6796

src/lib/hello/hello-uri.c,2360
struct SignedAddress49,1605
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;54,1705
  struct GNUNET_TIME_AbsoluteNBO mono_time;59,1807
  struct GNUNET_HashCode addr_hash GNUNET_PACKED;64,1890
struct HelloSignaturePurpose70,2000
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;75,2096
  struct GNUNET_TIME_AbsoluteNBO expiration_time;80,2198
  struct GNUNET_HashCode h_addrs;85,2291
struct HelloUriMessage92,2391
  struct GNUNET_MessageHeader header;97,2477
  uint16_t reserved GNUNET_PACKED;102,2546
  uint16_t url_counter GNUNET_PACKED;107,2659
struct BlockHeader116,2764
  struct GNUNET_PeerIdentity pid;121,2826
  struct GNUNET_CRYPTO_EddsaSignature sig;126,2948
  struct GNUNET_TIME_AbsoluteNBO expiration_time;131,3037
struct DhtHelloMessage140,3172
  struct GNUNET_MessageHeader header;145,3262
  uint16_t reserved GNUNET_PACKED;150,3331
  uint16_t url_counter GNUNET_PACKED;155,3444
  struct GNUNET_CRYPTO_EddsaSignature sig;160,3570
  struct GNUNET_TIME_AbsoluteNBO expiration_time;165,3659
struct Address177,3833
  struct Address *next;next182,3882
  struct Address *prev;prev187,3939
  const char *uri;uri192,4030
  size_t uri_len;197,4108
struct GNUNET_HELLO_Builder204,4188
  struct GNUNET_PeerIdentity pid;209,4259
  struct Address *a_head;a_head214,4338
  struct Address *a_tail;a_tail219,4409
  unsigned int a_length;224,4482
struct AddressUriMergeResult231,4577
  struct GNUNET_HELLO_Builder *builder;builder236,4669
  const char *address_uri;address_uri241,4806
  unsigned int found;246,4893
  unsigned int merged;251,4977
hash_addresses 262,5172
sign_hello 295,6017
verify_hello 327,7048
GNUNET_HELLO_builder_new 355,7881
GNUNET_HELLO_builder_get_id 366,8123
GNUNET_HELLO_builder_free 373,8231
GNUNET_HELLO_builder_from_msg 391,8652
GNUNET_HELLO_builder_from_block 414,9198
GNUNET_HELLO_builder_get_expiration_time 470,10461
GNUNET_HELLO_builder_from_url 493,11175
GNUNET_HELLO_builder_to_env 631,14267
GNUNET_HELLO_builder_to_dht_hello_msg 666,15547
GNUNET_HELLO_builder_to_url 717,17294
GNUNET_HELLO_builder_to_block 782,19061
GNUNET_HELLO_builder_add_address 835,20509
GNUNET_HELLO_builder_del_address 885,21778
GNUNET_HELLO_builder_iterate 909,22367
GNUNET_HELLO_dht_msg_to_block 931,22834
GNUNET_HELLO_address_to_prefix 996,24635
GNUNET_HELLO_sign_address 1018,25240

src/lib/hello/test_hello-uri.c,34
check_uris 38,1190
main 56,1537

src/lib/hello/gnunet-hello.c,932
struct AddContext33,1071
  char *buf;buf38,1122
  size_t max;43,1182
  size_t ret;48,1244
  struct GNUNET_HELLO_Builder *builder;builder50,1259
struct TransportPlugin56,1365
  struct TransportPlugin *next;next61,1437
  struct TransportPlugin *prev;prev66,1517
  struct GNUNET_TRANSPORT_PluginFunctions *api;api72,1646
  char *short_name;short_name77,1752
  char *lib_name;lib_name82,1848
  struct GNUNET_TRANSPORT_PluginEnvironment env;88,1950
static int address_count;91,2003
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key96,2058
struct GNUNET_PeerIdentity my_full_id;101,2150
static char *hello_file;hello_file106,2277
static struct TransportPlugin *plugins_head;plugins_head111,2349
static struct TransportPlugin *plugins_tail;plugins_tail116,2441
plugins_load 119,2499
add_to_builder 168,3959
add_to_buf 215,5401
add_from_hello 244,6129
run 271,6760
main 402,10997

src/lib/hello/hello-ng.c,314
struct SignedAddress36,1135
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;41,1235
  struct GNUNET_TIME_AbsoluteNBO mono_time;46,1337
  struct GNUNET_HashCode addr_hash GNUNET_PACKED;51,1420
GNUNET_HELLO_sign_address 66,1905
GNUNET_HELLO_extract_address 107,3239
GNUNET_HELLO_address_to_prefix 190,5594

src/cli/dht/gnunet-dht-hello.c,298
#define LOG(28,972
static struct GNUNET_DHT_Handle *dht_handle;dht_handle33,1076
static struct GNUNET_DHT_HelloGetHandle *get_hello_handle;get_hello_handle38,1172
static int global_ret;43,1263
cleanup_task 52,1369
hello_done_cb 73,1715
hello_result_cb 86,1885
run 106,2327
main 149,3439

src/cli/dht/gnunet-dht-put.c,594
static unsigned int query_type;32,1052
struct GNUNET_HashCode key;37,1120
static char *query_key;query_key42,1182
static struct GNUNET_TIME_Relative expiration;47,1249
static unsigned int replication 52,1335
static unsigned int verbose;57,1395
static int demultixplex_everywhere;62,1476
static int record_route;67,1557
static struct GNUNET_DHT_Handle *dht_handle;dht_handle72,1612
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg78,1705
static int ret;83,1791
static char *data;data88,1851
shutdown_task 92,1884
message_sent_cont 108,2103
run 123,2442
main 180,3899

src/cli/dht/gnunet-dht-monitor.c,645
static unsigned int block_type;32,1018
static char *query_key;query_key37,1086
static struct GNUNET_TIME_Relative timeout_request 42,1163
static int verbose;47,1250
static struct GNUNET_DHT_Handle *dht_handle;dht_handle52,1300
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg57,1392
static struct GNUNET_DHT_MonitorHandle *monitor_handle;monitor_handle62,1485
static unsigned int result_count;67,1580
static int ret;72,1646
static struct GNUNET_SCHEDULER_Task *tt;tt77,1708
cleanup_task 86,1851
timeout_task 114,2344
get_callback 132,2794
get_resp_callback 164,3859
put_callback 207,5550
run 243,6712
main 296,8308

src/cli/dht/gnunet-dht-get.c,738
#define LOG(29,1019
static unsigned int query_type;33,1126
static unsigned int replication 38,1196
static char *query_key;query_key43,1267
static struct GNUNET_TIME_Relative timeout_request 48,1331
static unsigned int verbose;53,1418
static int demultixplex_everywhere;58,1491
static int record_route;63,1572
static struct GNUNET_DHT_Handle *dht_handle;dht_handle68,1627
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg73,1719
static struct GNUNET_DHT_GetHandle *get_handle;get_handle78,1812
static unsigned int result_count;83,1895
static int ret;88,1961
static struct GNUNET_SCHEDULER_Task *tt;tt93,2023
cleanup_task 102,2147
timeout_task 128,2532
get_result_iterator 152,3247
run 225,5744
main 285,7483

src/cli/util/gnunet-ecc.c,446
#define KEY_STR_LEN 35,1089
static int list_keys;40,1206
static unsigned int list_keys_count;45,1269
static int print_public_key;50,1348
static int print_private_key;55,1420
static int print_public_key_hex;60,1499
static int print_examples_flag;65,1603
static unsigned int make_keys;70,1693
create_keys 80,1935
print_hex 193,4987
print_examples_ecdh 205,5199
print_examples 281,7934
print_key 290,8060
run 378,10624
main 452,12368

src/cli/util/gnunet-scrypt.c,549
static struct GNUNET_CRYPTO_PowSalt salt 34,1022
static unsigned long long nse_work_required;40,1180
static struct GNUNET_TIME_Relative proof_find_delay;45,1271
static struct GNUNET_CRYPTO_EddsaPublicKey pub;47,1325
static uint64_t proof;49,1374
static struct GNUNET_SCHEDULER_Task *proof_task;proof_task51,1398
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg53,1448
static char *pkfn;pkfn55,1503
static char *pwfn;pwfn57,1523
shutdown_task 66,1625
find_proof 87,2132
#define ROUND_SIZE 89,2157
run 165,4554
main 274,8198

src/cli/util/gnunet-crypto-tvg.c,396
struct TestSignatureDataPS65,1708
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;67,1737
  uint32_t testval;68,1789
static int verify_flag 77,1893
static int global_ret 83,1960
vec_for 94,2225
d2j 116,2672
uint2j 142,3156
expect_data_fixed 153,3327
expect_data_dynamic 173,3866
checkvec 209,4598
check_vectors 997,29997
output_vectors 1062,31619
run 1560,47992
main 1580,48422

src/cli/util/gnunet-qr.c,487
static int exit_code 43,1259
static char *device device50,1430
static char *pngfilename pngfilename58,1598
static unsigned int verbosity 64,1671
struct GNUNET_OS_Process *childproc childproc69,1740
static struct GNUNET_ChildWaitHandle *waitchildproc waitchildproc74,1830
#define LOG(79,1952
shutdown_program 97,2818
wait_child 118,3288
handle_uri 151,3942
get_symbol 235,6137
run_zbar 292,7198
png_parse 341,8121
run_png_reader 463,10804
run 524,12235
main 566,12930

src/cli/util/gnunet-uri.c,241
static long unsigned int exit_code 33,1018
static struct GNUNET_OS_Process *p;p38,1097
static struct GNUNET_DISK_PipeHandle *sigpipe;sigpipe43,1191
maint_child_death 53,1392
run 74,1954
sighandler_child_death 138,3702
main 161,4266

src/cli/util/gnunet-base32.c,14
main 39,1178

src/cli/util/gnunet-timeout.c,91
static pid_t child;35,1131
sigchld_handler 39,1165
sigint_handler 61,1555
main 69,1622

src/cli/util/gnunet-config.c,255
static char *backend_check;backend_check36,1152
static int cflags;41,1244
static int is_experimental;46,1314
static int no_defaults;51,1388
static char *ram_config;ram_config56,1462
static int libs;61,1549
static int prefix;66,1630
main 77,1835

src/cli/util/gnunet-config-diff.c,11
main 6,57

src/cli/util/gnunet-resolver.c,132
#define GET_TIMEOUT 31,990
static int reverse;36,1107
print_hostname 47,1324
print_sockaddr 67,1715
run 90,2229
main 164,3929

src/cli/arm/gnunet-arm.c,1214
static int end;34,1088
static int start;39,1173
static int restart;44,1265
static int delete;49,1363
static int quiet;54,1438
static int show_all;59,1529
static int monitor;64,1584
static int list;69,1677
static char *init;init74,1745
static char *term;term79,1814
static char *config_file;config_file84,1886
static char *dir;dir89,1977
static int ret;94,2026
static struct GNUNET_ARM_Handle *h;h99,2075
static struct GNUNET_ARM_MonitorHandle *m;m104,2152
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg109,2226
static unsigned int phase;114,2336
static struct GNUNET_TIME_Relative timeout;119,2425
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task124,2508
static int no_stdout;129,2624
static int no_stderr;134,2711
static struct GNUNET_SCHEDULER_Task *al_task;al_task139,2793
static struct GNUNET_ARM_Operation *op;op144,2870
delete_files 152,3086
shutdown_task 181,3789
req_string 224,4559
ret_string 245,5020
conn_status 302,6393
start_callback 332,7127
stop_callback 375,8377
init_callback 431,9954
term_callback 478,11312
list_callback 531,12754
action_loop 728,17849
srv_status 848,21280
timeout_task_cb 899,22281
run 917,22647
main 969,24368

src/cli/nse/gnunet-nse.c,180
static struct GNUNET_NSE_Handle *nse;nse34,1111
static int status;39,1196
static int monitor;44,1241
do_shutdown 53,1348
handle_estimate 74,1796
run 101,2475
main 120,2815

src/cli/peerstore/gnunet-peerstore.c,155
static int ret;30,966
static struct GNUNET_PEERSTORE_Handle *peerstore_handle;peerstore_handle35,1021
shutdown_task 44,1143
run 63,1550
main 84,2044

src/cli/namecache/gnunet-namecache.c,363
static struct GNUNET_NAMECACHE_Handle *ns;ns38,1143
static struct GNUNET_NAMECACHE_QueueEntry *qe;qe43,1237
static char *name;name48,1333
static struct GNUNET_CRYPTO_PublicKey pubkey;53,1399
static char *pkey;pkey58,1502
static int ret;63,1553
do_shutdown 72,1663
display_records_from_block 95,2062
handle_block 136,3120
run 165,3914
main 206,4901

src/cli/namestore/gnunet-namestore.c,3798
#define WARN_RELATIVE_EXPIRATION_LIMIT 40,1251
struct RecordSetEntry46,1417
  struct RecordSetEntry *next;next51,1481
  struct GNUNET_GNSRECORD_Data record;56,1556
struct MarkedRecord62,1641
  struct MarkedRecord *next;next67,1684
  struct MarkedRecord *prev;prev72,1735
  char *name;name77,1797
  struct GNUNET_CRYPTO_PrivateKey key;82,1842
struct EgoEntry88,1922
  struct EgoEntry *next;next93,1961
  struct EgoEntry *prev;prev98,2008
  char *identifier;identifier103,2066
  struct GNUNET_IDENTITY_Ego *ego;ego108,2112
static struct GNUNET_NAMESTORE_Handle *ns;ns114,2187
static struct GNUNET_CRYPTO_PrivateKey zone_pkey;119,2272
static struct GNUNET_IDENTITY_Handle *idh;idh124,2358
static char *ego_name;ego_name129,2451
static struct GNUNET_NAMESTORE_QueueEntry *add_qe_uri;add_qe_uri134,2527
static struct GNUNET_NAMESTORE_QueueEntry *add_qe;add_qe139,2631
static struct GNUNET_NAMESTORE_QueueEntry *get_qe;get_qe144,2734
static struct GNUNET_NAMESTORE_QueueEntry *reverse_qe;reverse_qe149,2874
static struct MarkedRecord *marked_head;marked_head154,2960
static struct MarkedRecord *marked_tail;marked_tail159,3032
const struct GNUNET_CONFIGURATION_Handle *cfg;cfg164,3106
static struct EgoEntry *ego_head;ego_head169,3174
static struct EgoEntry *ego_tail;ego_tail174,3229
static struct GNUNET_NAMESTORE_ZoneIterator *list_it;list_it179,3315
static int read_from_stdin;184,3410
static int list;189,3485
static int add;194,3549
static int del;199,3615
static int is_public;204,3703
static int is_shadow;209,3793
static int is_maintenance;214,3893
static int omit_private;219,3955
static int output_recordline;224,4020
static int purge_zone;230,4083
static int include_maintenance;235,4152
static int purge_orphaned;240,4219
static int list_orphaned;245,4305
static struct GNUNET_NAMESTORE_QueueEntry *del_qe;del_qe250,4380
static struct GNUNET_NAMESTORE_QueueEntry *set_qe;set_qe255,4488
static struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe260,4580
static char *name;name265,4682
static char *value;value270,4748
static char *uri;uri275,4795
static char *reverse_pkey;reverse_pkey280,4852
static char *typestring;typestring285,4945
static char *expirationstring;expirationstring290,5007
static char *nickstring;nickstring295,5069
static int ret;300,5126
static uint32_t type;305,5195
static void *data;data310,5253
static size_t data_size;315,5310
static uint64_t etime;320,5393
static int etime_is_rel 325,5474
static struct GNUNET_NAMESTORE_ZoneMonitor *zm;zm330,5543
static int monitor;335,5625
static struct RecordSetEntry *recordset;recordset340,5709
static struct GNUNET_SCHEDULER_Task *purge_task;purge_task345,5773
parse_expiration 356,6069
parse_recordline 401,7644
reset_handles 489,10414
do_shutdown 604,12455
finish_command 641,13055
add_continuation 654,13220
del_continuation 673,13603
marked_deleted 691,13949
purge_next_record 705,14257
zone_iteration_finished 735,15041
zone_iteration_error_cb 753,15362
collect_zone_records_to_purge 764,15531
collect_orphans 782,16095
display_record 821,17155
purge_zone_iterator 935,20876
purge_orphans_iterator 951,21361
display_record_iterator 976,22151
display_record_monitor 1001,22946
display_record_lookup 1026,23729
sync_cb 1046,24207
monitor_error_cb 1059,24391
lookup_error_cb 1072,24598
add_error_cb 1085,24796
get_existing_record 1106,25293
reverse_error_cb 1181,27567
handle_reverse_lookup 1200,28061
del_lookup_error_cb 1223,28614
del_monitor 1245,29142
replace_cont 1323,31566
run_with_zone_pkey 1346,32018
#define MAX_LINE_LEN 1744,44979
#define MAX_ARGS 1746,45006
get_identity_for_string 1749,45038
process_command_stdin 1788,46159
id_connect_cb 1888,48833
run 1932,49949
main 1973,50930

src/cli/namestore/gnunet-namestore-dbtool.c,168
static char *pluginname;pluginname33,1108
static int reset;38,1160
static int init;43,1210
static int ret 48,1251
do_shutdown 56,1364
run 73,1701
main 154,3634

src/cli/namestore/gnunet-zoneimport.c,3490
#define THRESH 35,1183
#define TIME_THRESH 41,1315
#define MAX_RETRIES 46,1407
#define MAX_SERIES 51,1500
#define SERIES_DELAY 56,1591
static struct GNUNET_TIME_Relative minimum_expiration_time;62,1768
#define NS_BATCH_SIZE 68,1933
struct Zone76,2197
  struct Zone *next;next81,2243
  struct Zone *prev;prev86,2297
  char *domain;domain91,2379
  struct GNUNET_CRYPTO_PrivateKey key;96,2438
struct Record103,2537
  struct Record *next;next108,2585
  struct Record *prev;prev113,2641
  struct GNUNET_GNSRECORD_Data grd;118,2694
struct Request127,2907
  struct GNUNET_CONTAINER_HeapNode *hn;hn132,2999
  struct Request *next;next137,3092
  struct Request *prev;prev142,3169
  struct Record *rec_head;rec_head148,3283
  struct Record *rec_tail;rec_tail154,3400
  struct GNUNET_DNSSTUB_RequestSocket *rs;rs159,3498
  char *hostname;hostname166,3705
  struct GNUNET_NAMESTORE_QueueEntry *qe;qe171,3786
  const struct Zone *zone;zone176,3881
  struct GNUNET_TIME_Absolute expires;183,4062
  struct GNUNET_TIME_Absolute op_start_time;191,4316
  unsigned int issue_num;197,4472
  uint16_t id;202,4552
static unsigned int map_size 212,4857
static struct GNUNET_IDENTITY_Handle *id;id217,4938
static struct GNUNET_NAMESTORE_Handle *ns;ns222,5010
static struct GNUNET_STATISTICS_Handle *stats;stats227,5099
static struct GNUNET_DNSSTUB_Context *ctx;ctx232,5186
static unsigned int pending;237,5288
static unsigned int pending_rs;242,5398
static unsigned int lookups;247,5482
static unsigned int cached;252,5556
static unsigned int rejects;257,5642
static unsigned int failures;262,5714
static unsigned int records;267,5784
static unsigned int record_sets;272,5867
static struct GNUNET_CONTAINER_Heap *req_heap;req_heap278,6016
static struct Request *req_head;req_head283,6110
static struct Request *req_tail;req_tail288,6190
static struct GNUNET_SCHEDULER_Task *t;t293,6246
static struct GNUNET_CONTAINER_MultiHashMap *ns_pending;ns_pending300,6442
static struct GNUNET_NAMESTORE_ZoneIterator *zone_it;zone_it305,6542
static struct Zone *zone_head;zone_head310,6647
static struct Zone *zone_tail;zone_tail315,6729
static uint64_t ns_iterator_trigger_next;321,6859
static uint64_t total_dns_latency_cnt;326,6962
static struct GNUNET_TIME_Relative total_dns_latency;331,7044
static uint64_t total_reg_proc_dns;336,7175
static uint64_t total_reg_proc_dns_ns;341,7290
static struct GNUNET_TIME_Absolute start_time_reg_proc;346,7379
static struct GNUNET_TIME_Absolute sleep_time_reg_proc;351,7486
static struct GNUNET_TIME_Relative idle_time;356,7591
typedef void (*RecordProcessor)RecordProcessor365,7732
for_all_records 378,8059
get_label 411,8878
build_dns_query 442,9551
free_records 491,10692
free_request 510,11024
insert_sorted 532,11358
add_record 556,12012
struct GlueClosure578,12620
  struct Request *req;req583,12693
  const char *ns;ns588,12771
  int found;593,12845
check_for_glue 604,13031
struct ProcessRecordContext712,16437
  struct GNUNET_DNSPARSER_Packet *p;p718,16558
  struct Request *req;req723,16640
process_record 734,16815
store_completed_cb 936,23807
process_result 1030,27028
process_queue 1181,31720
free_request_it 1278,34547
do_shutdown 1295,34812
ns_lookup_error_cb 1382,36554
ns_lookup_result_cb 1405,37137
queue 1505,40219
move_to_queue 1577,42192
iterate_zones 1595,42519
process_stdin 1663,44974
identity_cb 1738,47610
run 1781,48638
main 1838,50018

src/cli/namestore/gnunet-namestore-zonefile.c,1384
#define MAX_RECORDS_PER_NAME 30,1069
#define MAX_ZONEFILE_LINE_LEN 35,1147
#define MAX_ZONEFILE_RECORD_DATA_LEN 40,1218
static struct GNUNET_GNSRECORD_Data rd[rd46,1333
static struct GNUNET_TIME_Relative ttl;51,1434
static char origin[origin56,1501
static unsigned int rd_count 61,1610
static int ret 66,1668
static char *ego_name ego_name71,1716
static char *res;res76,1793
static unsigned int published_sets 81,1866
static unsigned int published_records 86,1970
static struct GNUNET_IDENTITY_EgoLookup *el;el92,2053
static struct GNUNET_CRYPTO_PrivateKey zone_pkey;97,2140
static struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe102,2239
static struct GNUNET_NAMESTORE_Handle *ns;ns107,2326
static struct GNUNET_IDENTITY_Operation *id_op;id_op112,2406
static struct GNUNET_IDENTITY_Handle *id;id117,2485
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg122,2562
static struct GNUNET_SCHEDULER_Task *parse_task;parse_task127,2649
static int state;132,2742
enum ZonefileImportState134,2761
  ZS_READY,138,2811
  ZS_ORIGIN_SET,141,2850
  ZS_ORIGIN_CHANGED,144,2900
  ZS_NAME_CHANGED147,2964
do_shutdown 159,3081
trim 190,3710
next_token 224,4503
parse_ttl 233,4616
parse_origin 255,5135
origin_create_cb 270,5460
origin_lookup_cb 287,5873
add_continuation 308,6503
parse 353,7894
identity_cb 635,16222
run 660,16725
main 697,17618

src/cli/revocation/gnunet-revocation.c,969
static unsigned int pow_passes 34,1063
static int ret;39,1130
static int perform;44,1178
static char *filename;filename49,1221
static char *revoke_ego;revoke_ego54,1266
static char *test_ego;test_ego59,1314
static unsigned int epochs 64,1360
static struct GNUNET_REVOCATION_Query *q;q69,1433
static struct GNUNET_REVOCATION_Handle *h;h74,1510
static struct GNUNET_IDENTITY_EgoLookup *el;el79,1592
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg84,1668
static unsigned long long matching_bits;89,1783
static struct GNUNET_TIME_Relative epoch_duration;94,1849
static struct GNUNET_SCHEDULER_Task *pow_task;pow_task99,1953
static struct GNUNET_GNSRECORD_PowP *proof_of_work;proof_of_work104,2033
do_shutdown 112,2179
print_query_result 140,2693
print_revocation_result 172,3323
perform_revocation 213,4198
sync_pow 229,4518
calculate_pow_shutdown 249,5069
calculate_pow 270,5496
ego_callback 324,6954
run 409,9683
main 523,13320

src/cli/revocation/gnunet-revocation-tvg.c,248
#define TEST_EPOCHS 35,1192
#define TEST_DIFFICULTY 36,1214
static char*d_pkey d_pkey38,1241
static char *d_edkey d_edkey41,1333
parsehex 45,1431
print_bytes_ 66,1808
print_bytes 96,2305
run_with_key 105,2439
run 177,4897
main 208,5844

src/cli/identity/gnunet-identity.c,1072
#define TIMEOUT_STATUS_CODE 36,1116
static struct GNUNET_IDENTITY_Handle *sh;sh41,1187
static int list;46,1263
static int monitor;51,1317
static int private_keys;56,1374
static unsigned int verbose;61,1436
static int quiet;66,1500
static int type_eddsa;71,1553
static char *write_msg;write_msg76,1598
static char *read_msg;read_msg81,1644
static char *create_ego;create_ego86,1689
static char *delete_ego;delete_ego91,1736
static char *privkey_ego;privkey_ego96,1783
static char *pubkey_msg;pubkey_msg101,1831
static char *set_ego;set_ego106,1879
static struct GNUNET_IDENTITY_Operation *set_op;set_op111,1949
static struct GNUNET_IDENTITY_Operation *create_op;create_op116,2039
static struct GNUNET_IDENTITY_Operation *delete_op;delete_op121,2132
struct GNUNET_CRYPTO_PrivateKey pk;126,2243
static int global_ret;131,2321
shutdown_task 140,2413
test_finished 171,2899
delete_finished 195,3343
create_finished 215,3771
write_encrypted_message 259,4720
read_encrypted_message 302,5907
print_ego 371,8597
run 456,10736
main 534,13126

src/cli/datastore/gnunet-datastore.c,927
struct DataRecord33,1061
  uint32_t size GNUNET_PACKED;38,1133
  uint32_t type GNUNET_PACKED;43,1242
  uint32_t priority GNUNET_PACKED;48,1319
  uint32_t anonymity GNUNET_PACKED;53,1403
  uint32_t replication GNUNET_PACKED;58,1490
  struct GNUNET_TIME_AbsoluteNBO expiration;63,1569
  struct GNUNET_HashCode key;68,1671
static const size_t MAGIC_LEN 76,1771
static const uint8_t MAGIC_BYTES[MAGIC_BYTES81,1839
static int dump;86,1929
static int insert;91,1984
static char *file_name;file_name96,2031
static struct GNUNET_DISK_FileHandle *file_handle;file_handle101,2085
static int ret;106,2169
static struct GNUNET_DATASTORE_Handle *datastore;datastore111,2219
static struct GNUNET_DATASTORE_QueueEntry *qe;qe116,2300
static uint64_t record_count;121,2373
do_shutdown 125,2417
get_cb 173,3431
do_get 243,4976
start_dump 268,5695
put_cb 311,7109
start_insert 389,9051
run 433,10128
main 471,10962

src/cli/vpn/gnunet-vpn.c,544
static struct GNUNET_VPN_Handle *handle;handle35,1047
static struct GNUNET_VPN_RedirectionRequest *request;request40,1135
static char *peer_id;peer_id45,1250
static char *service_name;service_name50,1341
static char *target_ip;target_ip55,1401
static int ipv4;60,1464
static int ipv6;65,1520
static int tcp;70,1575
static int udp;75,1629
static unsigned int verbosity;80,1686
static int ret;85,1750
static struct GNUNET_TIME_Relative duration 90,1815
do_disconnect 97,1915
allocation_cb 129,2809
run 162,3483
main 289,6733

src/cli/fs/gnunet-unindex.c,326
static int ret;32,1076
static unsigned int verbose;34,1093
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg36,1123
static struct GNUNET_FS_Handle *ctx;ctx38,1178
static struct GNUNET_FS_UnindexContext *uc;uc40,1216
cleanup_task 44,1274
shutdown_task 52,1355
progress_cb 79,2039
run 134,3481
main 178,4588

src/cli/fs/gnunet-auto-share.c,1480
#define MAX_DELAY 32,1087
#define MIN_DELAY 34,1164
struct WorkItem41,1315
  struct WorkItem *prev;prev46,1389
  struct WorkItem *next;next51,1471
  char *filename;filename56,1541
  struct GNUNET_HashCode id;62,1667
static int ret;69,1745
static unsigned int verbose;74,1801
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg79,1864
static char *cfg_filename;cfg_filename84,1962
static int disable_extractor;89,2049
static int do_disable_creation_time;94,2143
static struct GNUNET_SCHEDULER_Task *run_task;run_task99,2249
static unsigned int anonymity_level 104,2354
static unsigned int content_priority 109,2454
static unsigned int replication_level 114,2558
static const char *dir_name;dir_name119,2661
static struct WorkItem *work_head;work_head124,2749
static struct WorkItem *work_tail;work_tail129,2843
static struct GNUNET_CONTAINER_MultiHashMap *work_finished;work_finished135,2973
static int do_shutdown;140,3089
static struct GNUNET_TIME_Absolute start_time;147,3265
static struct GNUNET_DISK_PipeHandle *sigpipe;sigpipe152,3399
static struct GNUNET_OS_Process *publish_proc;publish_proc157,3515
get_state_file 164,3646
load_state 182,3996
write_item 249,5930
save_state 275,6799
do_stop_task 316,7858
maint_child_death 346,8381
sighandler_child_death 425,10820
work 446,11292
determine_id 515,13668
add_file 562,15043
scan 605,16281
schedule_next_task 618,16548
run 651,17471
free_item 686,18562
main 704,18943

src/cli/fs/gnunet-search.c,2054
#define GNUNET_SEARCH_log(37,1160
#define DEFAULT_DIR_FORMAT 43,1321
#define HELP_DEFAULT_DIR_FORMAT 44,1398
#define DEFAULT_FILE_FORMAT 45,1478
#define HELP_DEFAULT_FILE_FORMAT 46,1552
#define VERB_DEFAULT_DIR_FORMAT 47,1629
#define VERB_DEFAULT_FILE_FORMAT 48,1688
#define DEFAULT_META_FORMAT 51,1771
#define HELP_DEFAULT_META_FORMAT 52,1817
#define HELP_EXTRACTOR_TEXTADD 53,1864
#define DEFAULT_META_FORMAT 55,1910
#define HELP_DEFAULT_META_FORMAT 56,1966
#define HELP_EXTRACTOR_TEXTADD 57,2023
#define GENERIC_DIRECTORY_NAME 60,2067
#define GENERIC_FILE_NAME 61,2113
#define GENERIC_FILE_MIMETYPE 62,2156
enum GNUNET_SEARCH_MetadataPrinterFlags65,2218
  METADATA_PRINTER_FLAG_NONE 67,2260
  METADATA_PRINTER_FLAG_ONE_RUN 68,2294
  METADATA_PRINTER_FLAG_HAVE_TYPE 69,2331
struct GNUNET_SEARCH_MetadataPrinterInfo73,2374
  unsigned int counter;75,2417
  unsigned int flags;76,2441
  int type;77,2463
static int ret;81,2480
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg83,2497
static struct GNUNET_FS_Handle *ctx;ctx85,2552
static struct GNUNET_FS_SearchContext *sc;sc87,2590
static char *output_filename;output_filename89,2634
static char *format_string;format_string91,2665
static char *dir_format_string;dir_format_string93,2694
static char *meta_format_string;meta_format_string95,2727
static struct GNUNET_FS_DirectoryBuilder *db;db97,2761
static unsigned int anonymity 99,2808
static struct GNUNET_TIME_Relative timeout;104,2907
static unsigned int results_limit;106,2952
static unsigned int results;108,2988
static unsigned int verbose;110,3018
static int bookmark_only;112,3048
static int local_only;114,3075
static int silent_mode;116,3099
static struct GNUNET_SCHEDULER_Task *tt;tt118,3124
static int stop_searching;120,3166
print_escape_sequence 135,3594
item_printer 200,5707
#define info 208,6013
#undef info267,7861
print_search_result 283,8295
clean_task 421,12467
progress_cb 469,13876
shutdown_task 555,16299
timeout_task 566,16422
run 583,16792
main 695,19967

src/cli/fs/gnunet-publish.c,1335
static int ret;36,1120
static unsigned int verbose;41,1182
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg46,1252
static struct GNUNET_FS_Handle *ctx;ctx51,1368
static struct GNUNET_FS_PublishContext *pc;pc56,1452
static struct GNUNET_FS_MetaData *meta;meta61,1552
static struct GNUNET_FS_Uri *topKeywords;topKeywords66,1647
static struct GNUNET_FS_BlockOptions bo 71,1738
static char *uri_string;uri_string77,1941
static struct GNUNET_FS_Uri *uri;uri84,2138
static char *next_id;next_id90,2277
static char *this_id;this_id96,2393
static char *pseudonym;pseudonym101,2501
static int do_insert;106,2573
static int disable_extractor;111,2660
static int do_simulate;116,2763
static int extract_only;121,2874
static int enable_creation_time;126,2964
static struct GNUNET_FS_DirScanner *ds;ds131,3069
static struct GNUNET_IDENTITY_Ego *namespace;namespace137,3200
static struct GNUNET_IDENTITY_Handle *identity;identity142,3286
do_stop_task 152,3454
progress_cb 204,4545
meta_printer 321,8059
keyword_printer 352,8918
publish_inspector 377,9789
uri_sks_continuation 451,11856
uri_ksk_continuation 474,12413
get_file_information 516,13610
directory_trim_complete 573,15802
directory_scan_cb 632,17635
identity_continuation 699,19404
identity_cb 775,21541
run 803,22117
main 890,24217

src/cli/fs/gnunet-fs.c,279
static int ret;32,980
static struct GNUNET_FS_Handle *fs;fs37,1030
static struct GNUNET_FS_GetIndexedContext *gic;gic42,1118
static int list_indexed_files;47,1195
static unsigned int verbose;52,1255
print_indexed 64,1538
do_shutdown 93,2049
run 118,2502
main 158,3449

src/cli/fs/gnunet-download.c,620
static int ret;32,1075
static unsigned int verbose;34,1092
static int delete_incomplete;36,1122
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg38,1153
static struct GNUNET_FS_Handle *ctx;ctx40,1208
static struct GNUNET_FS_DownloadContext *dc;dc42,1246
static unsigned int anonymity 44,1292
static unsigned int parallelism 46,1328
static unsigned int request_parallelism 48,1367
static int do_recursive;50,1416
static char *filename;filename52,1442
static int local_only;54,1466
cleanup_task 58,1503
shutdown_task 66,1584
display_bar 84,1907
progress_cb 120,2948
run 223,6033
main 312,8542

src/cli/fs/gnunet-directory.c,96
static int ret;29,1005
item_printer 44,1412
print_entry 91,2905
run 131,4004
main 187,5529

src/cli/messenger/gnunet-messenger.c,773
const struct GNUNET_CONFIGURATION_Handle *config;config33,1050
struct GNUNET_MESSENGER_Handle *messenger;messenger34,1100
uint64_t waiting;36,1144
struct GNUNET_SCHEDULER_Task *read_task;read_task38,1163
int talk_mode;39,1204
delay_shutdown 47,1336
on_message 71,1752
struct GNUNET_IDENTITY_EgoLookup *ego_lookup;ego_lookup219,5781
shutdown_hook 227,5920
#define MAX_BUFFER_SIZE 248,6281
iterate_send_private_message 251,6323
int private_mode;264,6697
read_stdio 272,6835
listen_stdio 328,8070
idle 350,8589
char *door_id;door_id361,8791
char *ego_name;ego_name362,8806
char *room_key;room_key363,8822
struct GNUNET_SCHEDULER_Task *shutdown_task;shutdown_task365,8839
on_identity 374,9041
on_ego_lookup 436,10579
run 460,11223
main 494,12004

src/cli/statistics/gnunet-statistics.c,1438
static int ret;36,1136
static char *subsystem;subsystem41,1234
static char *path_testbed;path_testbed46,1300
static char *name;name51,1407
static int persistent;56,1483
static int watch;61,1543
static int quiet;66,1584
static char *csv_separator;csv_separator71,1647
static char *remote_host;remote_host76,1699
static unsigned long long remote_port;81,1756
static unsigned long long set_val;86,1820
static int set_value;91,1881
static struct Node96,1961
  unsigned index_node;101,2039
  struct GNUNET_CONFIGURATION_Handle *conf;conf106,2122
  struct GNUNET_STATISTICS_GetHandle *gh;gh111,2218
  struct GNUNET_STATISTICS_Handle *handle;handle116,2310
  struct GNUNET_SCHEDULER_Task *shutdown_task;shutdown_task120,2421
} *nodes;nodes121,2468
static unsigned num_nodes;126,2546
struct ValueSet131,2647
  char *subsystem;subsystem136,2716
  char *name;name141,2782
  uint64_t *values;values146,2833
  int is_persistent;151,2905
static struct GNUNET_CONTAINER_MultiHashMap *values;values158,3004
static int num_nodes_ready;163,3122
static int num_nodes_ready_shutdown;168,3215
new_value_set 181,3568
printer 210,4384
printer_watch 277,6523
clean_node 335,8269
print_finish 383,9316
continuation_print 402,9815
cleanup 445,10910
collector 479,11724
main_task 523,12968
iter_check_config 612,15718
iter_testbed_path 650,16733
discover_testbed_nodes 682,17495
run 710,18156
main 809,20997

src/cli/nat-auto/gnunet-nat-auto.c,592
static int global_ret;35,1148
static struct GNUNET_NAT_AUTO_AutoHandle *ah;ah40,1220
static int write_cfg;46,1348
static const char *cfg_file;cfg_file51,1406
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg56,1471
static char *section_name;section_name61,1570
static int do_auto;66,1642
static struct GNUNET_NAT_AUTO_Test *nt;nt71,1706
static int use_udp;76,1795
static int use_tcp;81,1864
static uint8_t proto;86,1913
test_finished 93,2022
auto_conf_iter 112,2346
auto_config_cb 135,3043
test_report_cb 235,5851
do_shutdown 249,6095
run 273,6522
main 322,7543

src/cli/nat-auto/gnunet-nat-server.c,528
struct ClientData37,1203
  struct GNUNET_SCHEDULER_Task *tt;tt42,1254
  struct GNUNET_SERVICE_Client *client;client47,1323
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg54,1398
try_anat 65,1730
struct TcpContext112,3015
  struct GNUNET_NETWORK_Handle *s;s117,3065
  uint16_t data;122,3136
tcp_send 133,3317
try_send_tcp 163,4039
try_send_udp 221,5643
handle_test 268,6993
run 301,7763
force_timeout 315,8004
client_connect_cb 333,8408
client_disconnect_cb 356,9022
GNUNET_ARM_memory_init 392,9866

src/cli/nat/gnunet-nat.c,620
static int global_ret;34,1082
static char *section_name;section_name40,1189
static int use_udp;45,1265
static int listen_reversal;50,1365
static int use_tcp;55,1442
static uint8_t proto;60,1491
static char *local_addr;local_addr65,1579
static char *remote_addr;remote_addr70,1671
static int do_stun;75,1786
static struct GNUNET_NAT_Handle *nh;nh80,1843
static struct GNUNET_NETWORK_Handle *ls;ls85,1927
static struct GNUNET_SCHEDULER_Task *rtask;rtask90,2011
test_finished 98,2143
address_cb 122,2862
reversal_cb 150,3553
do_shutdown 166,3891
stun_read_task 190,4234
run 242,5677
main 415,10386

src/cli/reclaim/gnunet-reclaim.c,2277
static int ret;38,1135
static int list;43,1183
static int list_credentials;48,1234
static char *credential_id;credential_id53,1296
static char *ex_rp_uri;ex_rp_uri58,1356
static struct GNUNET_RECLAIM_Identifier credential;63,1406
static char *credential_name;credential_name68,1486
static char *credential_type;credential_type73,1544
static int credential_exists;78,1604
static char *rp;rp83,1660
static char *attr_name;attr_name88,1703
static char *attr_value;attr_value93,1755
static char *issue_attrs;issue_attrs98,1812
static char *consume_ticket;consume_ticket103,1868
static char *type_str;type_str108,1924
static char *revoke_ticket;revoke_ticket113,1976
static int list_tickets;118,2031
static char *ego_name;ego_name123,2077
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle128,2128
static struct GNUNET_RECLAIM_Handle *reclaim_handle;reclaim_handle133,2210
static struct GNUNET_RECLAIM_Operation *reclaim_op;reclaim_op138,2293
static struct GNUNET_RECLAIM_AttributeIterator *attr_iterator;attr_iterator143,2376
static struct GNUNET_RECLAIM_CredentialIterator *cred_iterator;cred_iterator148,2471
static struct GNUNET_RECLAIM_TicketIterator *ticket_iterator;ticket_iterator154,2564
static const struct GNUNET_CRYPTO_PrivateKey *pkey;pkey160,2655
static struct GNUNET_RECLAIM_Ticket ticket;165,2737
static struct GNUNET_RECLAIM_AttributeList *attr_list;attr_list170,2808
static struct GNUNET_TIME_Relative exp_interval;175,2905
static struct GNUNET_SCHEDULER_Task *timeout;timeout180,2979
static struct GNUNET_SCHEDULER_Task *cleanup_task;cleanup_task185,3050
struct GNUNET_RECLAIM_Attribute *claim;claim190,3128
static char *attr_delete;attr_delete195,3196
static struct GNUNET_RECLAIM_Attribute *attr_to_delete;attr_to_delete200,3257
do_cleanup 203,3326
ticket_issue_cb 233,4179
store_cont 247,4517
process_attrs 259,4753
ticket_iter_err 319,6570
ticket_iter_fin 328,6761
ticket_iter 336,6896
iter_error 344,7135
timeout_task 355,7320
process_rvk 366,7518
process_delete 379,7769
iter_finished 392,8021
iter_cb 535,12258
cred_iter_finished 636,15670
cred_iter_cb 678,17224
start_process 729,18916
static int init 780,21055
ego_cb 783,21098
run 804,21450
main 838,22101

src/cli/reclaim/gnunet-did.c,1391
#define GNUNET_DID_DEFAULT_DID_DOCUMENT_EXPIRATION_TIME 43,1387
static int ret;48,1473
static int replace;53,1527
static int remove_did;58,1584
static int get;63,1652
static int create;68,1705
static int show;73,1758
static int show_all;78,1809
static char *did;did83,1862
static char *didd;didd88,1921
static char *egoname;egoname93,1972
static char *expire;expire98,2051
static struct GNUNET_GNS_Handle *gns_handle;gns_handle103,2109
static struct GNUNET_NAMESTORE_Handle *namestore_handle;namestore_handle108,2197
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle113,2296
const static struct GNUNET_CONFIGURATION_Handle *my_cfg;my_cfg119,2381
static int ego_exists 124,2466
cleanup 131,2570
print_did_document 158,3201
resolve_did 179,3558
(*remove_did_document_callback)remove_did_document_callback204,4048
struct Event210,4200
  remove_did_document_callback cont;212,4215
  void *cls;cls213,4252
remove_did_document_namestore_cb 225,4499
remove_did_document_ego_lookup_cb 266,5252
remove_did_document 285,5845
create_did_cb 320,6653
create_did_ego_create_cb 343,7091
create_did_ego_lockup_cb 367,7670
create_did 424,9350
replace_did_document_ego_lookup_cb 449,9859
replace_did_document_remove_cb 461,10083
replace_did_document 475,10369
post_ego_iteration 493,10716
process_dids 523,11143
run 560,11854
main 595,12523

src/cli/cadet/gnunet-cadet.c,1556
#define STREAM_BUFFER_SIZE 32,1143
static int request_peers;37,1208
static char *peer_id;peer_id42,1260
static int request_tunnels;47,1305
static char *conn_id;conn_id52,1365
static char *channel_id;channel_id57,1416
static char *listen_port;listen_port62,1477
static int echo;67,1536
static struct GNUNET_TIME_Absolute echo_time;72,1592
static struct GNUNET_SCHEDULER_Task *echo_task;echo_task77,1678
static char *target_id;target_id82,1758
static char *target_port target_port87,1813
static struct GNUNET_CADET_Handle *mh;mh92,1877
static const struct GNUNET_CONFIGURATION_Handle *my_cfg;my_cfg97,1947
static struct GNUNET_CADET_GetPath *gpo;gpo102,2043
static struct GNUNET_CADET_PeersLister *plo;plo107,2127
static struct GNUNET_CADET_ListTunnels *tio;tio112,2217
static struct GNUNET_CADET_Channel *ch;ch117,2290
static struct GNUNET_HashCode porthash;122,2376
struct GNUNET_CADET_Port *lp;lp127,2495
static struct GNUNET_SCHEDULER_Task *rd_task;rd_task132,2566
static struct GNUNET_SCHEDULER_Task *job;job137,2643
static unsigned int sent_pkt;139,2686
enc_2s 157,2977
conn_2s 187,3343
shutdown_task 218,3676
mq_cb 270,4516
read_stdio 282,4680
listen_stdio 332,5787
channel_ended 359,6655
channel_incoming 383,7418
send_echo 407,7993
check_data 429,8529
handle_data 446,8996
peers_callback 512,10824
path_callback 536,11329
tunnels_callback 560,11902
get_peers 584,12417
show_peer 597,12630
get_tunnels 620,13238
show_channel 633,13460
show_connection 646,13637
run 662,13959
main 790,17856

src/cli/core/gnunet-core.c,228
static int monitor_connections;34,1039
static int show_pid;39,1094
static int show_conns;44,1138
static struct GNUNET_CORE_MonitorHandle *mh;mh49,1201
shutdown_task 59,1387
monitor_cb 80,1767
run 158,3716
main 230,5782

src/cli/gns/gnunet-gns.c,641
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg48,1337
static struct GNUNET_GNS_Handle *gns;gns53,1426
static char *lookup_name;lookup_name58,1508
char *idna_name;idna_name63,1597
static int dns_compat;68,1688
static char *lookup_type;lookup_type73,1758
static int raw;78,1807
static uint32_t rtype;83,1856
static struct GNUNET_TIME_Relative timeout;88,1910
static struct GNUNET_SCHEDULER_Task *to_task;to_task93,1979
static struct GNUNET_GNS_LookupWithTldRequest *lr;lr98,2062
static int global_ret;107,2268
do_shutdown 116,2385
do_timeout 148,2834
process_lookup_result 165,3241
run 239,5310
main 356,8219

src/contrib/cli/template/gnunet-template.c,51
static int ret;33,1071
run 45,1343
main 62,1650

src/contrib/service/auction/gnunet-service-auction.c,139
check_create 39,1163
handle_create 53,1483
cleanup_task 82,2191
client_connect_cb 97,2515
client_disconnect_cb 113,2875
run 129,3199

src/contrib/service/auction/auction.h,312
#define AUCTION_H28,950
struct GNUNET_AUCTION_ClientCreateMessage37,1098
  struct GNUNET_MessageHeader header;42,1207
  struct GNUNET_TIME_AbsoluteNBO time_start;47,1293
  struct GNUNET_TIME_RelativeNBO time_round;52,1403
  uint16_t m GNUNET_PACKED;59,1554
  uint16_t outcome_public GNUNET_PACKED;66,1711

src/contrib/service/auction/test_auction_api.c,27
check 27,908
main 34,939

src/contrib/service/auction/gnunet-auction-join.c,51
static int ret;33,1067
run 45,1339
main 62,1646

src/contrib/service/auction/gnunet-auction-info.c,51
static int ret;33,1067
run 45,1339
main 62,1646

src/contrib/service/auction/gnunet-auction-create.c,415
#define FIRST_PRICE 34,1058
#define OUTCOME_PRIVATE 35,1080
#define OUTCOME_PUBLIC 36,1106
static int ret;38,1132
static char *fndesc;fndesc39,1174
static char *fnprices;fnprices40,1235
static struct GNUNET_TIME_Relative dround;41,1291
static struct GNUNET_TIME_Relative dstart;42,1360
static unsigned int m 43,1436
static int outcome 44,1500
static int interactive;45,1553
run 57,1867
main 156,4420

src/contrib/service/abd/gnunet-abd.c,1935
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1217
static struct GNUNET_NAMESTORE_Handle *ns;ns42,1308
static struct GNUNET_CRYPTO_PrivateKey zone_pkey;47,1393
static struct GNUNET_IDENTITY_EgoLookup *el;el52,1465
static struct GNUNET_ABD_Handle *abd;abd57,1552
static struct GNUNET_TIME_Relative timeout;62,1658
static struct GNUNET_ABD_Request *verify_request;verify_request67,1739
static struct GNUNET_ABD_Request *collect_request;collect_request72,1827
static struct GNUNET_SCHEDULER_Task *tt;tt77,1924
static int ret 82,2010
static char *subject;subject87,2064
static char *subject_delegate;subject_delegate92,2122
static char *expiration;expiration97,2180
struct GNUNET_CRYPTO_PublicKey subject_pkey;102,2229
struct GNUNET_CRYPTO_PublicKey issuer_pkey;107,2297
static char *issuer_key;issuer_key113,2375
static char *ego_name;ego_name118,2416
static char *issuer_attr;issuer_attr123,2468
static int verify;128,2518
static int collect;133,2562
static int create_is;138,2606
static int create_ss;143,2652
static int sign_ss;148,2698
static char *import;import153,2755
static int is_private;158,2806
static int forward;163,2867
static int backward;168,2926
enum GNUNET_ABD_AlgoDirectionFlags direction 173,3006
static struct GNUNET_NAMESTORE_QueueEntry *add_qe;add_qe178,3105
static void *data;data183,3192
static size_t data_size;188,3249
static uint32_t type;193,3327
static char *typestring;typestring198,3415
static uint64_t etime;202,3497
static int etime_is_rel 207,3578
static char *record_label;record_label212,3668
do_shutdown 220,3788
do_timeout 261,4420
handle_intermediate_result 269,4506
handle_collect_result 289,5027
handle_verify_result 318,5596
identity_cb 383,7328
parse_expiration 438,8872
error_cb 480,10133
add_continuation 489,10284
get_existing_record 504,10605
store_cb 545,12023
sign_cb 670,15437
run 758,17689
main 999,24149

src/contrib/service/abd/delegate_misc.c,116
GNUNET_ABD_delegate_to_string 37,1103
GNUNET_ABD_delegate_from_string 80,2400
GNUNET_ABD_delegate_issue 198,5763

src/contrib/service/abd/abd_serialization.h,35
#define ABD_SERIALIZATION_H29,982

src/contrib/service/abd/abd.h,1905
#define ABD_H26,940
struct CollectMessage35,1094
  struct GNUNET_MessageHeader header;40,1182
  struct GNUNET_CRYPTO_PrivateKey subject_key;45,1257
  struct GNUNET_CRYPTO_PublicKey issuer_key;50,1335
  uint16_t issuer_attribute_len;55,1429
  uint16_t resolution_algo;60,1513
  uint32_t id GNUNET_PACKED;65,1616
struct VerifyMessage74,1776
  struct GNUNET_MessageHeader header;79,1863
  struct GNUNET_CRYPTO_PublicKey subject_key;84,1938
  struct GNUNET_CRYPTO_PublicKey issuer_key;89,2015
  uint32_t d_count;94,2098
  uint16_t issuer_attribute_len;99,2167
  uint16_t resolution_algo;104,2251
  uint32_t id GNUNET_PACKED;109,2354
struct DelegationChainResultMessage118,2526
  struct GNUNET_MessageHeader header;123,2636
  uint32_t id GNUNET_PACKED;128,2749
  uint32_t del_found GNUNET_PACKED;133,2842
  uint32_t d_count GNUNET_PACKED;138,2938
  uint32_t c_count GNUNET_PACKED;143,3032
struct DelegationChainIntermediateMessage151,3189
  struct GNUNET_MessageHeader header;156,3311
  uint32_t id GNUNET_PACKED;161,3424
  uint16_t is_bw GNUNET_PACKED;163,3454
  uint32_t size GNUNET_PACKED;165,3487
struct DelegationRecordData168,3522
  struct GNUNET_CRYPTO_PublicKey subject_key;173,3581
  uint32_t subject_attribute_len GNUNET_PACKED;178,3664
struct ChainEntry182,3717
  struct GNUNET_CRYPTO_PublicKey issuer_key;187,3765
  struct GNUNET_CRYPTO_PublicKey subject_key;192,3840
  uint32_t issuer_attribute_len GNUNET_PACKED;197,3922
  uint32_t subject_attribute_len GNUNET_PACKED;202,4006
struct DelegateEntry206,4059
  struct GNUNET_CRYPTO_Signature signature;211,4147
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;216,4224
  struct GNUNET_CRYPTO_PublicKey issuer_key;221,4319
  struct GNUNET_CRYPTO_PublicKey subject_key;226,4438
  uint64_t expiration GNUNET_PACKED;231,4537
  uint32_t issuer_attribute_len;236,4624
  uint32_t subject_attribute_len;241,4699

src/contrib/service/abd/abd_serialization.c,491
GNUNET_ABD_delegation_set_get_size 44,1363
GNUNET_ABD_delegation_set_serialize 72,2041
GNUNET_ABD_delegation_set_deserialize 114,3198
GNUNET_ABD_delegates_get_size 151,4115
GNUNET_ABD_delegates_serialize 181,4837
GNUNET_ABD_delegates_deserialize 230,6307
GNUNET_ABD_delegation_chain_get_size 272,7605
GNUNET_ABD_delegation_chain_serialize 305,8515
GNUNET_ABD_delegation_chain_deserialize 362,10365
GNUNET_ABD_delegate_serialize 402,11574
GNUNET_ABD_delegate_deserialize 466,13513

src/contrib/service/abd/abd_api.c,1260
#define LOG(37,1206
struct GNUNET_ABD_Request42,1315
  struct GNUNET_ABD_Request *next;next48,1365
  struct GNUNET_ABD_Request *prev;prev53,1422
  struct GNUNET_ABD_Handle *abd_handle;abd_handle58,1497
  GNUNET_ABD_CredentialResultProcessor verify_proc;63,1590
  void *proc_cls;proc_cls68,1683
  GNUNET_ABD_IntermediateResultProcessor int_proc;73,1760
  void *proc2_cls;proc2_cls78,1853
  struct GNUNET_MQ_Envelope *env;env83,1938
  uint32_t r_id;88,2001
struct GNUNET_ABD_Handle95,2065
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg101,2132
  struct GNUNET_MQ_Handle *mq;mq106,2237
  struct GNUNET_ABD_Request *request_head;request_head111,2333
  struct GNUNET_ABD_Request *request_tail;request_tail116,2441
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task121,2517
  struct GNUNET_TIME_Relative reconnect_backoff;126,2630
  uint32_t r_id_gen;131,2757
reconnect_task 150,2998
force_reconnect 165,3227
mq_error_handler 187,3924
check_result 202,4224
handle_result 216,4498
check_intermediate 262,5961
handle_intermediate 271,6117
reconnect 315,7336
GNUNET_ABD_connect 354,8782
GNUNET_ABD_disconnect 376,9194
GNUNET_ABD_request_cancel 399,9648
GNUNET_ABD_collect 423,10352
GNUNET_ABD_verify 497,12669

src/contrib/service/abd/plugin_gnsrecord_abd.c,309
abd_value_to_string 46,1481
abd_string_to_value 147,4310
  const char *name;name275,8111
  uint32_t number;276,8131
} name_map[name_map277,8150
abd_typename_to_number 290,8520
abd_number_to_typename 310,8982
libgnunet_plugin_gnsrecord_abd_init 328,9273
libgnunet_plugin_gnsrecord_abd_done 348,9787

src/contrib/service/abd/gnunet-service-abd.c,4021
#define GNUNET_ABD_MAX_LENGTH 41,1301
struct DelegationChainEntry48,1399
  struct DelegationChainEntry *next;next53,1450
  struct DelegationChainEntry *prev;prev58,1509
  struct GNUNET_CRYPTO_PublicKey issuer_key;63,1575
  struct GNUNET_CRYPTO_PublicKey subject_key;68,1650
  char *issuer_attribute;issuer_attribute73,1735
  char *subject_attribute;subject_attribute78,1803
struct DelegateRecordEntry84,1860
  struct DelegateRecordEntry *next;next89,1910
  struct DelegateRecordEntry *prev;prev94,1968
  uint32_t refcount;99,2064
  struct GNUNET_ABD_Delegate *delegate;delegate104,2111
struct DelegationQueueEntry111,2218
  struct DelegationQueueEntry *next;next116,2269
  struct DelegationQueueEntry *prev;prev121,2328
  struct DelegationSetQueueEntry *parent_set;parent_set126,2394
  uint32_t required_solutions;131,2477
struct DelegationSetQueueEntry138,2578
  struct DelegationSetQueueEntry *next;next143,2632
  struct DelegationSetQueueEntry *prev;prev148,2694
  struct GNUNET_GNS_LookupRequest *lookup_request;lookup_request153,2763
  struct VerifyRequestHandle *handle;handle158,2846
  struct DelegationQueueEntry *parent;parent163,2930
  struct GNUNET_CRYPTO_PublicKey *issuer_key;issuer_key168,2998
  struct DelegationQueueEntry *queue_entries_head;queue_entries_head173,3088
  struct DelegationQueueEntry *queue_entries_tail;queue_entries_tail178,3183
  struct DelegationQueueEntry *parent_queue_entry;parent_queue_entry183,3270
  char *issuer_attribute;issuer_attribute188,3369
  char *lookup_attribute;lookup_attribute193,3446
  char *attr_trailer;attr_trailer198,3517
  char *unresolved_attribute_delegation;unresolved_attribute_delegation203,3595
  struct DelegationChainEntry *delegation_chain_entry;delegation_chain_entry208,3681
  bool from_bw;213,3791
struct VerifyRequestHandle220,3861
  bool is_collect;225,3945
  struct VerifyRequestHandle *next;next229,4005
  struct VerifyRequestHandle *prev;prev234,4083
  struct GNUNET_SERVICE_Client *client;client239,4169
  uint32_t delegation_chain_size;244,4251
  struct DelegationChainEntry *delegation_chain_head;delegation_chain_head249,4330
  struct DelegationChainEntry *delegation_chain_tail;delegation_chain_tail254,4429
  struct DelegationSetQueueEntry *dsq_head;dsq_head259,4533
  struct DelegationSetQueueEntry *dsq_tail;dsq_tail264,4627
  struct GNUNET_CRYPTO_PublicKey issuer_key;269,4707
  char *issuer_attribute;issuer_attribute274,4787
  struct GNUNET_CRYPTO_PublicKey subject_key;279,4850
  struct DelegateRecordEntry *del_chain_head;del_chain_head284,4927
  struct DelegateRecordEntry *del_chain_tail;del_chain_tail289,5004
  uint32_t del_chain_size;294,5086
  struct DelegationQueueEntry *current_delegation;current_delegation299,5158
  uint32_t request_id;304,5238
  uint64_t pending_lookups;309,5295
  enum GNUNET_ABD_AlgoDirectionFlags resolution_algo;314,5374
  struct GNUNET_NAMESTORE_QueueEntry *dele_qe;dele_qe319,5475
static struct VerifyRequestHandle *vrh_head vrh_head326,5555
static struct VerifyRequestHandle *vrh_tail vrh_tail331,5636
static struct GNUNET_STATISTICS_Handle *statistics;statistics336,5733
static struct GNUNET_GNS_Handle *gns;gns341,5820
static struct GNUNET_NAMESTORE_Handle *namestore;namestore346,5898
print_deleset 349,5961
cleanup_dsq_entry 364,6504
cleanup_handle 402,7715
shutdown_task 435,8638
send_intermediate_response 467,9245
send_lookup_response 520,11077
partial_match 618,14534
handle_bidirectional_match 675,16378
forward_resolution 740,18820
backward_resolution 988,27700
delegation_chain_bw_resolution_start 1246,37284
delegation_chain_fw_resolution_start 1326,40259
check_verify 1420,43577
handle_verify 1448,44120
handle_delegate_collection_error_cb 1553,47964
delegate_collection_finished 1564,48225
handle_delegate_collection_cb 1590,49006
handle_collect 1627,50289
check_collect 1682,52219
client_disconnect_cb 1711,52838
client_connect_cb 1720,53064
run 1737,53437

src/contrib/service/abd/delegate_misc.h,31
#define DELEGATE_MISC_H25,910

src/contrib/service/template/gnunet-service-template.c,92
cleanup_task 36,1043
client_connect_cb 51,1367
client_disconnect_cb 67,1727
run 83,2052

src/contrib/service/template/test_template_api.c,27
check 27,911
main 34,942

src/contrib/service/secretsharing/secretsharing_api.c,1006
#define LOG(33,1031
struct GNUNET_SECRETSHARING_Session39,1257
  struct GNUNET_MQ_Handle *mq;mq44,1341
  GNUNET_SECRETSHARING_SecretReadyCallback secret_ready_cb;49,1430
  void *secret_ready_cls;secret_ready_cls54,1540
struct GNUNET_SECRETSHARING_DecryptionHandle61,1635
  struct GNUNET_MQ_Handle *mq;mq66,1728
  GNUNET_SECRETSHARING_DecryptCallback decrypt_cb;71,1817
  void *decrypt_cls;decrypt_cls76,1913
static gcry_mpi_t elgamal_q;84,2040
static gcry_mpi_t elgamal_p;90,2168
static gcry_mpi_t elgamal_g;96,2299
ensure_elgamal_initialized 103,2415
handle_session_client_error 128,3328
handle_decrypt_client_error 146,3825
check_secret_ready 165,4326
handle_secret_ready 182,4767
GNUNET_SECRETSHARING_session_destroy 219,6018
GNUNET_SECRETSHARING_create_session 244,6995
handle_decrypt_done 303,9304
GNUNET_SECRETSHARING_decrypt 320,9792
GNUNET_SECRETSHARING_plaintext_generate_i 381,12094
GNUNET_SECRETSHARING_encrypt 422,13025
GNUNET_SECRETSHARING_decrypt_cancel 483,14920

src/contrib/service/secretsharing/gnunet-service-secretsharing.c,3460
#define EXTRA_CHECKS 36,1151
struct KeygenPeerInfo42,1234
  struct GNUNET_PeerIdentity peer;47,1302
  struct GNUNET_CRYPTO_PaillierPublicKey paillier_public_key;53,1435
  gcry_mpi_t presecret_commitment;58,1555
  gcry_mpi_t preshare_commitment;64,1671
  gcry_mpi_t sigma;69,1766
  int round1_valid;75,1869
  int round2_valid;81,1972
struct DecryptPeerInfo88,2055
  struct GNUNET_PeerIdentity peer;93,2119
  unsigned int original_index;99,2272
  gcry_mpi_t partial_decryption;107,2482
struct KeygenSession120,2638
  struct GNUNET_CONSENSUS_Handle *consensus;consensus125,2723
  struct ClientState *cs;cs130,2812
  gcry_mpi_t *presecret_polynomial;presecret_polynomial141,3247
  unsigned int threshold;148,3501
  unsigned int num_peers;153,3568
  unsigned int local_peer;158,3637
  struct KeygenPeerInfo *info;info164,3757
  struct GNUNET_PeerIdentity *peers;peers169,3864
  struct GNUNET_HashCode session_id;174,3948
  struct GNUNET_CRYPTO_PaillierPrivateKey paillier_private_key;179,4037
  struct GNUNET_TIME_Absolute deadline;184,4165
  struct GNUNET_TIME_Absolute start_time;190,4327
  unsigned int local_peer_idx;196,4461
  gcry_mpi_t my_share;202,4614
  gcry_mpi_t public_key;207,4714
struct DecryptSession214,4797
  struct GNUNET_CONSENSUS_Handle *consensus;consensus219,4888
  struct ClientState *cs;cs224,4977
  struct GNUNET_TIME_Absolute start;229,5072
  struct GNUNET_TIME_Absolute deadline;235,5183
  struct GNUNET_SECRETSHARING_Ciphertext ciphertext;240,5272
  struct GNUNET_SECRETSHARING_Share *share;share247,5449
  struct DecryptPeerInfo *info;info252,5548
struct ClientState259,5622
  struct DecryptSession *decrypt_session;decrypt_session264,5699
  struct KeygenSession *keygen_session;keygen_session269,5797
  struct GNUNET_SERVICE_Client *client;client274,5877
  struct GNUNET_MQ_Handle *mq;mq279,5960
static gcry_mpi_t elgamal_q;287,6097
static gcry_mpi_t elgamal_p;293,6225
static gcry_mpi_t elgamal_g;299,6356
static struct GNUNET_PeerIdentity my_peer;304,6426
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_peer_private_key;my_peer_private_key309,6510
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg314,6619
get_keygen_peer_info 325,6928
get_decrypt_peer_info 345,7460
time_between 366,7976
peer_id_cmp 389,8583
peer_find 407,8989
normalize_peers 431,9754
compute_lagrange_coefficient 481,11061
decrypt_session_destroy 538,12443
keygen_info_destroy 577,13247
keygen_session_destroy 598,13687
cleanup_task 658,14928
generate_presecret_polynomial 670,15095
keygen_round1_new_element 704,16107
horner_eval 779,18520
keygen_round2_conclude 795,18838
restore_fair 886,21892
get_fair_encryption_challenge 999,24791
    struct GNUNET_CRYPTO_PaillierCiphertext c;1005,24968
verify_fair 1032,25991
encrypt_fair 1132,28824
insert_round2_element 1258,32538
keygen_reveal_get_exp_coeff 1356,35842
keygen_reveal_get_enc_preshare 1379,36647
keygen_reveal_get_exp_preshare 1396,37168
keygen_round2_new_element 1413,37737
keygen_round1_conclude 1628,44567
insert_round1_element 1656,45431
check_client_keygen 1708,47113
handle_client_keygen 1731,47635
decrypt_conclude 1807,50342
mpi_to_str 1897,53034
decrypt_new_element 1910,53258
insert_decrypt_element 2082,58854
check_client_decrypt 2218,63830
handle_client_decrypt 2235,64214
init_crypto_constants 2300,66490
run 2322,67243
client_connect_cb 2361,68319
client_disconnect_cb 2381,68775

src/contrib/service/secretsharing/secretsharing.h,1702
#define SECRETSHARING_H27,943
struct GNUNET_SECRETSHARING_FieldElement38,1148
struct GNUNET_SECRETSHARING_CreateMessage47,1316
  struct GNUNET_MessageHeader header;52,1433
  struct GNUNET_HashCode session_id GNUNET_PACKED;57,1529
  struct GNUNET_TIME_AbsoluteNBO start;62,1649
  struct GNUNET_TIME_AbsoluteNBO deadline;67,1760
  uint16_t threshold GNUNET_PACKED;73,1882
  uint16_t num_peers GNUNET_PACKED;78,1980
struct GNUNET_SECRETSHARING_ShareHeaderNBO84,2069
  uint16_t threshold;89,2176
  uint16_t num_peers;94,2243
  uint16_t my_peer;99,2314
  struct GNUNET_SECRETSHARING_PublicKey public_key;105,2438
  struct GNUNET_SECRETSHARING_FieldElement my_share;110,2527
struct GNUNET_SECRETSHARING_SecretReadyMessage118,2666
  struct GNUNET_MessageHeader header;123,2792
struct GNUNET_SECRETSHARING_DecryptRequestMessage129,2871
  struct GNUNET_MessageHeader header;134,3003
  struct GNUNET_TIME_AbsoluteNBO start;139,3099
  struct GNUNET_TIME_AbsoluteNBO deadline;144,3203
  struct GNUNET_SECRETSHARING_Ciphertext ciphertext;149,3295
struct GNUNET_SECRETSHARING_DecryptResponseMessage155,3385
  struct GNUNET_MessageHeader header;160,3516
  uint32_t success GNUNET_PACKED;166,3688
  struct GNUNET_SECRETSHARING_FieldElement plaintext;171,3761
struct GNUNET_SECRETSHARING_Share181,3907
  uint16_t threshold;186,4005
  uint16_t num_peers;191,4072
  uint16_t my_peer;196,4143
  struct GNUNET_SECRETSHARING_PublicKey public_key;202,4245
  struct GNUNET_SECRETSHARING_FieldElement my_share;207,4334
  struct GNUNET_PeerIdentity *peers;peers212,4442
  struct GNUNET_SECRETSHARING_FieldElement *sigmas;sigmas218,4553
  uint16_t *original_indices;original_indices223,4668

src/contrib/service/secretsharing/secretsharing_common.c,128
GNUNET_SECRETSHARING_share_read 34,1144
GNUNET_SECRETSHARING_share_write 96,3171
GNUNET_SECRETSHARING_share_destroy 150,4685

src/contrib/service/secretsharing/test_secretsharing_api.c,172
static int success;31,1026
static struct GNUNET_SECRETSHARING_Session *keygen;keygen33,1047
secret_ready_cb 37,1113
handle_shutdown 55,1705
run 66,1851
main 93,2790

src/contrib/service/secretsharing/secretsharing_protocol.h,1238
#define GNUNET_SECRETSHARING_PROTOCOL_H29,983
struct GNUNET_SECRETSHARING_KeygenCommitData43,1239
  struct GNUNET_CRYPTO_EddsaSignature signature;48,1343
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;52,1463
  struct GNUNET_PeerIdentity peer;56,1564
  struct GNUNET_CRYPTO_PaillierPublicKey pubkey;61,1684
  struct GNUNET_HashCode commitment GNUNET_PACKED;65,1789
struct GNUNET_SECRETSHARING_KeygenRevealData69,1845
  struct GNUNET_CRYPTO_EddsaSignature signature;74,1945
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;78,2064
  struct GNUNET_PeerIdentity peer;82,2165
struct GNUNET_SECRETSHARING_DecryptData92,2304
  struct GNUNET_CRYPTO_EddsaSignature signature;97,2398
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;101,2517
  struct GNUNET_SECRETSHARING_Ciphertext ciphertext;105,2617
  struct GNUNET_PeerIdentity peer;109,2719
  struct GNUNET_SECRETSHARING_FieldElement partial_decryption;113,2819
  struct GNUNET_SECRETSHARING_FieldElement nizk_commit1;118,2997
  struct GNUNET_SECRETSHARING_FieldElement nizk_commit2;123,3171
  struct GNUNET_SECRETSHARING_FieldElement nizk_response;128,3357
struct GNUNET_SECRETSHARING_FairEncryption132,3420
  struct GNUNET_CRYPTO_PaillierCiphertext c;134,3465

src/contrib/service/set/gnunet-set-ibf-profiler.c,769
static unsigned int asize 32,1012
static unsigned int bsize 33,1044
static unsigned int csize 34,1076
static unsigned int hash_num 35,1108
static unsigned int ibf_size 36,1142
static enum GNUNET_CRYPTO_Quality random_quality 39,1214
static struct GNUNET_CONTAINER_MultiHashMap *set_a;set_a41,1294
static struct GNUNET_CONTAINER_MultiHashMap *set_b;set_b42,1346
static struct GNUNET_CONTAINER_MultiHashMap *set_c;set_c44,1431
static struct GNUNET_CONTAINER_MultiHashMap *key_to_hashcode;key_to_hashcode46,1484
static struct InvertibleBloomFilter *ibf_a;ibf_a48,1547
static struct InvertibleBloomFilter *ibf_b;ibf_b49,1591
register_hashcode 53,1649
iter_hashcodes 69,2032
insert_iterator 84,2488
remove_iterator 94,2695
run 105,3005
main 262,7839

src/contrib/service/set/test_set_union_result_symmetric.c,939
static int ret;36,1140
static struct GNUNET_PeerIdentity local_id;38,1157
static struct GNUNET_HashCode app_id;40,1202
static struct GNUNET_SET_Handle *set1;set142,1241
static struct GNUNET_SET_Handle *set2;set244,1281
static struct GNUNET_SET_ListenHandle *listen_handle;listen_handle46,1321
static const struct GNUNET_CONFIGURATION_Handle *config;config48,1376
static struct GNUNET_SET_OperationHandle *oh1;oh150,1434
static struct GNUNET_SET_OperationHandle *oh2;oh252,1482
static int iter_count;54,1530
static int empty;59,1617
static unsigned int count_set1;64,1681
static unsigned int count_set2;69,1759
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task74,1845
result_cb_set1 78,1910
result_cb_set2 131,3035
listen_cb 184,4160
start 209,4908
init_set2 236,5710
init_set1 272,6562
iter_cb 300,7196
test_iter 317,7520
timeout_fail 347,8290
do_shutdown 363,8535
run 407,9363
main 434,10232

src/contrib/service/set/gnunet-service-set_union_strata_estimator.h,208
#define GNUNET_CONSENSUS_STRATA_ESTIMATOR_H28,981
struct StrataEstimator46,1269
  struct InvertibleBloomFilter **strata;strata51,1346
  unsigned int strata_count;56,1440
  unsigned int ibf_size;61,1523

src/contrib/service/set/test_set_intersection_result_full.c,811
static int ret;33,1108
static struct GNUNET_PeerIdentity local_id;35,1125
static struct GNUNET_HashCode app_id;37,1170
static struct GNUNET_SET_Handle *set1;set139,1209
static struct GNUNET_SET_Handle *set2;set241,1249
static struct GNUNET_SET_ListenHandle *listen_handle;listen_handle43,1289
static const struct GNUNET_CONFIGURATION_Handle *config;config45,1344
static int iter_count;47,1402
static struct GNUNET_SCHEDULER_Task *tt;tt49,1426
static struct GNUNET_SET_OperationHandle *oh1;oh151,1468
static struct GNUNET_SET_OperationHandle *oh2;oh253,1516
result_cb_set1 57,1577
result_cb_set2 94,2282
listen_cb 131,2987
start 156,3762
init_set2 187,4727
init_set1 219,5553
iter_cb 242,6132
test_iter 257,6379
do_shutdown 295,7387
timeout_fail 336,7990
run 355,8435
main 385,9370

src/contrib/service/set/gnunet-service-set_intersection.c,2114
enum IntersectionOperationPhase39,1286
  PHASE_INITIAL,44,1359
  PHASE_COUNT_SENT,50,1497
  PHASE_BF_EXCHANGE,57,1685
  PHASE_MUST_SEND_DONE,63,1861
  PHASE_DONE_RECEIVED,69,2017
  PHASE_FINISHED75,2135
struct OperationState82,2218
  struct GNUNET_CONTAINER_BloomFilter *remote_bf;remote_bf87,2287
  struct GNUNET_CONTAINER_BloomFilter *local_bf;local_bf92,2380
  struct GNUNET_CONTAINER_MultiHashMap *my_elements;my_elements98,2551
  struct GNUNET_CONTAINER_MultiHashMapIterator *full_result_iter;full_result_iter103,2690
  struct OperationState *next;next108,2821
  struct OperationState *prev;prev113,2917
  char *bf_data;bf_data119,3069
  struct GNUNET_HashCode my_xor;126,3245
  struct GNUNET_HashCode other_xor;133,3438
  uint32_t bf_data_offset;138,3532
  uint32_t my_element_count;144,3681
  uint32_t bf_data_size;149,3767
  uint32_t bf_bits_per_element;154,3834
  uint32_t salt;160,3995
  enum IntersectionOperationPhase phase;165,4062
  unsigned int generation_created;171,4180
  int client_done_sent;176,4274
  int channel_death_expected;183,4463
struct SetState191,4609
  uint32_t current_set_element_count;197,4724
send_client_removed_element 209,4981
filtered_map_initialization 253,6428
iterator_bf_reduce 325,9061
iterator_bf_create 380,11008
fail_intersection_operation 408,11864
send_bloomfilter 443,12955
send_client_done_and_destroy 545,16818
finished_local_operations 578,17911
send_p2p_done 597,18400
send_remaining_elements 622,19123
initialize_map_unfiltered 693,21249
send_element_count 725,22425
begin_bf_exchange 747,23046
handle_intersection_p2p_element_info 758,23347
process_bf 797,24517
check_intersection_p2p_bf 884,27263
handle_intersection_p2p_bf 905,27677
filter_all 1005,30790
handle_intersection_p2p_done 1038,31836
intersection_evaluate 1106,34188
intersection_accept 1154,35859
intersection_op_cancel 1190,37014
intersection_set_create 1228,38022
intersection_add 1248,38459
intersection_set_destroy 1261,38716
intersection_remove 1274,38983
intersection_channel_death 1288,39321
_GSS_intersection_vt 1310,39792

src/contrib/service/set/ibf.h,468
#define GNUNET_CONSENSUS_IBF_H28,926
struct IBF_Key45,1198
  uint64_t key_val;47,1215
struct IBF_KeyHash54,1271
  uint32_t key_hash_val;56,1292
struct IBF_Count63,1373
  int8_t count_val;65,1392
#define IBF_BUCKET_SIZE 72,1460
struct InvertibleBloomFilter82,1770
  uint32_t size;87,1853
  uint8_t hash_num;93,1951
  struct IBF_Key *key_sum;key_sum99,2083
  struct IBF_KeyHash *key_hash_sum;key_hash_sum105,2216
  struct IBF_Count *count;count112,2393

src/contrib/service/set/gnunet-service-set.h,3543
#define GNUNET_SERVICE_SET_H_PRIVATE27,1026
(*SetCreateImpl)SetCreateImpl77,2235
(*SetAddRemoveImpl)SetAddRemoveImpl88,2495
(*SetCopyStateImpl)SetCopyStateImpl99,2740
(*SetDestroyImpl)SetDestroyImpl109,2983
(*OpAcceptImpl)OpAcceptImpl120,3314
(*OpEvaluateImpl)OpEvaluateImpl134,3750
(*OpCancelImpl)OpCancelImpl145,4057
(*OpChannelDeathImpl)OpChannelDeathImpl154,4214
struct SetVT161,4388
  SetCreateImpl create;166,4451
  SetAddRemoveImpl add;171,4524
  SetAddRemoveImpl remove;176,4596
  SetCopyStateImpl copy_state;181,4695
  SetDestroyImpl destroy_set;186,4787
  OpAcceptImpl accept;191,4882
  OpEvaluateImpl evaluate;196,4976
  OpCancelImpl cancel;201,5058
  OpChannelDeathImpl channel_death;206,5147
struct MutationEvent214,5301
  unsigned int generation;222,5477
  int added;228,5618
struct ElementEntry238,5853
  struct GNUNET_SET_Element element;244,5989
  struct GNUNET_HashCode element_hash;250,6153
  struct MutationEvent *mutations;mutations261,6531
  unsigned int mutations_size;266,6630
  int remote;272,6776
struct ClientState286,6955
  struct Set *set;set291,7045
  struct Listener *listener;listener296,7139
  struct GNUNET_SERVICE_Client *client;client301,7201
  struct GNUNET_MQ_Handle *mq;mq306,7274
struct Operation313,7372
  struct Operation *next;next318,7467
  struct Operation *prev;prev323,7570
  struct GNUNET_CADET_Channel *channel;channel328,7635
  struct Listener *listener;listener333,7722
  struct GNUNET_MQ_Handle *mq;mq338,7800
  struct GNUNET_MessageHeader *context_msg;context_msg343,7879
  struct Set *set;set349,8033
  struct OperationState *state;state356,8219
  struct GNUNET_PeerIdentity peer;362,8384
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task368,8543
  uint32_t salt;373,8638
  uint32_t remote_element_count;378,8700
  uint32_t client_request_id;383,8811
  enum GNUNET_SET_ResultMode result_mode;388,8926
  int force_delta;394,9077
  int force_full;400,9192
  int byzantine;406,9301
  int byzantine_lower_bound;412,9413
  uint32_t suggest_id;419,9641
  unsigned int generation_created;425,9741
struct SetContent433,9904
  struct GNUNET_CONTAINER_MultiHashMap *elements;elements438,10001
  struct PendingMutation *pending_mutations_head;pending_mutations_head445,10218
  struct PendingMutation *pending_mutations_tail;pending_mutations_tail452,10435
  unsigned int refcount;457,10540
  unsigned int latest_generation;462,10600
  int iterator_count;467,10693
struct GenerationRange471,10720
  unsigned int start;476,10797
  unsigned int end;481,10884
struct PendingMutation488,10968
  struct PendingMutation *prev;prev493,11039
  struct PendingMutation *next;next498,11118
  struct Set *set;set503,11196
  struct GNUNET_SET_ElementMessage *msg;msg510,11367
struct Set517,11483
  struct Set *next;next522,11585
  struct Set *prev;prev527,11662
  struct ClientState *cs;cs533,11805
  struct SetContent *content;content539,11925
  const struct SetVT *vt;vt548,12166
  struct SetState *state;state553,12241
  struct GNUNET_CONTAINER_MultiHashMapIterator *iter;iter559,12382
  struct Operation *ops_head;ops_head564,12501
  struct Operation *ops_tail;ops_tail569,12596
  struct GenerationRange *excluded_generations;excluded_generations574,12704
  unsigned int current_generation;580,12892
  unsigned int excluded_generations_size;585,12998
  enum GNUNET_SET_OperationType operation;590,13099
  unsigned int iter_generation;595,13203
  uint16_t iteration_id;601,13347

src/contrib/service/set/gnunet-service-set.c,2593
#define INCOMING_CHANNEL_TIMEOUT 37,1269
struct LazyCopyRequest43,1377
  struct LazyCopyRequest *prev;prev48,1434
  struct LazyCopyRequest *next;next53,1499
  struct Set *source_set;source_set58,1584
  uint32_t cookie;63,1660
struct Listener71,1788
  struct Listener *next;next76,1867
  struct Listener *prev;prev81,1954
  struct Operation *op_head;op_head88,2183
  struct Operation *op_tail;op_tail95,2416
  struct ClientState *cs;cs101,2535
  struct GNUNET_CADET_Port *open_port;open_port106,2620
  struct GNUNET_HashCode app_id;112,2793
  enum GNUNET_SET_OperationType operation;117,2871
static struct GNUNET_CADET_Handle *cadet;cadet125,3010
static struct LazyCopyRequest *lazy_copy_head;lazy_copy_head130,3106
static struct LazyCopyRequest *lazy_copy_tail;lazy_copy_tail135,3207
static uint32_t lazy_copy_cookie;140,3324
struct GNUNET_STATISTICS_Handle *_GSS_statistics;_GSS_statistics145,3389
static struct Listener *listener_head;listener_head150,3495
static struct Listener *listener_tail;listener_tail155,3590
static unsigned int num_clients;160,3667
static int in_shutdown;166,3814
static uint32_t suggest_id;174,4068
get_incoming 185,4311
incoming_destroy 204,4710
struct GarbageContext228,5245
  struct GNUNET_CONTAINER_MultiHashMap *map;map233,5344
  unsigned int min_op_generation;238,5466
  unsigned int max_op_generation;243,5578
garbage_collect_cb 257,5931
collect_generation_garbage 285,6797
is_excluded_generation 314,7714
is_element_of_generation 335,8411
_GSS_is_element_of_operation 398,10156
_GSS_operation_destroy 421,11018
client_connect_cb 466,12337
destroy_elements_iterator 489,12837
client_disconnect_cb 509,13282
check_incoming_msg 632,16972
handle_incoming_msg 685,18661
execute_add 736,20425
execute_remove 801,22564
execute_mutation 854,24281
execute_delayed_mutations 879,24753
send_client_element 914,25992
handle_client_iterate 970,27983
handle_client_create_set 1012,29232
incoming_timeout_cb 1071,30813
channel_new_cb 1099,31668
channel_end_cb 1138,33159
_GSS_operation_destroy2 1153,33489
channel_window_cb 1193,34720
handle_client_listen 1208,35083
handle_client_reject 1315,39992
check_client_mutation 1347,41012
handle_client_mutation 1362,41432
advance_generation 1402,42583
check_client_evaluate 1435,43500
handle_client_evaluate 1452,43996
handle_client_iter_ack 1580,49619
handle_client_copy_lazy_prepare 1621,50514
handle_client_copy_lazy_connect 1657,51581
handle_client_cancel 1748,53901
handle_client_accept 1801,55364
shutdown_task 1876,57857
run 1902,58449

src/contrib/service/set/set_api.c,2597
#define LOG(33,1053
struct SetCopyRequest35,1124
  struct SetCopyRequest *next;next37,1148
  struct SetCopyRequest *prev;prev39,1180
  void *cls;cls41,1212
  GNUNET_SET_CopyReadyCallback cb;43,1226
struct GNUNET_SET_Handle49,1300
  struct GNUNET_MQ_Handle *mq;mq54,1373
  struct GNUNET_SET_OperationHandle *ops_head;ops_head59,1460
  struct GNUNET_SET_OperationHandle *ops_tail;ops_tail64,1563
  GNUNET_SET_ElementIterator iterator;70,1713
  void *iterator_cls;iterator_cls75,1794
  int destroy_requested;82,2022
  int invalid;87,2113
  uint16_t iteration_id;93,2253
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg98,2347
  struct SetCopyRequest *copy_req_head;copy_req_head103,2451
  struct SetCopyRequest *copy_req_tail;copy_req_tail108,2546
struct GNUNET_SET_Request115,2656
  uint32_t accept_id;121,2783
  int accepted;127,2890
struct GNUNET_SET_OperationHandle135,3016
  GNUNET_SET_ResultIterator result_cb;141,3132
  void *result_cls;result_cls146,3215
  struct GNUNET_SET_Handle *set;set152,3342
  struct GNUNET_MQ_Envelope *conclude_mqm;conclude_mqm158,3480
  uint32_t *request_id_addr;request_id_addr164,3666
  struct GNUNET_SET_OperationHandle *prev;prev169,3748
  struct GNUNET_SET_OperationHandle *next;next174,3844
  uint32_t request_id;179,3958
struct GNUNET_SET_ListenHandle186,4034
  struct GNUNET_MQ_Handle*mq;mq191,4114
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg198,4284
  GNUNET_SET_ListenCallback listen_cb;204,4413
  void *listen_cls;listen_cls209,4496
  struct GNUNET_HashCode app_id;214,4564
  struct GNUNET_TIME_Relative reconnect_backoff;219,4666
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task224,4780
  enum GNUNET_SET_OperationType operation;229,4871
handle_copy_lazy 248,5370
check_iter_element 286,6387
handle_iter_element 302,6792
handle_iter_done 343,7951
check_result 379,8929
handle_result 394,9219
set_operation_destroy 486,11816
GNUNET_SET_operation_cancel 516,12651
handle_client_set_error 550,13556
create_internal 582,14392
GNUNET_SET_create 656,16955
GNUNET_SET_add_element 673,17324
GNUNET_SET_remove_element 707,18313
GNUNET_SET_destroy 745,19378
GNUNET_SET_prepare 772,20116
check_request 843,22118
handle_request 868,22695
handle_client_listener_error 910,24131
listen_connect 933,24862
GNUNET_SET_listen 976,26405
GNUNET_SET_listen_cancel 1010,27271
GNUNET_SET_accept 1030,27699
GNUNET_SET_commit 1073,29199
GNUNET_SET_iterate 1117,30666
GNUNET_SET_copy_lazy 1139,31235
GNUNET_SET_element_dup 1168,32029
GNUNET_SET_element_hash 1184,32423

src/contrib/service/set/set.h,2559
#define SET_H27,937
struct GNUNET_SET_CreateMessage40,1218
  struct GNUNET_MessageHeader header;45,1307
  uint32_t operation GNUNET_PACKED;50,1421
struct GNUNET_SET_ListenMessage59,1640
  struct GNUNET_MessageHeader header;64,1729
  uint32_t operation GNUNET_PACKED;69,1843
  struct GNUNET_HashCode app_id;74,1912
struct GNUNET_SET_AcceptMessage82,2070
  struct GNUNET_MessageHeader header;87,2159
  uint32_t accept_reject_id GNUNET_PACKED;92,2261
  uint32_t request_id GNUNET_PACKED;97,2356
  uint32_t result_mode GNUNET_PACKED;103,2484
  uint8_t force_delta;109,2631
  uint8_t force_full;115,2750
  uint8_t byzantine;121,2863
  uint8_t byzantine_lower_bound;127,2979
struct GNUNET_SET_RejectMessage135,3137
  struct GNUNET_MessageHeader header;140,3226
  uint32_t accept_reject_id GNUNET_PACKED;145,3328
struct GNUNET_SET_RequestMessage152,3435
  struct GNUNET_MessageHeader header;157,3527
  uint32_t accept_id GNUNET_PACKED;163,3654
  struct GNUNET_PeerIdentity peer_id;168,3741
struct GNUNET_SET_EvaluateMessage180,4098
  struct GNUNET_MessageHeader header;185,4191
  uint32_t result_mode GNUNET_PACKED;191,4320
  struct GNUNET_PeerIdentity target_peer;196,4412
  struct GNUNET_HashCode app_id;201,4487
  uint32_t request_id GNUNET_PACKED;207,4638
  uint8_t force_delta;213,4784
  uint8_t force_full;219,4903
  uint8_t byzantine;225,5016
  uint8_t byzantine_lower_bound;231,5132
struct GNUNET_SET_ResultMessage244,5497
  struct GNUNET_MessageHeader header;249,5586
  uint64_t current_size;254,5660
  uint32_t request_id GNUNET_PACKED;259,5728
  uint16_t result_status GNUNET_PACKED;265,5864
  uint16_t element_type GNUNET_PACKED;270,5975
struct GNUNET_SET_ElementMessage280,6150
  struct GNUNET_MessageHeader header;286,6283
  uint16_t element_type GNUNET_PACKED;291,6377
  uint16_t reserved GNUNET_PACKED;296,6462
struct GNUNET_SET_CancelMessage306,6620
  struct GNUNET_MessageHeader header;311,6709
  uint32_t request_id GNUNET_PACKED;316,6802
struct GNUNET_SET_IterResponseMessage324,6943
  struct GNUNET_MessageHeader header;329,7044
  uint16_t iteration_id GNUNET_PACKED;335,7220
  uint16_t element_type GNUNET_PACKED;341,7335
struct GNUNET_SET_IterAckMessage350,7465
  struct GNUNET_MessageHeader header;355,7557
  uint32_t send_more;360,7671
struct GNUNET_SET_CopyLazyResponseMessage367,7749
  struct GNUNET_MessageHeader header;372,7860
  uint32_t cookie;377,7951
struct GNUNET_SET_CopyLazyConnectMessage384,8026
  struct GNUNET_MessageHeader header;389,8135
  uint32_t cookie;394,8226

src/contrib/service/set/gnunet-service-set_protocol.h,1464
#define SET_PROTOCOL_H27,978
struct OperationRequestMessage35,1082
  struct GNUNET_MessageHeader header;40,1185
  uint32_t operation GNUNET_PACKED;45,1307
  uint32_t element_count GNUNET_PACKED;50,1396
  struct GNUNET_HashCode app_idX;55,1502
struct IBFMessage67,1738
  struct GNUNET_MessageHeader header;72,1820
  uint8_t order;78,1933
  uint8_t reserved1;83,1988
  uint16_t reserved2 GNUNET_PACKED;88,2047
  uint32_t offset GNUNET_PACKED;93,2149
  uint32_t salt GNUNET_PACKED;98,2246
struct InquiryMessage104,2305
  struct GNUNET_MessageHeader header;109,2391
  uint32_t salt GNUNET_PACKED;114,2497
  uint32_t reserved GNUNET_PACKED;119,2566
struct IntersectionElementInfoMessage130,2828
  struct GNUNET_MessageHeader header;135,2946
  uint32_t sender_element_count GNUNET_PACKED;140,3038
struct BFMessage147,3167
  struct GNUNET_MessageHeader header;152,3254
  uint32_t sender_element_count GNUNET_PACKED;157,3362
  struct GNUNET_HashCode element_xor_hash;163,3521
  uint32_t sender_mutator GNUNET_PACKED;168,3618
  uint32_t bloomfilter_total_length GNUNET_PACKED;173,3715
  uint32_t bits_per_element GNUNET_PACKED;178,3843
struct IntersectionDoneMessage192,4170
  struct GNUNET_MessageHeader header;197,4273
  uint32_t final_element_count GNUNET_PACKED;202,4371
  struct GNUNET_HashCode element_xor_hash;207,4493
struct StrataEstimatorMessage214,4612
  struct GNUNET_MessageHeader header;219,4708
  uint64_t set_size;221,4747

src/contrib/service/set/gnunet-service-set_intersection.h,49
#define GNUNET_SERVICE_SET_INTERSECTION_H27,998

src/contrib/service/set/gnunet-service-set_union.c,3240
#define LOG(37,1244
#define SE_STRATA_COUNT 43,1367
#define SE_IBF_SIZE 48,1448
#define SE_IBF_HASH_NUM 53,1556
#define MAX_BUCKETS_PER_MESSAGE 58,1652
#define MAX_IBF_ORDER 65,1879
#define IBF_ALPHA 71,1981
enum UnionOperationPhase77,2061
  PHASE_EXPECT_SE,82,2165
  PHASE_EXPECT_IBF,93,2555
  PHASE_EXPECT_IBF_CONT,98,2627
  PHASE_INVENTORY_ACTIVE,103,2694
  PHASE_INVENTORY_PASSIVE,108,2787
  PHASE_FINISH_CLOSING,114,2944
  PHASE_FINISH_WAITING,122,3137
  PHASE_DONE,129,3298
  PHASE_FULL_SENDING,135,3432
struct OperationState142,3520
  struct StrataEstimator *se;se148,3644
  struct InvertibleBloomFilter *remote_ibf;remote_ibf153,3722
  struct InvertibleBloomFilter *local_ibf;local_ibf158,3822
  struct GNUNET_CONTAINER_MultiHashMap32 *key_to_element;key_to_element165,4031
  enum UnionOperationPhase phase;170,4139
  int client_done_sent;175,4232
  unsigned int ibf_buckets_received;180,4337
  struct GNUNET_CONTAINER_MultiHashMap *demanded_hashes;demanded_hashes185,4455
  uint32_t salt_send;190,4569
  uint32_t salt_receive;195,4676
  uint32_t received_fresh;201,4811
  uint32_t received_total;206,4911
  uint64_t initial_size;212,5021
struct KeyEntry219,5125
  struct IBF_Key ibf_key;224,5214
  struct ElementEntry *element;element232,5389
  int received;240,5603
struct SendElementClosure248,5702
  struct IBF_Key ibf_key;254,5804
  struct Operation *op;op260,5902
struct SetState267,5988
  struct StrataEstimator *se;se275,6158
destroy_key_to_element_iter 290,6495
union_op_cancel 314,6985
fail_union_operation 362,8330
get_ibf_key 387,8973
struct GetElementContext404,9376
  struct GNUNET_HashCode hash;409,9427
  struct KeyEntry *k;k414,9483
op_get_element_iterator 429,9851
op_get_element 456,10561
op_register_element 496,11827
salt_key 520,12538
unsalt_key 537,12801
prepare_ibf_iterator 557,13161
init_key_to_element_iterator 589,14028
initialize_key_to_element 617,14759
prepare_ibf 639,15456
send_ibf 670,16353
get_order_from_difference 740,18236
send_full_element_iterator 764,18805
send_full_set 796,19710
check_union_p2p_strata_estimator 821,20479
handle_union_p2p_strata_estimator 853,21256
send_offers_iterator 986,25091
send_offers_for_key 1022,26169
decode_and_send 1046,26731
check_union_p2p_ibf 1210,31434
handle_union_p2p_ibf 1273,32902
send_client_element 1351,35229
send_client_done 1389,36332
maybe_finish 1443,37963
check_union_p2p_elements 1489,39081
handle_union_p2p_elements 1517,39767
check_union_p2p_full_element 1620,42893
handle_union_p2p_full_element 1642,43361
check_union_p2p_inquiry 1737,46400
handle_union_p2p_inquiry 1773,47238
send_missing_full_elements_iter 1811,48244
handle_union_p2p_request_full 1843,49144
handle_union_p2p_full_done 1877,49931
check_union_p2p_demand 1938,51699
handle_union_p2p_demand 1969,52485
check_union_p2p_offer 2045,54766
handle_union_p2p_offer 2083,55746
handle_union_p2p_done 2144,57662
handle_union_p2p_over 2198,59238
union_evaluate 2213,59643
union_accept 2273,61758
union_set_create 2339,63976
union_add 2366,64660
union_remove 2382,65109
union_set_destroy 2396,65413
union_copy_state 2414,65779
union_channel_death 2433,66175
_GSS_union_vt 2448,66454

src/contrib/service/set/ibf.c,369
#define IBF_KEY_HASH_VAL(34,1051
ibf_key_from_hashcode 44,1310
ibf_hashcode_from_key 58,1581
ibf_create 80,2196
ibf_get_indices 119,3043
ibf_insert_into 144,3613
ibf_insert 168,4118
ibf_remove 185,4454
ibf_is_empty 199,4781
ibf_decode 229,5695
ibf_write_slice 291,7278
ibf_read_slice 324,8268
ibf_subtract 357,9292
ibf_dup 380,9887
ibf_destroy 404,10736

src/contrib/service/set/plugin_block_set_test.c,263
block_plugin_set_test_check_query 43,1407
block_plugin_set_test_check_block 63,2028
block_plugin_set_test_check_reply 93,3091
block_plugin_set_test_get_key 122,4187
libgnunet_plugin_block_set_test_init 136,4521
libgnunet_plugin_block_set_test_done 158,5118

src/contrib/service/set/gnunet-service-set_union_strata_estimator.c,310
#define FAIL_10_1_COMPATIBILTIY 36,1203
strata_estimator_write 47,1463
strata_estimator_read 95,2625
strata_estimator_insert 144,3737
strata_estimator_remove 159,4022
strata_estimator_create 182,4647
strata_estimator_difference 222,5714
strata_estimator_dup 267,6831
strata_estimator_destroy 289,7374

src/contrib/service/set/ibf_sim.c,185
#define MAX_IBF_DECODE 34,1129
#define ROUNDS 37,1199
#define FIX1 41,1272
#define FIX2 43,1347
#define STRATA 46,1384
#define VERBOSE 49,1423
#define SLOW 51,1486
main 54,1506

src/contrib/service/set/test_set_union_copy.c,788
static int ret;36,1106
static struct GNUNET_PeerIdentity local_id;38,1123
static struct GNUNET_SET_Handle *set1;set140,1168
static struct GNUNET_SET_Handle *set2;set242,1208
static const struct GNUNET_CONFIGURATION_Handle *config;config44,1248
static struct GNUNET_SCHEDULER_Task *tt;tt46,1306
add_element_str 50,1361
remove_element_str 66,1706
timeout_fail 87,2147
struct CountIterClosure95,2234
  unsigned int expected_count;97,2260
  unsigned int ongoing_count;98,2291
  GNUNET_SCHEDULER_TaskCallback cont;99,2321
  void *cont_cls;cont_cls100,2359
  char *what;what101,2377
check_count_iter 106,2407
check_count 140,3296
test_done 166,4005
check_new_set_count 173,4077
copy_done 184,4241
test_copy 210,4891
do_shutdown 226,5163
run 255,5689
main 300,6977

src/contrib/service/set/test_set_api.c,822
static struct GNUNET_PeerIdentity local_id;32,1008
static struct GNUNET_HashCode app_id;34,1053
static struct GNUNET_SET_Handle *set1;set136,1092
static struct GNUNET_SET_Handle *set2;set238,1132
static struct GNUNET_SET_ListenHandle *listen_handle;listen_handle40,1172
static struct GNUNET_SET_OperationHandle *oh1;oh142,1227
static struct GNUNET_SET_OperationHandle *oh2;oh244,1275
static const struct GNUNET_CONFIGURATION_Handle *config;config46,1323
static unsigned int iter_count;48,1381
static int ret;50,1414
static struct GNUNET_SCHEDULER_Task *tt;tt52,1431
result_cb_set1 56,1486
result_cb_set2 103,2436
listen_cb 142,3262
start 165,3970
init_set2 194,4900
init_set1 217,5479
iter_cb 233,5887
test_iter 253,6365
timeout_fail 283,7183
do_shutdown 298,7420
run 342,8218
main 393,10036

src/contrib/service/set/gnunet-service-set_union.h,42
#define GNUNET_SERVICE_SET_UNION_H27,984

src/contrib/service/rps/test_rps.c,7694
static uint32_t num_peers;41,1333
static uint32_t timeout_s;47,1416
static struct GNUNET_TIME_Relative timeout;53,1564
static double portion 59,1648
static unsigned int mal_type 64,1719
static struct GNUNET_TESTBED_Peer **testbed_peers;testbed_peers69,1801
enum PEER_ONLINE_DELTA74,1919
  PEER_GO_ONLINE 79,1996
  PEER_GO_OFFLINE 83,2071
struct OpListEntry89,2130
  struct OpListEntry *next;next94,2181
  struct OpListEntry *prev;prev99,2240
  struct GNUNET_TESTBED_Operation *op;op104,2308
  enum PEER_ONLINE_DELTA delta;110,2490
  unsigned int index;115,2568
static struct OpListEntry *oplist_head;oplist_head121,2621
static struct OpListEntry *oplist_tail;oplist_tail126,2689
struct PendingReply132,2804
  struct PendingReply *next;next137,2861
  struct PendingReply *prev;prev138,2890
  struct GNUNET_RPS_Request_Handle *req_handle;req_handle143,2978
  struct RPSPeer *rps_peer;rps_peer148,3068
struct PendingRequest155,3186
  struct PendingRequest *next;next160,3245
  struct PendingRequest *prev;prev161,3276
  struct GNUNET_SCHEDULER_Task *request_task;request_task166,3366
  struct RPSPeer *rps_peer;rps_peer171,3454
struct RPSPeer178,3534
  uint32_t index;183,3587
  struct GNUNET_TESTBED_Operation *op;op188,3657
  struct GNUNET_RPS_Handle *rps_handle;rps_handle193,3737
  struct GNUNET_RPS_StreamRequestHandle *rps_srh;rps_srh198,3821
  struct GNUNET_PeerIdentity *peer_id;peer_id203,3905
  int online;213,4093
  unsigned int num_ids_to_request;218,4177
  struct PendingRequest *pending_req_head;pending_req_head223,4251
  struct PendingRequest *pending_req_tail;pending_req_tail224,4294
  unsigned int num_pending_reqs;229,4382
  struct PendingReply *pending_rep_head;pending_rep_head234,4453
  struct PendingReply *pending_rep_tail;pending_rep_tail235,4494
  unsigned int num_pending_reps;240,4579
  unsigned int num_recv_ids;245,4657
  const struct OpListEntry *entry_op_manage;entry_op_manage250,4735
  struct GNUNET_TESTBED_Operation *stat_op;stat_op255,4849
  struct GNUNET_STATISTICS_Handle *stats_h;stats_h260,4944
  uint32_t stat_collected_flags;267,5169
  const char *file_name_stats;file_name_stats272,5282
  const char *file_name_probs;file_name_probs277,5393
  struct GNUNET_PeerIdentity *cur_view;cur_view282,5466
  uint32_t cur_view_count;287,5565
  uint32_t count_in_views;292,5660
  uint64_t num_rounds;297,5730
  uint64_t num_blocks;298,5753
  uint64_t num_blocks_many_push;299,5776
  uint64_t num_blocks_no_push;300,5809
  uint64_t num_blocks_no_pull;301,5840
  uint64_t num_blocks_many_push_no_pull;302,5871
  uint64_t num_blocks_no_push_no_pull;303,5912
  uint64_t num_issued_push;304,5951
  uint64_t num_issued_pull_req;305,5979
  uint64_t num_issued_pull_rep;306,6011
  uint64_t num_sent_push;307,6043
  uint64_t num_sent_pull_req;308,6069
  uint64_t num_sent_pull_rep;309,6099
  uint64_t num_recv_push;310,6129
  uint64_t num_recv_pull_req;311,6155
  uint64_t num_recv_pull_rep;312,6185
enum STAT_TYPE315,6219
  STAT_TYPE_ROUNDS 317,6236
  STAT_TYPE_BLOCKS 318,6294
  STAT_TYPE_BLOCKS_MANY_PUSH 319,6352
  STAT_TYPE_BLOCKS_NO_PUSH 320,6410
  STAT_TYPE_BLOCKS_NO_PULL 321,6468
  STAT_TYPE_BLOCKS_MANY_PUSH_NO_PULL 322,6526
  STAT_TYPE_BLOCKS_NO_PUSH_NO_PULL 323,6584
  STAT_TYPE_ISSUED_PUSH_SEND 324,6642
  STAT_TYPE_ISSUED_PULL_REQ 325,6700
  STAT_TYPE_ISSUED_PULL_REP 326,6758
  STAT_TYPE_SENT_PUSH_SEND 327,6816
  STAT_TYPE_SENT_PULL_REQ 328,6874
  STAT_TYPE_SENT_PULL_REP 329,6932
  STAT_TYPE_RECV_PUSH_SEND 330,6990
  STAT_TYPE_RECV_PULL_REQ 331,7048
  STAT_TYPE_RECV_PULL_REP 332,7106
  STAT_TYPE_MAX 333,7164
struct STATcls336,7217
  struct RPSPeer *rps_peer;rps_peer338,7234
  enum STAT_TYPE stat_type;339,7262
static struct RPSPeer *rps_peers;rps_peers346,7337
static struct GNUNET_CONTAINER_MultiPeerMap *peer_map;peer_map351,7434
static struct GNUNET_PeerIdentity *rps_peer_ids;rps_peer_ids356,7519
static struct GNUNET_PeerIdentity *target_peer;target_peer361,7605
static struct RPSPeer *eval_peer;eval_peer366,7714
static unsigned int num_peers_online;371,7784
static unsigned int view_sizes;376,7877
static int ok;381,7947
static struct GNUNET_SCHEDULER_Task *post_test_task;post_test_task386,8027
static struct GNUNET_SCHEDULER_Task *shutdown_task;shutdown_task391,8145
static struct GNUNET_SCHEDULER_Task *churn_task;churn_task396,8262
typedef void (*InitPeer)InitPeer401,8362
typedef void (*PreTest)PreTest409,8586
typedef void (*MainTest)MainTest420,8999
typedef void (*ReplyHandle)ReplyHandle425,9126
typedef void (*PostTest)PostTest432,9349
typedef int (*EvaluationCallback)EvaluationCallback437,9468
enum OPTION_CHURN442,9547
  HAVE_CHURN,447,9620
  HAVE_NO_CHURN,451,9690
enum OPTION_QUICK_QUIT457,9775
  HAVE_QUICK_QUIT,462,9882
  HAVE_NO_QUICK_QUIT,467,9988
enum OPTION_COLLECT_STATISTICS473,10069
  COLLECT_STATISTICS,478,10159
  NO_COLLECT_STATISTICS,483,10246
enum OPTION_COLLECT_VIEW489,10325
  COLLECT_VIEW,494,10403
  NO_COLLECT_VIEW,499,10482
struct SingleTestRun505,10550
  char *name;name510,10607
  InitPeer init_peer;515,10698
  PreTest pre_test;520,10786
  MainTest main_test;525,10852
  ReplyHandle reply_handle;530,10947
  PostTest post_test;535,11047
  EvaluationCallback eval_cb;540,11125
  uint32_t request_interval;545,11190
  uint32_t num_requests;550,11265
  enum OPTION_CHURN have_churn;555,11330
  enum OPTION_QUICK_QUIT have_quick_quit;560,11406
  enum OPTION_COLLECT_STATISTICS have_collect_statistics;565,11497
  enum OPTION_COLLECT_VIEW have_collect_view;570,11598
  uint32_t stat_collect_flags;576,11753
} cur_test_run;577,11784
static int post_test;582,11836
static int in_shutdown;587,11892
tofile_ 593,11965
#define tofile(654,13902
evaluate 697,14823
make_oplist_entry 723,15490
check_statistics_collect_completed_single_peer 743,15904
check_statistics_collect_completed 764,16351
shutdown_op 790,16949
post_test_op 827,17689
seed_peers 869,18647
seed_peers_big 899,19283
info_cb 934,20269
rps_connect_complete_cb 989,22082
rps_connect_adapter 1036,23316
stat_connect_adapter 1062,24014
stat_disconnect_adapter 1079,24417
stat_complete_cb 1105,25420
rps_disconnect_adapter 1136,26242
default_eval_cb 1159,26826
no_eval 1166,26888
default_init_peer 1176,26969
default_reply_handle 1190,27211
request_peers 1233,28459
cancel_pending_req 1263,29627
cancel_request 1280,30131
cancel_request_cb 1300,30650
schedule_missing_requests 1318,31076
cancel_pending_req_rep 1348,32203
mal_init_peer 1369,32790
mal_pre 1385,33126
mal_cb 1411,33824
single_req_cb 1441,34625
delay_req_cb 1456,34902
seed_cb 1471,35166
seed_big_cb 1488,35515
single_peer_seed_cb 1506,35934
seed_req_cb 1517,36117
req_cancel_cb 1537,36538
churn_test_cb 1571,37315
got_stream_peer_cb 1603,38006
sub_post 1638,39053
sub_pre 1648,39256
churn_cb 1674,39968
manage_service_wrapper 1764,42601
churn 1810,44212
profiler_init_peer 1883,46262
profiler_reply_handle 1898,46571
profiler_cb 1936,47707
file_name_cb 1977,48748
profiler_eval 2011,49506
is_in_view 2032,49855
get_idx_of_pid 2050,50194
count_containing_views 2080,50817
compute_probabilities 2105,51352
count_peer_in_views_2 2248,56101
cumulated_view_sizes 2272,56643
count_peer_in_views 2286,56864
compute_diversity 2306,57300
print_view_sizes 2351,58759
all_views_updated_cb 2367,59091
view_update_cb 2375,59173
pre_profiler 2428,61162
write_final_stats 2437,61387
post_test_shutdown_ready_cb 2486,63144
stat_str_2_type 2537,64375
stat_type_2_str 2632,67526
stat_iterator 2703,69245
post_profiler 2799,71484
run 2856,73316
main 2956,76700

src/contrib/service/rps/rps-sampler_common.h,1777
#define RPS_SAMPLER_COMMON_H28,931
(*RPS_sampler_rand_peer_ready_cont)RPS_sampler_rand_peer_ready_cont51,1507
(*RPS_get_peers_type)RPS_get_peers_type62,1859
(*RPS_sampler_n_rand_peers_ready_cb)RPS_sampler_n_rand_peers_ready_cb73,2124
(*RPS_sampler_sinlge_info_ready_cb)RPS_sampler_sinlge_info_ready_cb88,2657
(*SamplerNotifyUpdateCB)SamplerNotifyUpdateCB100,3036
struct GetPeerCls106,3155
  struct GetPeerCls *next;next111,3196
  struct GetPeerCls *prev;prev112,3223
  struct RPS_SamplerRequestHandle *req_handle;req_handle117,3330
  struct RPS_SamplerRequestHandleSingleInfo *req_single_info_handle;req_single_info_handle122,3467
  struct GNUNET_SCHEDULER_Task *get_peer_task;get_peer_task127,3582
  struct SamplerNotifyUpdateCTX *notify_ctx;notify_ctx132,3685
  RPS_sampler_rand_peer_ready_cont cont;137,3761
  void *cont_cls;cont_cls142,3856
  struct GNUNET_PeerIdentity *id;id147,3930
struct RPS_Sampler154,4026
  unsigned int sampler_size;159,4100
  struct RPS_SamplerElement **sampler_elements;sampler_elements165,4200
  struct GNUNET_TIME_Relative max_round_interval;172,4330
  uint32_t num_peers_estim;177,4456
  double desired_probability;183,4585
  double deficiency_factor;191,4857
  RPS_get_peers_type get_peers;197,5020
  struct RPS_SamplerRequestHandle *req_handle_head;req_handle_head202,5135
  struct RPS_SamplerRequestHandle *req_handle_tail;req_handle_tail203,5187
  struct RPS_SamplerRequestHandleSingleInfo *req_handle_single_head;req_handle_single_head208,5332
  struct RPS_SamplerRequestHandleSingleInfo *req_handle_single_tail;req_handle_single_tail209,5401
  struct SamplerNotifyUpdateCTX *notify_ctx_head;notify_ctx_head211,5471
  struct SamplerNotifyUpdateCTX *notify_ctx_tail;notify_ctx_tail212,5521

src/contrib/service/rps/gnunet-service-rps_sampler.h,29
#define RPS_SAMPLER_H28,913

src/contrib/service/rps/gnunet-service-rps_custommap.c,539
#define LOG(31,1034
struct CustomPeerMap57,1996
  struct GNUNET_CONTAINER_MultiHashMap32 *hash_map;hash_map62,2085
  struct GNUNET_CONTAINER_MultiPeerMap *peer_map;peer_map67,2208
CustomPeerMap_create 79,2428
CustomPeerMap_size 99,2941
CustomPeerMap_put 117,3496
CustomPeerMap_contains_peer 165,5346
CustomPeerMap_get_index_pointer 181,5759
CustomPeerMap_remove_peer 202,6375
CustomPeerMap_get_peer_by_index 265,8909
CustomPeerMap_remove_peer_by_index 287,9544
CustomPeerMap_clear 323,10645
CustomPeerMap_destroy 347,11371

src/contrib/service/rps/test_service_rps_view.c,75
#define ABORT(28,956
#define CHECK(30,1085
check 34,1140
main 137,4554

src/contrib/service/rps/rps-sampler_client.h,36
#define RPS_SAMPLER_CLIENT_H28,919

src/contrib/service/rps/rps-test_util.c,515
#define LOG(35,1060
#define B2B_PAT 37,1137
#define B2B(38,1172
static char buf_unaligned;54,1531
static unsigned num_bits_buf_unaligned;59,1612
static struct GNUNET_CONTAINER_MultiHashMap *open_files;open_files61,1653
get_file_handle 74,1920
close_files_iter 129,3641
close_all_files 151,4037
to_file_raw 169,4413
to_file_raw_unaligned 213,5878
auth_key_to_string 380,12077
string_to_auth_key 426,13055
ensure_folder_exist 450,13624
store_prefix_file_name 464,13874
fac 516,15276
binom 535,15501

src/contrib/service/rps/test_service_rps_custommap.c,75
#define ABORT(28,967
#define CHECK(30,1121
check 34,1176
main 116,4234

src/contrib/service/rps/test_service_rps_sampler_elem.c,76
#define ABORT(29,1009
#define CHECK(31,1117
check 35,1172
main 202,6971

src/contrib/service/rps/gnunet-service-rps_sampler_elem.c,184
#define LOG(35,1039
RPS_sampler_elem_reinit 50,1513
RPS_sampler_elem_create 76,2314
RPS_sampler_elem_destroy 94,2567
RPS_sampler_elem_next 107,2824
RPS_sampler_elem_set 163,4425

src/contrib/service/rps/rps-sampler_client.c,1457
#define LOG(40,1185
(*SamplerNotifyUpdateCB)SamplerNotifyUpdateCB64,1837
struct SamplerNotifyUpdateCTX71,1987
  SamplerNotifyUpdateCB notify_cb;76,2075
  void *cls;cls81,2158
  struct SamplerNotifyUpdateCTX *next;next86,2217
  struct SamplerNotifyUpdateCTX *prev;prev91,2306
(*RPS_get_peers_type)RPS_get_peers_type100,2459
struct RPS_SamplerRequestHandle116,2759
  struct RPS_SamplerRequestHandle *next;next121,2814
  struct RPS_SamplerRequestHandle *prev;prev122,2855
  uint32_t num_peers;127,2950
  uint32_t cur_num_peers;132,3025
  struct GNUNET_PeerIdentity *ids;ids137,3107
  struct GetPeerCls *gpc_head;gpc_head142,3225
  struct GetPeerCls *gpc_tail;gpc_tail143,3256
  struct RPS_Sampler *sampler;sampler148,3314
  RPS_sampler_n_rand_peers_ready_cb callback;153,3413
  void *cls;cls158,3507
struct RPS_SamplerRequestHandleSingleInfo165,3569
  struct RPS_SamplerRequestHandleSingleInfo *next;next170,3634
  struct RPS_SamplerRequestHandleSingleInfo *prev;prev171,3685
  struct GNUNET_PeerIdentity *id;id176,3772
  struct GetPeerCls *gpc_head;gpc_head181,3889
  struct GetPeerCls *gpc_tail;gpc_tail182,3920
  struct RPS_Sampler *sampler;sampler187,3978
  RPS_sampler_sinlge_info_ready_cb callback;192,4077
  void *cls;cls197,4170
static size_t min_size;210,4327
static size_t max_size;215,4426
static uint32_t client_get_index;225,4620
RPS_sampler_mod_init 236,4925
sampler_mod_get_rand_peer 302,7019

src/contrib/service/rps/gnunet-rps.c,448
static int ret;31,978
static struct GNUNET_RPS_Handle *rps_handle;rps_handle36,1017
static struct GNUNET_RPS_Request_Handle *req_handle;req_handle41,1089
static struct GNUNET_PeerIdentity peer_id;46,1177
static int view_update;51,1298
static int stream_input;56,1400
static uint64_t num_view_updates;61,1481
do_shutdown 71,1650
reply_handle 90,1983
view_update_handle 118,2456
stream_input_handle 156,3119
run 186,3767
main 262,5977

src/contrib/service/rps/gnunet-service-rps_sampler_elem.h,522
#define RPS_SAMPLER_ELEM_H28,931
enum RPS_SamplerEmpty40,1301
  NOT_EMPTY 42,1325
  EMPTY 43,1344
struct RPS_SamplerElement49,1422
  struct GNUNET_CRYPTO_AuthKey auth_key;56,1564
  struct GNUNET_PeerIdentity peer_id;61,1666
  struct GNUNET_HashCode peer_id_hash;66,1763
  struct GNUNET_TIME_Absolute last_client_request;72,1843
  enum RPS_SamplerEmpty is_empty;77,1982
  struct GNUNET_TIME_Absolute birth;82,2042
  uint32_t num_peers;87,2146
  uint32_t num_change;92,2235
  char *file_name;file_name97,2325

src/contrib/service/rps/rps_api.c,3578
#define LOG(36,1049
struct GNUNET_RPS_StreamRequestHandle41,1191
  struct GNUNET_RPS_Handle *rps_handle;rps_handle46,1280
  GNUNET_RPS_NotifyReadyCB ready_cb;51,1391
  void *ready_cb_cls;ready_cb_cls56,1476
  struct GNUNET_SCHEDULER_Task *callback_task;callback_task61,1561
  struct GNUNET_RPS_StreamRequestHandle *next;next66,1657
  struct GNUNET_RPS_StreamRequestHandle *prev;prev71,1757
struct GNUNET_RPS_Handle78,1862
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg83,1946
  struct GNUNET_MQ_Handle *mq;mq88,2046
  GNUNET_RPS_NotifyReadyCB view_update_cb;93,2145
  void *view_update_cls;view_update_cls98,2258
  void *stream_input_cls;stream_input_cls103,2362
  struct GNUNET_RPS_StreamRequestHandle *stream_requests_head;stream_requests_head108,2448
  struct GNUNET_RPS_StreamRequestHandle *stream_requests_tail;stream_requests_tail113,2571
  struct GNUNET_NSE_Handle *nse;nse118,2681
  struct GNUNET_RPS_Request_Handle *rh_head;rh_head123,2793
  struct GNUNET_RPS_Request_Handle *rh_tail;rh_tail128,2917
  struct GNUNET_RPS_Request_Handle_Single_Info *rhs_head;rhs_head133,3048
  struct GNUNET_RPS_Request_Handle_Single_Info *rhs_tail;rhs_tail138,3192
  float desired_probability;144,3351
  float deficiency_factor;152,3622
struct GNUNET_RPS_Request_Handle159,3709
  struct GNUNET_RPS_Handle *rps_handle;rps_handle164,3793
  uint32_t num_requests;169,3882
  struct RPS_Sampler *sampler;sampler174,3967
  struct RPS_SamplerRequestHandle *sampler_rh;sampler_rh179,4099
  struct GNUNET_RPS_StreamRequestHandle *srh;srh185,4267
  GNUNET_RPS_NotifyReadyCB ready_cb;190,4384
  void *ready_cb_cls;ready_cb_cls195,4469
  struct GNUNET_RPS_Request_Handle *next;next200,4547
  struct GNUNET_RPS_Request_Handle *prev;prev205,4649
struct GNUNET_RPS_Request_Handle_Single_Info212,4751
  struct GNUNET_RPS_Handle *rps_handle;rps_handle217,4847
  struct RPS_Sampler *sampler;sampler222,4947
  struct RPS_SamplerRequestHandleSingleInfo *sampler_rh;sampler_rh227,5079
  struct GNUNET_RPS_StreamRequestHandle *srh;srh233,5257
  GNUNET_RPS_NotifyReadySingleInfoCB ready_cb;238,5374
  void *ready_cb_cls;ready_cb_cls243,5469
  struct GNUNET_RPS_Request_Handle_Single_Info *next;next248,5547
  struct GNUNET_RPS_Request_Handle_Single_Info *prev;prev253,5661
struct cb_cls_pack261,5882
  GNUNET_RPS_NotifyReadyCB cb;266,5952
  void *cls;cls271,6032
  struct GNUNET_CLIENT_Connection *service_conn;service_conn276,6096
static struct GNUNET_PeerIdentity *srh_callback_peers;srh_callback_peers284,6242
static uint64_t srh_callback_num_peers;290,6398
new_stream_request 304,6804
remove_stream_request 328,7472
peers_ready_cb 355,8289
peer_info_ready_cb 381,9066
collect_peers_cb 406,9789
collect_peers_info_cb 433,10547
GNUNET_RPS_view_request 461,11326
GNUNET_RPS_view_request_cancel 482,11977
GNUNET_RPS_stream_request 503,12590
check_view_update 531,13450
handle_view_update 558,14107
cancel_stream 583,14838
GNUNET_RPS_stream_cancel 598,15183
check_stream_input 620,15698
srh_callback_scheduled 645,16308
handle_stream_input 665,16762
mq_error_handler 724,18496
hash_from_share_val 751,19163
nse_cb 776,19852
reconnect 809,20778
GNUNET_RPS_connect 843,21863
GNUNET_RPS_sub_start 904,23582
GNUNET_RPS_sub_stop 927,24293
GNUNET_RPS_request_peers 950,24954
GNUNET_RPS_request_peer_info 995,26762
GNUNET_RPS_seed_ids 1036,28365
GNUNET_RPS_act_malicious 1112,31053
GNUNET_RPS_request_cancel 1200,33981
GNUNET_RPS_request_single_info_cancel 1231,34728
GNUNET_RPS_disconnect 1263,35515

src/contrib/service/rps/rps-test_util.h,174
#define RPS_TEST_UTIL_H29,979
#define TO_FILE 31,1004
#define to_file(65,1650
#define to_file_w_len(83,2201
#  define to_file(105,3671
#  define to_file_w_len(106,3705

src/contrib/service/rps/rps.h,1945
#define GNUNET_RPS_CADET_PORT 31,997
struct GNUNET_RPS_P2P_PullReplyMessage43,1280
  struct GNUNET_MessageHeader header;48,1376
  uint32_t num_peers GNUNET_PACKED;53,1455
struct GNUNET_RPS_CS_SeedMessage66,1784
  struct GNUNET_MessageHeader header;71,1874
  uint32_t num_peers GNUNET_PACKED;76,1946
struct GNUNET_RPS_CS_ActMaliciousMessage85,2129
  struct GNUNET_MessageHeader header;90,2227
  struct GNUNET_PeerIdentity attacked_peer;96,2349
  uint32_t type GNUNET_PACKED;105,2556
  uint32_t num_peers GNUNET_PACKED;110,2621
struct GNUNET_RPS_CS_SubStartMessage121,2864
  struct GNUNET_MessageHeader header;126,2958
  uint32_t reserved GNUNET_PACKED;131,3029
  struct GNUNET_TIME_RelativeNBO round_interval;136,3115
  struct GNUNET_HashCode hash GNUNET_PACKED;141,3232
struct GNUNET_RPS_CS_SubStopMessage148,3353
  struct GNUNET_MessageHeader header;153,3446
  struct GNUNET_HashCode hash GNUNET_PACKED;158,3552
struct GNUNET_RPS_CS_DEBUG_ViewRequest168,3726
  struct GNUNET_MessageHeader header;173,3822
  uint32_t num_updates GNUNET_PACKED;179,3942
struct GNUNET_RPS_CS_DEBUG_ViewReply185,4060
  struct GNUNET_MessageHeader header;190,4154
  uint32_t id GNUNET_PACKED;195,4237
  uint64_t num_peers GNUNET_PACKED;200,4312
struct GNUNET_RPS_CS_DEBUG_StreamRequest208,4507
  struct GNUNET_MessageHeader header;213,4605
struct GNUNET_RPS_CS_DEBUG_StreamReply219,4724
  struct GNUNET_MessageHeader header;224,4820
  uint64_t num_peers GNUNET_PACKED;229,4892
enum Peers_PeerFlags245,5335
  Peers_PULL_REPLY_PENDING 250,5443
  Peers_ONLINE 259,5689
  Peers_TO_DESTROY 266,5950
enum Peers_ChannelFlags275,6129
  Peers_CHANNEL_ESTABLISHED_TWICE 280,6246
  Peers_CHANNEL_CLEAN 286,6406
  Peers_CHANNEL_DESTROING 291,6527
enum Peers_ChannelRole298,6628
  Peers_CHANNEL_ROLE_SENDING 303,6698
  Peers_CHANNEL_ROLE_RECEIVING 308,6785
typedef void (*PeerOp)PeerOp317,6993
(*PeersIterator)PeersIterator329,7288

src/contrib/service/rps/gnunet-service-rps_view.c,401
struct View31,1007
  struct GNUNET_PeerIdentity *array;array36,1065
  uint32_t length;41,1149
  struct GNUNET_CONTAINER_MultiPeerMap *mpm;mpm46,1220
View_create 57,1400
View_change_len 80,1958
View_get_as_array 122,3228
View_size 135,3467
View_put 151,3789
View_contains_peer 183,4562
View_remove_peer 200,4992
View_get_peer_by_index 240,6224
View_clear 260,6520
View_destroy 284,7183

src/contrib/service/rps/gnunet-service-rps.c,8353
#define LOG(45,1423
#define SET_PEER_FLAG(64,1891
#define check_peer_flag_set(69,2013
#define UNSET_PEER_FLAG(75,2172
#define check_channel_flag_set(80,2303
#define unset_channel_flag(86,2467
struct PeerPendingOp95,2750
  PeerOp op;100,2799
  void *op_cls;op_cls105,2838
struct PendingMessage114,3078
  struct PendingMessage *next;next119,3134
  struct PendingMessage *prev;prev120,3165
  struct GNUNET_MQ_Envelope *ev;ev125,3256
  struct PeerContext *peer_ctx;peer_ctx130,3333
  const char *type;type135,3400
struct PeerContext151,3806
  struct Sub *sub;sub156,3877
  struct GNUNET_MQ_Handle *mq;mq161,3943
  struct ChannelCtx *send_channel_ctx;send_channel_ctx166,4016
  struct ChannelCtx *recv_channel_ctx;recv_channel_ctx171,4099
  struct PeerPendingOp *pending_ops;pending_ops176,4198
  struct PendingMessage *online_check_pending;online_check_pending183,4344
  unsigned int num_pending_ops;188,4439
  struct GNUNET_PeerIdentity peer_id;193,4510
  uint32_t peer_flags;198,4598
  struct GNUNET_TIME_Absolute last_message_recv;203,4687
  struct GNUNET_TIME_Absolute last_keepalive;208,4797
  struct PendingMessage *pending_messages_head;pending_messages_head213,4907
  struct PendingMessage *pending_messages_tail;pending_messages_tail214,4955
  uint32_t round_pull_req;221,5166
struct PeersIteratorCls227,5247
  PeersIterator iterator;232,5308
  void *cls;cls237,5372
struct ChannelCtx243,5429
  struct GNUNET_CADET_Channel *channel;channel248,5492
  struct PeerContext *peer_ctx;peer_ctx253,5602
  struct GNUNET_SCHEDULER_Task *destruction_task;destruction_task260,5850
struct AttackedPeer269,6008
  struct AttackedPeer *next;next274,6051
  struct AttackedPeer *prev;prev275,6080
  struct GNUNET_PeerIdentity peer_id;280,6134
#define HISTOGRAM_FILE_SLOTS 289,6307
#define SIZE_DUMP_FILE 297,6492
struct Sub305,6686
  struct GNUNET_HashCode hash;310,6767
  struct GNUNET_CADET_Port *cadet_port;cadet_port315,6859
  struct GNUNET_CONTAINER_MultiPeerMap *valid_peers;valid_peers320,6948
  char *filename_valid_peers;filename_valid_peers325,7089
  struct GNUNET_CONTAINER_MultiPeerMap *peer_map;peer_map330,7177
  unsigned int sampler_size_est_min;337,7343
  unsigned int sampler_size_est_need;345,7554
  struct GNUNET_TIME_Relative round_interval;350,7651
  struct RPS_Sampler *sampler;sampler355,7760
  char *file_name_view_log;file_name_view_log361,7849
  char *file_name_observed_log;file_name_observed_log369,7996
  uint32_t num_observed_peers;375,8104
  struct GNUNET_CONTAINER_MultiPeerMap *observed_unique_peers;observed_unique_peers380,8209
  struct CustomPeerMap *push_map;push_map386,8366
  struct CustomPeerMap *pull_map;pull_map391,8472
  unsigned int view_size_est_need;398,8616
  unsigned int view_size_est_min;405,8764
  struct View *view;view410,8833
  struct GNUNET_SCHEDULER_Task *do_round_task;do_round_task415,8925
  uint32_t num_rounds;422,9048
  uint32_t push_recv[push_recv429,9244
  uint32_t push_delta[push_delta438,9508
  uint32_t pull_delays[pull_delays446,9734
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg457,9972
struct GNUNET_STATISTICS_Handle *stats;stats462,10072
struct GNUNET_CADET_Handle *cadet_handle;cadet_handle467,10142
struct GNUNET_CORE_Handle *core_handle;core_handle472,10211
struct GNUNET_CONTAINER_MultiPeerMap *map_single_hop;map_single_hop477,10312
static struct GNUNET_PeerIdentity own_identity;482,10396
static float alpha;488,10528
static float beta;494,10631
static struct GNUNET_NSE_Handle *nse;nse499,10678
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore504,10761
static struct GNUNET_PEERSTORE_Monitor *peerstore_notify;peerstore_notify510,10942
static uint32_t mal_type;522,11193
static struct GNUNET_PeerIdentity *mal_peers;mal_peers527,11253
static struct GNUNET_CONTAINER_MultiPeerMap *mal_peer_set;mal_peer_set533,11412
static uint32_t num_mal_peers;538,11515
static struct AttackedPeer *att_peers_head;att_peers_head544,11606
static struct AttackedPeer *att_peers_tail;att_peers_tail545,11650
static struct AttackedPeer *att_peer_index;att_peer_index551,11820
static struct GNUNET_CONTAINER_MultiPeerMap *att_peer_set;att_peer_set557,11976
static uint32_t num_attacked_peers;562,12072
static struct GNUNET_PeerIdentity attacked_peer;567,12159
static uint32_t push_limit 576,12407
static struct Sub *msub;msub585,12609
static const uint32_t num_valid_peers_max 591,12717
get_peer_ctx 617,13266
check_peer_known 643,13977
create_peer_ctx 666,14490
create_or_get_peer_ctx 700,15439
check_connected 722,15993
struct GetRandPeerIteratorCls748,16798
  uint32_t index;755,16955
  const struct GNUNET_PeerIdentity *peer;peer760,17025
get_rand_peer_iterator 780,17514
get_random_peer_from_peermap 807,18083
add_valid_peer 837,19195
set_peer_online 877,20439
add_channel_ctx 945,22399
remove_channel_ctx 961,22700
get_channel 993,23499
get_mq 1048,25712
insert_pending_message 1067,26195
remove_pending_message 1091,26920
mq_online_check_successful 1118,27655
check_peer_online 1141,28254
check_operation_scheduled 1181,29473
destroy_channel 1199,29875
destroy_channel_cb 1224,30469
schedule_channel_destruction 1244,30997
destroy_peer 1270,31729
peermap_clear_iterator 1377,35376
mq_notify_sent_cb 1398,35787
store_peer_presistently_iterator 1443,37397
store_valid_peers 1477,38249
s2i_full 1538,40150
restore_valid_peers 1580,41200
peers_terminate 1647,43316
valid_peer_iterator 1678,44245
get_valid_peers 1700,44828
insert_peer 1731,45691
check_peer_flag 1755,46337
issue_peer_online_check 1781,47046
check_removable 1812,47876
check_peer_valid 1843,48655
indicate_sending_intention 1858,49031
check_peer_send_intention 1876,49535
handle_inbound_channel 1897,49995
check_sending_channel_exists 1941,51538
destroy_sending_channel 1965,52159
send_message 1993,52867
schedule_operation 2026,53805
struct ReplyCls2063,54935
  struct ReplyCls *next;next2068,54974
  struct ReplyCls *prev;prev2069,54999
  uint32_t id;2074,55072
  struct RPS_SamplerRequestHandle *req_handle;req_handle2079,55131
  struct ClientContext *cli_ctx;cli_ctx2084,55235
struct ClientContext2091,55340
  struct ClientContext *next;next2096,55384
  struct ClientContext *prev;prev2097,55414
  struct GNUNET_MQ_Handle *mq;mq2102,55512
  int64_t view_updates_left;2107,55617
  int8_t stream_update;2113,55762
  struct GNUNET_SERVICE_Client *client;client2118,55843
  struct Sub *sub;sub2123,55934
struct ClientContext *cli_ctx_head;cli_ctx_head2129,56015
struct ClientContext *cli_ctx_tail;cli_ctx_tail2130,56051
print_peer_list 2146,56476
rem_from_list 2168,56875
insert_in_view 2224,58259
send_view 2262,59376
send_stream_peers 2302,60506
clients_notify_view_update 2329,61298
clients_notify_stream_peer 2379,62597
hist_update 2411,63508
resize_wrapper 2452,64540
add_peer_array_to_set 2480,65291
send_pull_reply 2521,66437
insert_in_pull_map 2577,68303
insert_in_view_op 2596,68676
insert_in_sampler 2618,69116
got_peer 2677,71062
check_sending_channel_needed 2706,71932
remove_peer 2744,73372
clean_peer 2776,74394
cleanup_destroyed_channel 2834,76598
new_sub 2880,77979
destroy_sub 3058,84241
core_init 3128,86179
core_connects 3147,86615
core_disconnects 3172,87345
destroy_cli_ctx 3194,87853
adapt_sizes 3217,88446
nse_callback 3272,90227
check_client_seed 3303,90982
handle_client_seed 3332,91811
handle_client_view_request 3371,92798
handle_client_view_cancel 3397,93436
handle_client_stream_request 3424,94040
handle_client_stream_cancel 3448,94615
handle_client_start_sub 3471,95155
handle_client_stop_sub 3501,96134
handle_peer_check 3529,96952
handle_peer_push 3561,97784
handle_peer_pull_request 3637,100060
check_peer_pull_reply 3700,102122
handle_peer_pull_reply 3752,103781
compute_rand_delay 3870,108027
send_pull_request 3916,109435
send_push 3960,110843
check_client_act_malicious 4001,112017
handle_client_act_malicious 4032,112955
do_mal_round 4150,116810
do_round 4285,121035
init_peer_cb 4639,134236
valid_peers_iterator 4674,135147
process_peerinfo_peers 4699,135673
shutdown_task 4720,136146
client_connect_cb 4795,138051
client_disconnect_cb 4827,138946
error_cb 4850,139516
sync_cb 4858,139646
run 4873,139949

src/contrib/service/rps/test_rps_api.c,63
static int ok 29,934
run 33,967
check 43,1112
main 78,2042

src/contrib/service/rps/gnunet-service-rps_sampler.c,996
#define LOG(40,1185
(*SamplerNotifyUpdateCB)SamplerNotifyUpdateCB64,1837
struct SamplerNotifyUpdateCTX71,1987
  SamplerNotifyUpdateCB notify_cb;76,2075
  void *cls;cls81,2158
  struct SamplerNotifyUpdateCTX *next;next86,2217
  struct SamplerNotifyUpdateCTX *prev;prev91,2306
(*RPS_get_peers_type)RPS_get_peers_type100,2459
struct RPS_SamplerRequestHandle116,2778
  struct RPS_SamplerRequestHandle *next;next121,2833
  struct RPS_SamplerRequestHandle *prev;prev122,2874
  uint32_t num_peers;127,2969
  uint32_t cur_num_peers;132,3044
  struct GNUNET_PeerIdentity *ids;ids137,3126
  struct GetPeerCls *gpc_head;gpc_head142,3244
  struct GetPeerCls *gpc_tail;gpc_tail143,3275
  struct RPS_Sampler *sampler;sampler148,3333
  RPS_sampler_n_rand_peers_ready_cb callback;153,3432
  void *cls;cls158,3526
static size_t min_size;170,3682
static size_t max_size;175,3781
static uint32_t client_get_index;185,3975
RPS_sampler_init 196,4271
sampler_get_rand_peer 228,5235

src/contrib/service/rps/rps-sampler_common.c,1839
#define LOG(38,1139
struct SamplerNotifyUpdateCTX45,1332
  SamplerNotifyUpdateCB notify_cb;50,1420
  void *cls;cls55,1503
  struct SamplerNotifyUpdateCTX *next;next60,1562
  struct SamplerNotifyUpdateCTX *prev;prev65,1651
struct RPS_SamplerRequestHandle72,1746
  struct RPS_SamplerRequestHandle *next;next77,1801
  struct RPS_SamplerRequestHandle *prev;prev78,1842
  uint32_t num_peers;83,1937
  uint32_t cur_num_peers;88,2012
  struct GNUNET_PeerIdentity *ids;ids93,2094
  struct GetPeerCls *gpc_head;gpc_head98,2212
  struct GetPeerCls *gpc_tail;gpc_tail99,2243
  struct RPS_Sampler *sampler;sampler104,2301
  RPS_sampler_n_rand_peers_ready_cb callback;109,2400
  void *cls;cls114,2494
struct RPS_SamplerRequestHandleSingleInfo121,2556
  struct RPS_SamplerRequestHandleSingleInfo *next;next126,2621
  struct RPS_SamplerRequestHandleSingleInfo *prev;prev127,2672
  struct GNUNET_PeerIdentity *id;id132,2759
  struct GetPeerCls *gpc_head;gpc_head137,2876
  struct GetPeerCls *gpc_tail;gpc_tail138,2907
  struct RPS_Sampler *sampler;sampler143,2965
  RPS_sampler_sinlge_info_ready_cb callback;148,3064
  void *cls;cls153,3157
RPS_sampler_update_with_nw_size 169,3521
RPS_sampler_set_desired_probability 187,3976
RPS_sampler_set_deficiency_factor 195,4172
sampler_notify_on_update 213,4691
RPS_sampler_get_size 238,5422
notify_update 253,5727
RPS_sampler_update 285,6732
RPS_sampler_reinitialise_by_value 312,7593
RPS_sampler_count_id 338,8254
sampler_resize 362,8793
RPS_sampler_resize 423,10283
sampler_empty 436,10516
check_n_peers_ready 455,10994
check_peer_info_ready 511,12738
RPS_sampler_get_n_rand_peers 549,13873
RPS_sampler_get_rand_peer_info 605,15738
RPS_sampler_request_cancel 647,17169
RPS_sampler_request_single_info_cancel 685,18295
RPS_sampler_destroy 726,19425

src/contrib/service/consensus/test_consensus_api.c,282
static struct GNUNET_CONSENSUS_Handle *consensus;consensus31,1008
static struct GNUNET_HashCode session_id;33,1059
static unsigned int elements_received;35,1102
conclude_done 39,1155
on_new_element 49,1342
insert_done 57,1468
on_shutdown 75,1857
run 86,1996
main 115,3036

src/contrib/service/consensus/gnunet-service-consensus.c,8406
enum ReferendumVote37,1268
  VOTE_STAY 43,1384
  VOTE_ADD 47,1456
  VOTE_REMOVE 51,1529
enum EarlyStoppingPhase55,1553
  EARLY_STOPPING_NONE 57,1579
  EARLY_STOPPING_ONE_MORE 58,1606
  EARLY_STOPPING_DONE 59,1637
enum PhaseKind63,1669
  PHASE_KIND_ALL_TO_ALL,65,1686
  PHASE_KIND_ALL_TO_ALL_2,66,1711
  PHASE_KIND_GRADECAST_LEADER,67,1738
  PHASE_KIND_GRADECAST_ECHO,68,1769
  PHASE_KIND_GRADECAST_ECHO_GRADE,69,1798
  PHASE_KIND_GRADECAST_CONFIRM,70,1833
  PHASE_KIND_GRADECAST_CONFIRM_GRADE,71,1865
  PHASE_KIND_APPLY_REP,76,1992
  PHASE_KIND_FINISH,77,2016
enum SetKind81,2042
  SET_KIND_NONE 83,2057
  SET_KIND_CURRENT,84,2078
  SET_KIND_LAST_GRADECAST,88,2148
  SET_KIND_LEADER_PROPOSAL,89,2175
  SET_KIND_ECHO_RESULT,90,2203
enum DiffKind93,2231
  DIFF_KIND_NONE 95,2247
  DIFF_KIND_LEADER_PROPOSAL,96,2269
  DIFF_KIND_LEADER_CONSENSUS,97,2298
  DIFF_KIND_GRADECAST_RESULT,98,2328
enum RfnKind101,2362
  RFN_KIND_NONE 103,2377
  RFN_KIND_ECHO,104,2398
  RFN_KIND_CONFIRM,105,2415
  RFN_KIND_GRADECAST_RESULT106,2435
struct TaskKey115,2566
  uint16_t kind GNUNET_PACKED;120,2631
  int16_t peer1 GNUNET_PACKED;126,2730
  int16_t peer2 GNUNET_PACKED;131,2825
  int16_t repetition GNUNET_PACKED;136,2909
  int16_t leader GNUNET_PACKED;143,3048
struct SetKey147,3085
  enum SetKind set_kind GNUNET_PACKED;149,3101
  int k1 GNUNET_PACKED;153,3177
  int k2 GNUNET_PACKED;157,3233
struct SetEntry161,3262
  struct SetKey key;163,3280
  struct GNUNET_SET_Handle *h;h164,3301
  int is_contested;170,3439
struct DiffKey174,3464
  enum DiffKind diff_kind GNUNET_PACKED;176,3481
  int k1 GNUNET_PACKED;178,3523
  int k2 GNUNET_PACKED;180,3548
struct RfnKey183,3576
  enum RfnKind rfn_kind GNUNET_PACKED;185,3592
  int k1 GNUNET_PACKED;186,3631
  int k2 GNUNET_PACKED;187,3655
struct SetOpCls194,3712
  struct SetKey input_set;196,3730
  struct SetKey output_set;198,3758
  struct RfnKey output_rfn;199,3786
  struct DiffKey output_diff;200,3814
  int do_not_remove;202,3845
  int transceive_contested;204,3867
  struct GNUNET_SET_OperationHandle *op;op206,3896
struct FinishCls210,3942
  struct SetKey input_set;212,3961
union TaskFuncCls219,4057
  struct SetOpCls setop;221,4077
  struct FinishCls finish;222,4102
(*TaskFunc)TaskFunc230,4167
struct TaskEntry236,4251
  struct TaskKey key;238,4270
  struct Step *step;step240,4293
  int is_started;242,4315
  int is_finished;244,4334
  TaskFunc start;246,4354
  TaskFunc cancel;247,4372
  union TaskFuncCls cls;249,4392
struct Step253,4422
  struct Step *prev;prev259,4529
  struct Step *next;next265,4644
  struct ConsensusSession *session;session267,4666
  struct TaskEntry **tasks;tasks272,4757
  unsigned int tasks_len;273,4785
  unsigned int tasks_cap;274,4811
  unsigned int finished_tasks;276,4838
  struct Step **subordinates;subordinates285,5066
  unsigned int subordinates_len;286,5096
  unsigned int subordinates_cap;287,5129
  size_t pending_prereq;292,5224
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task297,5331
  unsigned int is_running;299,5378
  unsigned int is_finished;301,5406
  unsigned int round;306,5520
  char *debug_name;debug_name311,5614
  int early_finishable;321,5971
struct RfnElementInfo325,6000
  const struct GNUNET_SET_Element *element;element327,6024
  int *votes;votes332,6134
  enum ReferendumVote proposal;337,6232
struct ReferendumEntry341,6269
  struct RfnKey key;343,6294
  struct GNUNET_CONTAINER_MultiHashMap *rfn_elements;rfn_elements351,6469
  unsigned int num_peers;353,6524
  int *peer_commited;peer_commited365,6884
  int *peer_contested;peer_contested373,7087
struct DiffElementInfo377,7115
  const struct GNUNET_SET_Element *element;element379,7140
  int weight;385,7265
struct DiffEntry392,7310
  struct DiffKey key;394,7329
  struct GNUNET_CONTAINER_MultiHashMap *changes;changes395,7351
struct SetHandle398,7404
  struct SetHandle *prev;prev400,7423
  struct SetHandle *next;next401,7449
  struct GNUNET_SET_Handle *h;h403,7476
struct ConsensusSession410,7600
  struct ConsensusSession *next;next415,7681
  struct ConsensusSession *prev;prev420,7770
  unsigned int num_client_insert_pending;422,7804
  struct GNUNET_CONTAINER_MultiHashMap *setmap;setmap424,7847
  struct GNUNET_CONTAINER_MultiHashMap *rfnmap;rfnmap425,7895
  struct GNUNET_CONTAINER_MultiHashMap *diffmap;diffmap426,7943
  int *peers_blacklisted;peers_blacklisted431,8050
  struct GNUNET_CONTAINER_MultiHashMap *taskmap;taskmap440,8316
  struct Step *steps_head;steps_head442,8366
  struct Step *steps_tail;steps_tail443,8393
  int conclude_started;445,8421
  int conclude_done;447,8446
  struct GNUNET_HashCode global_id;453,8583
  struct GNUNET_SERVICE_Client *client;client458,8670
  struct GNUNET_MQ_Handle *client_mq;client_mq463,8759
  struct GNUNET_TIME_Absolute conclude_start;468,8871
  struct GNUNET_TIME_Absolute conclude_deadline;475,9126
  struct GNUNET_PeerIdentity *peers;peers477,9176
  unsigned int num_peers;482,9271
  unsigned int local_peer_idx;487,9358
  struct GNUNET_SET_ListenHandle *set_listener;set_listener493,9492
  int early_stopping;498,9594
  uint64_t first_size;503,9669
  uint64_t *first_sizes_received;first_sizes_received505,9693
  uint64_t lower_bound;510,9775
  struct SetHandle *set_handles_head;set_handles_head512,9800
  struct SetHandle *set_handles_tail;set_handles_tail513,9838
static struct ConsensusSession *sessions_head;sessions_head519,9942
static struct ConsensusSession *sessions_tail;sessions_tail524,10052
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg529,10151
static struct GNUNET_PeerIdentity my_peer;534,10246
struct GNUNET_STATISTICS_Handle *statistics;statistics539,10320
phasename 551,10505
setname 579,11156
rfnname 595,11403
diffname 611,11628
debug_str_element 632,11990
debug_str_task_key 643,12173
debug_str_diff_key 657,12471
debug_str_set_key 670,12713
debug_str_rfn_key 684,12973
send_to_client_iter 710,13537
lookup_set 762,15152
lookup_diff 782,15728
lookup_rfn 801,16318
diff_insert 820,16879
rfn_commit 859,17985
rfn_contest 869,18175
rfn_noncontested 879,18381
rfn_vote 894,18688
task_other_peer 928,19793
cmp_uint64_t 939,19988
set_result_cb 962,20471
enum EvilnessType1221,28779
  EVILNESS_NONE,1223,28799
  EVILNESS_CRAM_ALL,1224,28816
  EVILNESS_CRAM_LEAD,1225,28837
  EVILNESS_CRAM_ECHO,1226,28859
  EVILNESS_SLACK,1227,28881
  EVILNESS_SLACK_A2A,1228,28899
enum EvilnessSubType1231,28925
  EVILNESS_SUB_NONE,1233,28948
  EVILNESS_SUB_REPLACEMENT,1234,28969
  EVILNESS_SUB_NO_REPLACEMENT,1235,28997
struct Evilness1238,29032
  enum EvilnessType type;1240,29050
  enum EvilnessSubType subtype;1241,29076
  unsigned int num;1242,29108
parse_evilness_cram_subtype 1247,29144
get_evilness 1270,29727
commit_set 1384,32895
put_diff 1553,38156
put_set 1570,38714
put_rfn 1591,39417
task_cancel_reconcile 1606,39930
apply_diff_to_rfn 1614,40044
diff_create 1644,40881
diff_compose 1657,41128
rfn_create 1698,42304
diff_destroy 1714,42659
rfn_majority 1730,42945
struct SetCopyCls1766,43776
  struct TaskEntry *task;task1768,43796
  struct SetKey dst_set_key;1769,43822
set_copy_cb 1774,43868
create_set_copy_for_task 1803,44614
struct SetMutationProgressCls1826,45358
  int num_pending;1828,45390
  struct TaskEntry *task;task1832,45471
set_mutation_done 1837,45514
try_finish_step_early 1855,45789
finish_step 1891,46776
task_start_apply_round 1930,47951
task_start_grade 2080,52646
task_start_reconcile 2175,55360
task_start_eval_echo 2301,59285
task_start_finish 2413,62893
start_task 2428,63280
run_ready_steps 2448,63818
finish_task 2489,65003
get_peer_idx 2514,65766
compute_global_id 2534,66446
peer_id_cmp 2561,67447
initialize_session_peer_list 2576,67818
lookup_task 2617,69071
set_listen_cb 2649,70183
put_task 2738,72372
install_step_timeouts 2777,73550
arrange_peers 2792,73840
step_depend_on 2832,74365
create_step 2872,75539
construct_task_graph_gradecast 2893,76047
construct_task_graph 3083,82396
check_client_join 3233,86366
handle_client_join 3255,86871
check_client_insert 3347,90305
handle_client_insert 3361,90581
handle_client_conclude 3424,92259
shutdown_task 3451,92924
run 3469,93291
client_connect_cb 3499,94132
client_disconnect_cb 3522,94757

src/contrib/service/consensus/consensus_protocol.h,850
#define GNUNET_CONSENSUS_PROTOCOL_H29,967
struct GNUNET_CONSENSUS_RoundContextMessage45,1282
  struct GNUNET_MessageHeader header;50,1400
  uint16_t kind GNUNET_PACKED;55,1487
  int16_t peer1 GNUNET_PACKED;61,1586
  int16_t peer2 GNUNET_PACKED;66,1681
  int16_t repetition GNUNET_PACKED;71,1765
  int16_t leader GNUNET_PACKED;78,1904
  uint16_t is_contested GNUNET_PACKED;88,2168
  CONSENSUS_MARKER_CONTESTED 94,2219
  CONSENSUS_MARKER_SIZE 95,2253
struct ConsensusElement102,2343
  uint16_t payload_type GNUNET_PACKED;108,2457
  uint8_t marker;113,2540
struct ConsensusSizeElement119,2591
  struct ConsensusElement ce;121,2621
  uint64_t size GNUNET_PACKED;123,2652
  uint8_t sender_index;124,2683
struct ConsensusStuffedElement128,2712
  struct ConsensusElement ce;130,2745
  struct GNUNET_HashCode rand GNUNET_PACKED;131,2775

src/contrib/service/consensus/plugin_block_consensus.c,405
struct BlockContext36,1092
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg41,1153
  struct GNUNET_BLOCK_Context *bc;bc46,1254
block_plugin_consensus_check_query 62,1654
block_plugin_consensus_check_block 84,2343
block_plugin_consensus_check_reply 126,3812
block_plugin_consensus_get_key 168,5235
libgnunet_plugin_block_consensus_init 182,5578
libgnunet_plugin_block_consensus_done 209,6350

src/contrib/service/consensus/consensus_api.c,877
#define LOG(33,1025
struct GNUNET_CONSENSUS_Handle39,1138
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg44,1210
  GNUNET_CONSENSUS_ElementCallback new_element_cb;49,1343
  void *new_element_cls;new_element_cls54,1442
  struct GNUNET_HashCode session_id;59,1543
  int joined;64,1661
  GNUNET_CONSENSUS_ConcludeCallback conclude_cb;69,1747
  void *conclude_cls;conclude_cls74,1855
  struct GNUNET_TIME_Absolute conclude_deadline;79,1932
  struct GNUNET_MQ_Handle *mq;mq84,2029
struct InsertDoneInfo92,2150
  GNUNET_CONSENSUS_InsertDoneCallback idc;94,2174
  void *cls;cls95,2217
check_new_element 106,2370
handle_new_element 121,2685
handle_conclude_done 146,3420
mq_error_handler 170,4119
GNUNET_CONSENSUS_create 196,5120
idc_adapter 253,7436
GNUNET_CONSENSUS_insert 273,7948
GNUNET_CONSENSUS_conclude 311,9164
GNUNET_CONSENSUS_destroy 335,9835

src/contrib/service/consensus/consensus.h,445
#define CONSENSUS_H27,891
struct GNUNET_CONSENSUS_JoinMessage37,1081
  struct GNUNET_MessageHeader header;42,1184
  uint32_t num_peers GNUNET_PACKED;48,1333
  struct GNUNET_HashCode session_id;53,1416
  struct GNUNET_TIME_AbsoluteNBO start;58,1501
  struct GNUNET_TIME_AbsoluteNBO deadline;63,1582
struct GNUNET_CONSENSUS_ElementMessage72,1705
  struct GNUNET_MessageHeader header;79,1895
  uint16_t element_type GNUNET_PACKED;84,2006

src/contrib/service/scalarproduct/gnunet-service-scalarproduct-ecc_bob.c,2134
#define LOG(39,1355
struct MpiElement45,1485
  const struct GNUNET_HashCode *key;key52,1673
  int64_t value;57,1751
struct BobServiceSession65,1881
  struct GNUNET_SERVICE_Client *client;client70,1964
  struct GNUNET_MQ_Handle *client_mq;client_mq75,2044
  struct GNUNET_CONTAINER_MultiHashMap *intersected_elements;intersected_elements80,2146
  struct GNUNET_SETI_Handle *intersection_set;intersection_set86,2367
  struct GNUNET_SETI_OperationHandle *intersection_op;intersection_op92,2567
  struct GNUNET_CADET_Port *port;port97,2655
  struct MpiElement *sorted_elements;sorted_elements102,2714
  struct GNUNET_CRYPTO_EccPoint prod_g_i_b_i;107,2795
  struct GNUNET_CRYPTO_EccPoint prod_h_i_b_i;112,2884
  uint32_t total;117,3009
  uint32_t client_received_element_count;123,3153
  uint32_t used_element_count;130,3396
  uint32_t cadet_received_element_count;136,3545
  enum GNUNET_SCALARPRODUCT_ResponseStatus status;144,3803
  int in_destroy;149,3918
  struct GNUNET_CADET_Channel *channel;channel154,3973
  struct GNUNET_PeerIdentity peer;159,4083
  struct GNUNET_HashCode session_id;164,4170
  struct GNUNET_MQ_Handle *cadet_mq;cadet_mq169,4261
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg176,4342
static struct GNUNET_CADET_Handle *my_cadet;my_cadet181,4437
static struct GNUNET_CRYPTO_EccDlogContext *edc;edc186,4534
free_element_cb 197,4743
destroy_service_session 214,5077
prepare_client_end_notification 271,6509
cb_channel_destruction 302,7491
bob_cadet_done_cb 326,8157
transmit_bobs_cryptodata_message 341,8478
copy_element_cb 370,9327
element_cmp 394,9991
check_alices_cryptodata_message 415,10533
handle_alices_cryptodata_message 456,11798
cb_intersection_element_removed 557,15571
start_intersection 626,17811
handle_alices_computation_request 666,19030
cb_channel_incoming 695,19902
check_bob_client_message_multipart 721,20610
handle_bob_client_message_multipart 754,21590
check_bob_client_message 820,23749
handle_bob_client_message 859,24865
shutdown_task 944,27962
client_connect_cb 973,28589
client_disconnect_cb 997,29158
run 1018,29649

src/contrib/service/scalarproduct/gnunet-service-scalarproduct-ecc.h,610
#define GNUNET_SERVICE_SCALARPRODUCT_ECC_H27,1012
struct EccServiceRequestMessage40,1462
  struct GNUNET_MessageHeader header;45,1583
  uint32_t reserved;50,1667
  struct GNUNET_HashCode session_id;55,1761
struct EccAliceCryptodataMessage64,1971
  struct GNUNET_MessageHeader header;69,2087
  uint32_t contained_element_count GNUNET_PACKED;74,2198
struct EccBobCryptodataMessage89,2637
  struct GNUNET_MessageHeader header;95,2779
  uint32_t contained_element_count GNUNET_PACKED;101,2913
  struct GNUNET_CRYPTO_EccPoint prod_g_i_b_i;106,3018
  struct GNUNET_CRYPTO_EccPoint prod_h_i_b_i;111,3119

src/contrib/service/scalarproduct/gnunet-service-scalarproduct-ecc_alice.c,2202
#define LOG(40,1387
#define MAX_RESULT 48,1663
#define MAX_RAM 56,1936
struct MpiElement61,2008
  const struct GNUNET_HashCode *key;key68,2196
  int64_t value;73,2284
struct AliceServiceSession81,2406
  struct GNUNET_HashCode session_id;86,2486
  struct GNUNET_PeerIdentity peer;91,2563
  struct GNUNET_SERVICE_Client *client;client96,2655
  struct GNUNET_MQ_Handle *client_mq;client_mq101,2747
  struct GNUNET_MQ_Handle *cadet_mq;cadet_mq106,2832
  struct GNUNET_CONTAINER_MultiHashMap *intersected_elements;intersected_elements112,2997
  struct GNUNET_SETI_Handle *intersection_set;intersection_set118,3212
  struct GNUNET_SETI_OperationHandle *intersection_op;intersection_op124,3412
  struct GNUNET_SETI_ListenHandle *intersection_listen;intersection_listen129,3544
  struct GNUNET_CADET_Channel *channel;channel134,3666
  struct MpiElement *sorted_elements;sorted_elements139,3787
  int product;144,3907
  uint32_t total;150,4036
  uint32_t used_element_count;157,4235
  uint32_t client_received_element_count;163,4366
  enum GNUNET_SCALARPRODUCT_ResponseStatus status;171,4625
  int in_destroy;177,4778
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg184,4840
static struct GNUNET_CRYPTO_EccDlogContext *edc;edc189,4946
static struct GNUNET_CRYPTO_EccScalar my_privkey;194,5034
static struct GNUNET_CRYPTO_EccScalar my_privkey_inv;199,5138
static struct GNUNET_CADET_Handle *my_cadet;my_cadet204,5233
free_element_cb 216,5502
destroy_service_session 233,5824
prepare_client_end_notification 291,7349
transmit_client_response 319,8141
cb_channel_destruction 397,10198
handle_bobs_cryptodata_message 424,10976
copy_element_cb 491,12843
element_cmp 514,13471
#define ELEMENT_CAPACITY 529,13774
send_alices_cryptodata_message 542,14149
cb_intersection_element_removed 646,17979
cb_intersection_request_alice 722,20636
client_request_complete_alice 768,21960
check_alice_client_message_multipart 832,24250
handle_alice_client_message_multipart 864,25158
check_alice_client_message 921,26972
handle_alice_client_message 959,28032
shutdown_task 1029,30239
client_connect_cb 1058,30868
client_disconnect_cb 1082,31443
run 1105,31984

src/contrib/service/scalarproduct/gnunet-scalarproduct.c,540
#define GCRYPT_NO_DEPRECATED26,919
#define LOG(36,1142
static struct GNUNET_HashCode session_key;43,1325
static struct GNUNET_PeerIdentity peer_id;48,1428
static char *input_peer_id;input_peer_id53,1550
static char *input_session_key;input_session_key58,1657
static char *input_elements;input_elements63,1753
static int ret 68,1814
static struct GNUNET_SCALARPRODUCT_ComputationHandle *computation;computation73,1884
responder_callback 83,2118
requester_callback 132,3389
shutdown_task 195,4965
run 214,5362
main 357,9870

src/contrib/service/scalarproduct/gnunet-service-scalarproduct_bob.c,2850
#define LOG(40,1378
struct MpiElement46,1508
  const struct GNUNET_HashCode *key;key53,1696
  gcry_mpi_t value;58,1774
struct BobServiceSession66,1907
  struct GNUNET_HashCode session_id;71,1985
  struct GNUNET_SERVICE_Client *client;client76,2079
  struct GNUNET_MQ_Handle *client_mq;client_mq81,2159
  struct GNUNET_CONTAINER_MultiHashMap *intersected_elements;intersected_elements86,2261
  struct GNUNET_SETI_Handle *intersection_set;intersection_set92,2482
  struct GNUNET_SETI_OperationHandle *intersection_op;intersection_op98,2682
  struct GNUNET_CADET_Port *port;port103,2787
  struct MpiElement *sorted_elements;sorted_elements108,2848
  struct GNUNET_CRYPTO_PaillierCiphertext *e_a;e_a113,2939
  struct GNUNET_CRYPTO_PaillierCiphertext *r;r118,3030
  struct GNUNET_CRYPTO_PaillierCiphertext *r_prime;r_prime123,3119
  struct GNUNET_CRYPTO_PaillierCiphertext s;128,3199
  struct GNUNET_CRYPTO_PaillierCiphertext s_prime;133,3273
  struct CadetIncomingSession *cadet;cadet139,3436
  uint32_t total;144,3553
  uint32_t client_received_element_count;150,3697
  uint32_t used_element_count;157,3940
  uint32_t cadet_received_element_count;163,4089
  uint32_t cadet_transmitted_element_count;169,4251
  enum GNUNET_SCALARPRODUCT_ResponseStatus status;177,4512
  int in_destroy;182,4627
  struct GNUNET_CADET_Channel *channel;channel187,4682
  struct GNUNET_PeerIdentity peer;192,4792
  struct GNUNET_CRYPTO_PaillierPublicKey remote_pubkey;197,4879
  struct GNUNET_MQ_Handle *cadet_mq;cadet_mq202,4989
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg209,5070
static struct GNUNET_CRYPTO_PaillierPublicKey my_pubkey;214,5161
static struct GNUNET_CRYPTO_PaillierPrivateKey my_privkey;219,5256
static gcry_mpi_t my_offset;224,5421
static struct GNUNET_CADET_Handle *my_cadet;my_cadet229,5491
free_element_cb 240,5696
destroy_service_session 257,6036
prepare_client_end_notification 333,7820
cb_channel_destruction 364,8802
bob_cadet_done_cb 388,9468
#define ELEMENT_CAPACITY 400,9723
transmit_bobs_cryptodata_message_multipart 413,10183
transmit_bobs_cryptodata_message 474,12557
#undef ELEMENT_CAPACITY529,14712
compute_square_sum 541,15017
compute_service_response 571,15834
copy_element_cb 721,20732
element_cmp 752,21569
transmit_cryptographic_reply 771,21982
check_alices_cryptodata_message 812,23244
handle_alices_cryptodata_message 849,24430
cb_intersection_element_removed 897,26240
start_intersection 965,28475
handle_alices_computation_request 1000,29532
cb_channel_incoming 1023,30229
check_bob_client_message_multipart 1049,30937
handle_bob_client_message_multipart 1083,32021
check_bob_client_message 1144,33974
handle_bob_client_message 1183,35090
shutdown_task 1266,38067
client_connect_cb 1290,38609
client_disconnect_cb 1314,39178
run 1335,39669

src/contrib/service/scalarproduct/scalarproduct_api.c,850
#define LOG(34,1169
(*GNUNET_SCALARPRODUCT_ResponseMessageHandler)GNUNET_SCALARPRODUCT_ResponseMessageHandler45,1446
struct GNUNET_SCALARPRODUCT_ComputationHandle54,1694
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg59,1778
  struct GNUNET_MQ_Handle *mq;mq64,1894
  GNUNET_SCALARPRODUCT_ContinuationWithStatus cont_status;69,2001
  GNUNET_SCALARPRODUCT_DatumProcessor cont_datum;74,2138
  void *cont_cls;cont_cls79,2251
  GNUNET_SCALARPRODUCT_ResponseMessageHandler response_proc;85,2370
  struct GNUNET_HashCode key;90,2501
check_response 103,2824
process_status_message 126,3455
handle_response 146,4122
check_unique 167,4702
mq_error_handler 200,5780
GNUNET_SCALARPRODUCT_accept_computation 214,6165
process_result_message 310,9580
GNUNET_SCALARPRODUCT_start_computation 361,10997
GNUNET_SCALARPRODUCT_cancel 457,14311

src/contrib/service/scalarproduct/gnunet-service-scalarproduct_alice.c,2674
#define LOG(40,1380
struct MpiElement46,1515
  const struct GNUNET_HashCode *key;key53,1703
  gcry_mpi_t value;58,1781
struct AliceServiceSession66,1906
  struct GNUNET_HashCode session_id;71,1986
  struct GNUNET_PeerIdentity peer;76,2063
  struct GNUNET_SERVICE_Client *client;client81,2155
  struct GNUNET_MQ_Handle *client_mq;client_mq86,2247
  struct GNUNET_MQ_Handle *cadet_mq;cadet_mq91,2332
  struct GNUNET_CONTAINER_MultiHashMap *intersected_elements;intersected_elements97,2497
  struct GNUNET_SETI_Handle *intersection_set;intersection_set103,2712
  struct GNUNET_SETI_OperationHandle *intersection_op;intersection_op109,2912
  struct GNUNET_SETI_ListenHandle *intersection_listen;intersection_listen114,3044
  struct GNUNET_CADET_Channel *channel;channel119,3166
  struct MpiElement *sorted_elements;sorted_elements124,3287
  struct GNUNET_CRYPTO_PaillierCiphertext *r;r129,3368
  struct GNUNET_CRYPTO_PaillierCiphertext *r_prime;r_prime134,3457
  struct GNUNET_CRYPTO_PaillierCiphertext s;139,3537
  struct GNUNET_CRYPTO_PaillierCiphertext s_prime;144,3611
  gcry_mpi_t product;149,3700
  uint32_t total;155,3836
  uint32_t used_element_count;162,4035
  uint32_t client_received_element_count;168,4166
  uint32_t cadet_received_element_count;174,4305
  enum GNUNET_SCALARPRODUCT_ResponseStatus status;182,4563
  int in_destroy;188,4716
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg195,4778
static struct GNUNET_CRYPTO_PaillierPublicKey my_pubkey;200,4869
static struct GNUNET_CRYPTO_PaillierPrivateKey my_privkey;205,4964
static gcry_mpi_t my_offset;210,5129
static struct GNUNET_CADET_Handle *my_cadet;my_cadet215,5199
free_element_cb 227,5468
destroy_service_session 242,5756
prepare_client_end_notification 315,7559
transmit_client_response 341,8312
cb_channel_destruction 416,10380
compute_square_sum_mpi_elements 442,11173
compute_square_sum 469,11867
compute_scalar_product 494,12430
check_bobs_cryptodata_multipart 604,15730
handle_bobs_cryptodata_multipart 636,16579
check_bobs_cryptodata_message 681,18079
handle_bobs_cryptodata_message 725,19268
copy_element_cb 781,21140
element_cmp 809,21905
#define ELEMENT_CAPACITY 822,22162
send_alices_cryptodata_message 835,22547
cb_intersection_element_removed 903,24916
cb_intersection_request_alice 980,27574
client_request_complete_alice 1020,28800
check_alice_client_message_multipart 1083,31055
handle_alice_client_message_multipart 1115,31963
check_alice_client_message 1169,33597
handle_alice_client_message 1207,34657
shutdown_task 1273,36698
client_connect_cb 1296,37228
client_disconnect_cb 1320,37803
run 1343,38344

src/contrib/service/scalarproduct/test_ecc_scalarproduct.c,117
static struct GNUNET_CRYPTO_EccDlogContext *edc;edc33,1028
test_sp 44,1255
#define CHECK(179,5434
main 190,5725

src/contrib/service/scalarproduct/scalarproduct.h,1053
#define SCALARPRODUCT_H26,954
#define LOG_GCRY(35,1158
struct AliceComputationMessage45,1548
  struct GNUNET_MessageHeader header;51,1686
  uint32_t element_count_total GNUNET_PACKED;56,1791
  uint32_t element_count_contained GNUNET_PACKED;61,1905
  uint32_t reserved GNUNET_PACKED;66,1986
  struct GNUNET_HashCode session_key;71,2094
  struct GNUNET_PeerIdentity peer;76,2208
struct BobComputationMessage88,2413
  struct GNUNET_MessageHeader header;94,2547
  uint32_t element_count_total GNUNET_PACKED;99,2652
  uint32_t element_count_contained GNUNET_PACKED;104,2766
  uint32_t reserved GNUNET_PACKED;109,2847
  struct GNUNET_HashCode session_key;114,2955
struct ComputationBobCryptodataMultipartMessage125,3134
  struct GNUNET_MessageHeader header;130,3223
  uint32_t element_count_contained GNUNET_PACKED;135,3329
struct ClientResponseMessage147,3554
  struct GNUNET_MessageHeader header;152,3624
  uint32_t product_length GNUNET_PACKED;157,3705
  uint32_t status GNUNET_PACKED;163,3879
  int32_t range GNUNET_PACKED;168,3990

src/contrib/service/scalarproduct/gnunet-service-scalarproduct.h,701
#define GNUNET_SERVICE_SCALARPRODUCT_H27,1010
struct ServiceRequestMessage40,1456
  struct GNUNET_MessageHeader header;45,1570
  uint32_t reserved;50,1654
  struct GNUNET_HashCode session_id;55,1748
  struct GNUNET_CRYPTO_PaillierPublicKey public_key;60,1822
struct AliceCryptodataMessage69,2052
  struct GNUNET_MessageHeader header;74,2161
  uint32_t contained_element_count GNUNET_PACKED;79,2272
struct BobCryptodataMessage94,2721
  struct GNUNET_MessageHeader header;100,2856
  uint32_t contained_element_count GNUNET_PACKED;105,2973
struct BobCryptodataMultipartMessage120,3401
  struct GNUNET_MessageHeader header;125,3479
  uint32_t contained_element_count GNUNET_PACKED;130,3592

src/contrib/service/conversation/microphone.c,412
struct Microphone37,1185
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg42,1241
  struct GNUNET_HELPER_Handle *record_helper;record_helper47,1337
  GNUNET_MICROPHONE_RecordedDataCallback rdc;52,1455
  void *rdc_cls;rdc_cls57,1539
process_record_messages 71,1880
enable 98,2529
disable 131,3395
destroy 153,3785
GNUNET_MICROPHONE_create_from_hardware 170,4087
GNUNET_MICROPHONE_destroy 193,4676

src/contrib/service/conversation/conversation_api.c,2047
enum CallerState36,1099
  CS_RINGING,41,1190
  CS_ACTIVE,46,1262
  CS_CALLEE_SUSPENDED,51,1324
  CS_CALLER_SUSPENDED,56,1400
  CS_BOTH_SUSPENDED61,1480
struct GNUNET_CONVERSATION_Caller68,1569
  struct GNUNET_CONVERSATION_Caller *next;next73,1652
  struct GNUNET_CONVERSATION_Caller *prev;prev78,1743
  struct GNUNET_CONVERSATION_Phone *phone;phone83,1815
  GNUNET_CONVERSATION_CallerEventHandler event_handler;88,1911
  void *event_handler_cls;event_handler_cls93,2014
  struct GNUNET_SPEAKER_Handle *speaker;speaker98,2097
  struct GNUNET_MICROPHONE_Handle *mic;mic103,2197
  struct GNUNET_CRYPTO_PublicKey caller_id;108,2290
  uint32_t cid;113,2409
  enum CallerState state;118,2472
enum PhoneState125,2542
  PS_REGISTER 130,2614
  PS_READY135,2677
struct GNUNET_CONVERSATION_Phone150,3283
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg155,3354
  struct GNUNET_CONVERSATION_Caller *caller_head;caller_head160,3451
  struct GNUNET_CONVERSATION_Caller *caller_tail;caller_tail165,3549
  GNUNET_CONVERSATION_PhoneEventHandler event_handler;170,3652
  void *event_handler_cls;event_handler_cls175,3754
  struct GNUNET_NAMESTORE_Handle *ns;ns180,3845
  struct GNUNET_MQ_Handle *mq;mq185,3954
  struct GNUNET_CONVERSATION_PhoneRecord my_record;190,4024
  struct GNUNET_CRYPTO_PrivateKey my_zone;195,4107
  enum PhoneState state;200,4197
transmit_phone_audio 221,4606
check_phone_ring 248,5371
handle_phone_ring 261,5648
find_caller 313,7178
handle_phone_hangup 332,7607
handle_phone_suspend 392,9469
handle_phone_resume 437,10623
check_phone_audio 485,11923
handle_phone_audio 503,12249
phone_error_handler 541,13164
clean_up_callers 560,13600
reconnect_phone 588,14403
GNUNET_CONVERSATION_phone_create 650,16815
GNUNET_CONVERSATION_phone_get_record 713,18829
GNUNET_CONVERSATION_caller_pick_up 735,19594
GNUNET_CONVERSATION_caller_hang_up 771,20946
GNUNET_CONVERSATION_phone_destroy 805,21780
GNUNET_CONVERSATION_caller_suspend 830,22325
GNUNET_CONVERSATION_caller_resume 865,23324

src/contrib/service/conversation/gnunet_gst.c,659
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg31,929
dump_buffer 35,984
gg_load_configuration 71,1581
write_data 149,3395
on_appsink_new_sample 170,3739
pl_graph 233,5177
gnunet_gst_bus_call 252,5667
state_changed_cb 291,6398
application_cb 331,7309
error_cb 339,7436
eos_cb 347,7551
gg_setup_gst_bus 355,7662
feed_buffer_to_gst 496,11406
gst_element_factory_make_debug 555,12902
lf 587,13486
autoaudiosink_child_added 598,13645
autoaudiosource_child_added 615,14118
get_pipeline 625,14438
decoder_ogg_pad_added 636,14604
gnunet_read 655,15113
stdin_receiver 703,16177
get_app 732,16844
get_coder 816,19290
get_audiobin 950,23854

src/contrib/service/conversation/gnunet-conversation.c,2392
#define MAX_MESSAGE_LENGTH 36,1171
#define XSTRINGIFY(38,1204
#define STRINGIFY(40,1241
enum PhoneState45,1309
  PS_LOOKUP_EGO,50,1380
  PS_LISTEN,55,1441
  PS_ACCEPTED,60,1508
  PS_ERROR65,1556
enum CallState72,1617
  CS_RESOLVING,77,1693
  CS_RINGING,82,1769
  CS_CONNECTED,87,1861
  CS_SUSPENDED92,1936
struct CallList99,1990
  struct CallList *prev;prev104,2032
  struct CallList *next;next109,2082
  struct GNUNET_CONVERSATION_Caller *caller;caller114,2156
  struct GNUNET_CRYPTO_PublicKey caller_id;119,2254
  unsigned int caller_num;124,2343
static struct GNUNET_CONVERSATION_Phone *phone;phone131,2399
static struct GNUNET_CONVERSATION_Call *call;call136,2499
static struct CallList *cl_active;cl_active142,2660
static struct CallList *cl_head;cl_head147,2745
static struct CallList *cl_tail;cl_tail152,2828
static char *line;line157,2928
static struct GNUNET_SCHEDULER_Task *handle_cmd_task;handle_cmd_task162,2991
static struct GNUNET_SPEAKER_Handle *speaker;speaker167,3070
static struct GNUNET_MICROPHONE_Handle *mic;mic172,3144
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg177,3220
static struct GNUNET_IDENTITY_Ego *my_caller_id;my_caller_id182,3289
static struct GNUNET_IDENTITY_Handle *id;id187,3378
static char *ego_name;ego_name192,3449
static struct GNUNET_CRYPTO_PublicKey peer_key;197,3536
static char *peer_name;peer_name202,3642
static struct GNUNET_DISK_FileHandle *stdin_fh;stdin_fh207,3701
static enum PhoneState phone_state;212,3788
static enum CallState call_state;217,3862
static unsigned int caller_num_gen;222,3964
static char *address;address227,4040
static int verbose;232,4086
phone_event_handler 244,4332
caller_event_handler 311,6209
start_phone 336,6789
call_event_handler 382,8009
typedef void (*ActionFunction)ActionFunction446,9745
struct VoipCommand452,9848
  const char *command;command457,9919
  ActionFunction Action;462,9989
  const char *helptext;helptext467,10059
do_quit 486,10336
do_unknown 499,10516
do_call 511,10699
do_accept 571,12081
do_address 644,13731
do_status 662,14035
do_suspend 749,15993
do_resume 797,16950
do_reject 874,18631
static struct VoipCommand commands[commands937,20032
do_help 976,21269
do_stop_task 1009,21954
handle_command_string 1051,22743
handle_command 1085,23453
identity_cb 1112,24179
run 1153,25138
main 1186,26061

src/contrib/service/conversation/gnunet-conversation-test.c,630
#define TIMEOUT 34,1118
struct Recording40,1228
  struct Recording *next;next45,1279
  struct Recording *prev;prev50,1338
  size_t size;55,1411
static int ret;62,1461
static struct GNUNET_MICROPHONE_Handle *microphone;microphone67,1515
static struct GNUNET_SPEAKER_Handle *speaker;speaker72,1602
static struct GNUNET_SCHEDULER_Task *switch_task;switch_task77,1713
static struct GNUNET_SCHEDULER_Task *st;st82,1794
static struct Recording *rec_head;rec_head87,1881
static struct Recording *rec_tail;rec_tail92,1962
do_shutdown 101,2060
switch_to_speaker 130,2699
record 171,3799
run 199,4552
main 241,5870

src/contrib/service/conversation/gnunet_gst_def.h,1251
typedef struct GNUNET_gstData GNUNET_gstData;87,2106
struct GNUNET_gstData88,2152
  GstPipeline *pipeline;pipeline91,2189
  struct AudioMessage *audio_message;audio_message94,2227
  struct GNUNET_MessageStreamTokenizer *stdin_mst;stdin_mst95,2265
  GstElement *appsrc;appsrc96,2316
  GstElement *appsink;appsink97,2338
  int audiobackend;99,2375
  int dropsilence;100,2395
  int usertp;101,2414
  int pure_ogg;102,2428
  char *jack_pp_in;jack_pp_in103,2444
  char *jack_pp_out;jack_pp_out104,2464
#define DEBUG_READ_PURE_OGG 108,2490
#define DEBUG_RECORD_PURE_OGG 109,2520
#define MAXLINE 115,2597
#define BUFFER_TIME 121,2700
#define LATENCY_TIME 127,2807
#define OPUS_CHANNELS 135,2939
#define MAX_PAYLOAD_SIZE 140,3013
#define OPUS_FRAME_SIZE 147,3213
#define PACKET_LOSS_PERCENTAGE 152,3302
#define INBAND_FEC_MODE 158,3416
#define BUFFER_TIME 164,3528
#define LATENCY_TIME 170,3648
#define OGG_MAX_DELAY 177,3835
#define OGG_MAX_PAGE_DELAY 184,4009
#define SAMPLING_RATE 186,4039
  AUTO,190,4075
  JACK,191,4083
  ALSA,192,4091
  FAKE,193,4099
  TEST194,4107
  SOURCE,199,4125
  SINK200,4135
  ENCODER,205,4153
  DECODER206,4164
  FAIL,211,4185
  OK212,4193
  SPEAKER,217,4209
  MICROPHONE218,4220

src/contrib/service/conversation/gnunet_gst_test.c,13
main 31,933

src/contrib/service/conversation/test_conversation_api.c,1698
#define FREQ 36,1306
#define TIMEOUT 38,1387
static int ok 40,1465
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg42,1485
static struct GNUNET_IDENTITY_Handle *id;id44,1540
static struct GNUNET_IDENTITY_Operation *op;op46,1583
static struct GNUNET_CONVERSATION_Phone *phone;phone48,1629
static struct GNUNET_NAMESTORE_Handle *ns;ns50,1678
static struct GNUNET_CONVERSATION_Call *call;call52,1722
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe54,1769
static struct GNUNET_CONVERSATION_Caller *active_caller;active_caller56,1817
static char *gns_name;gns_name58,1875
static char *gns_caller_id;gns_caller_id60,1899
static GNUNET_MICROPHONE_RecordedDataCallback phone_rdc;62,1928
static void *phone_rdc_cls;phone_rdc_cls64,1986
static GNUNET_MICROPHONE_RecordedDataCallback call_rdc;66,2015
static void *call_rdc_cls;call_rdc_cls68,2072
static struct GNUNET_SCHEDULER_Task *phone_task;phone_task70,2100
static struct GNUNET_SCHEDULER_Task *call_task;call_task72,2150
phone_send 76,2212
call_send 90,2524
enable_speaker 104,2828
disable_speaker 114,2974
play 123,3102
destroy_speaker 156,3884
static struct GNUNET_SPEAKER_Handle call_speaker 164,4001
static struct GNUNET_SPEAKER_Handle phone_speaker 171,4340
enable_mic 179,4694
disable_mic 203,5197
destroy_mic 226,5599
static struct GNUNET_MICROPHONE_Handle call_mic 234,5708
static struct GNUNET_MICROPHONE_Handle phone_mic 240,5971
end_test 252,6327
caller_event_handler 291,6980
phone_event_handler 305,7278
call_event_handler 344,8390
caller_ego_create_cont 387,9403
namestore_put_cont 398,9640
identity_cb 412,10022
phone_ego_create_cont 468,11882
run 479,12116
main 497,12635

src/contrib/service/conversation/conversation.h,2426
#define CONVERSATION_H28,965
#define MAX_TRANSMIT_DELAY 41,1148
#define HIGH_BIT 50,1374
struct AudioMessage58,1518
  struct GNUNET_MessageHeader header;63,1605
struct ClientPhoneRegisterMessage72,1738
  struct GNUNET_MessageHeader header;77,1852
  uint32_t reserved GNUNET_PACKED;82,1921
  struct GNUNET_HashCode line_port;87,2011
struct ClientPhoneRingMessage94,2111
  struct GNUNET_MessageHeader header;99,2217
  uint32_t cid GNUNET_PACKED;105,2380
  uint32_t key_len;110,2452
struct ClientPhoneSuspendMessage121,2603
  struct GNUNET_MessageHeader header;126,2715
  uint32_t cid GNUNET_PACKED;132,2852
struct ClientPhoneResumeMessage139,2948
  struct GNUNET_MessageHeader header;144,3058
  uint32_t cid GNUNET_PACKED;150,3195
struct ClientPhonePickupMessage157,3290
  struct GNUNET_MessageHeader header;162,3401
  uint32_t cid GNUNET_PACKED;168,3538
struct ClientPhoneHangupMessage176,3716
  struct GNUNET_MessageHeader header;181,3827
  uint32_t cid GNUNET_PACKED;187,3964
struct ClientAudioMessage194,4060
  struct GNUNET_MessageHeader header;199,4156
  uint32_t cid GNUNET_PACKED;205,4295
struct ClientCallMessage214,4416
  struct GNUNET_MessageHeader header;219,4517
  uint32_t reserved GNUNET_PACKED;224,4586
  struct GNUNET_PeerIdentity target;229,4671
  struct GNUNET_HashCode line_port;234,4764
  uint32_t key_len;239,4842
struct ClientPhonePickedupMessage251,5014
  struct GNUNET_MessageHeader header;256,5129
  uint32_t cid GNUNET_PACKED;262,5267
struct CadetPhoneRingInfoPS270,5423
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;276,5555
  struct GNUNET_HashCode line_port;281,5656
  struct GNUNET_PeerIdentity target_peer;286,5738
  struct GNUNET_TIME_AbsoluteNBO expiration_time;291,5830
struct CadetPhoneRingMessage299,5978
  struct GNUNET_MessageHeader header;304,6086
  uint32_t reserved GNUNET_PACKED;309,6155
  struct GNUNET_TIME_AbsoluteNBO expiration_time;314,6240
  uint32_t key_len;319,6330
  uint32_t sig_len;324,6396
struct CadetPhoneHangupMessage336,6620
  struct GNUNET_MessageHeader header;341,6733
struct CadetPhonePickupMessage348,6817
  struct GNUNET_MessageHeader header;353,6930
struct CadetPhoneSuspendMessage360,7019
  struct GNUNET_MessageHeader header;365,7133
struct CadetPhoneResumeMessage372,7220
  struct GNUNET_MessageHeader header;377,7332
struct CadetAudioMessage384,7423
  struct GNUNET_MessageHeader header;389,7521

src/contrib/service/conversation/conversation_api_call.c,1335
enum CallState38,1159
  CS_LOOKUP 43,1229
  CS_RINGING,48,1285
  CS_ACTIVE,53,1356
  CS_SHUTDOWN,58,1415
  CS_SUSPENDED_CALLER,63,1486
  CS_SUSPENDED_CALLEE,68,1565
  CS_SUSPENDED_BOTH73,1656
struct GNUNET_CONVERSATION_Call80,1721
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg85,1791
  struct GNUNET_IDENTITY_Ego *caller_id;caller_id90,1879
  char *callee;callee95,1975
  struct GNUNET_SPEAKER_Handle *speaker;speaker100,2022
  struct GNUNET_MICROPHONE_Handle *mic;mic105,2097
  GNUNET_CONVERSATION_CallEventHandler event_handler;110,2185
  void *event_handler_cls;event_handler_cls115,2286
  struct GNUNET_MQ_Handle *mq;mq120,2384
  struct GNUNET_GNS_Handle *gns;gns125,2466
  struct GNUNET_GNS_LookupWithTldRequest *gns_lookup;gns_lookup130,2546
  struct GNUNET_CONVERSATION_PhoneRecord phone_record;135,2676
  enum CallState state;140,2777
transmit_call_audio 161,3172
handle_call_suspend 188,3882
handle_call_resume 239,5049
handle_call_picked_up 295,6335
handle_call_hangup 340,7382
check_call_audio 382,8299
handle_call_audio 399,8607
handle_gns_response 450,9852
call_error_handler 508,11813
fail_call 532,12327
GNUNET_CONVERSATION_call_start 567,13602
GNUNET_CONVERSATION_call_stop 648,16733
GNUNET_CONVERSATION_call_suspend 687,17603
GNUNET_CONVERSATION_call_resume 721,18541

src/contrib/service/conversation/gnunet_gst.h,41
#define gst_element_factory_make(36,986

src/contrib/service/conversation/gnunet-helper-audio-record.c,1918
#define DEBUG_RECORD_PURE_OGG 43,1351
#define SAMPLING_RATE 48,1409
#define FRAME_SIZE_MS 55,1548
#define FRAME_SIZE 60,1634
#define PAGE_WATERLINE 71,2039
#define MAX_PAYLOAD_BYTES 76,2109
#define CHANNELS 81,2171
#define CONV_OPUS_PACKET_LOSS_PERCENTAGE 90,2456
#define CONV_OPUS_ENCODING_COMPLEXITY 98,2654
#define CONV_OPUS_INBAND_FEC 105,2832
#define CONV_OPUS_SIGNAL 117,3216
#define CONV_OPUS_APP_TYPE 138,4238
static pa_sample_spec sample_spec 143,4374
struct OpusHeadPacket152,4593
  uint8_t magic[magic154,4617
  uint8_t version;155,4637
  uint8_t channels;156,4656
  uint16_t preskip GNUNET_PACKED;157,4676
  uint32_t sampling_rate GNUNET_PACKED;158,4710
  uint16_t gain GNUNET_PACKED;159,4750
  uint8_t channel_mapping;160,4781
struct OpusCommentsPacket163,4812
  uint8_t magic[magic165,4840
  uint32_t vendor_length;166,4860
static pa_mainloop_api *mainloop_api;mainloop_api181,5146
static pa_mainloop *m;m186,5216
static pa_context *context;context191,5270
static pa_stream *stream_in;stream_in196,5338
static pa_io_event *stdio_event;stdio_event201,5400
static OpusEncoder *enc;enc206,5458
static unsigned char *opus_data;opus_data211,5519
static float *pcm_buffer;pcm_buffer216,5599
static int pcm_length;221,5686
static char *transmit_buffer;transmit_buffer226,5734
static size_t transmit_buffer_length;231,5799
static size_t transmit_buffer_index;236,5880
static struct AudioMessage *audio_message;audio_message241,5952
static ogg_stream_state os;246,6023
static int32_t packet_id;251,6077
static int64_t enc_granulepos;256,6146
static int dump_pure_ogg;263,6298
quit 270,6380
write_data 279,6491
write_page 304,6911
packetizer 335,7775
stream_read_callback 415,9723
exit_signal_callback 467,11072
stream_state_callback 486,11439
context_state_callback 548,13351
pa_init 616,15054
opus_init 666,16309
ogg_init 690,17065
main 786,19721

src/contrib/service/conversation/speaker.c,301
struct Speaker36,1108
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg41,1161
  struct GNUNET_HELPER_Handle *playback_helper;playback_helper46,1259
enable 57,1476
disable 86,2240
destroy 108,2658
play 126,3031
GNUNET_SPEAKER_create_from_hardware 158,3862
GNUNET_SPEAKER_destroy 182,4419

src/contrib/service/conversation/test_conversation_api_twocalls.c,2488
#define FREQ 38,1417
#define TIMEOUT 40,1498
#define LOG(42,1576
#define LOG_DEBUG(44,1631
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg46,1705
static struct GNUNET_IDENTITY_Handle *id;id48,1760
static struct GNUNET_IDENTITY_Operation *op;op50,1803
static struct GNUNET_CONVERSATION_Phone *phone;phone52,1849
static struct GNUNET_NAMESTORE_Handle *ns;ns54,1898
static struct GNUNET_CONVERSATION_Call *call1;call156,1942
static struct GNUNET_CONVERSATION_Call *call2;call258,1990
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe60,2038
static struct GNUNET_CONVERSATION_Caller *active_caller1;active_caller162,2086
static struct GNUNET_CONVERSATION_Caller *active_caller2;active_caller264,2145
static char *gns_name;gns_name66,2204
static char *gns_caller_id;gns_caller_id68,2228
static GNUNET_MICROPHONE_RecordedDataCallback phone_rdc;70,2257
static void *phone_rdc_cls;phone_rdc_cls72,2315
static struct GNUNET_SCHEDULER_Task *phone_task;phone_task74,2344
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task76,2394
static const char *caller1 caller181,2490
static const char *caller2 caller286,2575
static const char *phone0 phone091,2659
#define CALLER1 94,2698
#define CALLER2 95,2723
#define PHONE0 96,2748
#define CLS_STR(98,2772
static int call1_finished;104,2868
static int call2_finished;109,2944
struct MicContext111,2972
  GNUNET_MICROPHONE_RecordedDataCallback rdc;113,2992
  void *rdc_cls;rdc_cls115,3039
  struct GNUNET_SCHEDULER_Task *call_task;call_task117,3057
static struct MicContext call1_mic_ctx;120,3104
static struct MicContext call2_mic_ctx;121,3144
phone_send 126,3241
call_send 139,3520
enable_speaker 153,3821
disable_speaker 164,3985
play 174,4131
destroy_speaker 215,5068
static struct GNUNET_SPEAKER_Handle call1_speaker 223,5189
static struct GNUNET_SPEAKER_Handle call2_speaker 230,5532
static struct GNUNET_SPEAKER_Handle phone_speaker 237,5875
enable_mic 245,6228
disable_mic 271,6883
destroy_mic 294,7352
static struct GNUNET_MICROPHONE_Handle call1_mic 302,7465
static struct GNUNET_MICROPHONE_Handle call2_mic 308,7731
static struct GNUNET_MICROPHONE_Handle phone_mic 314,7997
end_test 326,8335
do_shutdown 341,8539
caller_event_handler 389,9361
phone_event_handler 403,9674
call_event_handler 463,11415
caller_ego_create_cont 509,12400
namestore_put_cont 520,12637
identity_cb 534,13019
phone_ego_create_cont 597,15296
run 608,15530
main 627,16118

src/contrib/service/conversation/plugin_gnsrecord_conversation.c,363
conversation_value_to_string 47,1624
conversation_string_to_value 107,3177
  const char *name;name173,5088
  uint32_t number;174,5108
} name_map[name_map175,5127
conversation_typename_to_number 189,5431
conversation_number_to_typename 211,5949
libgnunet_plugin_gnsrecord_conversation_init 232,6305
libgnunet_plugin_gnsrecord_conversation_done 253,6878

src/contrib/service/conversation/gnunet-helper-audio-playback.c,1516
#define DEBUG_READ_PURE_OGG 43,1350
#define DEBUG_DUMP_DECODED_OGG 44,1380
#define MAXLINE 46,1414
#define SAMPLING_RATE 48,1436
#define CHANNELS 50,1465
#define MAX_FRAME_SIZE 53,1506
static pa_sample_spec sample_spec 58,1603
static int dump_to_stdout;65,1756
static pa_mainloop_api *mainloop_api;mainloop_api71,1826
static pa_threaded_mainloop *m;m76,1905
static pa_context *context;context81,1968
static pa_stream *stream_out;stream_out86,2033
static OpusDecoder *dec;dec91,2088
static float *pcm_buffer;pcm_buffer96,2141
static int frame_size;101,2211
static int ready_pipe[ready_pipe106,2312
static ogg_sync_state oy;111,2365
static ogg_stream_state os;116,2421
static int channels;118,2450
static int preskip;120,2472
static float gain;122,2493
struct OpusHeadPacket127,2609
  uint8_t magic[magic129,2633
  uint8_t version;130,2653
  uint8_t channels;131,2672
  uint16_t preskip GNUNET_PACKED;132,2692
  uint32_t sampling_rate GNUNET_PACKED;133,2726
  uint16_t gain GNUNET_PACKED;134,2766
  uint8_t channel_mapping;135,2797
process_header 146,3040
fwrite_le32 218,4872
fwrite_le16 231,5174
write_wav_header 242,5372
audio_write 270,5968
# define fminf(312,7055
# define fmaxf(313,7106
# define float2int(314,7157
quit 350,8210
ogg_demux_and_decode 359,8321
stdin_receiver 584,15985
stream_write_callback 618,16743
exit_signal_callback 639,17156
context_state_callback 658,17553
pa_init 725,19399
ogg_init 771,20655
drain_callback 778,20708
main 796,21074

src/contrib/service/conversation/gnunet-service-conversation.c,2200
#define RING_TIMEOUT 43,1488
enum ChannelStatus55,1716
  CS_CALLEE_INIT,60,1807
  CS_CALLEE_RINGING,65,1900
  CS_CALLEE_CONNECTED,70,1955
  CS_CALLEE_SHUTDOWN,75,2059
  CS_CALLER_CALLING,80,2145
  CS_CALLER_CONNECTED,85,2200
  CS_CALLER_SHUTDOWN90,2304
struct Channel100,2584
  struct Channel *next;next105,2633
  struct Channel *prev;prev110,2690
  struct Line *line;line115,2766
  struct GNUNET_CADET_Channel *channel;channel120,2829
  struct GNUNET_MQ_Handle *mq;mq125,2922
  struct GNUNET_MQ_Envelope *env;env130,3017
  uint32_t cid;135,3126
  enum ChannelStatus status;140,3189
  int8_t suspended_remote;145,3296
  int8_t suspended_local;150,3403
struct Line157,3506
  struct Channel *channel_head;channel_head162,3552
  struct Channel *channel_tail;channel_tail167,3617
  struct GNUNET_SERVICE_Client *client;client172,3694
  struct GNUNET_MQ_Handle *mq;mq177,3781
  struct GNUNET_CADET_Port *port;port182,3845
  struct GNUNET_HashCode line_port;188,3993
  uint32_t cid_gen;193,4074
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg200,4129
static struct GNUNET_CADET_Handle *cadet;cadet205,4212
static struct GNUNET_PeerIdentity my_identity;210,4289
find_channel_by_line 222,4538
handle_client_pickup_message 238,4930
clean_up_channel 307,6737
destroy_line_cadet_channels 345,7512
mq_done_finish_caller_shutdown 364,7929
handle_client_hangup_message 408,8669
handle_client_suspend_message 479,10632
handle_client_resume_message 557,12731
channel_audio_sent_notify 633,14772
check_client_audio_message 649,15067
handle_client_audio_message 664,15365
check_cadet_ring_message 739,17683
handle_cadet_ring_message 752,17940
handle_cadet_hangup_message 838,20656
handle_cadet_pickup_message 887,21771
handle_cadet_suspend_message 939,23018
handle_cadet_resume_message 992,24189
check_cadet_audio_message 1054,25518
handle_cadet_audio_message 1069,25836
inbound_end 1107,27027
check_client_call_message 1126,27537
handle_client_call_message 1139,27817
inbound_channel 1239,32209
client_connect_cb 1270,33080
client_disconnect_cb 1292,33567
handle_client_register_message 1324,34316
do_shutdown 1381,36671
run 1400,36955

src/contrib/service/conversation/gnunet-helper-audio-record-gst.c,588
#define DEBUG_RECORD_PURE_OGG 37,1236
#define OPUS_CHANNELS 44,1373
#define MAX_PAYLOAD_SIZE 49,1447
#define OPUS_FRAME_SIZE 56,1647
#define PACKET_LOSS_PERCENTAGE 61,1736
#define INBAND_FEC_MODE 67,1850
#define BUFFER_TIME 73,1962
#define LATENCY_TIME 79,2082
#define OGG_MAX_DELAY 86,2269
#define OGG_MAX_PAGE_DELAY 93,2443
static GstElement *pipeline;pipeline98,2499
static int dump_pure_ogg;101,2558
quit 105,2604
bus_call 113,2712
source_child_added 147,3314
signalhandler 157,3615
main 164,3658
  typedef void (*SignalHandlerPointer)SignalHandlerPointer173,3879

src/contrib/service/conversation/gnunet-helper-audio-playback-gst.c,764
#define DEBUG_READ_PURE_OGG 37,1234
#define MAXLINE 42,1308
#define BUFFER_TIME 48,1411
#define LATENCY_TIME 54,1518
struct GNUNET_MessageStreamTokenizer *stdin_mst;stdin_mst59,1597
static GstElement *pipeline;pipeline64,1673
static GstElement *source;source69,1773
static GstElement *demuxer;demuxer71,1801
static GstElement *decoder;decoder72,1829
static GstElement *conv;conv73,1857
static GstElement *resampler;resampler74,1882
static GstElement *sink;sink75,1912
static int abort_read;80,1984
sink_child_added 84,2021
ogg_pad_added 98,2390
quit 117,2817
bus_call 128,3019
signalhandler 166,3694
feed_buffer_to_gst 173,3744
stdin_receiver 235,5359
main 258,5807
  typedef void (*SignalHandlerPointer)SignalHandlerPointer264,5893

src/contrib/service/conversation/test_conversation_api_reject.c,1038
#define TIMEOUT 36,1277
static int ok 38,1355
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg40,1375
static struct GNUNET_IDENTITY_Handle *id;id42,1430
static struct GNUNET_IDENTITY_Operation *op;op44,1473
static struct GNUNET_CONVERSATION_Phone *phone;phone46,1519
static struct GNUNET_NAMESTORE_Handle *ns;ns48,1568
static struct GNUNET_CONVERSATION_Call *call;call50,1612
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe52,1659
static char *gns_name;gns_name54,1707
static char *gns_caller_id;gns_caller_id56,1731
enable_speaker 60,1772
disable_speaker 69,1875
play 77,1955
destroy_speaker 87,2095
static struct GNUNET_SPEAKER_Handle call_speaker 93,2143
enable_mic 101,2493
disable_mic 114,2707
destroy_mic 122,2783
static struct GNUNET_MICROPHONE_Handle call_mic 128,2827
end_test 140,3180
phone_event_handler 179,3833
call_event_handler 204,4457
caller_ego_create_cont 240,5342
namestore_put_cont 251,5579
identity_cb 265,5961
phone_ego_create_cont 321,7821
run 332,8055
main 350,8574

src/plugin/dht/plugin_block_dht.c,332
#define DEBUG_DHT 34,1219
#define BLOOMFILTER_K 40,1340
block_plugin_dht_create_group 55,1926
block_plugin_dht_check_query 99,3429
block_plugin_dht_check_block 131,4231
block_plugin_dht_check_reply 183,5853
block_plugin_dht_get_key 234,7419
libgnunet_plugin_block_dht_init 276,8455
libgnunet_plugin_block_dht_done 299,9076

src/plugin/peerstore/plugin_peerstore_sqlite.c,1097
#define BUSY_TIMEOUT_MS 45,1579
#define LOG_SQLITE(52,1776
#define LOG(61,2332
struct Plugin66,2465
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg71,2519
  char *fn;fn76,2605
  sqlite3 *dbh;dbh81,2666
  sqlite3_stmt *insert_peerstoredata;insert_peerstoredata86,2749
  sqlite3_stmt *select_peerstoredata;select_peerstoredata91,2854
  sqlite3_stmt *select_peerstoredata_by_pid;select_peerstoredata_by_pid96,2959
  sqlite3_stmt *select_peerstoredata_by_key;select_peerstoredata_by_key101,3071
  sqlite3_stmt *select_peerstoredata_by_all;select_peerstoredata_by_all106,3183
  sqlite3_stmt *expire_peerstoredata;expire_peerstoredata112,3315
  sqlite3_stmt *delete_peerstoredata;delete_peerstoredata118,3428
peerstore_sqlite_delete_records 132,3775
peerstore_sqlite_expire_records 187,5296
peerstore_sqlite_iterate_records 242,6920
peerstore_sqlite_store_record 406,11714
sql_exec 469,13641
sql_prepare 501,14341
database_setup 536,15201
database_shutdown 664,19653
libgnunet_plugin_peerstore_sqlite_init 694,20379
libgnunet_plugin_peerstore_sqlite_done 729,21319

src/plugin/peerstore/test_plugin_peerstore.c,343
static int ok;31,1040
static const char *plugin_name;plugin_name36,1094
static struct GNUNET_PEERSTORE_PluginFunctions *psp;psp39,1128
static struct GNUNET_PeerIdentity p1;41,1182
unload_plugin 51,1355
load_plugin 72,1841
test_record 98,2505
get_record 126,3279
store_cont 141,3792
put_record 151,3935
run 169,4619
main 190,5027

src/plugin/setu/plugin_block_setu_test.c,270
block_plugin_setu_test_check_query 43,1436
block_plugin_setu_test_check_block 73,2236
block_plugin_setu_test_check_reply 108,3399
block_plugin_setu_test_get_key 145,4676
libgnunet_plugin_block_setu_test_init 164,5114
libgnunet_plugin_block_setu_test_done 186,5750

src/plugin/namecache/plugin_namecache_flat.c,589
struct Plugin35,1095
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1111
  char *fn;fn42,1197
  struct GNUNET_CONTAINER_MultiHashMap *hm;hm47,1235
struct FlatFileEntry50,1283
  struct GNUNET_GNSRECORD_Block *block;block55,1329
  struct GNUNET_HashCode query;60,1393
database_setup 72,1667
store_and_free_entries 197,5399
database_shutdown 239,6509
expire_blocks 266,7354
namecache_expire_blocks 293,8020
namecache_cache_block 309,8432
namecache_lookup_block 358,10088
libgnunet_plugin_namecache_flat_init 383,10800
libgnunet_plugin_namecache_flat_done 415,11650

src/plugin/namecache/plugin_namecache_postgres.c,455
#define LOG(33,1089
struct Plugin39,1225
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg41,1241
  struct GNUNET_PQ_Context *dbh;dbh46,1334
database_setup 59,1637
namecache_postgres_expire_blocks 98,3068
delete_old_block 122,3781
namecache_postgres_cache_block 148,4617
namecache_postgres_lookup_block 196,6240
database_shutdown 255,7978
libgnunet_plugin_namecache_postgres_init 269,8254
libgnunet_plugin_namecache_postgres_done 301,9122

src/plugin/namecache/plugin_namecache_sqlite.c,694
#define BUSY_TIMEOUT_MS 43,1539
#define LOG_SQLITE(51,1737
#define LOG(60,2293
struct Plugin66,2427
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg68,2443
  char *fn;fn73,2529
  sqlite3 *dbh;dbh78,2590
  sqlite3_stmt *cache_block;cache_block83,2660
  sqlite3_stmt *delete_block;delete_block88,2751
  sqlite3_stmt *lookup_block;lookup_block93,2838
  sqlite3_stmt *expire_blocks;expire_blocks98,2930
database_setup 111,3204
database_shutdown 218,6944
namecache_sqlite_expire_blocks 272,8488
namecache_sqlite_cache_block 327,9874
namecache_sqlite_lookup_block 455,13908
libgnunet_plugin_namecache_sqlite_init 543,16235
libgnunet_plugin_namecache_sqlite_done 575,17091

src/plugin/namecache/test_plugin_namecache.c,147
static int ok;31,1040
static const char *plugin_name;plugin_name36,1094
unload_plugin 46,1261
load_plugin 63,1660
run 83,2210
main 103,2611

src/plugin/namestore/plugin_namestore_postgres.c,962
#define LOG(32,1049
struct Plugin38,1185
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg43,1237
  struct GNUNET_PQ_Context *dbh;dbh48,1330
  bool ready;53,1412
namestore_postgres_create_tables 65,1690
namestore_postgres_drop_tables 89,2317
database_prepare 114,3011
database_connect 178,6258
namestore_postgres_store_records 230,7991
struct ParserContext335,11481
  GNUNET_NAMESTORE_RecordIterator iter;340,11555
  void *iter_cls;iter_cls345,11634
  const struct GNUNET_CRYPTO_PrivateKey *zone_key;zone_key350,11704
  uint64_t limit;356,11867
parse_result_call_iterator 369,12183
namestore_postgres_lookup_records 465,15331
namestore_postgres_clear_editor_hint 513,16905
namestore_postgres_edit_records 560,18533
namestore_postgres_iterate_records 613,20492
namestore_postgres_zone_to_name 681,22952
database_shutdown 720,24260
libgnunet_plugin_namestore_postgres_init 734,24535
libgnunet_plugin_namestore_postgres_done 771,25686

src/plugin/namestore/plugin_namestore_flat.c,1373
struct Plugin34,1093
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg36,1109
  char *fn;fn41,1195
  struct GNUNET_CONTAINER_MultiHashMap *hm;hm46,1233
struct FlatFileEntry50,1282
  struct GNUNET_CRYPTO_PrivateKey private_key;55,1333
  uint32_t record_count;60,1412
  uint64_t rvalue;65,1462
  struct GNUNET_GNSRECORD_Data *record_data;record_data70,1511
  char *label;label75,1580
hash_pkey_and_label 87,1759
database_setup 120,2633
store_and_free_entries 333,8868
database_shutdown 409,11061
namestore_flat_store_records 451,12466
namestore_flat_lookup_records 517,14965
struct IterateContext554,15921
  uint64_t offset;559,16025
  uint64_t limit;564,16102
  uint64_t pos;570,16210
  const struct GNUNET_CRYPTO_PrivateKey *zone;zone575,16257
  GNUNET_NAMESTORE_RecordIterator iter;580,16355
  void *iter_cls;iter_cls585,16434
iterate_zones 598,16688
namestore_flat_iterate_records 646,18073
struct ZoneToNameContext673,18869
  const struct GNUNET_CRYPTO_PrivateKey *zone;zone675,18896
  const struct GNUNET_CRYPTO_PublicKey *value_zone;value_zone676,18943
  GNUNET_NAMESTORE_RecordIterator iter;677,18995
  void *iter_cls;iter_cls678,19035
  int result_found;680,19054
zone_to_name 685,19090
namestore_flat_zone_to_name 733,20617
libgnunet_plugin_namestore_flat_init 766,21645
libgnunet_plugin_namestore_flat_done 802,22650

src/plugin/namestore/plugin_namestore_sqlite.c,1214
#define BUSY_TIMEOUT_MS 43,1503
#define LOG_SQLITE(51,1701
#define LOG(61,2295
struct Plugin67,2429
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg69,2445
  char *fn;fn74,2531
  bool ready;79,2610
  sqlite3 *dbh;dbh84,2673
  sqlite3_stmt *store_records;store_records89,2741
  sqlite3_stmt *delete_records;delete_records94,2835
  sqlite3_stmt *iterate_zone;iterate_zone99,2936
  sqlite3_stmt *iterate_all_zones;iterate_all_zones104,3042
  sqlite3_stmt *zone_to_name;zone_to_name109,3148
  sqlite3_stmt *lookup_label;lookup_label114,3246
  sqlite3_stmt *editor_hint_clear;editor_hint_clear119,3332
database_prepare 132,3637
database_shutdown 219,7081
namestore_sqlite_store_records 284,9265
get_records_and_call_iterator 441,14300
lookup_records 563,17986
namestore_sqlite_lookup_records 615,19681
namestore_sqlite_editor_hint_clear 639,20576
namestore_sqlite_edit_records 710,22854
namestore_sqlite_iterate_records 735,23932
namestore_sqlite_zone_to_name 803,26166
namestore_sqlite_create_tables 842,27580
namestore_sqlite_drop_tables 885,29407
database_connect 915,30214
libgnunet_plugin_namestore_sqlite_init 977,32047
libgnunet_plugin_namestore_sqlite_done 1015,33228

src/plugin/namestore/test_plugin_namestore.c,244
#define TEST_RECORD_TYPE 28,985
static int ok;30,1037
static const char *plugin_name;plugin_name35,1091
unload_plugin 45,1281
load_plugin 62,1686
test_record 97,2502
get_record 127,3513
put_record 136,3701
run 163,4595
main 189,5075

src/plugin/dns/plugin_block_dns.c,306
#define BLOOMFILTER_K 41,1347
block_plugin_dns_create_group 56,1933
block_plugin_dns_check_query 100,3436
block_plugin_dns_check_block 132,4232
block_plugin_dns_check_reply 197,6220
block_plugin_dns_get_key 239,7408
libgnunet_plugin_block_dns_init 258,7810
libgnunet_plugin_block_dns_done 281,8425

src/plugin/gnsrecord/plugin_gnsrecord_dns.c,566
dns_value_to_string 41,1344
rfc4398_mnemonic_to_value 302,8609
    const char *mnemonic;mnemonic306,8680
    unsigned int val;307,8706
rfc4034_mnemonic_to_value 335,9418
    const char *mnemonic;mnemonic339,9489
    unsigned int val;340,9515
dns_string_to_value 371,10368
  const char *name;name791,23309
  uint32_t number;792,23329
} name_map[name_map793,23348
dns_typename_to_number 818,24384
dns_number_to_typename 838,24846
dns_is_critical 850,25073
libgnunet_plugin_gnsrecord_dns_init 863,25244
libgnunet_plugin_gnsrecord_dns_done 884,25797

src/plugin/block/plugin_block_template.c,407
#define DEBUG_TEMPLATE 31,1017
#define BLOOMFILTER_K 37,1143
#define TEMPLATE_BF_SIZE 43,1222
block_plugin_template_create_group 58,1810
block_plugin_template_check_query 102,3385
block_plugin_template_check_block 122,4039
block_plugin_template_check_reply 148,4991
block_plugin_template_get_key 174,5736
libgnunet_plugin_block_template_init 190,6136
libgnunet_plugin_block_template_done 213,6810

src/plugin/block/plugin_block_test.c,343
#define BLOOMFILTER_K 36,1192
#define TEST_BF_SIZE 41,1270
block_plugin_test_create_group 56,1854
block_plugin_test_check_query 100,3416
block_plugin_test_check_block 133,4277
block_plugin_test_check_reply 167,5354
block_plugin_test_get_key 209,6773
libgnunet_plugin_block_test_init 235,7302
libgnunet_plugin_block_test_done 261,8019

src/plugin/revocation/plugin_block_revocation.c,433
#define DEBUG_REVOCATION 35,1162
struct InternalContext40,1252
  unsigned int matching_bits;42,1277
  struct GNUNET_TIME_Relative epoch_duration;43,1307
block_plugin_revocation_check_query 59,1745
block_plugin_revocation_check_block 89,2565
block_plugin_revocation_check_reply 161,4726
block_plugin_revocation_get_key 199,5720
libgnunet_plugin_block_revocation_init 254,7186
libgnunet_plugin_block_revocation_done 298,8670

src/plugin/datastore/plugin_datastore_template.c,512
struct Plugin34,1046
  struct GNUNET_DATASTORE_PluginEnvironment *env;env39,1106
template_plugin_estimate_size 51,1332
template_plugin_put 77,2075
template_plugin_get_key 109,3197
template_plugin_get_replication 133,3978
template_plugin_get_expiration 149,4369
template_plugin_get_zero_anonymity 168,4935
template_plugin_drop 180,5209
template_get_keys 194,5434
template_plugin_remove_key 213,5888
libgnunet_plugin_datastore_template_init 232,6408
libgnunet_plugin_datastore_template_done 263,7406

src/plugin/datastore/plugin_datastore_heap.c,2370
struct Value37,1252
  struct GNUNET_HashCode key;42,1303
  const void *data;data47,1418
  struct GNUNET_CONTAINER_HeapNode *expire_heap;expire_heap52,1499
  struct GNUNET_CONTAINER_HeapNode *replication_heap;replication_heap57,1614
  struct GNUNET_TIME_Absolute expiration;62,1718
  unsigned int zero_anon_offset;68,1881
  uint32_t size;73,1959
  uint32_t priority;78,2017
  uint32_t anonymity;83,2087
  uint32_t replication;88,2160
  enum GNUNET_BLOCK_Type type;93,2218
struct ZeroAnonByType100,2317
  struct ZeroAnonByType *next;next105,2382
  struct ZeroAnonByType *prev;prev110,2455
  struct Value **array;array115,2550
  unsigned int array_size;120,2621
  unsigned int array_pos;125,2698
  enum GNUNET_BLOCK_Type type;130,2780
struct Plugin137,2869
  struct GNUNET_DATASTORE_PluginEnvironment *env;env142,2929
  struct GNUNET_CONTAINER_MultiHashMap *keyvalue;keyvalue147,3035
  struct GNUNET_CONTAINER_Heap *by_expiration;by_expiration152,3146
  struct GNUNET_CONTAINER_Heap *by_replication;by_replication157,3256
  struct ZeroAnonByType *zero_head;zero_head162,3387
  struct ZeroAnonByType *zero_tail;zero_tail167,3506
  unsigned long long size;172,3594
heap_plugin_estimate_size 184,3797
struct UpdateContext196,4003
  uint32_t size;201,4070
  const void *data;data206,4126
  uint32_t priority;211,4187
  uint32_t replication;216,4259
  struct GNUNET_TIME_Absolute expiration;221,4333
  bool updated;226,4434
update_iterator 239,4675
heap_plugin_put 289,6304
delete_value 383,9206
struct GetContext424,10562
  uint64_t next_uid;429,10623
  struct Value *value;value434,10710
  enum GNUNET_BLOCK_Type type;439,10767
  bool random;444,10847
get_iterator 457,11117
heap_plugin_get_key 496,12169
heap_plugin_get_replication 555,14063
heap_plugin_get_expiration 608,15620
heap_plugin_get_zero_anonymity 647,16732
heap_plugin_drop 693,18022
struct GetAllContext702,18142
  PluginKeyProcessor proc;707,18200
  void *proc_cls;proc_cls712,18265
return_value 725,18475
heap_get_keys 746,18865
struct RemoveContext765,19325
  struct Value *value;value770,19378
  uint32_t size;775,19433
  const void *data;data780,19484
remove_iterator 793,19759
heap_plugin_remove_key 820,20419
libgnunet_plugin_datastore_heap_init 863,21439
free_value 909,23032
libgnunet_plugin_datastore_heap_done 927,23348

src/plugin/datastore/test_plugin_datastore.c,966
#define PUT_10 35,1139
static unsigned long long stored_bytes;37,1158
static unsigned long long stored_entries;39,1199
static unsigned long long stored_ops;41,1242
static const char *plugin_name;plugin_name43,1281
static int ok;45,1314
enum RunPhase47,1330
  RP_ERROR 49,1346
  RP_PUT,50,1362
  RP_GET,51,1372
  RP_ITER_ZERO,52,1382
  RP_REPL_GET,53,1398
  RP_EXPI_GET,54,1413
  RP_REMOVE,55,1428
  RP_DROP56,1441
struct CpsRunContext60,1456
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg62,1479
  struct GNUNET_DATASTORE_PluginFunctions *api;api63,1528
  enum RunPhase phase;64,1576
  unsigned int cnt;65,1599
  unsigned int i;66,1619
disk_utilization_change_cb 79,1859
put_continuation 99,2194
gen_key 130,2834
do_put 139,3048
static uint64_t guid;192,4664
iterate_one_shot 196,4699
remove_continuation 226,5635
unload_plugin 252,6259
cleaning_task 282,7126
test 292,7265
load_plugin 382,9319
run 422,10505
main 445,11040

src/plugin/datastore/plugin_datastore_sqlite.c,1641
#define MAX_ITEM_SIZE 38,1197
#define BUSY_TIMEOUT_MS 50,1680
#define LOG_SQLITE(58,1877
#define LOG_SQLITE_MSG(76,2740
struct Plugin98,3897
  struct GNUNET_DATASTORE_PluginEnvironment *env;env103,3957
  char *fn;fn108,4044
  sqlite3 *dbh;dbh113,4105
  sqlite3_stmt *remove;remove118,4171
  sqlite3_stmt *delRow;delRow123,4243
  sqlite3_stmt *update;update128,4313
  sqlite3_stmt *maxRepl;maxRepl133,4391
  sqlite3_stmt *updRepl;updRepl138,4477
  sqlite3_stmt *selRepl;selRepl143,4563
  sqlite3_stmt *selExpi;selExpi148,4648
  sqlite3_stmt *selZeroAnon;selZeroAnon153,4733
  sqlite3_stmt *insertContent;insertContent158,4811
  sqlite3_stmt *get[get163,4890
  int drop_on_shutdown;168,4976
sq_prepare 181,5213
create_indices 207,5840
#define CHECK(246,6867
#define ENULL 247,6901
#define ENULL 249,6926
#define ENULL_DEFINED 250,6943
#define CHECK(251,6967
database_setup 271,7580
#define RESULT_COLUMNS 376,11841
database_shutdown 495,17563
delete_by_rowid 566,19668
sqlite_plugin_put 603,20891
execute_get 747,25398
sqlite_plugin_get_zero_anonymity 844,28407
sqlite_plugin_get_key 882,29861
struct ReplCtx937,31551
  PluginDatumProcessor proc;942,31632
  void *proc_cls;proc_cls947,31700
  uint64_t uid;952,31748
  int have_uid;957,31802
repl_proc 981,32538
sqlite_plugin_get_replication 1027,33760
sqlite_plugin_get_expiration 1094,36058
sqlite_plugin_get_keys 1128,37070
sqlite_plugin_drop 1166,38060
sqlite_plugin_remove_key 1185,38481
sqlite_plugin_estimate_size 1234,39979
libgnunet_plugin_datastore_sqlite_init 1310,42003
libgnunet_plugin_datastore_sqlite_done 1350,43229

src/plugin/datastore/plugin_datastore_postgres.c,1173
#define BUSY_TIMEOUT 41,1475
struct Plugin47,1576
  struct GNUNET_DATASTORE_PluginEnvironment *env;env52,1636
  struct GNUNET_PQ_Context *dbh;dbh57,1737
init_connection 68,1946
#define RESULT_COLUMNS 70,1988
#undef RESULT_COLUMNS131,5291
postgres_plugin_estimate_size 152,5848
postgres_plugin_put 199,7287
struct ProcessResultContext300,10322
  struct Plugin *plugin;plugin305,10388
  PluginDatumProcessor proc;310,10464
  void *proc_cls;proc_cls315,10532
process_result 328,10786
postgres_plugin_get_key 450,14970
postgres_plugin_get_zero_anonymity 515,17072
struct ReplCtx548,18170
  struct Plugin *plugin;plugin553,18219
  PluginDatumProcessor proc;558,18309
  void *proc_cls;proc_cls563,18377
repl_proc 589,19263
postgres_plugin_get_replication 642,20821
postgres_plugin_get_expiration 680,21996
struct ProcessKeysContext707,22839
  PluginKeyProcessor proc;712,22915
  void *proc_cls;proc_cls717,22981
process_keys 730,23287
postgres_plugin_get_keys 769,24192
postgres_plugin_drop 798,24941
postgres_plugin_remove_key 826,25709
libgnunet_plugin_datastore_postgres_init 883,27227
libgnunet_plugin_datastore_postgres_done 918,28222

src/plugin/datastore/perf_plugin_datastore.c,1133
#define MAX_SIZE 39,1376
#define ITERATIONS 41,1417
#define PUT_10 46,1508
static char category[category48,1560
static unsigned long long stored_bytes;52,1631
static unsigned long long stored_entries;54,1672
static unsigned long long stored_ops;56,1715
static const char *plugin_name;plugin_name58,1754
static int ok;60,1787
enum RunPhase62,1803
  RP_ERROR 64,1819
  RP_PUT,65,1835
  RP_REP_GET,66,1845
  RP_ZA_GET,67,1859
  RP_EXP_GET,68,1872
  RP_DONE69,1886
struct CpsRunContext73,1901
  unsigned int i;75,1924
  struct GNUNET_TIME_Absolute start;76,1942
  struct GNUNET_TIME_Absolute end;77,1979
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg78,2014
  struct GNUNET_DATASTORE_PluginFunctions *api;api79,2063
  enum RunPhase phase;80,2111
  unsigned int cnt;81,2134
  unsigned int iter;82,2154
  uint64_t offset;83,2175
disk_utilization_change_cb 96,2416
put_continuation 115,2732
do_put 138,3167
iterate_zeros 209,5488
expiration_get 269,7323
replication_get 325,8984
unload_plugin 388,10794
cleaning_task 416,11571
test 426,11710
load_plugin 473,12833
run 510,13887
main 539,14491

src/plugin/seti/plugin_block_seti_test.c,270
block_plugin_seti_test_check_query 44,1437
block_plugin_seti_test_check_block 74,2237
block_plugin_seti_test_check_reply 110,3414
block_plugin_seti_test_get_key 147,4691
libgnunet_plugin_block_seti_test_init 166,5129
libgnunet_plugin_block_seti_test_done 188,5726

src/plugin/fs/test_plugin_block_fs.c,30
test_fs 30,977
main 68,2074

src/plugin/fs/plugin_block_fs.c,299
#define BLOOMFILTER_K 39,1175
block_plugin_fs_create_group 54,1761
block_plugin_fs_get_key 121,3910
block_plugin_fs_check_query 169,5186
block_plugin_fs_check_block 203,6055
block_plugin_fs_check_reply 265,7903
libgnunet_plugin_block_fs_init 303,9030
libgnunet_plugin_block_fs_done 328,9717

src/plugin/datacache/plugin_datacache_template.c,311
struct Plugin34,1124
  struct GNUNET_DATACACHE_PluginEnvironment *env;env39,1184
template_plugin_put 52,1498
template_plugin_get 73,2008
template_plugin_del 92,2511
template_plugin_get_closest 114,3188
libgnunet_plugin_datacache_template_init 133,3724
libgnunet_plugin_datacache_template_done 161,4461

src/plugin/datacache/plugin_datacache_heap.c,1264
#define LOG(30,1054
#define LOG_STRERROR_FILE(32,1132
#define NUM_HEAPS 36,1382
struct Plugin41,1457
  struct GNUNET_DATACACHE_PluginEnvironment *env;env46,1517
  struct GNUNET_CONTAINER_MultiHashMap *map;map51,1599
  struct GNUNET_CONTAINER_Heap *heaps[heaps56,1688
struct Value63,1777
  struct GNUNET_DATACACHE_Block block;68,1821
  struct GNUNET_CONTAINER_HeapNode *hn;hn73,1910
  struct GNUNET_DHT_PathElement *put_path;put_path78,2001
  uint32_t distance;83,2124
#define OVERHEAD 88,2151
struct PutContext94,2232
  const struct GNUNET_DATACACHE_Block *block;block99,2281
  bool found;104,2400
put_cb 118,2722
heap_plugin_put 165,4443
struct GetContext221,6281
  GNUNET_DATACACHE_Iterator iter;226,6352
  void *iter_cls;iter_cls231,6425
  unsigned int cnt;236,6486
  enum GNUNET_BLOCK_Type type;241,6546
get_cb 255,6868
heap_plugin_get 304,8200
heap_plugin_del 333,9052
struct GetClosestContext362,9841
  struct Value **values;values364,9868
  const struct GNUNET_HashCode *key;key366,9894
  enum GNUNET_BLOCK_Type type;368,9932
  unsigned int num_results;370,9964
find_closest 376,10036
heap_plugin_get_closest 428,11470
libgnunet_plugin_datacache_heap_init 472,12669
libgnunet_plugin_datacache_heap_done 504,13629

src/plugin/datacache/plugin_datacache_postgres.c,807
#define LOG(31,1121
#define OVERHEAD 36,1242
struct Plugin41,1351
  struct GNUNET_DATACACHE_PluginEnvironment *env;env46,1411
  struct GNUNET_PQ_Context *dbh;dbh51,1512
  unsigned int num_items;56,1606
init_connection 67,1808
postgres_plugin_put 133,4848
struct HandleResultContext172,6142
  GNUNET_DATACACHE_Iterator iter;177,6234
  void *iter_cls;iter_cls182,6307
  const struct GNUNET_HashCode *key;key187,6353
handle_results 201,6739
postgres_plugin_get 287,9415
postgres_plugin_del 333,10948
struct ExtractResultContext401,13056
  GNUNET_DATACACHE_Iterator iter;406,13143
  void *iter_cls;iter_cls411,13216
extract_result_cb 425,13576
postgres_plugin_get_closest 514,16549
libgnunet_plugin_datacache_postgres_init 567,18232
libgnunet_plugin_datacache_postgres_done 601,19012

src/plugin/datacache/plugin_datacache_sqlite.c,1077
#define LOG(32,1114
#define LOG_STRERROR_FILE(34,1194
#define OVERHEAD 42,1378
struct Plugin47,1487
  struct GNUNET_DATACACHE_PluginEnvironment *env;env52,1547
  sqlite3 *dbh;dbh57,1646
  char *fn;fn62,1706
  sqlite3_stmt *insert_stmt;insert_stmt67,1779
  sqlite3_stmt *get_count_stmt;get_count_stmt72,1869
  sqlite3_stmt *get_count_any_stmt;get_count_any_stmt77,1962
  sqlite3_stmt *get_stmt;get_stmt82,2059
  sqlite3_stmt *get_any_stmt;get_any_stmt87,2146
  sqlite3_stmt *del_select_stmt;del_select_stmt92,2237
  sqlite3_stmt *del_expired_stmt;del_expired_stmt97,2331
  sqlite3_stmt *del_stmt;del_stmt102,2426
  sqlite3_stmt *get_closest_stmt;get_closest_stmt107,2521
  unsigned int num_items;112,2616
#define LOG_SQLITE(124,2877
#define SQLITE3_EXEC(142,3500
sq_prepare 169,4702
sqlite_plugin_put 192,5328
get_any 261,7597
get_typed 420,12298
sqlite_plugin_get 582,17047
sqlite_plugin_del 609,17785
sqlite_plugin_get_closest 724,21390
libgnunet_plugin_datacache_sqlite_init 828,24546
libgnunet_plugin_datacache_sqlite_done 1002,30320

src/plugin/regex/regex_block_lib.h,215
#define REGEX_BLOCK_LIB_H_28,974
struct REGEX_BLOCK_Edge52,1264
  const char *label;label58,1407
  struct GNUNET_HashCode destination;63,1471
(*REGEX_INTERNAL_EgdeIterator)REGEX_INTERNAL_EgdeIterator112,2949

src/plugin/regex/plugin_block_regex.c,353
#define BLOOMFILTER_K 38,1179
#define REGEX_BF_SIZE 44,1260
block_plugin_regex_create_group 59,1845
block_plugin_regex_check_query 104,3398
block_plugin_regex_check_block 149,4513
block_plugin_regex_check_reply 222,6805
block_plugin_regex_get_key 304,9317
libgnunet_plugin_block_regex_init 347,10313
libgnunet_plugin_block_regex_done 371,10984

src/plugin/regex/regex_block_lib.c,656
#define LOG(30,1046
struct EdgeInfo37,1186
  uint16_t destination_index GNUNET_PACKED;43,1298
  uint16_t token_length GNUNET_PACKED;49,1430
struct RegexBlock56,1525
  uint16_t proof_len GNUNET_PACKED;61,1596
  int16_t is_accepting GNUNET_PACKED;66,1684
  uint16_t num_edges GNUNET_PACKED;71,1781
  uint16_t num_destinations GNUNET_PACKED;76,1892
GNUNET_BLOCK_is_accepting 101,2558
REGEX_BLOCK_check_proof 114,2804
struct CheckEdgeContext134,3374
  const char *xquery;xquery139,3452
  int found;144,3556
check_edge 159,3878
REGEX_BLOCK_check 183,4499
REGEX_BLOCK_get_key 230,5682
REGEX_BLOCK_iterate 265,6721
REGEX_BLOCK_create 346,9394

src/plugin/messenger/plugin_gnsrecord_messenger.c,345
messenger_value_to_string 44,1448
messenger_string_to_value 112,3408
  const char *name;name218,6796
  uint32_t number;219,6816
} name_map[name_map220,6835
messenger_typename_to_number 235,7247
messenger_number_to_typename 257,7759
libgnunet_plugin_gnsrecord_messenger_init 278,8109
libgnunet_plugin_gnsrecord_messenger_done 299,8667

src/plugin/reclaim/pabc_helper.c,308
static char pabc_dir[pabc_dir13,308
get_homedir 16,365
write_file 28,560
init_pabc_dir 52,1328
get_pabcdir 63,1658
read_file 71,1749
PABC_read_issuer_ppfile 106,2687
PABC_load_public_parameters 135,3386
PABC_write_public_parameters 173,4483
PABC_write_usr_ctx 227,5915
PABC_read_usr_ctx 301,7841

src/plugin/reclaim/plugin_reclaim_credential_pabc.c,689
pabc_value_to_string 46,1546
pabc_string_to_value 74,2219
  const char *name;name101,2749
  uint32_t number;102,2769
} pabc_cred_name_map[pabc_cred_name_map103,2788
pabc_typename_to_number 114,3130
pabc_number_to_typename 134,3618
inspect_attrs 148,3951
pabc_parse_attributes 182,4967
pabc_parse_attributes_c 206,5694
pabc_parse_attributes_p 223,6188
pabc_get_issuer 240,6601
pabc_get_issuer_c 261,7095
pabc_get_issuer_p 278,7489
pabc_get_expiration 295,7913
pabc_get_expiration_c 333,8948
pabc_get_expiration_p 351,9449
pabc_create_presentation 362,9770
libgnunet_plugin_reclaim_credential_pabc_init 532,15351
libgnunet_plugin_reclaim_credential_pabc_done 563,16447

src/plugin/reclaim/pabc_helper.h,140
#define PATH_MAX 6,92
#define PABC_ISK_EXT 9,122
#define PABC_PP_EXT 11,151
#define PABC_USR_EXT 13,178
#define PABC_ATTR_DELIM 15,207

src/plugin/reclaim/plugin_reclaim_attribute_basic.c,348
basic_value_to_string 45,1523
basic_string_to_value 73,2199
  const char *name;name100,2733
  uint32_t number;101,2753
} basic_name_map[basic_name_map102,2772
basic_typename_to_number 114,3099
basic_number_to_typename 134,3585
libgnunet_plugin_reclaim_attribute_basic_init 152,3896
libgnunet_plugin_reclaim_attribute_basic_done 172,4444

src/plugin/reclaim/plugin_reclaim_credential_jwt.c,651
jwt_value_to_string 44,1495
jwt_string_to_value 72,2163
  const char *name;name99,2687
  uint32_t number;100,2707
} jwt_cred_name_map[jwt_cred_name_map101,2726
jwt_typename_to_number 112,3063
jwt_number_to_typename 132,3552
jwt_parse_attributes 153,4105
jwt_parse_attributes_c 265,7633
jwt_parse_attributes_p 282,8121
jwt_get_issuer 299,8529
jwt_get_issuer_c 343,9720
jwt_get_issuer_p 360,10108
jwt_get_expiration 377,10526
jwt_get_expiration_c 421,11787
jwt_get_expiration_p 439,12281
jwt_create_presentation 450,12624
libgnunet_plugin_reclaim_credential_jwt_init 472,13218
libgnunet_plugin_reclaim_credential_jwt_done 503,14298

src/plugin/reclaim/plugin_gnsrecord_reclaim.c,300
value_to_string 43,1381
string_to_value 75,2343
  const char *name;name106,3165
  uint32_t number;107,3185
} name_map[name_map108,3204
typename_to_number 128,3962
number_to_typename 148,4420
libgnunet_plugin_gnsrecord_reclaim_init 166,4707
libgnunet_plugin_gnsrecord_reclaim_done 186,5209

src/plugin/gns/plugin_block_gns.c,335
#define BLOOMFILTER_K 38,1205
#define GNS_BF_SIZE 43,1283
block_plugin_gns_create_group 58,1866
block_plugin_gns_get_key 104,3570
block_plugin_gns_check_query 143,4644
block_plugin_gns_check_block 173,5419
block_plugin_gns_check_reply 223,6866
libgnunet_plugin_block_gns_init 257,8043
libgnunet_plugin_block_gns_done 280,8675

src/plugin/gns/plugin_gnsrecord_gns.c,351
gns_value_to_string 46,1598
gns_string_to_value 187,6056
  const char *name;name406,13070
  uint32_t number;407,13090
} gns_name_map[gns_name_map408,13109
gns_typename_to_number 433,13913
gns_number_to_typename 454,14411
gns_is_critical 468,14686
libgnunet_plugin_gnsrecord_gns_init 485,15079
libgnunet_plugin_gnsrecord_gns_done 506,15634

src/include/gnunet_dnsparser_lib.h,5504
#define GNUNET_DNSPARSER_LIB_H41,1213
#define GNUNET_DNSPARSER_MAX_LABEL_LENGTH 46,1290
#define GNUNET_DNSPARSER_MAX_NAME_LENGTH 51,1380
#define GNUNET_DNSPARSER_TYPE_ANY 57,1462
#define GNUNET_DNSPARSER_TYPE_A 58,1498
#define GNUNET_DNSPARSER_TYPE_NS 59,1532
#define GNUNET_DNSPARSER_TYPE_CNAME 60,1567
#define GNUNET_DNSPARSER_TYPE_SOA 61,1605
#define GNUNET_DNSPARSER_TYPE_PTR 62,1641
#define GNUNET_DNSPARSER_TYPE_MX 63,1678
#define GNUNET_DNSPARSER_TYPE_TXT 64,1714
#define GNUNET_DNSPARSER_TYPE_RP 65,1751
#define GNUNET_DNSPARSER_TYPE_AFSDB 66,1787
#define GNUNET_DNSPARSER_TYPE_SIG 67,1826
#define GNUNET_DNSPARSER_TYPE_KEY 68,1863
#define GNUNET_DNSPARSER_TYPE_AAAA 69,1900
#define GNUNET_DNSPARSER_TYPE_LOC 70,1938
#define GNUNET_DNSPARSER_TYPE_SRV 71,1975
#define GNUNET_DNSPARSER_TYPE_NAPTR 72,2012
#define GNUNET_DNSPARSER_TYPE_KX 73,2051
#define GNUNET_DNSPARSER_TYPE_CERT 74,2087
#define GNUNET_DNSPARSER_TYPE_DNAME 75,2125
#define GNUNET_DNSPARSER_TYPE_APL 76,2164
#define GNUNET_DNSPARSER_TYPE_DS 77,2201
#define GNUNET_DNSPARSER_TYPE_SSHFP 78,2237
#define GNUNET_DNSPARSER_TYPE_IPSECKEY 79,2276
#define GNUNET_DNSPARSER_TYPE_RRSIG 80,2318
#define GNUNET_DNSPARSER_TYPE_NSEC 81,2357
#define GNUNET_DNSPARSER_TYPE_DNSKEY 82,2395
#define GNUNET_DNSPARSER_TYPE_DHCID 83,2435
#define GNUNET_DNSPARSER_TYPE_NSEC3 84,2474
#define GNUNET_DNSPARSER_TYPE_NSEC3PARAM 85,2513
#define GNUNET_DNSPARSER_TYPE_TLSA 86,2557
#define GNUNET_DNSPARSER_TYPE_SMIMEA 87,2595
#define GNUNET_DNSPARSER_TYPE_HIP 88,2635
#define GNUNET_DNSPARSER_TYPE_CDS 89,2672
#define GNUNET_DNSPARSER_TYPE_CDNSKEY 90,2709
#define GNUNET_DNSPARSER_TYPE_OPENPGPKEY 91,2750
#define GNUNET_DNSPARSER_TYPE_TKEY 92,2794
#define GNUNET_DNSPARSER_TYPE_TSIG 93,2833
#define GNUNET_DNSPARSER_TYPE_ALL 94,2872
#define GNUNET_DNSPARSER_TYPE_URI 95,2910
#define GNUNET_DNSPARSER_TYPE_CAA 96,2948
#define GNUNET_DNSPARSER_TYPE_TA 97,2986
struct GNUNET_DNSPARSER_Query102,3050
  char *name;name111,3410
  uint16_t type;116,3471
  uint16_t dns_traffic_class;121,3534
struct GNUNET_DNSPARSER_MxRecord128,3620
  uint16_t preference;133,3734
  char *mxhost;mxhost142,4054
struct GNUNET_DNSPARSER_SrvRecord149,4127
  char *target;target158,4465
  uint16_t priority;165,4716
  uint16_t weight;172,4928
  uint16_t port;177,4997
struct GNUNET_DNSPARSER_UriRecord184,5071
  char *target;target190,5191
  uint16_t priority;197,5442
  uint16_t weight;204,5654
enum GNUNET_DNSPARSER_CertType211,5728
  GNUNET_DNSPARSER_CERTTYPE_RESERVED 216,5794
  GNUNET_DNSPARSER_CERTTYPE_PKIX 221,5879
  GNUNET_DNSPARSER_CERTTYPE_SKPI 226,5954
  GNUNET_DNSPARSER_CERTTYPE_PGP 231,6028
  GNUNET_DNSPARSER_CERTTYPE_IPKIX 236,6105
  GNUNET_DNSPARSER_CERTTYPE_ISKPI 241,6178
  GNUNET_DNSPARSER_CERTTYPE_IPGP 246,6266
  GNUNET_DNSPARSER_CERTTYPE_ACPKIX 251,6347
  GNUNET_DNSPARSER_CERTTYPE_IACKPIX 256,6427
enum GNUNET_DNSPARSER_CertAlgorithm264,6628
  GNUNET_DNSPARSER_CERTALGO_UNDEFINED 269,6694
  GNUNET_DNSPARSER_CERTALGO_RSAMD5 274,6763
  GNUNET_DNSPARSER_CERTALGO_DH 279,6836
  GNUNET_DNSPARSER_CERTALGO_DSASHA 284,6899
  GNUNET_DNSPARSER_CERTALGO_RSRVD4 289,6966
  GNUNET_DNSPARSER_CERTALGO_RSASHA 294,7033
  GNUNET_DNSPARSER_CERTALGO_DSANSEC3 299,7105
  GNUNET_DNSPARSER_CERTALGO_RSANSEC3 304,7179
  GNUNET_DNSPARSER_CERTALGO_RSASHA256 309,7250
  GNUNET_DNSPARSER_CERTALGO_RSRVD9 314,7320
  GNUNET_DNSPARSER_CERTALGO_RSASHA512 319,7389
  GNUNET_DNSPARSER_CERTALGO_GOST_R34 324,7470
  GNUNET_DNSPARSER_CERTALGO_ECDSA_P256SHA256 329,7556
  GNUNET_DNSPARSER_CERTALGO_ECDSA_P384SHA384 334,7650
struct GNUNET_DNSPARSER_CertRecord341,7758
  enum GNUNET_DNSPARSER_CertType cert_type;346,7829
  uint16_t cert_tag;351,7910
  enum GNUNET_DNSPARSER_CertAlgorithm algorithm;356,7959
  size_t certificate_size;361,8065
  char *certificate_data;certificate_data366,8135
struct GNUNET_DNSPARSER_SoaRecord373,8218
  char *mname;mname383,8627
  char *rname;rname393,9001
  uint32_t serial;398,9087
  uint32_t refresh;403,9175
  uint32_t retry;409,9294
  uint32_t expire;415,9458
  uint32_t minimum_ttl;421,9578
struct GNUNET_DNSPARSER_CaaRecord430,9762
  uint8_t flags;435,9844
  uint8_t tag_len;440,9902
struct GNUNET_DNSPARSER_RawRecord447,9975
  void *data;data452,10048
  size_t data_len;457,10105
struct GNUNET_DNSPARSER_Record464,10163
  char *name;name473,10524
    char *hostname;hostname487,11007
    struct GNUNET_DNSPARSER_SoaRecord *soa;soa492,11077
    struct GNUNET_DNSPARSER_CertRecord *cert;cert497,11173
    struct GNUNET_DNSPARSER_MxRecord *mx;mx502,11267
    struct GNUNET_DNSPARSER_SrvRecord *srv;srv507,11359
    struct GNUNET_DNSPARSER_UriRecord *uri;uri512,11453
    struct GNUNET_DNSPARSER_RawRecord raw;517,11551
  } data;518,11594
  struct GNUNET_TIME_Absolute expiration_time;524,11652
  uint16_t type;529,11746
  uint16_t dns_traffic_class;534,11809
struct GNUNET_DNSPARSER_Packet541,11904
  struct GNUNET_DNSPARSER_Query *queries;queries546,12026
  struct GNUNET_DNSPARSER_Record *answers;answers551,12158
  struct GNUNET_DNSPARSER_Record *authority_records;authority_records556,12311
  struct GNUNET_DNSPARSER_Record *additional_records;additional_records561,12476
  unsigned int num_queries;566,12581
  unsigned int num_answers;571,12685
  unsigned int num_authority_records;576,12803
  unsigned int num_additional_records;581,12928
  struct GNUNET_TUN_DnsFlags flags;586,13008
  uint16_t id;591,13101

src/include/gnunet_tun_lib.h,7975
#define GNUNET_TUN_LIB_H42,1298
#define ETH_P_IPV4 50,1430
#define ETH_P_IPV6 57,1510
#define GNUNET_TUN_IPV4_REGEXLEN 68,1735
#define GNUNET_TUN_IPV6_REGEXLEN 77,1962
struct GNUNET_TUN_Layer2PacketHeader85,2073
  uint16_t flags GNUNET_PACKED;90,2150
  uint16_t proto GNUNET_PACKED;95,2230
struct GNUNET_TUN_IPv4Header102,2300
  unsigned int header_length : 4 GNUNET_PACKED;105,2367
  unsigned int version : 4 GNUNET_PACKED;106,2415
  unsigned int version : 4 GNUNET_PACKED;108,2492
  unsigned int header_length : 4 GNUNET_PACKED;109,2534
  uint8_t diff_serv;113,2622
  uint16_t total_length GNUNET_PACKED;118,2706
  uint16_t identification GNUNET_PACKED;123,2807
  unsigned int flags : 3 GNUNET_PACKED;125,2849
  unsigned int fragmentation_offset : 13 GNUNET_PACKED;127,2890
  uint8_t ttl;132,3013
  uint8_t protocol;137,3100
  uint16_t checksum GNUNET_PACKED;142,3148
  struct in_addr source_address;147,3223
  struct in_addr destination_address;152,3301
} GNUNET_GCC_STRUCT_LAYOUT;153,3339
struct GNUNET_TUN_IPv6Header159,3402
  unsigned int traffic_class_h : 4 GNUNET_PACKED;162,3469
  unsigned int version : 4 GNUNET_PACKED;163,3519
  unsigned int traffic_class_l : 4 GNUNET_PACKED;164,3561
  unsigned int flow_label : 20 GNUNET_PACKED;165,3611
  unsigned int version : 4 GNUNET_PACKED;167,3692
  unsigned int traffic_class : 8 GNUNET_PACKED;168,3734
  unsigned int flow_label : 20 GNUNET_PACKED;169,3782
  uint16_t payload_length GNUNET_PACKED;176,3931
  uint8_t next_header;181,4031
  uint8_t hop_limit;186,4121
  struct in6_addr source_address GNUNET_PACKED;191,4182
  struct in6_addr destination_address GNUNET_PACKED;196,4275
} GNUNET_GCC_STRUCT_LAYOUT;197,4328
#define GNUNET_TUN_TCP_FLAGS_FIN 203,4380
#define GNUNET_TUN_TCP_FLAGS_SYN 204,4415
#define GNUNET_TUN_TCP_FLAGS_RST 205,4450
#define GNUNET_TUN_TCP_FLAGS_PSH 206,4485
#define GNUNET_TUN_TCP_FLAGS_ACK 207,4520
#define GNUNET_TUN_TCP_FLAGS_URG 208,4556
#define GNUNET_TUN_TCP_FLAGS_ECE 209,4592
#define GNUNET_TUN_TCP_FLAGS_CWR 210,4628
struct GNUNET_TUN_TcpHeader215,4696
  uint16_t source_port GNUNET_PACKED;220,4765
  uint16_t destination_port GNUNET_PACKED;225,4848
  uint32_t seq GNUNET_PACKED;230,4926
  uint32_t ack GNUNET_PACKED;235,4998
  unsigned int reserved : 4 GNUNET_PACKED;240,5106
  unsigned int off : 4 GNUNET_PACKED;244,5204
  unsigned int off : 4 GNUNET_PACKED;249,5332
  unsigned int reserved : 4 GNUNET_PACKED;253,5412
  uint8_t flags;261,5541
  uint16_t window_size GNUNET_PACKED;266,5589
  uint16_t crc GNUNET_PACKED;271,5655
  uint16_t urgent_pointer GNUNET_PACKED;276,5719
} GNUNET_GCC_STRUCT_LAYOUT;277,5760
struct GNUNET_TUN_UdpHeader283,5820
  uint16_t source_port GNUNET_PACKED;288,5889
  uint16_t destination_port GNUNET_PACKED;293,5972
  uint16_t len GNUNET_PACKED;298,6061
  uint16_t crc GNUNET_PACKED;303,6119
#define GNUNET_TUN_DNS_CLASS_INTERNET 311,6292
#define GNUNET_TUN_DNS_CLASS_CHAOS 312,6332
#define GNUNET_TUN_DNS_CLASS_HESIOD 313,6369
#define GNUNET_TUN_DNS_OPCODE_QUERY 315,6408
#define GNUNET_TUN_DNS_OPCODE_INVERSE_QUERY 316,6446
#define GNUNET_TUN_DNS_OPCODE_STATUS 317,6492
#define GNUNET_TUN_DNS_RETURN_CODE_NO_ERROR 323,6560
#define GNUNET_TUN_DNS_RETURN_CODE_FORMAT_ERROR 324,6606
#define GNUNET_TUN_DNS_RETURN_CODE_SERVER_FAILURE 325,6656
#define GNUNET_TUN_DNS_RETURN_CODE_NAME_ERROR 326,6708
#define GNUNET_TUN_DNS_RETURN_CODE_NOT_IMPLEMENTED 327,6756
#define GNUNET_TUN_DNS_RETURN_CODE_REFUSED 328,6809
#define GNUNET_TUN_DNS_RETURN_CODE_YXDOMAIN 333,6881
#define GNUNET_TUN_DNS_RETURN_CODE_YXRRSET 334,6927
#define GNUNET_TUN_DNS_RETURN_CODE_NXRRSET 335,6972
#define GNUNET_TUN_DNS_RETURN_CODE_NOT_AUTH 336,7017
#define GNUNET_TUN_DNS_RETURN_CODE_NOT_ZONE 337,7063
struct GNUNET_TUN_DnsFlags343,7164
  unsigned int recursion_desired : 1 GNUNET_PACKED;349,7298
  unsigned int message_truncated : 1 GNUNET_PACKED;354,7401
  unsigned int authoritative_answer : 1 GNUNET_PACKED;359,7515
  unsigned int opcode : 4 GNUNET_PACKED;364,7624
  unsigned int query_or_response : 1 GNUNET_PACKED;369,7703
  unsigned int return_code : 4 GNUNET_PACKED;374,7814
  unsigned int checking_disabled : 1 GNUNET_PACKED;379,7892
  unsigned int authenticated_data : 1 GNUNET_PACKED;384,8018
  unsigned int zero : 1 GNUNET_PACKED;389,8102
  unsigned int recursion_available : 1 GNUNET_PACKED;394,8213
  unsigned int query_or_response : 1 GNUNET_PACKED;399,8339
  unsigned int opcode : 4 GNUNET_PACKED;404,8445
  unsigned int authoritative_answer : 1 GNUNET_PACKED;409,8548
  unsigned int message_truncated : 1 GNUNET_PACKED;414,8654
  unsigned int recursion_desired : 1 GNUNET_PACKED;419,8776
  unsigned int recursion_available : 1 GNUNET_PACKED;425,8901
  unsigned int zero : 1 GNUNET_PACKED;430,8986
  unsigned int authenticated_data : 1 GNUNET_PACKED;435,9099
  unsigned int checking_disabled : 1 GNUNET_PACKED;440,9184
  unsigned int return_code : 4 GNUNET_PACKED;445,9295
} GNUNET_GCC_STRUCT_LAYOUT;449,9381
struct GNUNET_TUN_DnsHeader455,9434
  uint16_t id GNUNET_PACKED;460,9525
  struct GNUNET_TUN_DnsFlags flags;465,9579
  uint16_t query_count GNUNET_PACKED;470,9652
  uint16_t answer_rcount GNUNET_PACKED;475,9727
  uint16_t authority_rcount GNUNET_PACKED;480,9818
  uint16_t additional_rcount GNUNET_PACKED;485,9909
struct GNUNET_TUN_DnsSoaRecord492,10005
  uint32_t serial GNUNET_PACKED;497,10116
  uint32_t refresh GNUNET_PACKED;502,10224
  uint32_t retry GNUNET_PACKED;508,10363
  uint32_t expire GNUNET_PACKED;514,10547
  uint32_t minimum GNUNET_PACKED;520,10687
struct GNUNET_TUN_DnsSrvRecord527,10773
  uint16_t prio GNUNET_PACKED;534,11046
  uint16_t weight GNUNET_PACKED;541,11274
  uint16_t port GNUNET_PACKED;546,11363
struct GNUNET_TUN_DnsUriRecord555,11481
  uint16_t prio GNUNET_PACKED;562,11754
  uint16_t weight GNUNET_PACKED;569,11982
struct GNUNET_TUN_DnsCertRecord578,12094
  uint16_t cert_type;583,12162
  uint16_t cert_tag;588,12221
  uint8_t algorithm;593,12270
struct GNUNET_TUN_DnsTlsaRecord603,12436
  uint8_t usage;612,12589
  uint8_t selector;621,12763
  uint8_t matching_type;629,12899
struct GNUNET_TUN_GnsVpnRecord648,13456
  struct GNUNET_PeerIdentity peer;653,13526
  uint16_t proto;658,13599
struct GNUNET_TUN_DnsQueryLine667,13688
  uint16_t type GNUNET_PACKED;672,13786
  uint16_t dns_traffic_class GNUNET_PACKED;677,13896
struct GNUNET_TUN_DnsRecordLine684,13983
  uint16_t type GNUNET_PACKED;689,14081
  uint16_t dns_traffic_class GNUNET_PACKED;694,14190
  uint32_t ttl GNUNET_PACKED;699,14298
  uint16_t data_len GNUNET_PACKED;704,14389
#define GNUNET_TUN_ICMPTYPE_ECHO_REPLY 708,14429
#define GNUNET_TUN_ICMPTYPE_DESTINATION_UNREACHABLE 709,14470
#define GNUNET_TUN_ICMPTYPE_SOURCE_QUENCH 710,14524
#define GNUNET_TUN_ICMPTYPE_REDIRECT_MESSAGE 711,14568
#define GNUNET_TUN_ICMPTYPE_ECHO_REQUEST 712,14615
#define GNUNET_TUN_ICMPTYPE_ROUTER_ADVERTISEMENT 713,14658
#define GNUNET_TUN_ICMPTYPE_ROUTER_SOLICITATION 714,14709
#define GNUNET_TUN_ICMPTYPE_TIME_EXCEEDED 715,14760
#define GNUNET_TUN_ICMPTYPE6_DESTINATION_UNREACHABLE 717,14806
#define GNUNET_TUN_ICMPTYPE6_PACKET_TOO_BIG 718,14861
#define GNUNET_TUN_ICMPTYPE6_TIME_EXCEEDED 719,14907
#define GNUNET_TUN_ICMPTYPE6_PARAMETER_PROBLEM 720,14952
#define GNUNET_TUN_ICMPTYPE6_ECHO_REQUEST 721,15001
#define GNUNET_TUN_ICMPTYPE6_ECHO_REPLY 722,15047
struct GNUNET_TUN_IcmpHeader728,15117
  uint8_t type;730,15148
  uint8_t code;731,15164
  uint16_t crc GNUNET_PACKED;732,15180
      uint16_t identifier GNUNET_PACKED;741,15289
      uint16_t sequence_number GNUNET_PACKED;742,15330
    } echo;743,15376
    struct ih_pmtu748,15452
      uint16_t empty GNUNET_PACKED;750,15477
      uint16_t next_hop_mtu GNUNET_PACKED;751,15513
    } destination_unreachable;754,15646
    struct in_addr redirect_gateway_address;759,15715
    uint32_t packet_too_big_mtu GNUNET_PACKED;764,15825
  } quench;765,15872

src/include/gnunet_abd_service.h,1951
#define GNUNET_ABD_SERVICE_H36,1067
enum GNUNET_ABD_CredentialFlags65,1581
  GNUNET_ABD_FLAG_REVOKED=69,1679
  GNUNET_ABD_FLAG_SUBJECT=72,1812
  GNUNET_ABD_FLAG_ISSUER=75,1953
struct GNUNET_ABD_DelegationRecord83,2056
  uint32_t set_count;89,2152
  uint64_t data_size;94,2218
struct GNUNET_ABD_DelegationRecordSet104,2352
  struct GNUNET_CRYPTO_PublicKey subject_key;110,2468
  uint32_t subject_attribute_len;115,2562
struct GNUNET_ABD_DelegationSet124,2671
  struct GNUNET_CRYPTO_PublicKey subject_key;130,2781
  uint32_t subject_attribute_len;132,2828
  const char *subject_attribute;subject_attribute137,2902
struct GNUNET_ABD_Delegation144,2964
  struct GNUNET_CRYPTO_PublicKey issuer_key;150,3042
  struct GNUNET_CRYPTO_PublicKey subject_key;155,3163
  uint32_t issuer_attribute_len;160,3251
  const char *issuer_attribute;issuer_attribute165,3316
  uint32_t subject_attribute_len;170,3390
  const char *subject_attribute;subject_attribute175,3456
struct GNUNET_ABD_Delegate182,3516
  struct GNUNET_CRYPTO_PublicKey issuer_key;188,3592
  struct GNUNET_CRYPTO_PublicKey subject_key;193,3711
  struct GNUNET_CRYPTO_Signature signature;198,3804
  struct GNUNET_TIME_Absolute expiration;203,3896
  uint32_t issuer_attribute_len;208,3987
  const char *issuer_attribute;issuer_attribute213,4059
  uint32_t subject_attribute_len;218,4141
  const char *subject_attribute;subject_attribute223,4215
enum GNUNET_ABD_AlgoDirectionFlags230,4363
  GNUNET_ABD_FLAG_FORWARD=234,4464
  GNUNET_ABD_FLAG_BACKWARD=237,4602
typedef void (*GNUNET_ABD_CredentialResultProcessor)GNUNET_ABD_CredentialResultProcessor269,5363
typedef void (*GNUNET_ABD_IntermediateResultProcessor)GNUNET_ABD_IntermediateResultProcessor278,5938
typedef void (*GNUNET_ABD_DelegateResultProcessor)GNUNET_ABD_DelegateResultProcessor291,6496
typedef void (*GNUNET_ABD_RemoveDelegateResultProcessor)GNUNET_ABD_RemoveDelegateResultProcessor301,6849

src/include/gnunet_crypto_lib.h,7761
#define GNUNET_CRYPTO_LIB_H52,1652
#define GNUNET_CRYPTO_ECC_SIGNATURE_DATA_ENCODING_LENGTH 77,2047
enum GNUNET_CRYPTO_Quality84,2182
  GNUNET_CRYPTO_QUALITY_WEAK,91,2342
  GNUNET_CRYPTO_QUALITY_STRONG,97,2448
  GNUNET_CRYPTO_QUALITY_NONCE103,2556
#define GNUNET_CRYPTO_AES_KEY_LENGTH 110,2664
#define GNUNET_CRYPTO_HASH_LENGTH 115,2746
#define GNUNET_CRYPTO_PKEY_ASCII_LENGTH 121,2903
struct GNUNET_CRYPTO_HashAsciiEncoded126,3022
  unsigned char encoding[encoding128,3062
struct GNUNET_CRYPTO_EccSignaturePurpose140,3272
  uint32_t size GNUNET_PACKED;147,3443
  uint32_t purpose GNUNET_PACKED;155,3654
struct GNUNET_CRYPTO_EddsaSignature163,3777
struct GNUNET_CRYPTO_EcdsaSignature180,3976
struct GNUNET_CRYPTO_EddsaPublicKey200,4381
struct GNUNET_CRYPTO_EcdsaPublicKey215,4746
struct GNUNET_PeerIdentity228,5042
  struct GNUNET_CRYPTO_EddsaPublicKey public_key;230,5071
struct GNUNET_CRYPTO_EcdhePublicKey239,5289
struct GNUNET_CRYPTO_EcdhePrivateKey253,5630
struct GNUNET_CRYPTO_EcdsaPrivateKey265,5863
struct GNUNET_CRYPTO_EddsaPrivateKey277,6096
struct GNUNET_CRYPTO_EddsaPrivateScalar290,6333
struct GNUNET_CRYPTO_Edx25519PrivateKey303,6693
struct GNUNET_CRYPTO_Edx25519PublicKey325,7388
struct GNUNET_CRYPTO_Edx25519Signature338,7696
struct GNUNET_CRYPTO_ElligatorRepresentative354,7910
enum GNUNET_CRYPTO_KeyType366,8228
  GNUNET_PUBLIC_KEY_TYPE_ECDSA 372,8345
  GNUNET_PUBLIC_KEY_TYPE_EDDSA 378,8472
struct GNUNET_CRYPTO_PrivateKey386,8697
  uint32_t type;393,8822
    struct GNUNET_CRYPTO_EcdsaPrivateKey ecdsa_key;400,8898
    struct GNUNET_CRYPTO_EddsaPrivateKey eddsa_key;405,8996
struct GNUNET_CRYPTO_PublicKey413,9101
  uint32_t type;420,9225
    struct GNUNET_CRYPTO_EcdsaPublicKey ecdsa_key;427,9301
    struct GNUNET_CRYPTO_EddsaPublicKey eddsa_key;432,9398
struct GNUNET_CRYPTO_Signature440,9508
  uint32_t type;447,9631
    struct GNUNET_CRYPTO_EcdsaSignature ecdsa_signature;454,9703
    struct GNUNET_CRYPTO_EddsaSignature eddsa_signature;459,9803
struct GNUNET_CRYPTO_SymmetricSessionKey466,9909
  unsigned char aes_key[aes_key471,9989
  unsigned char twofish_key[twofish_key476,10086
struct GNUNET_CRYPTO_ChallengeNonceP482,10197
  struct GNUNET_ShortHashCode value;487,10308
struct GNUNET_CRYPTO_SymmetricInitializationVector498,10490
struct GNUNET_CRYPTO_AuthKey509,10726
  unsigned char key[key511,10757
#define GNUNET_CRYPTO_PAILLIER_BITS 519,10920
struct GNUNET_CRYPTO_PaillierPublicKey525,10995
struct GNUNET_CRYPTO_PaillierPrivateKey537,11152
struct GNUNET_CRYPTO_PaillierCiphertext553,11445
  int32_t remaining_ops GNUNET_PACKED;559,11612
struct GNUNET_CRYPTO_Cs25519Scalar571,11790
  unsigned char d[d576,11859
struct GNUNET_CRYPTO_Cs25519Point583,11944
  unsigned char y[y589,12093
struct GNUNET_CRYPTO_CsPrivateKey596,12203
  struct GNUNET_CRYPTO_Cs25519Scalar scalar;598,12239
struct GNUNET_CRYPTO_CsPublicKey605,12347
  struct GNUNET_CRYPTO_Cs25519Point point;607,12382
struct GNUNET_CRYPTO_CsBlindingSecret614,12484
  struct GNUNET_CRYPTO_Cs25519Scalar alpha;616,12524
  struct GNUNET_CRYPTO_Cs25519Scalar beta;617,12568
struct GNUNET_CRYPTO_CsRSecret624,12663
  struct GNUNET_CRYPTO_Cs25519Scalar scalar;626,12696
struct GNUNET_CRYPTO_CsRPublic633,12797
  struct GNUNET_CRYPTO_Cs25519Point point;635,12830
struct GNUNET_CRYPTO_CsC642,12912
  struct GNUNET_CRYPTO_Cs25519Scalar scalar;644,12939
struct GNUNET_CRYPTO_CsS651,13019
  struct GNUNET_CRYPTO_Cs25519Scalar scalar;653,13046
struct GNUNET_CRYPTO_CsBlindS660,13134
  struct GNUNET_CRYPTO_Cs25519Scalar scalar;662,13166
struct GNUNET_CRYPTO_CsSignature669,13273
  struct GNUNET_CRYPTO_CsS s_scalar;674,13389
  struct GNUNET_CRYPTO_CsRPublic r_point;679,13482
struct GNUNET_CRYPTO_CsSessionNonce687,13608
struct GNUNET_CRYPTO_CsBlindingNonce698,13778
#define GNUNET_CRYPTO_hash_from_string(975,21245
struct GNUNET_CRYPTO_PowSalt1013,22238
  char salt[salt1015,22269
(*GNUNET_CRYPTO_HashCompletedCallback)GNUNET_CRYPTO_HashCompletedCallback1135,25241
struct GNUNET_CRYPTO_EccPoint1879,46212
struct GNUNET_CRYPTO_EccScalar1891,46483
struct GNUNET_CRYPTO_FoKemC2103,53360
  struct GNUNET_HashCode y;2106,53429
  struct GNUNET_CRYPTO_EcdhePublicKey pub;2109,53514
#define GNUNET_CRYPTO_eddsa_sign(2272,59897
#define GNUNET_CRYPTO_ecdsa_sign(2334,62284
#define GNUNET_CRYPTO_edx25519_sign(2381,64433
#define GNUNET_CRYPTO_eddsa_verify(2434,66856
#define GNUNET_CRYPTO_ecdsa_verify(2486,69217
#define GNUNET_CRYPTO_edx25519_verify(2538,71596
struct GNUNET_CRYPTO_RsaBlindingKeySecret2939,85191
  uint32_t pre_secret[8] GNUNET_PACKED;2945,85329
struct GNUNET_CRYPTO_RsaBlindedMessage3138,89919
  void *blinded_msg;blinded_msg3144,90033
  size_t blinded_msg_size;3149,90113
struct GNUNET_CRYPTO_CsBlindedMessage3363,96744
  struct GNUNET_CRYPTO_CsC c[c3368,96863
  struct GNUNET_CRYPTO_CsSessionNonce nonce;3373,96945
struct GNUNET_CRYPTO_CSPublicRPairP3381,97052
  struct GNUNET_CRYPTO_CsRPublic r_pub[r_pub3383,97090
struct GNUNET_CRYPTO_CsBlindSignature3415,98119
  unsigned int b;3421,98284
  struct GNUNET_CRYPTO_CsBlindS s_scalar;3426,98361
enum GNUNET_CRYPTO_BlindSignatureAlgorithm3487,100531
  GNUNET_CRYPTO_BSA_INVALID 3493,100621
  GNUNET_CRYPTO_BSA_RSA 3498,100693
  GNUNET_CRYPTO_BSA_CS 3503,100772
struct GNUNET_CRYPTO_UnblindedSignature3510,100854
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3516,100937
  unsigned int rc;3521,101027
    struct GNUNET_CRYPTO_CsSignature cs_signature;3531,101178
    struct GNUNET_CRYPTO_RsaSignature *rsa_signature;rsa_signature3536,101300
  } details;3538,101355
struct GNUNET_CRYPTO_BlindedSignature3547,101469
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3553,101550
  unsigned int rc;3558,101640
    struct GNUNET_CRYPTO_CsBlindSignature blinded_cs_answer;3570,101919
    struct GNUNET_CRYPTO_RsaSignature *blinded_rsa_signature;blinded_rsa_signature3575,102051
  } details;3577,102114
struct GNUNET_CRYPTO_BlindSignPublicKey3585,102201
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3591,102285
  unsigned int rc;3596,102375
  struct GNUNET_HashCode pub_key_hash;3601,102436
    struct GNUNET_CRYPTO_CsPublicKey cs_public_key;3611,102607
    struct GNUNET_CRYPTO_RsaPublicKey *rsa_public_key;rsa_public_key3616,102730
  } details;3618,102786
struct GNUNET_CRYPTO_BlindSignPrivateKey3625,102870
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3631,102955
  unsigned int rc;3636,103045
    struct GNUNET_CRYPTO_CsPrivateKey cs_private_key;3646,103196
    struct GNUNET_CRYPTO_RsaPrivateKey *rsa_private_key;rsa_private_key3651,103321
  } details;3653,103379
struct GNUNET_CRYPTO_BlindedMessage3660,103456
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3665,103544
  unsigned int rc;3670,103634
    struct GNUNET_CRYPTO_CsBlindedMessage cs_blinded_message;3680,103785
    struct GNUNET_CRYPTO_RsaBlindedMessage rsa_blinded_message;3685,103918
  } details;3687,103983
struct GNUNET_CRYPTO_CSPrivateRPairP3694,104042
  struct GNUNET_CRYPTO_CsRSecret r[r3696,104081
struct GNUNET_CRYPTO_BlindingInputValues3703,104180
  enum GNUNET_CRYPTO_BlindSignatureAlgorithm cipher;3709,104264
  unsigned int rc;3714,104354
    struct GNUNET_CRYPTO_CSPublicRPairP cs_values;3724,104505
  } details;3726,104557
union GNUNET_CRYPTO_BlindSessionNonce3735,104690
  struct GNUNET_CRYPTO_CsSessionNonce cs_nonce;3740,104780
union GNUNET_CRYPTO_BlindingSecretP3982,111531
  struct GNUNET_CRYPTO_CsBlindingNonce nonce;3987,111608
  struct GNUNET_CRYPTO_RsaBlindingKeySecret rsa_bks;3992,111710
#define GNUNET_CRYPTO_sign(4296,121849
#define GNUNET_CRYPTO_signature_verify(4369,125203
#define GNUNET_CRYPTO_ENCRYPT_OVERHEAD_BYTES 4427,127733

src/include/block_fs.h,375
#define BLOCK_FS_H35,1077
#define MAX_UBLOCK_SIZE 45,1204
struct UBlock53,1346
  struct GNUNET_CRYPTO_EcdsaSignature signature;58,1438
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;63,1535
  struct GNUNET_CRYPTO_EcdsaPublicKey verification_key;68,1641
struct OnDemandBlock85,2025
  struct GNUNET_HashCode file_id;92,2184
  uint64_t offset GNUNET_PACKED;98,2322

src/include/gnunet_reclaim_plugin.h,3865
#define GNUNET_RECLAIM_PLUGIN_H34,1087
typedef char *(*GNUNET_RECLAIM_AttributeValueToStringFunction)GNUNET_RECLAIM_AttributeValueToStringFunction58,1632
typedef int (*GNUNET_RECLAIM_AttributeStringToValueFunction)GNUNET_RECLAIM_AttributeStringToValueFunction77,2178
typedef uint32_t (*GNUNET_RECLAIM_AttributeTypenameToNumberFunction)GNUNET_RECLAIM_AttributeTypenameToNumberFunction93,2522
typedef const char *(*GNUNET_RECLAIM_AttributeNumberToTypenameFunction)GNUNET_RECLAIM_AttributeNumberToTypenameFunction106,2856
typedef char *(*GNUNET_RECLAIM_CredentialValueToStringFunction)GNUNET_RECLAIM_CredentialValueToStringFunction120,3316
typedef int (*GNUNET_RECLAIM_CredentialStringToValueFunction)GNUNET_RECLAIM_CredentialStringToValueFunction139,3863
typedef uint32_t (*GNUNET_RECLAIM_CredentialTypenameToNumberFunction)GNUNET_RECLAIM_CredentialTypenameToNumberFunction155,4208
typedef const char *(*GNUNET_RECLAIM_CredentialNumberToTypenameFunction)GNUNET_RECLAIM_CredentialNumberToTypenameFunction168,4543
GNUNET_RECLAIM_CredentialGetAttributesFunction)181,4858
typedef char *(*GNUNET_RECLAIM_CredentialGetIssuerFunction)GNUNET_RECLAIM_CredentialGetIssuerFunction192,5147
typedef int (*GNUNET_RECLAIM_CredentialGetExpirationFunction)GNUNET_RECLAIM_CredentialGetExpirationFunction204,5471
typedef char *(*GNUNET_RECLAIM_PresentationValueToStringFunction)GNUNET_RECLAIM_PresentationValueToStringFunction219,5995
typedef int (*GNUNET_RECLAIM_PresentationStringToValueFunction)GNUNET_RECLAIM_PresentationStringToValueFunction238,6544
typedef uint32_t (*GNUNET_RECLAIM_PresentationTypenameToNumberFunction)GNUNET_RECLAIM_PresentationTypenameToNumberFunction254,6891
typedef const char *(*GNUNET_RECLAIM_PresentationNumberToTypenameFunction)GNUNET_RECLAIM_PresentationNumberToTypenameFunction267,7228
GNUNET_RECLAIM_PresentationGetAttributesFunction)280,7545
typedef char *(*GNUNET_RECLAIM_PresentationGetIssuerFunction)GNUNET_RECLAIM_PresentationGetIssuerFunction291,7838
typedef int (*GNUNET_RECLAIM_PresentationGetExpirationFunction)GNUNET_RECLAIM_PresentationGetExpirationFunction303,8166
typedef int (*GNUNET_RECLAIM_CredentialToPresentation)GNUNET_RECLAIM_CredentialToPresentation308,8340
struct GNUNET_RECLAIM_AttributePluginFunctions318,8690
  void *cls;cls323,8790
  GNUNET_RECLAIM_AttributeValueToStringFunction value_to_string;328,8843
  GNUNET_RECLAIM_AttributeStringToValueFunction string_to_value;333,8948
  GNUNET_RECLAIM_AttributeTypenameToNumberFunction typename_to_number;338,9051
  GNUNET_RECLAIM_AttributeNumberToTypenameFunction number_to_typename;343,9160
struct GNUNET_RECLAIM_CredentialPluginFunctions351,9361
  void *cls;cls356,9462
  GNUNET_RECLAIM_CredentialValueToStringFunction value_to_string;361,9515
  GNUNET_RECLAIM_CredentialStringToValueFunction string_to_value;366,9621
  GNUNET_RECLAIM_CredentialTypenameToNumberFunction typename_to_number;371,9725
  GNUNET_RECLAIM_CredentialNumberToTypenameFunction number_to_typename;376,9835
  GNUNET_RECLAIM_CredentialGetAttributesFunction get_attributes;381,9948
  GNUNET_RECLAIM_CredentialGetIssuerFunction get_issuer;386,10050
  GNUNET_RECLAIM_CredentialGetExpirationFunction get_expiration;391,10137
  GNUNET_RECLAIM_PresentationValueToStringFunction value_to_string_p;396,10242
  GNUNET_RECLAIM_PresentationStringToValueFunction string_to_value_p;401,10352
  GNUNET_RECLAIM_PresentationTypenameToNumberFunction typename_to_number_p;406,10460
  GNUNET_RECLAIM_PresentationNumberToTypenameFunction number_to_typename_p;411,10574
  GNUNET_RECLAIM_PresentationGetAttributesFunction get_attributes_p;416,10691
  GNUNET_RECLAIM_PresentationGetIssuerFunction get_issuer_p;421,10797
  GNUNET_RECLAIM_PresentationGetExpirationFunction get_expiration_p;426,10888
  GNUNET_RECLAIM_CredentialToPresentation create_presentation;431,10992

src/include/gnunet_strings_lib.h,742
#define GNUNET_STRINGS_LIB_H49,1495
enum GNUNET_STRINGS_FilenameCheck534,16863
  GNUNET_STRINGS_CHECK_EXISTS 539,16938
  GNUNET_STRINGS_CHECK_IS_DIRECTORY 544,17030
  GNUNET_STRINGS_CHECK_IS_LINK 549,17123
  GNUNET_STRINGS_CHECK_IS_ABSOLUTE 554,17227
struct GNUNET_STRINGS_PortPolicy696,22355
  uint16_t start_port;701,22446
  uint16_t end_port;706,22524
  int negate_portrange;712,22633
struct GNUNET_STRINGS_IPv4NetworkPolicy719,22711
  struct in_addr network;724,22784
  struct in_addr netmask;729,22842
  struct GNUNET_STRINGS_PortPolicy pp;734,22910
struct GNUNET_STRINGS_IPv6NetworkPolicy741,23007
  struct in6_addr network;746,23080
  struct in6_addr netmask;751,23139
  struct GNUNET_STRINGS_PortPolicy pp;756,23208

src/include/gnunet_transport_communication_service.h,806
#define GNUNET_TRANSPORT_COMMUNICATION_SERVICE_H39,1176
#define GNUNET_TRANSPORT_COMMUNICATION_VERSION 54,1413
#define GNUNET_TRANSPORT_QUEUE_LENGTH_UNLIMITED 59,1496
typedef int (*GNUNET_TRANSPORT_CommunicatorMqInit)GNUNET_TRANSPORT_CommunicatorMqInit79,2447
enum GNUNET_TRANSPORT_CommunicatorCharacteristics97,2892
  GNUNET_TRANSPORT_CC_UNKNOWN 102,3000
  GNUNET_TRANSPORT_CC_RELIABLE 107,3113
  GNUNET_TRANSPORT_CC_UNRELIABLE 112,3205
typedef void (*GNUNET_TRANSPORT_CommunicatorNotify)GNUNET_TRANSPORT_CommunicatorNotify131,3744
(*GNUNET_TRANSPORT_MessageCompletedCallback)GNUNET_TRANSPORT_MessageCompletedCallback188,5671
enum GNUNET_TRANSPORT_ConnectionStatus234,7331
  GNUNET_TRANSPORT_CS_DOWN 239,7409
  GNUNET_TRANSPORT_CS_OUTBOUND 244,7513
  GNUNET_TRANSPORT_CS_INBOUND 249,7622

src/include/gnunet_gnsrecord_plugin.h,910
#define GNUNET_GNSRECORD_PLUGIN_H38,1138
(*GNUNET_GNSRECORD_ValueToStringFunction)GNUNET_GNSRECORD_ValueToStringFunction60,1656
(*GNUNET_GNSRECORD_StringToValueFunction)GNUNET_GNSRECORD_StringToValueFunction79,2306
(*GNUNET_GNSRECORD_TypenameToNumberFunction)GNUNET_GNSRECORD_TypenameToNumberFunction95,2827
(*GNUNET_GNSRECORD_NumberToTypenameFunction)GNUNET_GNSRECORD_NumberToTypenameFunction108,3203
(*GNUNET_GNSRECORD_IsCriticalFunction)GNUNET_GNSRECORD_IsCriticalFunction119,3541
struct GNUNET_GNSRECORD_PluginFunctions128,3776
  void *cls;cls133,3869
  GNUNET_GNSRECORD_ValueToStringFunction value_to_string;138,3922
  GNUNET_GNSRECORD_StringToValueFunction string_to_value;143,4020
  GNUNET_GNSRECORD_TypenameToNumberFunction typename_to_number;148,4116
  GNUNET_GNSRECORD_NumberToTypenameFunction number_to_typename;153,4218
  GNUNET_GNSRECORD_IsCriticalFunction is_critical;158,4313

src/include/gnunet_rest_plugin.h,235
#define GNUNET_REST_PLUGIN_H33,1022
struct GNUNET_REST_Plugin52,1336
  void *cls;cls59,1417
  char *name;name65,1532
typedef enum GNUNET_GenericReturnValue (*GNUNET_REST_ProcessingFunction)GNUNET_REST_ProcessingFunction68,1550

src/include/gnunet_sq_lib.h,1218
#define GNUNET_SQ_LIB_H26,922
(*GNUNET_SQ_QueryConverter)GNUNET_SQ_QueryConverter45,1507
struct GNUNET_SQ_QueryParam55,1789
  GNUNET_SQ_QueryConverter conv;60,1883
  void *conv_cls;conv_cls65,1955
  const void *data;data70,2005
  size_t size;75,2059
  unsigned int num_params;80,2138
#define GNUNET_SQ_query_param_end 87,2219
#define GNUNET_SQ_query_param_auto_from_type(117,2932
(*GNUNET_SQ_ResultConverter)GNUNET_SQ_ResultConverter227,5849
(*GNUNET_SQ_ResultCleanup)GNUNET_SQ_ResultCleanup247,6292
struct GNUNET_SQ_ResultSpec253,6384
  GNUNET_SQ_ResultConverter conv;258,6465
  GNUNET_SQ_ResultCleanup cleaner;264,6590
  void *cls;cls269,6679
  void *dst;dst274,6736
  size_t dst_size;281,6926
  size_t *result_size;result_size288,7096
  unsigned int num_params;293,7193
#define GNUNET_SQ_result_spec_end 302,7342
#define GNUNET_SQ_result_spec_auto_from_type(335,8309
struct GNUNET_SQ_PrepareStatement462,11461
  const char *sql;sql467,11536
  sqlite3_stmt **pstmt;pstmt472,11596
#define GNUNET_SQ_PREPARE_END 479,11678
struct GNUNET_SQ_ExecuteStatement514,12509
  const char *sql;sql519,12584
  bool ignore_errors;524,12646
#define GNUNET_SQ_EXECUTE_STATEMENT_END 531,12726

src/include/gnunet_transport_application_service.h,55
#define GNUNET_TRANSPORT_APPLICATION_SERVICE_H34,1068

src/include/gnunet_scheduler_lib.h,1500
#define GNUNET_SCHEDULER_LIB_H40,1197
enum GNUNET_SCHEDULER_Reason59,1491
  GNUNET_SCHEDULER_REASON_NONE 64,1563
  GNUNET_SCHEDULER_REASON_STARTUP 69,1665
  GNUNET_SCHEDULER_REASON_SHUTDOWN 74,1787
  GNUNET_SCHEDULER_REASON_TIMEOUT 80,1922
  GNUNET_SCHEDULER_REASON_READ_READY 85,2008
  GNUNET_SCHEDULER_REASON_WRITE_READY 90,2097
  GNUNET_SCHEDULER_REASON_PREREQ_DONE 95,2190
enum GNUNET_SCHEDULER_EventType108,2383
  GNUNET_SCHEDULER_ET_NONE 113,2465
  GNUNET_SCHEDULER_ET_IN 118,2543
  GNUNET_SCHEDULER_ET_OUT 123,2621
  GNUNET_SCHEDULER_ET_HUP 128,2670
  GNUNET_SCHEDULER_ET_ERR 133,2719
  GNUNET_SCHEDULER_ET_PRI 138,2768
  GNUNET_SCHEDULER_ET_NVAL 143,2818
struct GNUNET_SCHEDULER_FdInfo150,2931
  const struct GNUNET_NETWORK_Handle *fd;fd157,3149
  const struct GNUNET_DISK_FileHandle *fh;fh164,3377
  enum GNUNET_SCHEDULER_EventType et;169,3495
  int sock;174,3593
struct GNUNET_SCHEDULER_TaskContext181,3672
  enum GNUNET_SCHEDULER_Reason reason;186,3758
  unsigned int fds_len;191,3846
  const struct GNUNET_SCHEDULER_FdInfo *fds;fds199,4152
  const struct GNUNET_NETWORK_FDSet *read_ready;read_ready206,4356
  const struct GNUNET_NETWORK_FDSet *write_ready;write_ready213,4564
struct GNUNET_SCHEDULER_Driver267,6473
  void *cls;cls272,6572
  (*add)add288,7096
  (*del)del303,7597
  (*set_wakeup)set_wakeup313,7827
(*GNUNET_SCHEDULER_TaskCallback)GNUNET_SCHEDULER_TaskCallback324,7999
(*GNUNET_SCHEDULER_select)GNUNET_SCHEDULER_select401,10990

src/include/gnunet_plugin_lib.h,163
#define GNUNET_PLUGIN_LIB_H41,1222
(*GNUNET_PLUGIN_Callback)GNUNET_PLUGIN_Callback61,1641
(*GNUNET_PLUGIN_LoaderCallback)GNUNET_PLUGIN_LoaderCallback105,3022

src/include/gnunet_nt_lib.h,260
#define GNUNET_NT_LIB_H38,1116
enum GNUNET_NetworkType43,1205
  GNUNET_NT_UNSPECIFIED 48,1273
  GNUNET_NT_LOOPBACK 53,1342
  GNUNET_NT_LAN 58,1406
  GNUNET_NT_WAN 63,1479
  GNUNET_NT_WLAN 68,1549
  GNUNET_NT_BT 73,1603
#define GNUNET_NT_COUNT 78,1675

src/include/gnunet_disk_lib.h,1561
#define GNUNET_DISK_LIB_H40,1159
enum GNUNET_FILE_Type50,1288
  GNUNET_DISK_HANLDE_TYPE_EVENT,55,1357
  GNUNET_DISK_HANLDE_TYPE_FILE,60,1434
  GNUNET_DISK_HANLDE_TYPE_PIPE65,1510
struct GNUNET_DISK_FileHandle71,1597
  int fd;76,1680
enum GNUNET_DISK_OpenFlags101,2158
  GNUNET_DISK_OPEN_READ 106,2230
  GNUNET_DISK_OPEN_WRITE 111,2303
  GNUNET_DISK_OPEN_READWRITE 116,2394
  GNUNET_DISK_OPEN_FAILIFEXISTS 121,2474
  GNUNET_DISK_OPEN_TRUNCATE 126,2556
  GNUNET_DISK_OPEN_CREATE 131,2639
  GNUNET_DISK_OPEN_APPEND 136,2708
enum GNUNET_DISK_MapType142,2800
  GNUNET_DISK_MAP_TYPE_READ 147,2866
  GNUNET_DISK_MAP_TYPE_WRITE 152,2940
  GNUNET_DISK_MAP_TYPE_READWRITE 157,3015
enum GNUNET_DISK_AccessPermissions164,3105
  GNUNET_DISK_PERM_NONE 169,3205
  GNUNET_DISK_PERM_USER_READ 174,3268
  GNUNET_DISK_PERM_USER_WRITE 179,3337
  GNUNET_DISK_PERM_USER_EXEC 184,3409
  GNUNET_DISK_PERM_GROUP_READ 189,3477
  GNUNET_DISK_PERM_GROUP_WRITE 194,3547
  GNUNET_DISK_PERM_GROUP_EXEC 199,3621
  GNUNET_DISK_PERM_OTHER_READ 204,3695
  GNUNET_DISK_PERM_OTHER_WRITE 209,3770
  GNUNET_DISK_PERM_OTHER_EXEC 214,3849
enum GNUNET_DISK_Seek222,4031
  GNUNET_DISK_SEEK_SET 227,4128
  GNUNET_DISK_SEEK_CUR 232,4226
  GNUNET_DISK_SEEK_END 237,4324
enum GNUNET_DISK_PipeEnd244,4415
  GNUNET_DISK_PIPE_END_READ 249,4486
  GNUNET_DISK_PIPE_END_WRITE 254,4564
enum GNUNET_DISK_PipeFlags416,9800
  GNUNET_DISK_PF_NONE,422,9907
  GNUNET_DISK_PF_BLOCKING_READ 427,9997
  GNUNET_DISK_PF_BLOCKING_WRITE 432,10101
  GNUNET_DISK_PF_BLOCKING_RW 437,10213

src/include/gnunet_nat_service.h,1886
#define GNUNET_NAT_SERVICE_H37,1144
enum GNUNET_NAT_AddressClass53,1612
  GNUNET_NAT_AC_NONE 58,1672
  GNUNET_NAT_AC_OTHER 64,1811
  GNUNET_NAT_AC_PRIVATE 70,1932
  GNUNET_NAT_AC_GLOBAL 75,2018
  GNUNET_NAT_AC_GLOBAL_PRIVATE 81,2139
  GNUNET_NAT_AC_LAN 89,2330
  GNUNET_NAT_AC_LAN_PRIVATE 96,2505
  GNUNET_NAT_AC_WLAN 103,2692
  GNUNET_NAT_AC_BT 109,2857
  GNUNET_NAT_AC_LOOPBACK 114,2961
  GNUNET_NAT_AC_EXTERN 123,3245
  GNUNET_NAT_AC_MANUAL 129,3408
  GNUNET_NAT_AC_ANY 134,3483
enum GNUNET_NAT_StatusCode141,3618
  GNUNET_NAT_ERROR_SUCCESS 146,3681
  GNUNET_NAT_ERROR_IPC_FAILURE,151,3751
  GNUNET_NAT_ERROR_INTERNAL_NETWORK_ERROR,156,3849
  GNUNET_NAT_ERROR_TIMEOUT,161,3925
  GNUNET_NAT_ERROR_NOT_ONLINE,166,4000
  GNUNET_NAT_ERROR_UPNPC_NOT_FOUND,171,4075
  GNUNET_NAT_ERROR_UPNPC_FAILED,176,4159
  GNUNET_NAT_ERROR_UPNPC_TIMEOUT,181,4256
  GNUNET_NAT_ERROR_UPNPC_PORTMAP_FAILED,186,4357
  GNUNET_NAT_ERROR_EXTERNAL_IP_UTILITY_NOT_FOUND,191,4448
  GNUNET_NAT_ERROR_EXTERNAL_IP_UTILITY_FAILED,196,4552
  GNUNET_NAT_ERROR_EXTERNAL_IP_UTILITY_OUTPUT_INVALID,201,4654
  GNUNET_NAT_ERROR_EXTERNAL_IP_ADDRESS_INVALID,206,4776
  GNUNET_NAT_ERROR_NO_VALID_IF_IP_COMBO,211,4908
  GNUNET_NAT_ERROR_HELPER_NAT_SERVER_NOT_FOUND,216,5009
  GNUNET_NAT_ERROR_NAT_TEST_START_FAILED,221,5109
  GNUNET_NAT_ERROR_NAT_TEST_TIMEOUT,226,5186
  GNUNET_NAT_ERROR_NAT_REGISTER_FAILED,231,5269
  GNUNET_NAT_ERROR_HELPER_NAT_CLIENT_NOT_FOUND236,5327
enum GNUNET_NAT_Type243,5433
  GNUNET_NAT_TYPE_NO_NAT 248,5501
  GNUNET_NAT_TYPE_UNREACHABLE_NAT,253,5599
  GNUNET_NAT_TYPE_STUN_PUNCHED_NAT,258,5679
  GNUNET_NAT_TYPE_UPNP_NAT,263,5760
  GNUNET_NAT_TYPE_UNKNOWN268,5837
(*GNUNET_NAT_AddressCallback)GNUNET_NAT_AddressCallback286,6464
(*GNUNET_NAT_ReversalCallback)GNUNET_NAT_ReversalCallback304,7086
(*GNUNET_NAT_TestCallback)GNUNET_NAT_TestCallback461,12971

src/include/gnunet_cadet_service.h,1805
#define GNUNET_CADET_SERVICE_H39,1201
#define GNUNET_CADET_VERSION 54,1405
struct GNUNET_CADET_ConnectionTunnelIdentifier76,1716
  struct GNUNET_ShortHashCode connection_of_tunnel;78,1765
struct GNUNET_CADET_ChannelTunnelNumber85,1885
  uint32_t cn GNUNET_PACKED;96,2315
typedef void *(*GNUNET_CADET_ConnectEventHandler)GNUNET_CADET_ConnectEventHandler111,2880
typedef void (*GNUNET_CADET_DisconnectEventHandler)GNUNET_CADET_DisconnectEventHandler128,3451
typedef void (*GNUNET_CADET_WindowSizeEventHandler)GNUNET_CADET_WindowSizeEventHandler147,4206
enum GNUNET_CADET_ChannelInfoOption284,9052
  GNUNET_CADET_OPTION_PEER 291,9248
union GNUNET_CADET_ChannelInfo297,9336
  int yes_no;302,9430
  const struct GNUNET_PeerIdentity peer;307,9500
struct GNUNET_CADET_ChannelInternals340,10778
  struct GNUNET_PeerIdentity root;345,10854
  struct GNUNET_PeerIdentity dest;350,10934
typedef void (*GNUNET_CADET_ChannelCB)GNUNET_CADET_ChannelCB363,11210
struct GNUNET_CADET_PeerListEntry402,12249
  struct GNUNET_PeerIdentity peer;407,12339
  int have_tunnel;412,12426
  unsigned int n_paths;417,12506
  unsigned int best_path_length;422,12628
typedef void (*GNUNET_CADET_PeersCB)GNUNET_CADET_PeersCB435,12929
struct GNUNET_CADET_PeerPathDetail475,13998
  struct GNUNET_PeerIdentity peer;480,14072
  unsigned int target_offset;485,14167
  unsigned int path_length;490,14249
  const struct GNUNET_PeerIdentity *path;path497,14491
typedef void (*GNUNET_CADET_PathCB)GNUNET_CADET_PathCB508,14736
struct GNUNET_CADET_TunnelDetails548,15739
  struct GNUNET_PeerIdentity peer;553,15814
  uint32_t channels;558,15901
  uint32_t connections;563,15981
  uint16_t estate;568,16053
  uint16_t cstate;573,16122
typedef void (*GNUNET_CADET_TunnelsCB)GNUNET_CADET_TunnelsCB586,16407

src/include/gnunet_bio_lib.h,643
#define GNUNET_BIO_LIB_H42,1225
(*GNUNET_BIO_ReadHandler)GNUNET_BIO_ReadHandler364,10164
struct GNUNET_BIO_ReadSpec374,10462
  GNUNET_BIO_ReadHandler rh;379,10550
  void *cls;cls384,10629
  const char *what;what389,10708
  void *target;target395,10856
  size_t size;400,10943
#define GNUNET_BIO_read_spec_end(407,11004
(*GNUNET_BIO_WriteHandler)GNUNET_BIO_WriteHandler512,14042
struct GNUNET_BIO_WriteSpec522,14351
  GNUNET_BIO_WriteHandler wh;527,14438
  void *cls;cls532,14518
  const char *what;what537,14597
  void *source;source542,14705
  size_t source_size;548,14850
#define GNUNET_BIO_write_spec_end(555,14918

src/include/gnunet_regex_service.h,133
#define GNUNET_REGEX_SERVICE_H40,1261
#define GNUNET_REGEX_INITIAL_BYTES 57,1522
(*GNUNET_REGEX_Found)GNUNET_REGEX_Found110,3121

src/include/gnunet_scalarproduct_service.h,777
#define GNUNET_SCALARPRODUCT_SERVICE_H32,1029
#define GCRYPT_NO_DEPRECATED33,1068
#define GNUNET_SCALARPRODUCT_VERSION 47,1284
enum GNUNET_SCALARPRODUCT_ResponseStatus52,1386
  GNUNET_SCALARPRODUCT_STATUS_INIT 57,1507
  GNUNET_SCALARPRODUCT_STATUS_ACTIVE 62,1626
  GNUNET_SCALARPRODUCT_STATUS_SUCCESS,67,1718
  GNUNET_SCALARPRODUCT_STATUS_FAILURE,72,1802
  GNUNET_SCALARPRODUCT_STATUS_INVALID_RESPONSE,77,1887
  GNUNET_SCALARPRODUCT_STATUS_DISCONNECTED82,2005
struct GNUNET_SCALARPRODUCT_Element97,2222
  struct GNUNET_HashCode key;102,2336
  int64_t value GNUNET_PACKED;107,2429
(*GNUNET_SCALARPRODUCT_ContinuationWithStatus)GNUNET_SCALARPRODUCT_ContinuationWithStatus121,2651
(*GNUNET_SCALARPRODUCT_DatumProcessor)GNUNET_SCALARPRODUCT_DatumProcessor134,2952

src/include/gnunet_constants.h,910
#define GNUNET_CONSTANTS_H33,1016
#define GNUNET_CONSTANTS_DEFAULT_BW_IN_OUT 50,1395
#define GNUNET_CONSTANTS_IDLE_CONNECTION_TIMEOUT 57,1671
#define GNUNET_CONSTANTS_QUOTA_VIOLATION_TIMEOUT 63,1870
#define GNUNET_CONSTANTS_SERVICE_TIMEOUT 71,2151
#define GNUNET_CONSTANTS_MAX_CORK_DELAY 77,2340
#define GNUNET_CONSTANTS_LATENCY_WARN 83,2525
#define GNUNET_CONSTANTS_IDLE_LOAD_THRESHOLD 94,2937
#define GNUNET_CONSTANTS_MAX_BANDWIDTH_CARRY_S 100,3100
#define GNUNET_CONSTANTS_HELLO_ADDRESS_EXPIRATION 108,3313
#define GNUNET_CONSTANTS_DHT_MAX_EXPIRATION 115,3491
#define GNUNET_CONSTANTS_CORE_SIZE_ENCRYPTED_MESSAGE 123,3716
#define GNUNET_CONSTANTS_MAX_ENCRYPTED_MESSAGE_SIZE 136,4320
#define GNUNET_CONSTANTS_CADET_P2P_OVERHEAD 146,4687
#define GNUNET_CONSTANTS_MAX_CADET_MESSAGE_SIZE 151,4795
#define GNUNET_CONSTANTS_MAX_BLOCK_SIZE 158,4993
#define GNUNET_CONSTANTS_BLOOMFILTER_K 165,5127

src/include/block_regex.h,317
#define BLOCK_REGEX_H28,896
struct RegexAcceptBlock50,1157
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;56,1281
  struct GNUNET_TIME_AbsoluteNBO expiration_time;61,1383
  struct GNUNET_HashCode key;66,1473
  struct GNUNET_PeerIdentity peer;71,1553
  struct GNUNET_CRYPTO_EddsaSignature signature;76,1621

src/include/gnunet_setu_service.h,1157
#define GNUNET_SETU_SERVICE_H37,1062
#define GNUNET_SETU_CONTEXT_MESSAGE_MAX_SIZE 56,1383
enum GNUNET_SETU_Status82,1818
  GNUNET_SETU_STATUS_ADD_LOCAL,89,1971
  GNUNET_SETU_STATUS_ADD_REMOTE,96,2188
  GNUNET_SETU_STATUS_FAILURE,102,2321
  GNUNET_SETU_STATUS_DONE107,2422
struct GNUNET_SETU_Element114,2489
  uint16_t size;119,2585
  uint16_t element_type;124,2655
  const void *data;data129,2725
enum GNUNET_SETU_OptionType138,2856
  GNUNET_SETU_OPTION_END=143,2920
  GNUNET_SETU_OPTION_BYZANTINE=152,3181
  GNUNET_SETU_OPTION_FORCE_FULL=158,3340
  GNUNET_SETU_OPTION_FORCE_DELTA=165,3553
  GNUNET_SETU_OPTION_SYMMETRIC 170,3671
  GNUNET_SETU_OPTION_CUSTOM_BYZANTINE_UPPER_BOUND 176,3832
  GNUNET_SETU_OPTION_CUSTOM_BANDWIDTH_LATENCY_TRADEOFF=182,4018
    GNUNET_SETU_OPTION_CUSTOM_IBF_BUCKET_NUMBER_FACTOR=188,4213
    GNUNET_SETU_OPTION_CUSTOM_IBF_BUCKETS_PER_ELEMENT=194,4378
struct GNUNET_SETU_Option201,4480
  enum GNUNET_SETU_OptionType type;206,4545
    uint64_t num;213,4662
  } v;214,4680
(*GNUNET_SETU_ResultIterator)GNUNET_SETU_ResultIterator228,4999
(*GNUNET_SETU_ListenCallback)GNUNET_SETU_ListenCallback250,5967

src/include/gnunet_arm_service.h,1748
#define GNUNET_ARM_SERVICE_H36,1045
#define GNUNET_ARM_VERSION 52,1261
enum GNUNET_ARM_RequestStatus58,1366
  GNUNET_ARM_REQUEST_SENT_OK 63,1446
  GNUNET_ARM_REQUEST_DISCONNECTED 68,1550
enum GNUNET_ARM_ServiceMonitorStatus75,1626
  GNUNET_ARM_SERVICE_MONITORING_STARTED 80,1697
  GNUNET_ARM_SERVICE_STOPPED 85,1781
  GNUNET_ARM_SERVICE_STARTING 90,1864
  GNUNET_ARM_SERVICE_STOPPING 95,1948
enum GNUNET_ARM_Result102,2022
  GNUNET_ARM_RESULT_STOPPED 107,2113
  GNUNET_ARM_RESULT_STOPPING 112,2230
  GNUNET_ARM_RESULT_STARTING 117,2313
  GNUNET_ARM_RESULT_IS_STARTING_ALREADY 122,2411
  GNUNET_ARM_RESULT_IS_STOPPING_ALREADY 127,2519
  GNUNET_ARM_RESULT_IS_STARTED_ALREADY 132,2627
  GNUNET_ARM_RESULT_IS_STOPPED_ALREADY 137,2733
  GNUNET_ARM_RESULT_IS_NOT_KNOWN 142,2849
  GNUNET_ARM_RESULT_START_FAILED 147,2964
  GNUNET_ARM_RESULT_IN_SHUTDOWN 152,3089
enum GNUNET_ARM_ServiceStatus159,3177
  GNUNET_ARM_SERVICE_STATUS_STOPPED 164,3246
  GNUNET_ARM_SERVICE_STATUS_STARTED 169,3356
  GNUNET_ARM_SERVICE_STATUS_FAILED 175,3478
  GNUNET_ARM_SERVICE_STATUS_FINISHED 180,3587
  GNUNET_ARM_SERVICE_STATUS_STOPPING 186,3727
struct GNUNET_ARM_ServiceInfo193,3829
  enum GNUNET_ARM_ServiceStatus status;198,3913
  const char *name;name203,3996
  const char *binary;binary208,4074
  struct GNUNET_TIME_Absolute restart_at;214,4197
  struct GNUNET_TIME_Absolute last_started_at;219,4313
  int last_exit_status;224,4404
(*GNUNET_ARM_ConnectionStatusCallback)GNUNET_ARM_ConnectionStatusCallback247,4819
(*GNUNET_ARM_ResultCallback)GNUNET_ARM_ResultCallback263,5286
(*GNUNET_ARM_ServiceListCallback)GNUNET_ARM_ServiceListCallback281,5837
(*GNUNET_ARM_ServiceMonitorCallback)GNUNET_ARM_ServiceMonitorCallback397,9007

src/include/gnunet_json_lib.h,1233
#define GNUNET_JSON_LIB_H28,995
(*GNUNET_JSON_Parser)GNUNET_JSON_Parser53,1552
(*GNUNET_JSON_Cleaner)GNUNET_JSON_Cleaner65,1849
struct GNUNET_JSON_Specification72,2025
  GNUNET_JSON_Parser parser;77,2123
  GNUNET_JSON_Cleaner cleaner;82,2219
  void *cls;cls87,2306
  const char *field;field93,2458
  void *ptr;ptr98,2541
  bool *missing;missing104,2649
  size_t *size_ptr;size_ptr109,2732
  size_t ptr_size;114,2807
  bool is_optional;119,2887
#define GNUNET_JSON_spec_fixed_auto(202,5637
#define GNUNET_JSON_spec_fixed64_auto(225,6359
#define GNUNET_JSON_from_data_auto(502,13586
#define GNUNET_JSON_from_data64_auto(513,13859
enum GNUNET_JSON_PostResult571,15158
  GNUNET_JSON_PR_SUCCESS,576,15252
  GNUNET_JSON_PR_CONTINUE,581,15332
  GNUNET_JSON_PR_OUT_OF_MEMORY,586,15421
  GNUNET_JSON_PR_REQUEST_TOO_LARGE,591,15516
  GNUNET_JSON_PR_JSON_INVALID596,15619
(*GNUNET_JSON_PackCallback)GNUNET_JSON_PackCallback672,17935
struct GNUNET_JSON_PackSpec678,18060
  const char *field_name;field_name683,18134
  json_t *object;object688,18194
  bool allow_null;696,18457
#define GNUNET_JSON_PACK(718,18828
#define GNUNET_JSON_pack_data_auto(887,23361
#define GNUNET_JSON_pack_data64_auto(918,24349

src/include/gnunet_messenger_service.h,6320
#define GNUNET_MESSENGER_SERVICE_H33,1018
#define GNUNET_MESSENGER_VERSION 49,1273
#define GNUNET_MESSENGER_SERVICE_NAME 54,1369
struct GNUNET_MESSENGER_RoomEntryRecord77,1783
  struct GNUNET_PeerIdentity door;82,1887
  struct GNUNET_HashCode key GNUNET_PACKED;87,1983
struct GNUNET_MESSENGER_RoomDetailsRecord98,2203
  char name[name103,2294
  uint32_t flags;108,2353
enum GNUNET_MESSENGER_MessageKind116,2464
  GNUNET_MESSENGER_KIND_INFO 121,2591
  GNUNET_MESSENGER_KIND_JOIN 126,2721
  GNUNET_MESSENGER_KIND_LEAVE 131,2853
  GNUNET_MESSENGER_KIND_NAME 136,2980
  GNUNET_MESSENGER_KIND_KEY 141,3104
  GNUNET_MESSENGER_KIND_PEER 146,3229
  GNUNET_MESSENGER_KIND_ID 151,3351
  GNUNET_MESSENGER_KIND_MISS 156,3475
  GNUNET_MESSENGER_KIND_MERGE 161,3603
  GNUNET_MESSENGER_KIND_REQUEST 166,3736
  GNUNET_MESSENGER_KIND_INVITE 171,3870
  GNUNET_MESSENGER_KIND_TEXT 176,3999
  GNUNET_MESSENGER_KIND_FILE 181,4126
  GNUNET_MESSENGER_KIND_PRIVATE 186,4259
  GNUNET_MESSENGER_KIND_DELETE 191,4393
  GNUNET_MESSENGER_KIND_CONNECTION 196,4534
  GNUNET_MESSENGER_KIND_TICKET 201,4671
  GNUNET_MESSENGER_KIND_TRANSCRIPT 206,4812
  GNUNET_MESSENGER_KIND_TAG 211,4943
  GNUNET_MESSENGER_KIND_SUBSCRIBE 216,5079
  GNUNET_MESSENGER_KIND_TALK 221,5211
  GNUNET_MESSENGER_KIND_UNKNOWN 226,5320
#define GNUNET_MESSENGER_KIND_MAX 229,5360
struct GNUNET_MESSENGER_MessageHeader246,5821
  struct GNUNET_CRYPTO_Signature signature;251,5920
  struct GNUNET_TIME_AbsoluteNBO timestamp;256,6012
  struct GNUNET_ShortHashCode sender_id;261,6133
  struct GNUNET_HashCode previous;266,6255
  enum GNUNET_MESSENGER_MessageKind kind;271,6333
struct GNUNET_MESSENGER_MessageInfo280,6532
  uint32_t messenger_version;289,6920
struct GNUNET_MESSENGER_MessageJoin298,7098
  struct GNUNET_CRYPTO_PublicKey key;303,7202
struct GNUNET_MESSENGER_MessageLeave312,7366
struct GNUNET_MESSENGER_MessageName322,7535
  char *name;name327,7644
struct GNUNET_MESSENGER_MessageKey336,7791
  struct GNUNET_CRYPTO_PublicKey key;341,7911
struct GNUNET_MESSENGER_MessagePeer350,8097
  struct GNUNET_PeerIdentity peer;355,8200
struct GNUNET_MESSENGER_MessageId364,8377
  struct GNUNET_ShortHashCode id;369,8486
struct GNUNET_MESSENGER_MessageMiss378,8657
  struct GNUNET_PeerIdentity peer;383,8764
struct GNUNET_MESSENGER_MessageMerge392,8928
  struct GNUNET_HashCode previous;397,9023
struct GNUNET_MESSENGER_MessageRequest406,9219
  struct GNUNET_HashCode hash;411,9312
struct GNUNET_MESSENGER_MessageInvite420,9495
  struct GNUNET_PeerIdentity door;425,9597
  struct GNUNET_HashCode key;430,9693
struct GNUNET_MESSENGER_MessageText439,9844
  char *text;text444,9920
struct GNUNET_MESSENGER_MessageFile453,10103
  struct GNUNET_CRYPTO_SymmetricSessionKey key;458,10197
  struct GNUNET_HashCode hash;463,10294
  char name[name468,10374
  char *uri;uri473,10446
struct GNUNET_MESSENGER_MessagePrivate482,10642
  struct GNUNET_CRYPTO_EcdhePublicKey key;487,10737
  uint16_t length;492,10835
  char *data;data497,10907
struct GNUNET_MESSENGER_MessageDelete506,11076
  struct GNUNET_HashCode hash;511,11168
  struct GNUNET_TIME_RelativeNBO delay;516,11269
struct GNUNET_MESSENGER_MessageConnection525,11456
  uint32_t amount;530,11554
  uint32_t flags;535,11634
struct GNUNET_MESSENGER_MessageTicket544,11787
  char *identifier;identifier549,11872
struct GNUNET_MESSENGER_MessageTranscript558,12024
  struct GNUNET_HashCode hash;563,12119
  struct GNUNET_CRYPTO_PublicKey key;568,12220
  uint16_t length;573,12315
  char *data;data578,12389
struct GNUNET_MESSENGER_MessageTag587,12518
  struct GNUNET_HashCode hash;592,12604
  char *tag;tag597,12669
struct GNUNET_MESSENGER_MessageSubscribe606,12793
  struct GNUNET_ShortHashCode discourse;611,12893
  struct GNUNET_TIME_RelativeNBO time;616,12989
  uint32_t flags;621,13095
struct GNUNET_MESSENGER_MessageTalk630,13216
  struct GNUNET_ShortHashCode discourse;635,13306
  uint16_t length;640,13402
  char *data;data645,13469
struct GNUNET_MESSENGER_MessageBody651,13547
    struct GNUNET_MESSENGER_MessageInfo info;655,13597
    struct GNUNET_MESSENGER_MessageJoin join;656,13643
    struct GNUNET_MESSENGER_MessageLeave leave;657,13689
    struct GNUNET_MESSENGER_MessageName name;658,13737
    struct GNUNET_MESSENGER_MessageKey key;659,13783
    struct GNUNET_MESSENGER_MessagePeer peer;660,13827
    struct GNUNET_MESSENGER_MessageId id;661,13873
    struct GNUNET_MESSENGER_MessageMiss miss;662,13915
    struct GNUNET_MESSENGER_MessageMerge merge;663,13961
    struct GNUNET_MESSENGER_MessageRequest request;664,14009
    struct GNUNET_MESSENGER_MessageInvite invite;665,14061
    struct GNUNET_MESSENGER_MessageText text;666,14111
    struct GNUNET_MESSENGER_MessageFile file;667,14157
    struct GNUNET_MESSENGER_MessagePrivate privacy;668,14203
    struct GNUNET_MESSENGER_MessageDelete deletion;669,14255
    struct GNUNET_MESSENGER_MessageConnection connection;670,14307
    struct GNUNET_MESSENGER_MessageTicket ticket;671,14365
    struct GNUNET_MESSENGER_MessageTranscript transcript;672,14415
    struct GNUNET_MESSENGER_MessageTag tag;673,14473
    struct GNUNET_MESSENGER_MessageSubscribe subscribe;674,14517
    struct GNUNET_MESSENGER_MessageTalk talk;675,14573
struct GNUNET_MESSENGER_Message682,14659
  struct GNUNET_MESSENGER_MessageHeader header;687,14718
  struct GNUNET_MESSENGER_MessageBody body;692,14789
enum GNUNET_MESSENGER_MessageFlags699,14956
  GNUNET_MESSENGER_FLAG_NONE 704,15101
  GNUNET_MESSENGER_FLAG_SENT 709,15228
  GNUNET_MESSENGER_FLAG_PRIVATE 714,15359
  GNUNET_MESSENGER_FLAG_PEER 719,15502
  GNUNET_MESSENGER_FLAG_RECENT 724,15644
  GNUNET_MESSENGER_FLAG_UPDATE 729,15778
  GNUNET_MESSENGER_FLAG_DELETE 734,15914
enum GNUNET_MESSENGER_ConnectionFlags741,16085
  GNUNET_MESSENGER_FLAG_CONNECTION_NONE 746,16234
  GNUNET_MESSENGER_FLAG_CONNECTION_AUTO 751,16423
enum GNUNET_MESSENGER_SubscriptionFlags758,16649
  GNUNET_MESSENGER_FLAG_SUBSCRIPTION_NONE 763,16802
  GNUNET_MESSENGER_FLAG_SUBSCRIPTION_UNSUBSCRIBE 768,16952
  GNUNET_MESSENGER_FLAG_SUBSCRIPTION_KEEP_ALIVE 773,17117
(*GNUNET_MESSENGER_MessageCallback)GNUNET_MESSENGER_MessageCallback791,17725
(*GNUNET_MESSENGER_MemberCallback)GNUNET_MESSENGER_MemberCallback811,18722

src/include/gnunet_core_service.h,1718
#define GNUNET_CORE_SERVICE_H37,1169
#define GNUNET_CORE_VERSION 52,1371
struct EphemeralKeyMessage60,1585
  struct GNUNET_MessageHeader header;65,1688
  int32_t sender_status GNUNET_PACKED;70,1810
  struct GNUNET_CRYPTO_EddsaSignature signature;76,1966
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;81,2073
  struct GNUNET_TIME_AbsoluteNBO creation_time;86,2202
  struct GNUNET_TIME_AbsoluteNBO expiration_time;91,2328
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral_key;96,2422
  struct GNUNET_PeerIdentity origin_identity;102,2581
struct PingMessage111,2847
  struct GNUNET_MessageHeader header;116,2933
  uint32_t iv_seed GNUNET_PACKED;121,3005
  struct GNUNET_PeerIdentity target;127,3148
  uint32_t challenge GNUNET_PACKED;132,3247
struct PongMessage139,3358
  struct GNUNET_MessageHeader header;144,3444
  uint32_t iv_seed GNUNET_PACKED;149,3516
  uint32_t challenge GNUNET_PACKED;154,3613
  uint32_t reserved;159,3690
  struct GNUNET_PeerIdentity target;165,3820
typedef void *(*GNUNET_CORE_ConnectEventHandler)GNUNET_CORE_ConnectEventHandler185,4214
typedef void (*GNUNET_CORE_DisconnectEventHandler)GNUNET_CORE_DisconnectEventHandler199,4590
typedef void (*GNUNET_CORE_StartupCallback)GNUNET_CORE_StartupCallback217,5235
enum GNUNET_CORE_KxState295,8412
  GNUNET_CORE_KX_STATE_DOWN 300,8474
  GNUNET_CORE_KX_STATE_KEY_SENT,305,8553
  GNUNET_CORE_KX_STATE_KEY_RECEIVED,310,8648
  GNUNET_CORE_KX_STATE_UP,317,8857
  GNUNET_CORE_KX_STATE_REKEY_SENT,327,9260
  GNUNET_CORE_KX_PEER_DISCONNECT,333,9430
  GNUNET_CORE_KX_ITERATION_FINISHED,340,9669
  GNUNET_CORE_KX_CORE_DISCONNECT349,10052
typedef void (*GNUNET_CORE_MonitorCallback)GNUNET_CORE_MonitorCallback362,10378

src/include/gnunet_dht_block_types.h,742
#define GNUNET_DHT_BLOCK_TYPES_H21,834
enum GNUNET_BLOCK_Type42,1291
  GNUNET_BLOCK_TYPE_ANY 49,1361
  GNUNET_BLOCK_TYPE_FS_DBLOCK 55,1444
  GNUNET_BLOCK_TYPE_FS_IBLOCK 61,1527
  GNUNET_BLOCK_TYPE_FS_ONDEMAND 67,1698
  GNUNET_BLOCK_TYPE_LEGACY_HELLO 73,1811
  GNUNET_BLOCK_TYPE_TEST 79,1887
  GNUNET_BLOCK_TYPE_FS_UBLOCK 85,2004
  GNUNET_BLOCK_TYPE_DNS 91,2109
  GNUNET_BLOCK_TYPE_GNS_NAMERECORD 97,2193
  GNUNET_BLOCK_TYPE_REVOCATION 103,2316
  GNUNET_BLOCK_TYPE_DHT_HELLO 109,2429
  GNUNET_BLOCK_TYPE_REGEX 115,2519
  GNUNET_BLOCK_TYPE_REGEX_ACCEPT 121,2615
  GNUNET_BLOCK_TYPE_SET_TEST 127,2780
  GNUNET_BLOCK_TYPE_CONSENSUS_ELEMENT 133,2928
  GNUNET_BLOCK_TYPE_SETI_TEST 139,3101
  GNUNET_BLOCK_TYPE_SETU_TEST 145,3259

src/include/gnunet_protocols.h,40881
#define GNUNET_PROTOCOLS_H48,1602
#define GNUNET_MESSAGE_TYPE_TEST 66,1957
#define GNUNET_MESSAGE_TYPE_REQUEST_AGPL 75,2232
#define GNUNET_MESSAGE_TYPE_RESPONSE_AGPL 80,2305
#define GNUNET_MESSAGE_TYPE_RESOLVER_REQUEST 89,2574
#define GNUNET_MESSAGE_TYPE_RESOLVER_RESPONSE 94,2671
#define GNUNET_MESSAGE_TYPE_DUMMY 103,2959
#define GNUNET_MESSAGE_TYPE_DUMMY2 108,3058
#define GNUNET_MESSAGE_TYPE_ARM_START 118,3327
#define GNUNET_MESSAGE_TYPE_ARM_STOP 123,3413
#define GNUNET_MESSAGE_TYPE_ARM_RESULT 128,3483
#define GNUNET_MESSAGE_TYPE_ARM_STATUS 133,3561
#define GNUNET_MESSAGE_TYPE_ARM_LIST 138,3669
#define GNUNET_MESSAGE_TYPE_ARM_LIST_RESULT 143,3778
#define GNUNET_MESSAGE_TYPE_ARM_MONITOR 148,3895
#define GNUNET_MESSAGE_TYPE_ARM_TEST 153,3981
#define GNUNET_MESSAGE_TYPE_HELLO_URI 163,4310
#define GNUNET_MESSAGE_TYPE_HELLO 170,4469
#define GNUNET_MESSAGE_TYPE_FRAGMENT 180,4775
#define GNUNET_MESSAGE_TYPE_FRAGMENT_ACK 186,4911
#define GNUNET_MESSAGE_TYPE_WLAN_DATA_TO_HELPER 195,5226
#define GNUNET_MESSAGE_TYPE_WLAN_DATA_FROM_HELPER 200,5353
#define GNUNET_MESSAGE_TYPE_WLAN_HELPER_CONTROL 205,5496
#define GNUNET_MESSAGE_TYPE_WLAN_ADVERTISEMENT 210,5604
#define GNUNET_MESSAGE_TYPE_WLAN_DATA 215,5706
#define GNUNET_MESSAGE_TYPE_DV_RECV 227,6078
#define GNUNET_MESSAGE_TYPE_DV_SEND 233,6206
#define GNUNET_MESSAGE_TYPE_DV_SEND_ACK 239,6349
#define GNUNET_MESSAGE_TYPE_DV_ROUTE 244,6451
#define GNUNET_MESSAGE_TYPE_DV_START 250,6559
#define GNUNET_MESSAGE_TYPE_DV_CONNECT 255,6663
#define GNUNET_MESSAGE_TYPE_DV_DISCONNECT 260,6772
#define GNUNET_MESSAGE_TYPE_DV_SEND_NACK 266,6912
#define GNUNET_MESSAGE_TYPE_DV_DISTANCE_CHANGED 271,7034
#define GNUNET_MESSAGE_TYPE_DV_BOX 276,7142
#define GNUNET_MESSAGE_TYPE_TRANSPORT_XU_MESSAGE 282,7220
#define GNUNET_MESSAGE_TYPE_TRANSPORT_UDP_MESSAGE 292,7504
#define GNUNET_MESSAGE_TYPE_TRANSPORT_UDP_ACK 297,7578
#define GNUNET_MESSAGE_TYPE_TRANSPORT_TCP_NAT_PROBE 307,7936
#define GNUNET_MESSAGE_TYPE_TRANSPORT_TCP_WELCOME 312,8043
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ATS 317,8175
#define GNUNET_MESSAGE_TYPE_NAT_TEST 326,8468
#define GNUNET_MESSAGE_TYPE_CORE_INIT 335,8753
#define GNUNET_MESSAGE_TYPE_CORE_INIT_REPLY 340,8857
#define GNUNET_MESSAGE_TYPE_CORE_NOTIFY_CONNECT 346,9001
#define GNUNET_MESSAGE_TYPE_CORE_NOTIFY_DISCONNECT 351,9105
#define GNUNET_MESSAGE_TYPE_CORE_NOTIFY_STATUS_CHANGE 356,9212
#define GNUNET_MESSAGE_TYPE_CORE_NOTIFY_INBOUND 361,9325
#define GNUNET_MESSAGE_TYPE_CORE_NOTIFY_OUTBOUND 366,9437
#define GNUNET_MESSAGE_TYPE_CORE_SEND_REQUEST 371,9542
#define GNUNET_MESSAGE_TYPE_CORE_SEND_READY 376,9655
#define GNUNET_MESSAGE_TYPE_CORE_SEND 382,9795
#define GNUNET_MESSAGE_TYPE_CORE_MONITOR_PEERS 387,9901
#define GNUNET_MESSAGE_TYPE_CORE_MONITOR_NOTIFY 392,9998
#define GNUNET_MESSAGE_TYPE_CORE_ENCRYPTED_MESSAGE 397,10115
#define GNUNET_MESSAGE_TYPE_CORE_PING 402,10225
#define GNUNET_MESSAGE_TYPE_CORE_PONG 407,10317
#define GNUNET_MESSAGE_TYPE_CORE_HANGUP 412,10425
#define GNUNET_MESSAGE_TYPE_CORE_COMPRESSED_TYPE_MAP 417,10519
#define GNUNET_MESSAGE_TYPE_CORE_BINARY_TYPE_MAP 422,10623
#define GNUNET_MESSAGE_TYPE_CORE_EPHEMERAL_KEY 427,10723
#define GNUNET_MESSAGE_TYPE_CORE_CONFIRM_TYPE_MAP 432,10834
#define GNUNET_MESSAGE_TYPE_DATASTORE_RESERVE 442,11132
#define GNUNET_MESSAGE_TYPE_DATASTORE_RELEASE_RESERVE 447,11235
#define GNUNET_MESSAGE_TYPE_DATASTORE_STATUS 454,11466
#define GNUNET_MESSAGE_TYPE_DATASTORE_PUT 459,11574
#define GNUNET_MESSAGE_TYPE_DATASTORE_GET 464,11677
#define GNUNET_MESSAGE_TYPE_DATASTORE_GET_REPLICATION 469,11787
#define GNUNET_MESSAGE_TYPE_DATASTORE_GET_ZERO_ANONYMITY 474,11909
#define GNUNET_MESSAGE_TYPE_DATASTORE_DATA 480,12089
#define GNUNET_MESSAGE_TYPE_DATASTORE_DATA_END 487,12327
#define GNUNET_MESSAGE_TYPE_DATASTORE_REMOVE 492,12439
#define GNUNET_MESSAGE_TYPE_DATASTORE_DROP 497,12555
#define GNUNET_MESSAGE_TYPE_DATASTORE_GET_KEY 502,12667
#define GNUNET_MESSAGE_TYPE_FS_REQUEST_LOC_SIGN 512,12965
#define GNUNET_MESSAGE_TYPE_FS_REQUEST_LOC_SIGNATURE 517,13074
#define GNUNET_MESSAGE_TYPE_FS_INDEX_START 522,13188
#define GNUNET_MESSAGE_TYPE_FS_INDEX_START_OK 527,13301
#define GNUNET_MESSAGE_TYPE_FS_INDEX_START_FAILED 533,13421
#define GNUNET_MESSAGE_TYPE_FS_INDEX_LIST_GET 538,13534
#define GNUNET_MESSAGE_TYPE_FS_INDEX_LIST_ENTRY 543,13639
#define GNUNET_MESSAGE_TYPE_FS_INDEX_LIST_END 548,13743
#define GNUNET_MESSAGE_TYPE_FS_UNINDEX 553,13844
#define GNUNET_MESSAGE_TYPE_FS_UNINDEX_OK 558,13943
#define GNUNET_MESSAGE_TYPE_FS_START_SEARCH 563,14053
#define GNUNET_MESSAGE_TYPE_FS_GET 568,14158
#define GNUNET_MESSAGE_TYPE_FS_PUT 575,14371
#define GNUNET_MESSAGE_TYPE_FS_MIGRATION_STOP 580,14485
#define GNUNET_MESSAGE_TYPE_FS_CADET_QUERY 585,14604
#define GNUNET_MESSAGE_TYPE_FS_CADET_REPLY 590,14719
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_PUT 599,14997
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_GET 604,15092
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_GET_STOP 609,15187
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_RESULT 614,15285
#define GNUNET_MESSAGE_TYPE_DHT_P2P_PUT 619,15376
#define GNUNET_MESSAGE_TYPE_DHT_P2P_GET 624,15464
#define GNUNET_MESSAGE_TYPE_DHT_P2P_RESULT 629,15555
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_GET 634,15656
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_GET_RESP 639,15767
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_PUT 644,15874
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_PUT_RESP 649,15992
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_START 654,16103
#define GNUNET_MESSAGE_TYPE_DHT_MONITOR_STOP 659,16208
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_GET_RESULTS_KNOWN 664,16332
#define GNUNET_MESSAGE_TYPE_DHT_P2P_HELLO 669,16447
#define GNUNET_MESSAGE_TYPE_DHT_CORE 674,16552
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_HELLO_URL 680,16673
#define GNUNET_MESSAGE_TYPE_DHT_CLIENT_HELLO_GET 685,16779
#define GNUNET_MESSAGE_TYPE_HOSTLIST_ADVERTISEMENT 695,17065
#define GNUNET_MESSAGE_TYPE_STATISTICS_SET 705,17349
#define GNUNET_MESSAGE_TYPE_STATISTICS_GET 710,17436
#define GNUNET_MESSAGE_TYPE_STATISTICS_VALUE 715,17546
#define GNUNET_MESSAGE_TYPE_STATISTICS_END 720,17667
#define GNUNET_MESSAGE_TYPE_STATISTICS_WATCH 726,17863
#define GNUNET_MESSAGE_TYPE_STATISTICS_WATCH_VALUE 731,17952
#define GNUNET_MESSAGE_TYPE_STATISTICS_DISCONNECT 736,18084
#define GNUNET_MESSAGE_TYPE_STATISTICS_DISCONNECT_CONFIRM 742,18242
#define GNUNET_MESSAGE_TYPE_VPN_HELPER 751,18562
#define GNUNET_MESSAGE_TYPE_VPN_ICMP_TO_SERVICE 756,18675
#define GNUNET_MESSAGE_TYPE_VPN_ICMP_TO_INTERNET 761,18800
#define GNUNET_MESSAGE_TYPE_VPN_ICMP_TO_VPN 766,18920
#define GNUNET_MESSAGE_TYPE_VPN_DNS_TO_INTERNET 771,19047
#define GNUNET_MESSAGE_TYPE_VPN_DNS_FROM_INTERNET 776,19177
#define GNUNET_MESSAGE_TYPE_VPN_TCP_TO_SERVICE_START 781,19300
#define GNUNET_MESSAGE_TYPE_VPN_TCP_TO_INTERNET_START 786,19429
#define GNUNET_MESSAGE_TYPE_VPN_TCP_DATA_TO_EXIT 791,19571
#define GNUNET_MESSAGE_TYPE_VPN_TCP_DATA_TO_VPN 796,19708
#define GNUNET_MESSAGE_TYPE_VPN_UDP_TO_SERVICE 801,19829
#define GNUNET_MESSAGE_TYPE_VPN_UDP_TO_INTERNET 806,19952
#define GNUNET_MESSAGE_TYPE_VPN_UDP_REPLY 811,20077
#define GNUNET_MESSAGE_TYPE_VPN_CLIENT_REDIRECT_TO_IP 818,20242
#define GNUNET_MESSAGE_TYPE_VPN_CLIENT_REDIRECT_TO_SERVICE 824,20407
#define GNUNET_MESSAGE_TYPE_VPN_CLIENT_USE_IP 830,20565
#define GNUNET_MESSAGE_TYPE_DNS_CLIENT_INIT 841,20878
#define GNUNET_MESSAGE_TYPE_DNS_CLIENT_REQUEST 846,21001
#define GNUNET_MESSAGE_TYPE_DNS_CLIENT_RESPONSE 851,21127
#define GNUNET_MESSAGE_TYPE_DNS_HELPER 856,21254
#define GNUNET_MESSAGE_TYPE_CHAT_JOIN_REQUEST 866,21547
#define GNUNET_MESSAGE_TYPE_CHAT_JOIN_NOTIFICATION 871,21676
#define GNUNET_MESSAGE_TYPE_CHAT_LEAVE_NOTIFICATION 876,21810
#define GNUNET_MESSAGE_TYPE_CHAT_MESSAGE_NOTIFICATION 882,21967
#define GNUNET_MESSAGE_TYPE_CHAT_TRANSMIT_REQUEST 887,22112
#define GNUNET_MESSAGE_TYPE_CHAT_CONFIRMATION_RECEIPT 893,22272
#define GNUNET_MESSAGE_TYPE_CHAT_CONFIRMATION_NOTIFICATION 899,22446
#define GNUNET_MESSAGE_TYPE_CHAT_P2P_JOIN_NOTIFICATION 904,22582
#define GNUNET_MESSAGE_TYPE_CHAT_P2P_LEAVE_NOTIFICATION 909,22714
#define GNUNET_MESSAGE_TYPE_CHAT_P2P_SYNC_REQUEST 915,22899
#define GNUNET_MESSAGE_TYPE_CHAT_P2P_MESSAGE_NOTIFICATION 921,23061
#define GNUNET_MESSAGE_TYPE_CHAT_P2P_CONFIRMATION_RECEIPT 926,23186
#define GNUNET_MESSAGE_TYPE_NSE_START 936,23512
#define GNUNET_MESSAGE_TYPE_NSE_P2P_FLOOD 941,23601
#define GNUNET_MESSAGE_TYPE_NSE_ESTIMATE 946,23694
#define GNUNET_MESSAGE_TYPE_PEERINFO_GET 956,23979
#define GNUNET_MESSAGE_TYPE_PEERINFO_GET_ALL 961,24077
#define GNUNET_MESSAGE_TYPE_PEERINFO_INFO 966,24174
#define GNUNET_MESSAGE_TYPE_PEERINFO_INFO_END 971,24270
#define GNUNET_MESSAGE_TYPE_PEERINFO_NOTIFY 977,24422
#define GNUNET_MESSAGE_TYPE_ATS_START 987,24768
#define GNUNET_MESSAGE_TYPE_ATS_REQUEST_ADDRESS 993,24930
#define GNUNET_MESSAGE_TYPE_ATS_REQUEST_ADDRESS_CANCEL 999,25102
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESS_UPDATE 1005,25282
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESS_DESTROYED 1011,25466
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESS_SUGGESTION 1017,25649
#define GNUNET_MESSAGE_TYPE_ATS_PEER_INFORMATION 1023,25835
#define GNUNET_MESSAGE_TYPE_ATS_RESERVATION_REQUEST 1029,26016
#define GNUNET_MESSAGE_TYPE_ATS_RESERVATION_RESULT 1035,26194
#define GNUNET_MESSAGE_TYPE_ATS_PREFERENCE_CHANGE 1041,26374
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_RELEASE 1047,26552
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESS_ADD 1053,26704
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESSLIST_REQUEST 1059,26875
#define GNUNET_MESSAGE_TYPE_ATS_ADDRESSLIST_RESPONSE 1065,27049
#define GNUNET_MESSAGE_TYPE_ATS_PREFERENCE_FEEDBACK 1071,27231
#define GNUNET_MESSAGE_TYPE_TRANSPORT_START 1084,27659
#define GNUNET_MESSAGE_TYPE_TRANSPORT_CONNECT 1090,27792
#define GNUNET_MESSAGE_TYPE_TRANSPORT_DISCONNECT 1096,27932
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SEND 1101,28041
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SEND_OK 1109,28342
#define GNUNET_MESSAGE_TYPE_TRANSPORT_RECV 1115,28475
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SET_QUOTA 1123,28682
#define GNUNET_MESSAGE_TYPE_TRANSPORT_RECV_OK 1128,28799
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ADDRESS_TO_STRING 1133,28907
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ADDRESS_TO_STRING_REPLY 1138,29019
#define GNUNET_MESSAGE_TYPE_TRANSPORT_BLACKLIST_INIT 1143,29146
#define GNUNET_MESSAGE_TYPE_TRANSPORT_BLACKLIST_QUERY 1148,29274
#define GNUNET_MESSAGE_TYPE_TRANSPORT_BLACKLIST_REPLY 1153,29404
#define GNUNET_MESSAGE_TYPE_TRANSPORT_PING 1158,29497
#define GNUNET_MESSAGE_TYPE_TRANSPORT_PONG 1163,29579
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_SYN 1169,29760
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_SYN_ACK 1175,29936
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_ACK 1181,30116
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_DISCONNECT 1187,30300
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_QUOTA 1194,30511
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PEER_REQUEST 1199,30637
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_KEEPALIVE 1205,30826
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SESSION_KEEPALIVE_RESPONSE 1211,31013
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PEER_RESPONSE 1217,31206
#define GNUNET_MESSAGE_TYPE_TRANSPORT_BROADCAST_BEACON 1222,31352
#define GNUNET_MESSAGE_TYPE_TRANSPORT_TRAFFIC_METRIC 1227,31480
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PLUGIN_START 1232,31610
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PLUGIN_EVENT 1239,31853
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PLUGIN_SYNC 1245,32061
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_PEER_RESPONSE_END 1251,32236
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_PROGRESS_FILE 1261,32565
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_PROGRESS_DIRECTORY 1266,32697
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_ERROR 1271,32808
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_SKIP_FILE 1276,32911
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_COUNTING_DONE 1281,33039
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_META_DATA 1286,33152
#define GNUNET_MESSAGE_TYPE_FS_PUBLISH_HELPER_FINISHED 1291,33252
#define GNUNET_MESSAGE_TYPE_NAMECACHE_LOOKUP_BLOCK 1301,33546
#define GNUNET_MESSAGE_TYPE_NAMECACHE_LOOKUP_BLOCK_RESPONSE 1306,33655
#define GNUNET_MESSAGE_TYPE_NAMECACHE_BLOCK_CACHE 1311,33764
#define GNUNET_MESSAGE_TYPE_NAMECACHE_BLOCK_CACHE_RESPONSE 1316,33879
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_STORE 1325,34192
#define GNUNET_MESSAGE_TYPE_NAMESTORE_GENERIC_RESPONSE 1330,34305
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_LOOKUP 1335,34408
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_LOOKUP_RESPONSE 1340,34508
#define GNUNET_MESSAGE_TYPE_NAMESTORE_ZONE_TO_NAME 1345,34653
#define GNUNET_MESSAGE_TYPE_NAMESTORE_ZONE_TO_NAME_RESPONSE 1350,34770
#define GNUNET_MESSAGE_TYPE_NAMESTORE_MONITOR_START 1356,34946
#define GNUNET_MESSAGE_TYPE_NAMESTORE_MONITOR_SYNC 1361,35053
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_RESULT 1366,35183
#define GNUNET_MESSAGE_TYPE_NAMESTORE_MONITOR_NEXT 1373,35406
#define GNUNET_MESSAGE_TYPE_NAMESTORE_ZONE_ITERATION_START 1379,35601
#define GNUNET_MESSAGE_TYPE_NAMESTORE_ZONE_ITERATION_NEXT 1384,35731
#define GNUNET_MESSAGE_TYPE_NAMESTORE_ZONE_ITERATION_STOP 1389,35840
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_RESULT_END 1394,35956
#define GNUNET_MESSAGE_TYPE_LOCKMANAGER_ACQUIRE 1404,36245
#define GNUNET_MESSAGE_TYPE_LOCKMANAGER_RELEASE 1409,36333
#define GNUNET_MESSAGE_TYPE_LOCKMANAGER_SUCCESS 1414,36428
#define GNUNET_MESSAGE_TYPE_TESTBED_INIT 1423,36739
#define GNUNET_MESSAGE_TYPE_TESTBED_ADD_HOST 1428,36816
#define GNUNET_MESSAGE_TYPE_TESTBED_ADD_HOST_SUCCESS 1433,36921
#define GNUNET_MESSAGE_TYPE_TESTBED_LINK_CONTROLLERS 1438,37047
#define GNUNET_MESSAGE_TYPE_TESTBED_CREATE_PEER 1443,37151
#define GNUNET_MESSAGE_TYPE_TESTBED_RECONFIGURE_PEER 1448,37245
#define GNUNET_MESSAGE_TYPE_TESTBED_START_PEER 1453,37348
#define GNUNET_MESSAGE_TYPE_TESTBED_STOP_PEER 1458,37444
#define GNUNET_MESSAGE_TYPE_TESTBED_DESTROY_PEER 1463,37532
#define GNUNET_MESSAGE_TYPE_TESTBED_CONFIGURE_UNDERLAY_LINK 1468,37629
#define GNUNET_MESSAGE_TYPE_TESTBED_OVERLAY_CONNECT 1473,37743
#define GNUNET_MESSAGE_TYPE_TESTBED_PEER_EVENT 1478,37835
#define GNUNET_MESSAGE_TYPE_TESTBED_PEER_CONNECT_EVENT 1483,37930
#define GNUNET_MESSAGE_TYPE_TESTBED_OPERATION_FAIL_EVENT 1488,38030
#define GNUNET_MESSAGE_TYPE_TESTBED_CREATE_PEER_SUCCESS 1493,38146
#define GNUNET_MESSAGE_TYPE_TESTBED_GENERIC_OPERATION_SUCCESS 1498,38276
#define GNUNET_MESSAGE_TYPE_TESTBED_GET_PEER_INFORMATION 1503,38390
#define GNUNET_MESSAGE_TYPE_TESTBED_PEER_INFORMATION 1508,38505
#define GNUNET_MESSAGE_TYPE_TESTBED_REMOTE_OVERLAY_CONNECT 1514,38686
#define GNUNET_MESSAGE_TYPE_TESTBED_GET_SLAVE_CONFIGURATION 1519,38816
#define GNUNET_MESSAGE_TYPE_TESTBED_SLAVE_CONFIGURATION 1524,38953
#define GNUNET_MESSAGE_TYPE_TESTBED_LINK_CONTROLLERS_RESULT 1530,39114
#define GNUNET_MESSAGE_TYPE_TESTBED_SHUTDOWN_PEERS 1536,39319
#define GNUNET_MESSAGE_TYPE_TESTBED_MANAGE_PEER_SERVICE 1541,39428
#define GNUNET_MESSAGE_TYPE_TESTBED_BARRIER_INIT 1547,39595
#define GNUNET_MESSAGE_TYPE_TESTBED_BARRIER_CANCEL 1552,39737
#define GNUNET_MESSAGE_TYPE_TESTBED_BARRIER_STATUS 1557,39847
#define GNUNET_MESSAGE_TYPE_TESTBED_BARRIER_WAIT 1563,40006
#define GNUNET_MESSAGE_TYPE_TESTBED_MAX 1569,40223
#define GNUNET_MESSAGE_TYPE_TESTBED_HELPER_INIT 1574,40336
#define GNUNET_MESSAGE_TYPE_TESTBED_HELPER_REPLY 1579,40445
#define GNUNET_MESSAGE_TYPE_GNS_LOOKUP 1589,40717
#define GNUNET_MESSAGE_TYPE_GNS_LOOKUP_RESULT 1594,40829
#define GNUNET_MESSAGE_TYPE_GNS_REVERSE_LOOKUP 1599,40906
#define GNUNET_MESSAGE_TYPE_GNS_REVERSE_LOOKUP_RESULT 1604,40996
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_JOIN 1614,41327
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_INSERT 1619,41439
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_BEGIN 1625,41591
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_RECEIVED_ELEMENT 1630,41703
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_CONCLUDE 1635,41851
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_CONCLUDE_DONE 1641,42045
#define GNUNET_MESSAGE_TYPE_CONSENSUS_CLIENT_ACK 1651,42313
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_DELTA_ESTIMATE 1656,42396
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_DIFFERENCE_DIGEST 1661,42508
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_ELEMENTS 1666,42638
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_ELEMENTS_REQUEST 1671,42749
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_ELEMENTS_REPORT 1676,42887
#define GNUNET_MESSAGE_TYPE_CONSENSUS_P2P_ROUND_CONTEXT 1681,43000
#define GNUNET_MESSAGE_TYPE_SETU_CANCEL 1692,43282
#define GNUNET_MESSAGE_TYPE_SETU_ADD 1697,43357
#define GNUNET_MESSAGE_TYPE_SETU_CREATE 1702,43433
#define GNUNET_MESSAGE_TYPE_SETU_RESULT 1707,43526
#define GNUNET_MESSAGE_TYPE_SETU_EVALUATE 1712,43607
#define GNUNET_MESSAGE_TYPE_SETU_LISTEN 1717,43695
#define GNUNET_MESSAGE_TYPE_SETU_REJECT 1722,43773
#define GNUNET_MESSAGE_TYPE_SETU_ACCEPT 1727,43860
#define GNUNET_MESSAGE_TYPE_SETU_REQUEST 1732,43976
#define GNUNET_MESSAGE_TYPE_SETU_P2P_REQUEST_FULL 1739,44109
#define GNUNET_MESSAGE_TYPE_SETU_P2P_DEMAND 1745,44250
#define GNUNET_MESSAGE_TYPE_SETU_P2P_INQUIRY 1751,44384
#define GNUNET_MESSAGE_TYPE_SETU_P2P_OFFER 1757,44504
#define GNUNET_MESSAGE_TYPE_SETU_P2P_OPERATION_REQUEST 1762,44613
#define GNUNET_MESSAGE_TYPE_SETU_P2P_SE 1767,44702
#define GNUNET_MESSAGE_TYPE_SETU_P2P_IBF 1772,44783
#define GNUNET_MESSAGE_TYPE_SETU_P2P_ELEMENTS 1777,44861
#define GNUNET_MESSAGE_TYPE_SETU_P2P_DONE 1782,44946
#define GNUNET_MESSAGE_TYPE_SETU_P2P_SEC 1787,45033
#define GNUNET_MESSAGE_TYPE_SETU_P2P_FULL_DONE 1794,45246
#define GNUNET_MESSAGE_TYPE_SETU_P2P_FULL_ELEMENT 1800,45400
#define GNUNET_MESSAGE_TYPE_SETU_P2P_OVER 1807,45622
#define GNUNET_MESSAGE_TYPE_SETU_P2P_SEND_FULL 1813,45728
#define GNUNET_MESSAGE_TYPE_SETI_CANCEL 1824,46001
#define GNUNET_MESSAGE_TYPE_SETI_ADD 1829,46077
#define GNUNET_MESSAGE_TYPE_SETI_CREATE 1834,46153
#define GNUNET_MESSAGE_TYPE_SETI_RESULT 1839,46246
#define GNUNET_MESSAGE_TYPE_SETI_EVALUATE 1844,46327
#define GNUNET_MESSAGE_TYPE_SETI_LISTEN 1849,46415
#define GNUNET_MESSAGE_TYPE_SETI_REJECT 1854,46493
#define GNUNET_MESSAGE_TYPE_SETI_ACCEPT 1859,46580
#define GNUNET_MESSAGE_TYPE_SETI_REQUEST 1864,46696
#define GNUNET_MESSAGE_TYPE_SETI_P2P_ELEMENT_INFO 1869,46806
#define GNUNET_MESSAGE_TYPE_SETI_P2P_BF 1874,46935
#define GNUNET_MESSAGE_TYPE_SETI_P2P_DONE 1879,47023
#define GNUNET_MESSAGE_TYPE_SETI_P2P_OPERATION_REQUEST 1884,47126
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_REQUEST_FULL 1896,47458
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_DEMAND 1902,47604
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_INQUIRY 1908,47743
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_OFFER 1914,47868
#define GNUNET_MESSAGE_TYPE_SET_REJECT 1919,47954
#define GNUNET_MESSAGE_TYPE_SET_CANCEL 1924,48032
#define GNUNET_MESSAGE_TYPE_SET_ITER_ACK 1929,48121
#define GNUNET_MESSAGE_TYPE_SET_RESULT 1934,48198
#define GNUNET_MESSAGE_TYPE_SET_ADD 1939,48272
#define GNUNET_MESSAGE_TYPE_SET_REMOVE 1944,48348
#define GNUNET_MESSAGE_TYPE_SET_LISTEN 1949,48433
#define GNUNET_MESSAGE_TYPE_SET_ACCEPT 1954,48509
#define GNUNET_MESSAGE_TYPE_SET_EVALUATE 1959,48589
#define GNUNET_MESSAGE_TYPE_SET_CONCLUDE 1964,48687
#define GNUNET_MESSAGE_TYPE_SET_REQUEST 1969,48794
#define GNUNET_MESSAGE_TYPE_SET_CREATE 1974,48873
#define GNUNET_MESSAGE_TYPE_SET_P2P_OPERATION_REQUEST 1979,48972
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_SE 1984,49060
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_IBF 1989,49146
#define GNUNET_MESSAGE_TYPE_SET_P2P_ELEMENTS 1994,49229
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_DONE 1999,49313
#define GNUNET_MESSAGE_TYPE_SET_ITER_REQUEST 2004,49411
#define GNUNET_MESSAGE_TYPE_SET_ITER_ELEMENT 2009,49513
#define GNUNET_MESSAGE_TYPE_SET_ITER_DONE 2014,49611
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_SEC 2019,49698
#define GNUNET_MESSAGE_TYPE_SET_INTERSECTION_P2P_ELEMENT_INFO 2024,49813
#define GNUNET_MESSAGE_TYPE_SET_INTERSECTION_P2P_BF 2029,49954
#define GNUNET_MESSAGE_TYPE_SET_INTERSECTION_P2P_DONE 2034,50054
#define GNUNET_MESSAGE_TYPE_SET_COPY_LAZY_PREPARE 2039,50172
#define GNUNET_MESSAGE_TYPE_SET_COPY_LAZY_RESPONSE 2044,50294
#define GNUNET_MESSAGE_TYPE_SET_COPY_LAZY_CONNECT 2050,50443
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_FULL_DONE 2057,50665
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_FULL_ELEMENT 2063,50824
#define GNUNET_MESSAGE_TYPE_SET_UNION_P2P_OVER 2070,51051
#define GNUNET_MESSAGE_TYPE_TESTBED_LOGGER_MSG 2080,51337
#define GNUNET_MESSAGE_TYPE_TESTBED_LOGGER_ACK 2085,51443
#define GNUNET_MESSAGE_TYPE_REGEX_ANNOUNCE 2091,51535
#define GNUNET_MESSAGE_TYPE_REGEX_SEARCH 2096,51636
#define GNUNET_MESSAGE_TYPE_REGEX_RESULT 2101,51729
#define GNUNET_MESSAGE_TYPE_IDENTITY_START 2111,52056
#define GNUNET_MESSAGE_TYPE_IDENTITY_RESULT_CODE 2116,52189
#define GNUNET_MESSAGE_TYPE_IDENTITY_UPDATE 2121,52308
#define GNUNET_MESSAGE_TYPE_IDENTITY_GET_DEFAULT 2126,52426
#define GNUNET_MESSAGE_TYPE_IDENTITY_SET_DEFAULT 2131,52564
#define GNUNET_MESSAGE_TYPE_IDENTITY_CREATE 2136,52668
#define GNUNET_MESSAGE_TYPE_IDENTITY_RENAME 2141,52772
#define GNUNET_MESSAGE_TYPE_IDENTITY_DELETE 2146,52867
#define GNUNET_MESSAGE_TYPE_IDENTITY_LOOKUP 2154,53163
#define GNUNET_MESSAGE_TYPE_IDENTITY_LOOKUP_BY_SUFFIX 2163,53504
#define GNUNET_MESSAGE_TYPE_REVOCATION_QUERY 2173,53807
#define GNUNET_MESSAGE_TYPE_REVOCATION_QUERY_RESPONSE 2178,53914
#define GNUNET_MESSAGE_TYPE_REVOCATION_REVOKE 2183,54036
#define GNUNET_MESSAGE_TYPE_REVOCATION_REVOKE_RESPONSE 2188,54138
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_CLIENT_TO_ALICE 2198,54420
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_CLIENT_TO_BOB 2203,54508
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_CLIENT_MULTIPART_ALICE 2208,54606
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_CLIENT_MULTIPART_BOB 2213,54711
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_SESSION_INITIALIZATION 2218,54826
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_ALICE_CRYPTODATA 2223,54956
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_BOB_CRYPTODATA 2228,55059
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_BOB_CRYPTODATA_MULTIPART 2233,55170
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_RESULT 2238,55280
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_ECC_SESSION_INITIALIZATION 2243,55385
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_ECC_ALICE_CRYPTODATA 2248,55499
#define GNUNET_MESSAGE_TYPE_SCALARPRODUCT_ECC_BOB_CRYPTODATA 2253,55607
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_MEMBERSHIP_STORE 2263,55901
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_MEMBERSHIP_TEST 2268,56035
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_FRAGMENT_STORE 2270,56094
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_FRAGMENT_GET 2272,56152
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_MESSAGE_GET 2274,56208
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_MESSAGE_GET_FRAGMENT 2276,56263
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_COUNTERS_GET 2278,56327
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_MODIFY 2282,56394
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_SYNC 2284,56450
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_RESET 2286,56504
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_HASH_UPDATE 2288,56559
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_GET 2290,56620
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_STATE_GET_PREFIX 2292,56673
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_RESULT_CODE 2297,56819
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_RESULT_FRAGMENT 2299,56874
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_RESULT_COUNTERS 2301,56933
#define GNUNET_MESSAGE_TYPE_PSYCSTORE_RESULT_STATE 2303,56992
#define GNUNET_MESSAGE_TYPE_PSYC_RESULT_CODE 2317,57322
#define GNUNET_MESSAGE_TYPE_PSYC_MASTER_START 2320,57424
#define GNUNET_MESSAGE_TYPE_PSYC_MASTER_START_ACK 2323,57517
#define GNUNET_MESSAGE_TYPE_PSYC_SLAVE_JOIN 2326,57622
#define GNUNET_MESSAGE_TYPE_PSYC_SLAVE_JOIN_ACK 2329,57711
#define GNUNET_MESSAGE_TYPE_PSYC_PART_REQUEST 2332,57808
#define GNUNET_MESSAGE_TYPE_PSYC_PART_ACK 2335,57933
#define GNUNET_MESSAGE_TYPE_PSYC_JOIN_REQUEST 2338,58033
#define GNUNET_MESSAGE_TYPE_PSYC_JOIN_DECISION 2341,58130
#define GNUNET_MESSAGE_TYPE_PSYC_CHANNEL_MEMBERSHIP_STORE 2345,58260
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE 2350,58403
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_HEADER 2354,58538
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_METHOD 2358,58674
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_MODIFIER 2361,58757
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_MOD_CONT 2364,58855
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_DATA 2367,58936
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_END 2370,59023
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_CANCEL 2373,59112
#define GNUNET_MESSAGE_TYPE_PSYC_MESSAGE_ACK 2376,59202
#define GNUNET_MESSAGE_TYPE_PSYC_HISTORY_REPLAY 2381,59323
#define GNUNET_MESSAGE_TYPE_PSYC_HISTORY_RESULT 2384,59426
#define GNUNET_MESSAGE_TYPE_PSYC_STATE_GET 2388,59546
#define GNUNET_MESSAGE_TYPE_PSYC_STATE_GET_PREFIX 2391,59667
#define GNUNET_MESSAGE_TYPE_PSYC_STATE_RESULT 2394,59763
#define GNUNET_MESSAGE_TYPE_CONVERSATION_AUDIO 2404,60096
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_REGISTER 2409,60205
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_PICK_UP 2414,60329
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_HANG_UP 2419,60452
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_CALL 2424,60579
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_RING 2429,60703
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_SUSPEND 2434,60823
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_RESUME 2439,60945
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_PHONE_PICKED_UP 2444,61080
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CS_AUDIO 2449,61202
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_PHONE_RING 2454,61291
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_PHONE_HANG_UP 2459,61394
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_PHONE_PICK_UP 2464,61518
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_PHONE_SUSPEND 2469,61619
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_PHONE_RESUME 2474,61718
#define GNUNET_MESSAGE_TYPE_CONVERSATION_CADET_AUDIO 2479,61812
#define GNUNET_MESSAGE_TYPE_MULTICAST_ORIGIN_START 2495,62144
#define GNUNET_MESSAGE_TYPE_MULTICAST_MEMBER_JOIN 2500,62241
#define GNUNET_MESSAGE_TYPE_MULTICAST_JOIN_REQUEST 2507,62411
#define GNUNET_MESSAGE_TYPE_MULTICAST_JOIN_DECISION 2514,62588
#define GNUNET_MESSAGE_TYPE_MULTICAST_PART_REQUEST 2519,62688
#define GNUNET_MESSAGE_TYPE_MULTICAST_PART_ACK 2526,62878
#define GNUNET_MESSAGE_TYPE_MULTICAST_GROUP_END 2532,62989
#define GNUNET_MESSAGE_TYPE_MULTICAST_MESSAGE 2537,63114
#define GNUNET_MESSAGE_TYPE_MULTICAST_REQUEST 2542,63238
#define GNUNET_MESSAGE_TYPE_MULTICAST_FRAGMENT_ACK 2547,63371
#define GNUNET_MESSAGE_TYPE_MULTICAST_REPLAY_REQUEST 2552,63503
#define GNUNET_MESSAGE_TYPE_MULTICAST_REPLAY_RESPONSE 2557,63638
#define GNUNET_MESSAGE_TYPE_MULTICAST_REPLAY_RESPONSE_END 2562,63739
#define GNUNET_MESSAGE_TYPE_SECRETSHARING_CLIENT_GENERATE 2573,64034
#define GNUNET_MESSAGE_TYPE_SECRETSHARING_CLIENT_DECRYPT 2578,64148
#define GNUNET_MESSAGE_TYPE_SECRETSHARING_CLIENT_DECRYPT_DONE 2583,64271
#define GNUNET_MESSAGE_TYPE_SECRETSHARING_CLIENT_SECRET_READY 2589,64418
#define GNUNET_MESSAGE_TYPE_PEERSTORE_STORE 2599,64709
#define GNUNET_MESSAGE_TYPE_PEERSTORE_ITERATE_START 2604,64807
#define GNUNET_MESSAGE_TYPE_PEERSTORE_RECORD 2609,64897
#define GNUNET_MESSAGE_TYPE_PEERSTORE_ITERATE_END 2614,64980
#define GNUNET_MESSAGE_TYPE_PEERSTORE_MONITOR_START 2619,65062
#define GNUNET_MESSAGE_TYPE_PEERSTORE_MONITOR_SYNC 2624,65143
#define GNUNET_MESSAGE_TYPE_PEERSTORE_MONITOR_NEXT 2629,65231
#define GNUNET_MESSAGE_TYPE_PEERSTORE_STORE_RESULT 2634,65319
#define GNUNET_MESSAGE_TYPE_PEERSTORE_ITERATE_NEXT 2639,65424
#define GNUNET_MESSAGE_TYPE_PEERSTORE_ITERATE_STOP 2644,65529
#define GNUNET_MESSAGE_TYPE_SOCIAL_RESULT_CODE 2657,65855
#define GNUNET_MESSAGE_TYPE_SOCIAL_HOST_ENTER 2660,65957
#define GNUNET_MESSAGE_TYPE_SOCIAL_HOST_ENTER_ACK 2663,66048
#define GNUNET_MESSAGE_TYPE_SOCIAL_GUEST_ENTER 2666,66152
#define GNUNET_MESSAGE_TYPE_SOCIAL_GUEST_ENTER_BY_NAME 2669,66274
#define GNUNET_MESSAGE_TYPE_SOCIAL_GUEST_ENTER_ACK 2672,66375
#define GNUNET_MESSAGE_TYPE_SOCIAL_ENTRY_REQUEST 2675,66480
#define GNUNET_MESSAGE_TYPE_SOCIAL_ENTRY_DECISION 2678,66582
#define GNUNET_MESSAGE_TYPE_SOCIAL_PLACE_LEAVE 2681,66675
#define GNUNET_MESSAGE_TYPE_SOCIAL_PLACE_LEAVE_ACK 2684,66768
#define GNUNET_MESSAGE_TYPE_SOCIAL_ZONE_ADD_PLACE 2687,66859
#define GNUNET_MESSAGE_TYPE_SOCIAL_ZONE_ADD_NYM 2690,66947
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_CONNECT 2693,67033
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_DETACH 2696,67130
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_EGO 2699,67223
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_EGO_END 2702,67300
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_PLACE 2705,67396
#define GNUNET_MESSAGE_TYPE_SOCIAL_APP_PLACE_END 2708,67477
#define GNUNET_MESSAGE_TYPE_SOCIAL_MSG_PROC_SET 2711,67573
#define GNUNET_MESSAGE_TYPE_SOCIAL_MSG_PROC_CLEAR 2714,67670
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_TRAIL_SETUP 2723,67965
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_TRAIL_SETUP_RESULT 2728,68083
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_VERIFY_SUCCESSOR 2733,68225
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_NOTIFY_NEW_SUCCESSOR 2738,68365
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_VERIFY_SUCCESSOR_RESULT 2743,68511
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_GET_RESULT 2748,68627
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_TRAIL_SETUP_REJECTION 2753,68716
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_TRAIL_TEARDOWN 2758,68816
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_ADD_TRAIL 2763,68911
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_PUT 2768,69007
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_GET 2773,69096
#define GNUNET_MESSAGE_TYPE_XDHT_P2P_NOTIFY_SUCCESSOR_CONFIRMATION 2779,69267
#define GNUNET_MESSAGE_TYPE_WDHT_RANDOM_WALK 2790,69599
#define GNUNET_MESSAGE_TYPE_WDHT_RANDOM_WALK_RESPONSE 2795,69710
#define GNUNET_MESSAGE_TYPE_WDHT_TRAIL_DESTROY 2800,69842
#define GNUNET_MESSAGE_TYPE_WDHT_TRAIL_ROUTE 2805,69954
#define GNUNET_MESSAGE_TYPE_WDHT_SUCCESSOR_FIND 2810,70077
#define GNUNET_MESSAGE_TYPE_WDHT_GET 2815,70178
#define GNUNET_MESSAGE_TYPE_WDHT_PUT 2821,70324
#define GNUNET_MESSAGE_TYPE_WDHT_GET_RESULT 2827,70464
#define GNUNET_MESSAGE_TYPE_RPS_PP_CHECK_LIVE 2839,70787
#define GNUNET_MESSAGE_TYPE_RPS_PP_PUSH 2844,70897
#define GNUNET_MESSAGE_TYPE_RPS_PP_PULL_REQUEST 2849,71020
#define GNUNET_MESSAGE_TYPE_RPS_PP_PULL_REPLY 2854,71149
#define GNUNET_MESSAGE_TYPE_RPS_CS_SEED 2863,71302
#define ENABLE_MALICIOUS 2866,71372
#define GNUNET_MESSAGE_TYPE_RPS_ACT_MALICIOUS 2873,71466
#define GNUNET_MESSAGE_TYPE_RPS_CS_SUB_START 2880,71609
#define GNUNET_MESSAGE_TYPE_RPS_CS_SUB_STOP 2885,71719
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_STORE 2896,71984
#define GNUNET_MESSAGE_TYPE_RECLAIM_SUCCESS_RESPONSE 2898,72041
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_ITERATION_START 2900,72099
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_ITERATION_STOP 2902,72166
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_ITERATION_NEXT 2904,72232
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_RESULT 2906,72298
#define GNUNET_MESSAGE_TYPE_RECLAIM_ISSUE_TICKET 2908,72356
#define GNUNET_MESSAGE_TYPE_RECLAIM_TICKET_RESULT 2910,72410
#define GNUNET_MESSAGE_TYPE_RECLAIM_REVOKE_TICKET 2912,72465
#define GNUNET_MESSAGE_TYPE_RECLAIM_REVOKE_TICKET_RESULT 2914,72520
#define GNUNET_MESSAGE_TYPE_RECLAIM_CONSUME_TICKET 2916,72582
#define GNUNET_MESSAGE_TYPE_RECLAIM_CONSUME_TICKET_RESULT 2918,72638
#define GNUNET_MESSAGE_TYPE_RECLAIM_TICKET_ITERATION_START 2920,72701
#define GNUNET_MESSAGE_TYPE_RECLAIM_TICKET_ITERATION_STOP 2922,72765
#define GNUNET_MESSAGE_TYPE_RECLAIM_TICKET_ITERATION_NEXT 2924,72828
#define GNUNET_MESSAGE_TYPE_RECLAIM_ATTRIBUTE_DELETE 2926,72891
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_STORE 2928,72949
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_DELETE 2930,73007
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_RESULT 2932,73066
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_ITERATION_START 2934,73125
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_ITERATION_STOP 2936,73193
#define GNUNET_MESSAGE_TYPE_RECLAIM_CREDENTIAL_ITERATION_NEXT 2938,73260
#define GNUNET_MESSAGE_TYPE_ABD_VERIFY 2945,73408
#define GNUNET_MESSAGE_TYPE_ABD_VERIFY_RESULT 2947,73452
#define GNUNET_MESSAGE_TYPE_ABD_COLLECT 2949,73503
#define GNUNET_MESSAGE_TYPE_ABD_COLLECT_RESULT 2951,73548
#define GNUNET_MESSAGE_TYPE_ABD_INTERMEDIATE_RESULT 2953,73600
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_CREATE 2974,74329
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_CREATE_ACK 2979,74449
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_BROKEN 2984,74566
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_DESTROY 2989,74675
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_PATH_CHANGED_UNIMPLEMENTED 2994,74801
#define GNUNET_MESSAGE_TYPE_CADET_CONNECTION_HOP_BY_HOP_ENCRYPTED_ACK 3001,74946
#define GNUNET_MESSAGE_TYPE_CADET_TUNNEL_ENCRYPTED_POLL 3010,75225
#define GNUNET_MESSAGE_TYPE_CADET_TUNNEL_KX 3015,75320
#define GNUNET_MESSAGE_TYPE_CADET_TUNNEL_ENCRYPTED 3020,75405
#define GNUNET_MESSAGE_TYPE_CADET_TUNNEL_KX_AUTH 3025,75524
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_APP_DATA 3033,75716
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_APP_DATA_ACK 3038,75817
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_KEEPALIVE 3043,75947
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_OPEN 3048,76063
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_DESTROY 3053,76171
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_OPEN_ACK 3058,76272
#define GNUNET_MESSAGE_TYPE_CADET_CHANNEL_OPEN_NACK_DEPRECATED 3065,76391
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_DATA 3072,76580
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_ACK 3077,76662
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_PORT_OPEN 3082,76750
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_PORT_CLOSE 3087,76843
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_CHANNEL_CREATE 3092,76958
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_CHANNEL_DESTROY 3097,77072
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_REQUEST_INFO_CHANNEL 3105,77277
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_CHANNEL 3110,77410
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_CHANNEL_END 3115,77532
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_REQUEST_INFO_PEERS 3120,77670
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_PEERS 3125,77802
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_PEERS_END 3130,77933
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_REQUEST_INFO_PATH 3135,78072
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_PATH 3140,78199
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_PATH_END 3145,78325
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_REQUEST_INFO_TUNNELS 3150,78452
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_TUNNELS 3155,78578
#define GNUNET_MESSAGE_TYPE_CADET_LOCAL_INFO_TUNNELS_END 3160,78703
#define GNUNET_MESSAGE_TYPE_CADET_DROP_CADET_MESSAGE 3165,78824
#define GNUNET_MESSAGE_TYPE_CADET_CLI 3173,79037
#define GNUNET_MESSAGE_TYPE_NAT_REGISTER 3185,79468
#define GNUNET_MESSAGE_TYPE_NAT_HANDLE_STUN 3190,79578
#define GNUNET_MESSAGE_TYPE_NAT_REQUEST_CONNECTION_REVERSAL 3195,79698
#define GNUNET_MESSAGE_TYPE_NAT_CONNECTION_REVERSAL_REQUESTED 3201,79875
#define GNUNET_MESSAGE_TYPE_NAT_ADDRESS_CHANGE 3207,80033
#define GNUNET_MESSAGE_TYPE_NAT_ADD_GLOBAL_ADDRESS 3212,80174
#define GNUNET_MESSAGE_TYPE_NAT_AUTO_REQUEST_CFG 3217,80299
#define GNUNET_MESSAGE_TYPE_NAT_AUTO_CFG_RESULT 3222,80425
#define GNUNET_MESSAGE_TYPE_AUCTION_CLIENT_CREATE 3236,80864
#define GNUNET_MESSAGE_TYPE_AUCTION_CLIENT_JOIN 3241,80973
#define GNUNET_MESSAGE_TYPE_AUCTION_CLIENT_OUTCOME 3246,81089
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_VIEW_REQUEST 3256,81437
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_VIEW_REPLY 3261,81539
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_VIEW_CANCEL 3266,81650
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_STREAM_REQUEST 3272,81756
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_STREAM_REPLY 3277,81863
#define GNUNET_MESSAGE_TYPE_RPS_CS_DEBUG_STREAM_CANCEL 3282,81970
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ADD_ADDRESS 3292,82247
#define GNUNET_MESSAGE_TYPE_TRANSPORT_DEL_ADDRESS 3297,82372
#define GNUNET_MESSAGE_TYPE_TRANSPORT_INCOMING_MSG 3302,82489
#define GNUNET_MESSAGE_TYPE_TRANSPORT_INCOMING_MSG_ACK 3307,82618
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_SETUP 3312,82758
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_TEARDOWN 3317,82876
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_CREATE 3322,82999
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_CREATE_OK 3327,83121
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_CREATE_FAIL 3332,83265
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SEND_MSG 3337,83395
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SEND_MSG_ACK 3342,83518
#define GNUNET_MESSAGE_TYPE_TRANSPORT_NEW_COMMUNICATOR 3348,83684
#define GNUNET_MESSAGE_TYPE_TRANSPORT_COMMUNICATOR_BACKCHANNEL 3356,83942
#define GNUNET_MESSAGE_TYPE_TRANSPORT_BACKCHANNEL_ENCAPSULATION 3362,84134
#define GNUNET_MESSAGE_TYPE_TRANSPORT_FRAGMENT 3368,84319
#define GNUNET_MESSAGE_TYPE_TRANSPORT_RELIABILITY_BOX 3374,84473
#define GNUNET_MESSAGE_TYPE_TRANSPORT_RELIABILITY_ACK 3379,84611
#define GNUNET_MESSAGE_TYPE_TRANSPORT_DV_LEARN 3384,84738
#define GNUNET_MESSAGE_TYPE_TRANSPORT_DV_BOX 3389,84865
#define GNUNET_MESSAGE_TYPE_TRANSPORT_COMMUNICATOR_BACKCHANNEL_INCOMING 3394,84996
#define GNUNET_MESSAGE_TYPE_TRANSPORT_FLOW_CONTROL 3399,85154
#define GNUNET_MESSAGE_TYPE_TRANSPORT_QUEUE_UPDATE 3404,85271
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_START 3410,85432
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_DATA 3415,85553
#define GNUNET_MESSAGE_TYPE_TRANSPORT_MONITOR_END 3421,85709
#define GNUNET_MESSAGE_TYPE_TRANSPORT_COMMUNICATOR_KX_CONFIRMATION 3427,85870
#define GNUNET_MESSAGE_TYPE_TRANSPORT_COMMUNICATOR_FC_LIMITS 3433,86055
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SUGGEST 3439,86246
#define GNUNET_MESSAGE_TYPE_TRANSPORT_SUGGEST_CANCEL 3445,86420
#define GNUNET_MESSAGE_TYPE_TRANSPORT_REQUEST_HELLO_VALIDATION 3451,86609
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ADDRESS_VALIDATION_CHALLENGE 3457,86758
#define GNUNET_MESSAGE_TYPE_TRANSPORT_ADDRESS_VALIDATION_RESPONSE 3462,86896
#define GNUNET_MESSAGE_TYPE_ATS_SUGGEST 3472,87202
#define GNUNET_MESSAGE_TYPE_ATS_SUGGEST_CANCEL 3478,87364
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_ADD 3485,87551
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_ADD_INBOUND_ONLY 3492,87796
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_UPDATE 3498,87999
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_DEL 3504,88189
#define GNUNET_MESSAGE_TYPE_ATS_SESSION_ALLOCATION 3510,88383
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_TCP_REKEY 3516,88484
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_TCP_BOX 3521,88581
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_TCP_FINISH 3526,88679
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_TCP_CONFIRMATION_ACK 3531,88783
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_UDP_ACK 3536,88886
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_UDP_PAD 3541,88978
#define GNUNET_MESSAGE_TYPE_COMMUNICATOR_UDP_REKEY 3546,89055
#define GNUNET_MESSAGE_TYPE_RECLAIM_REFERENCE_DELETE 3551,89144
#define GNUNET_MESSAGE_TYPE_RECLAIM_REFERENCE_RESULT 3553,89203
#define GNUNET_MESSAGE_TYPE_MESSENGER_CONNECTION_CREATE 3566,89715
#define GNUNET_MESSAGE_TYPE_MESSENGER_CONNECTION_DESTROY 3568,89777
#define GNUNET_MESSAGE_TYPE_MESSENGER_CONNECTION_MEMBER_ID 3570,89840
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_OPEN 3574,89990
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_ENTRY 3576,90044
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_CLOSE 3578,90099
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_SEND_MESSAGE 3580,90154
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_RECV_MESSAGE 3582,90216
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_GET_MESSAGE 3584,90278
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_SYNC 3586,90339
#define GNUNET_MESSAGE_TYPE_MESSENGER_ROOM_LINK 3588,90393
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_INIT 3599,90852
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_REPLY 3604,90956
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_PEER_STARTED 3606,91008
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_ALL_PEERS_STARTED 3608,91067
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_LOCAL_TEST_PREPARED 3610,91131
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_ALL_LOCAL_TESTS_PREPARED 3612,91197
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_LOCAL_FINISHED 3614,91268
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_BARRIER_REACHED 3616,91329
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_BARRIER_ATTACH 3618,91391
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_BARRIER_CROSSABLE 3620,91452
#define GNUNET_MESSAGE_TYPE_CMDS_HELPER_BARRIER_ATTACHED 3622,91516
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_SET_EDIT 3635,92027
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_SET_EDIT_RESPONSE 3640,92164
#define GNUNET_MESSAGE_TYPE_NAMESTORE_RECORD_SET_EDIT_CANCEL 3645,92309
#define GNUNET_MESSAGE_TYPE_ALL 3650,92427

src/include/gnunet_time_lib.h,1422
#define GNUNET_TIME_LIB_H37,1075
struct GNUNET_TIME_Absolute53,1319
  uint64_t abs_value_us;58,1384
struct GNUNET_TIME_Timestamp64,1480
  struct GNUNET_TIME_Absolute abs_time;69,1579
struct GNUNET_TIME_Relative76,1747
  uint64_t rel_value_us;81,1812
struct GNUNET_TIME_RelativeNBO89,1963
  uint64_t rel_value_us__ GNUNET_PACKED;94,2055
struct GNUNET_TIME_AbsoluteNBO101,2194
  uint64_t abs_value_us__ GNUNET_PACKED;106,2286
struct GNUNET_TIME_TimestampNBO112,2416
  struct GNUNET_TIME_AbsoluteNBO abs_time_nbo;117,2518
#define GNUNET_TIME_UNIT_ZERO 125,2627
#define GNUNET_TIME_UNIT_ZERO_ABS 130,2724
#define GNUNET_TIME_UNIT_ZERO_TS 135,2824
#define GNUNET_TIME_UNIT_MICROSECONDS 140,2945
#define GNUNET_TIME_UNIT_MILLISECONDS 145,3046
#define GNUNET_TIME_UNIT_SECONDS 150,3149
#define GNUNET_TIME_UNIT_MINUTES 155,3242
#define GNUNET_TIME_UNIT_HOURS 160,3333
#define GNUNET_TIME_UNIT_DAYS 165,3421
#define GNUNET_TIME_UNIT_WEEKS 171,3542
#define GNUNET_TIME_UNIT_MONTHS 177,3672
#define GNUNET_TIME_UNIT_YEARS 183,3803
#define GNUNET_TIME_UNIT_FOREVER_REL 190,4018
#define GNUNET_TIME_UNIT_FOREVER_ABS 197,4219
#define GNUNET_TIME_UNIT_FOREVER_TS 204,4420
#define GNUNET_TIME_STD_EXPONENTIAL_BACKOFF_THRESHOLD 211,4590
#define GNUNET_TIME_STD_BACKOFF(221,4908
#define GNUNET_TIME_absolute_cmp(413,9242
#define GNUNET_TIME_timestamp_cmp(425,9512
#define GNUNET_TIME_relative_cmp(437,9778

src/include/gnunet_testing_core_lib.h,1081
#define GNUNET_TESTING_CORE_LIB_H26,962
struct GNUNET_TESTING_ConnectPeersState37,1157
  struct GNUNET_MQ_MessageHandler *handlers;handlers42,1233
  struct GNUNET_CONTAINER_MultiShortmap *connected_peers_map;connected_peers_map48,1384
  struct GNUNET_TRANSPORT_ApplicationHandle *ah;ah53,1486
  struct GNUNET_TRANSPORT_CoreHandle *th;th58,1566
  struct GNUNET_TESTING_AsyncContext ac;63,1667
  const struct GNUNET_TESTING_System *tl_system;tl_system68,1759
  const char *create_label;create_label71,1862
  uint32_t num;77,1951
  const char *start_peer_label;start_peer_label83,2024
  struct GNUNET_TESTING_NetjailTopology *topology;topology88,2106
  struct GNUNET_TESTING_NodeConnection *node_connections_head;node_connections_head93,2203
  struct GNUNET_TESTING_Interpreter *is;is95,2267
  unsigned int con_num;100,2349
  unsigned int additional_connects;105,2471
  unsigned int con_num_notified;110,2579
  unsigned int additional_connects_notified;115,2745
  unsigned int wait_for_connect;120,2909
#define GNUNET_CORE_TESTING_SIMPLE_TRAITS(151,3773

src/include/gnunet_pq_lib.h,2041
#define GNUNET_PQ_LIB_H26,940
(*GNUNET_PQ_QueryConverter)GNUNET_PQ_QueryConverter60,1992
(*GNUNET_PQ_QueryConverter_Cleanup)GNUNET_PQ_QueryConverter_Cleanup77,2609
struct GNUNET_PQ_QueryParam82,2713
  GNUNET_PQ_QueryConverter conv;87,2807
  void *conv_cls;conv_cls95,3059
  GNUNET_PQ_QueryConverter_Cleanup conv_cls_cleanup;102,3262
  const void *data;data107,3347
  size_t size;112,3401
  unsigned int num_params;117,3480
#define GNUNET_PQ_query_param_end 134,3881
struct GNUNET_PQ_ArrayHeader_P207,5711
  uint32_t ndim;209,5744
  uint32_t has_null;210,5818
  uint32_t oid;211,5839
  uint32_t dim;212,5886
  uint32_t lbound;213,5931
#define GNUNET_PQ_query_param_array_auto_from_type(319,9708
#define GNUNET_PQ_query_param_array_ptrs_auto_from_type(353,11065
#define GNUNET_PQ_query_param_auto_from_type(397,12521
(*GNUNET_PQ_ResultConverter)GNUNET_PQ_ResultConverter658,19926
(*GNUNET_PQ_ResultCleanup)GNUNET_PQ_ResultCleanup674,20356
struct GNUNET_PQ_ResultSpec681,20487
  GNUNET_PQ_ResultConverter conv;686,20568
  GNUNET_PQ_ResultCleanup cleaner;691,20688
  void *cls;cls696,20777
  void *dst;dst701,20834
  size_t dst_size;708,21024
  const char *fname;fname713,21095
  size_t *result_size;result_size718,21176
  bool is_nullable;723,21270
  bool *is_null;is_null729,21452
#define GNUNET_PQ_result_spec_end 739,21592
#define GNUNET_PQ_result_spec_auto_from_type(802,23676
#define GNUNET_PQ_result_spec_auto_array_from_type(1123,33937
(*GNUNET_PQ_PostgresResultHandler)GNUNET_PQ_PostgresResultHandler1270,38665
struct GNUNET_PQ_PreparedStatement1328,41120
  const char *name;name1333,41197
  const char *sql;sql1338,41257
#define GNUNET_PQ_PREPARED_STATEMENT_END 1346,41333
struct GNUNET_PQ_ExecuteStatement1401,42939
  const char *sql;sql1406,43014
  int ignore_errors;1411,43076
#define GNUNET_PQ_EXECUTE_STATEMENT_END 1418,43155
enum GNUNET_PQ_Options1465,44376
  GNUNET_PQ_FLAG_NONE 1470,44459
  GNUNET_PQ_FLAG_DROP 1476,44591
  GNUNET_PQ_FLAG_CHECK_CURRENT 1481,44702

src/include/gnunet_mq_lib.h,1991
#define GNUNET_MQ_LIB_H46,1307
#define GNUNET_MQ_msg_extra(63,1798
#define GNUNET_MQ_msg(78,2348
#define GNUNET_MQ_msg_header(87,2617
#define GNUNET_MQ_msg_header_extra(99,3090
#define GNUNET_MQ_msg_nested_mh(114,3702
#define GNUNET_MQ_extract_nested_mh(134,4872
enum GNUNET_MQ_Error203,6830
  GNUNET_MQ_ERROR_READ 210,6993
  GNUNET_MQ_ERROR_WRITE 215,7056
  GNUNET_MQ_ERROR_TIMEOUT 220,7120
  GNUNET_MQ_ERROR_MALFORMED 226,7260
  GNUNET_MQ_ERROR_NO_MATCH 232,7377
enum GNUNET_MQ_PriorityPreferences239,7466
  GNUNET_MQ_PRIO_BACKGROUND 245,7603
  GNUNET_MQ_PRIO_BEST_EFFORT 250,7698
  GNUNET_MQ_PRIO_URGENT 255,7798
  GNUNET_MQ_PRIO_CRITICAL_CONTROL 260,7901
  GNUNET_MQ_PRIORITY_MASK 265,8006
  GNUNET_MQ_PREF_UNRELIABLE 279,8480
  GNUNET_MQ_PREF_LOW_LATENCY 289,8906
  GNUNET_MQ_PREF_CORK_ALLOWED 297,9179
  GNUNET_MQ_PREF_GOODPUT 305,9468
  GNUNET_MQ_PREF_OUT_OF_ORDER 310,9569
(*GNUNET_MQ_MessageCallback)GNUNET_MQ_MessageCallback321,9736
(*GNUNET_MQ_MessageValidationCallback)GNUNET_MQ_MessageValidationCallback335,10066
(*GNUNET_MQ_SendImpl)GNUNET_MQ_SendImpl349,10391
(*GNUNET_MQ_DestroyImpl)GNUNET_MQ_DestroyImpl364,10825
(*GNUNET_MQ_CancelImpl)GNUNET_MQ_CancelImpl375,11104
(*GNUNET_MQ_ErrorHandler)GNUNET_MQ_ErrorHandler389,11486
struct GNUNET_MQ_MessageHandler492,15093
  GNUNET_MQ_MessageValidationCallback mv;501,15394
  GNUNET_MQ_MessageCallback cb;508,15611
  void *cls;cls513,15690
  uint16_t type;518,15782
  uint16_t expected_size;526,16075
#define GNUNET_MQ_handler_end(533,16151
#define GNUNET_MQ_hd_fixed_size(567,17282
#define GNUNET_MQ_hd_var_size(619,19193
#define GNUNET_MQ_check_zero_termination(642,20423
#define GNUNET_MQ_check_boxed_message(668,21775
enum GNUNET_MQ_PreferenceKind1089,33967
  GNUNET_MQ_PREFERENCE_NONE 1094,34045
  GNUNET_MQ_PREFERENCE_BANDWIDTH 1100,34179
  GNUNET_MQ_PREFERENCE_LATENCY 1106,34314
  GNUNET_MQ_PREFERENCE_RELIABILITY 1112,34440
#define GNUNET_MQ_PREFERENCE_COUNT 1117,34528

src/include/gnunet_client_lib.h,36
#define GNUNET_CLIENT_LIB_H47,1320

src/include/gnunet_os_lib.h,1999
#define GNUNET_OS_LIB_H57,1964
enum GNUNET_OS_InheritStdioFlags72,2217
  GNUNET_OS_INHERIT_STD_NONE 77,2310
  GNUNET_OS_INHERIT_STD_IN 83,2442
  GNUNET_OS_INHERIT_STD_OUT 89,2573
  GNUNET_OS_INHERIT_STD_ERR 95,2705
  GNUNET_OS_INHERIT_STD_OUT_AND_ERR 101,2851
  GNUNET_OS_INHERIT_STD_ALL 107,3010
  GNUNET_OS_USE_PIPE_CONTROL 112,3113
enum GNUNET_OS_InstallationPathKind125,3275
  GNUNET_OS_IPK_PREFIX,130,3380
  GNUNET_OS_IPK_BINDIR,135,3492
  GNUNET_OS_IPK_LIBDIR,140,3600
  GNUNET_OS_IPK_DATADIR,145,3703
  GNUNET_OS_IPK_LOCALEDIR,150,3816
  GNUNET_OS_IPK_SELF_PREFIX,157,4003
  GNUNET_OS_IPK_ICONDIR,162,4119
  GNUNET_OS_IPK_DOCDIR,168,4266
  GNUNET_OS_IPK_LIBEXECDIR173,4387
enum GNUNET_OS_ProcessStatusType180,4451
  GNUNET_OS_PROCESS_UNKNOWN,186,4582
  GNUNET_OS_PROCESS_RUNNING,191,4659
  GNUNET_OS_PROCESS_STOPPED,196,4752
  GNUNET_OS_PROCESS_EXITED,201,4838
  GNUNET_OS_PROCESS_SIGNALED206,4920
struct GNUNET_OS_ProjectData214,5045
  const char *libname;libname221,5286
  const char *project_dirname;project_dirname229,5553
  const char *binary_name;binary_name236,5798
  const char *env_varname;env_varname242,5967
  const char *env_varname_alt;env_varname_alt249,6190
  const char *base_config_varname;base_config_varname256,6413
  const char *bug_email;bug_email261,6501
  const char *homepage;homepage266,6562
  const char *config_file;config_file271,6658
  const char *user_config_file;user_config_file276,6768
  const char *version;version281,6866
  int is_gnu;286,6951
  char *gettext_domain;gettext_domain292,7090
  char *gettext_path;gettext_path298,7241
  char *agpl_url;agpl_url306,7514
(*GNUNET_OS_NetworkInterfaceProcessor)GNUNET_OS_NetworkInterfaceProcessor387,9945
#define HAVE_SYSCONF 407,10670
#define GNUNET_OS_get_hostname_max_length(414,10818
#define GNUNET_OS_get_hostname_max_length(418,11074
#define GNUNET_OS_get_hostname_max_length(420,11138
(*GNUNET_OS_LineProcessor)GNUNET_OS_LineProcessor588,16497

src/include/gauger.h,78
#define __GAUGER_H__12,462
#define GAUGER(19,547
#define GAUGER_ID(49,1420

src/include/gnunet_gns_service.h,364
#define GNUNET_GNS_SERVICE_H38,1081
typedef void (*GNUNET_GNS_LookupResultProcessor)GNUNET_GNS_LookupResultProcessor96,2206
enum GNUNET_GNS_LocalOptions105,2375
  GNUNET_GNS_LO_DEFAULT 110,2461
  GNUNET_GNS_LO_NO_DHT 115,2560
  GNUNET_GNS_LO_LOCAL_MASTER 121,2719
typedef void (*GNUNET_GNS_LookupResultProcessor2)GNUNET_GNS_LookupResultProcessor2192,5093

src/include/gnunet_mhd_compat.h,56
#define MHD_RESULT 35,1097
#define MHD_RESULT 42,1205

src/include/gnunet_namestore_service.h,712
#define GNUNET_NAMESTORE_SERVICE_H42,1324
enum GNUNET_NAMESTORE_TxControl77,1904
  GNUNET_NAMESTORE_TX_BEGIN 79,1938
  GNUNET_NAMESTORE_TX_COMMIT 80,1971
  GNUNET_NAMESTORE_TX_ROLLBACK 81,2005
struct GNUNET_NAMESTORE_RecordInfo88,2160
  const char *a_label;a_label90,2197
  unsigned int a_rd_count;91,2220
  struct GNUNET_GNSRECORD_Data *a_rd;a_rd92,2247
(*GNUNET_NAMESTORE_ContinuationWithStatus)GNUNET_NAMESTORE_ContinuationWithStatus128,3209
(*GNUNET_NAMESTORE_RecordMonitor)GNUNET_NAMESTORE_RecordMonitor243,8210
(*GNUNET_NAMESTORE_EditRecordSetBeginCallback)GNUNET_NAMESTORE_EditRecordSetBeginCallback260,9008
(*GNUNET_NAMESTORE_RecordSetMonitor)GNUNET_NAMESTORE_RecordSetMonitor280,9896

src/include/gnunet_reclaim_lib.h,2753
#define GNUNET_RECLAIM_ATTRIBUTE_LIB_H34,1051
enum GNUNET_RECLAIM_AttributeType 46,1216
  GNUNET_RECLAIM_ATTRIBUTE_TYPE_NONE 50,1289
  GNUNET_RECLAIM_ATTRIBUTE_TYPE_STRING 55,1367
enum GNUNET_RECLAIM_CredentialType 58,1414
  GNUNET_RECLAIM_CREDENTIAL_TYPE_NONE 62,1489
  GNUNET_RECLAIM_CREDENTIAL_TYPE_JWT 67,1579
  GNUNET_RECLAIM_CREDENTIAL_TYPE_PABC 72,1658
#define GNUNET_RECLAIM_ID_LENGTH 78,1759
struct GNUNET_RECLAIM_Identifier85,1912
  char id[id87,1947
static const struct GNUNET_RECLAIM_Identifier GNUNET_RECLAIM_ID_ZERO;92,2015
#define GNUNET_RECLAIM_id_is_equal(94,2086
#define GNUNET_RECLAIM_id_is_zero(102,2443
#define GNUNET_RECLAIM_id_generate(106,2672
struct GNUNET_RECLAIM_Attribute114,2904
  struct GNUNET_RECLAIM_Identifier id;119,2958
  struct GNUNET_RECLAIM_Identifier credential;125,3095
  uint32_t type;130,3174
  uint32_t flag;135,3215
  const char *name;name141,3328
  size_t data_size;146,3394
  const void *data;data153,3591
struct GNUNET_RECLAIM_Credential159,3640
  struct GNUNET_RECLAIM_Identifier id;164,3695
  uint32_t type;169,3773
  uint32_t flag;174,3813
  const char *name;name180,3921
  size_t data_size;185,3987
  const void *data;data192,4185
struct GNUNET_RECLAIM_Presentation199,4248
  struct GNUNET_RECLAIM_Identifier credential_id;204,4353
  uint32_t type;209,4442
  size_t data_size;214,4505
  const void *data;data221,4705
struct GNUNET_RECLAIM_AttributeList229,4789
  struct GNUNET_RECLAIM_AttributeListEntry *list_head;list_head234,4854
  struct GNUNET_RECLAIM_AttributeListEntry *list_tail;list_tail239,4937
struct GNUNET_RECLAIM_AttributeListEntry243,4997
  struct GNUNET_RECLAIM_AttributeListEntry *prev;prev248,5061
  struct GNUNET_RECLAIM_AttributeListEntry *next;next253,5133
  struct GNUNET_RECLAIM_Attribute *attribute;attribute258,5221
struct GNUNET_RECLAIM_CredentialList265,5331
  struct GNUNET_RECLAIM_CredentialListEntry *list_head;list_head270,5397
  struct GNUNET_RECLAIM_CredentialListEntry *list_tail;list_tail275,5481
struct GNUNET_RECLAIM_CredentialListEntry279,5542
  struct GNUNET_RECLAIM_CredentialListEntry *prev;prev284,5607
  struct GNUNET_RECLAIM_CredentialListEntry *next;next289,5680
  struct GNUNET_RECLAIM_Credential *credential;credential294,5764
struct GNUNET_RECLAIM_PresentationList302,5879
  struct GNUNET_RECLAIM_PresentationListEntry *list_head;list_head307,5947
  struct GNUNET_RECLAIM_PresentationListEntry *list_tail;list_tail312,6033
struct GNUNET_RECLAIM_PresentationListEntry316,6096
  struct GNUNET_RECLAIM_PresentationListEntry *prev;prev321,6163
  struct GNUNET_RECLAIM_PresentationListEntry *next;next326,6238
  struct GNUNET_RECLAIM_Presentation *presentation;presentation331,6324

src/include/gnunet_load_lib.h,74
#define GNUNET_LOAD_LIB_H36,1018
#define GNUNET_LOAD_value_free(83,1995

src/include/gettext.h,348
#define _LIBGETTEXT_H 20,895
#define ENABLE_NLS 24,1010
#define gettext(50,1835
#define dgettext(51,1883
#define dcgettext(52,1944
#define ngettext(53,2016
#define dngettext(55,2125
#define dcngettext(57,2247
#define textdomain(61,2479
#define bindtextdomain(62,2510
#define bind_textdomain_codeset(63,2554
#define gettext_noop(74,3098

src/include/gnunet_statistics_service.h,218
#define GNUNET_STATISTICS_SERVICE_H43,1313
#define GNUNET_STATISTICS_VERSION 59,1543
(*GNUNET_STATISTICS_Iterator)GNUNET_STATISTICS_Iterator77,2058
(*GNUNET_STATISTICS_Callback)GNUNET_STATISTICS_Callback152,4523

src/include/gnunet_network_lib.h,115
#define GNUNET_NETWORK_LIB_H40,1162
struct GNUNET_NETWORK_FDSet75,1730
  int nsds;80,1839
  fd_set sds;85,1898

src/include/compat.h,50
#define _COMPAT_H29,944
#define memrchr(49,1246

src/include/gnunet_bandwidth_lib.h,933
#define GNUNET_BANDWIDTH_LIB_H41,1219
struct GNUNET_BANDWIDTH_Value32NBO58,1491
  uint32_t value__ GNUNET_PACKED;63,1582
typedef void (*GNUNET_BANDWIDTH_TrackerUpdateCallback)GNUNET_BANDWIDTH_TrackerUpdateCallback75,1818
typedef void (*GNUNET_BANDWIDTH_ExcessNotificationCallback)GNUNET_BANDWIDTH_ExcessNotificationCallback84,2058
struct GNUNET_BANDWIDTH_Tracker94,2459
  void *update_cb_cls;update_cb_cls99,2536
  GNUNET_BANDWIDTH_TrackerUpdateCallback update_cb;105,2699
  void *excess_cb_cls;excess_cb_cls110,2795
  GNUNET_BANDWIDTH_ExcessNotificationCallback excess_cb;116,2942
  int64_t consumption_since_last_update__;121,3077
  struct GNUNET_SCHEDULER_Task *excess_task;excess_task127,3248
  struct GNUNET_TIME_Absolute last_update__;132,3350
  uint32_t available_bytes_per_s__;137,3461
  uint32_t max_carry_s__;144,3684
#define GNUNET_BANDWIDTH_ZERO 151,3773
#define GNUNET_BANDWIDTH_VALUE_MAX 167,4098

src/include/gnunet_gnsrecord_json_lib.h,44
#define GNUNET_GNSRECORD_JSON_LIB_H38,1121

src/include/gnunet_dnsstub_lib.h,109
#define GNUNET_DNSSTUB_LIB_H39,1211
(*GNUNET_DNSSTUB_ResultCallback)GNUNET_DNSSTUB_ResultCallback123,3306

src/include/gnunet_service_lib.h,599
#define GNUNET_SERVICE_LIB_H48,1338
enum GNUNET_SERVICE_Options65,1603
  GNUNET_SERVICE_OPTION_NONE 71,1775
  GNUNET_SERVICE_OPTION_MANUAL_SHUTDOWN 78,2000
  GNUNET_SERVICE_OPTION_SOFT_SHUTDOWN 84,2179
  GNUNET_SERVICE_OPTION_SHUTDOWN_BITMASK 89,2275
  GNUNET_SERVICE_OPTION_CLOSE_LSOCKS 95,2450
(*GNUNET_SERVICE_InitCallback)GNUNET_SERVICE_InitCallback121,2976
(*GNUNET_SERVICE_ConnectHandler)GNUNET_SERVICE_ConnectHandler135,3468
(*GNUNET_SERVICE_DisconnectHandler)GNUNET_SERVICE_DisconnectHandler148,3879
#define GNUNET_SERVICE_MAIN(367,14024
#define GNUNET_SERVICE_MAIN(387,14830

src/include/gnunet_namecache_service.h,260
#define GNUNET_NAMECACHE_SERVICE_H42,1324
#define GNUNET_NAMECACHE_MAX_VALUE_SIZE 71,1797
(*GNUNET_NAMECACHE_ContinuationWithStatus)GNUNET_NAMECACHE_ContinuationWithStatus106,2765
(*GNUNET_NAMECACHE_BlockProcessor)GNUNET_NAMECACHE_BlockProcessor135,3726

src/include/gnunet_testbed_lib.h,71
#define GNUNET_TESTBED_LIB_H2,29
#define GNUNET_TESTBED_PREFIX 9,108

src/include/gnu_name_system_protocols.h,299
#define GNUNET_GNS_PROTOCOLS_H21,832
struct GNUNET_GNS_Protocol39,1211
  const char *name;name41,1240
  uint16_t number;43,1261
struct GNUNET_GNS_Protocol GNUNET_GNS_Protocols[GNUNET_GNS_Protocols46,1284
GNUNET_GNS_protocol_name_to_number 62,1490
GNUNET_GNS_protocol_number_to_name 76,1754

src/include/gnunet_secretsharing_service.h,576
#define GNUNET_SECRETSHARING_SERVICE_H33,1084
#define GNUNET_SECRETSHARING_ELGAMAL_BITS 57,1590
#define GNUNET_SECRETSHARING_ELGAMAL_P_HEX 63,1713
#define GNUNET_SECRETSHARING_ELGAMAL_Q_HEX 76,2165
#define GNUNET_SECRETSHARING_ELGAMAL_G_HEX 89,2623
struct GNUNET_SECRETSHARING_PublicKey122,3566
struct GNUNET_SECRETSHARING_Ciphertext131,3722
struct GNUNET_SECRETSHARING_Plaintext144,4111
(*GNUNET_SECRETSHARING_SecretReadyCallback)GNUNET_SECRETSHARING_SecretReadyCallback172,5110
(*GNUNET_SECRETSHARING_DecryptCallback)GNUNET_SECRETSHARING_DecryptCallback191,5871

src/include/gnu_name_system_service_ports.h,321
#define GNUNET_GNS_SERVICE_PORTS_H21,836
struct GNUNET_GNS_ServicePort39,1219
  const char *name;name41,1251
  uint16_t port;43,1272
struct GNUNET_GNS_ServicePort GNUNET_GNS_ServicePorts[GNUNET_GNS_ServicePorts46,1293
GNUNET_GNS_service_port_name_to_number 70,1726
GNUNET_GNS_service_port_number_to_name 84,2001

src/include/gnunet_microphone_lib.h,677
#define GNUNET_MICROPHONE_SERVICE_H37,1161
typedef void (*GNUNET_MICROPHONE_RecordedDataCallback)GNUNET_MICROPHONE_RecordedDataCallback57,1495
typedef int (*GNUNET_MICROPHONE_EnableCallback)GNUNET_MICROPHONE_EnableCallback69,1910
typedef void (*GNUNET_MICROPHONE_DisableCallback)GNUNET_MICROPHONE_DisableCallback79,2247
typedef void (*GNUNET_MICROPHONE_DestroyCallback)GNUNET_MICROPHONE_DestroyCallback86,2380
struct GNUNET_MICROPHONE_Handle92,2530
  GNUNET_MICROPHONE_EnableCallback enable_microphone;97,2605
  GNUNET_MICROPHONE_DisableCallback disable_microphone;102,2702
  GNUNET_MICROPHONE_DestroyCallback destroy_microphone;107,2839
  void *cls;cls112,2940

src/include/gnunet_peer_lib.h,79
#define GNUNET_PEER_LIB_H41,1232
typedef unsigned int GNUNET_PEER_Id;60,1630

src/include/gnunet_block_lib.h,292
#define GNUNET_BLOCK_LIB_H35,1062
enum GNUNET_BLOCK_ReplyEvaluationResult53,1342
  GNUNET_BLOCK_REPLY_TYPE_NOT_SUPPORTED 59,1452
  GNUNET_BLOCK_REPLY_OK_DUPLICATE 64,1572
  GNUNET_BLOCK_REPLY_IRRELEVANT 69,1702
  GNUNET_BLOCK_REPLY_OK_MORE 74,1794
  GNUNET_BLOCK_REPLY_OK_LAST 79,1874

src/include/gnunet_testing_transport_lib.h,1234
#define GNUNET_TRANSPORT_TESTING_NG_LIB_H26,943
(*GNUNET_TESTING_notify_connect_cb)GNUNET_TESTING_notify_connect_cb40,1205
struct GNUNET_TESTING_StartPeerState45,1413
  struct GNUNET_TESTING_AsyncContext ac;50,1510
  char *node_ip;node_ip55,1587
  struct GNUNET_MQ_MessageHandler *handlers;handlers60,1639
  char *cfgname;cfgname65,1750
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg70,1806
  struct GNUNET_TESTING_Peer *peer;peer75,1937
  struct GNUNET_PeerIdentity id;80,2005
  struct GNUNET_TRANSPORT_CoreHandle *th;th85,2088
  struct GNUNET_TRANSPORT_ApplicationHandle *ah;ah90,2167
  struct GNUNET_PEERSTORE_Handle *ph;ph95,2258
  struct GNUNET_SCHEDULER_Task *rh_task;rh_task100,2329
  struct GNUNET_PEERSTORE_IterateContext *pic;pic105,2455
  char *hello;hello110,2526
  size_t hello_size;115,2570
  char *system_label;system_label120,2697
  unsigned int no;125,2775
  struct GNUNET_CONTAINER_MultiShortmap *connected_peers_map;connected_peers_map131,2900
  const struct GNUNET_TESTING_System *tl_system;tl_system136,3006
  GNUNET_TESTING_notify_connect_cb notify_connect;141,3127
  enum GNUNET_GenericReturnValue broadcast;146,3253
#define GNUNET_TRANSPORT_TESTING_SIMPLE_TRAITS(190,4596

src/include/gnunet_datacache_lib.h,533
#define GNUNET_DATACACHE_LIB_H41,1247
struct GNUNET_DATACACHE_Block60,1555
  struct GNUNET_HashCode key;65,1622
  struct GNUNET_TIME_Absolute expiration_time;70,1698
  struct GNUNET_PeerIdentity trunc_peer;76,1848
  const struct GNUNET_DHT_PathElement *put_path;put_path81,1962
  const void *data;data86,2048
  size_t data_size;91,2114
  unsigned int put_path_length;96,2185
  enum GNUNET_BLOCK_Type type;101,2254
  enum GNUNET_DHT_RouteOption ro;106,2338
(*GNUNET_DATACACHE_Iterator)GNUNET_DATACACHE_Iterator145,3204

src/include/block_dns.h,285
#define BLOCK_DNS_H34,999
struct GNUNET_DNS_Advertisement44,1145
  struct GNUNET_CRYPTO_EddsaSignature signature;49,1261
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;55,1422
  struct GNUNET_TIME_AbsoluteNBO expiration_time;60,1525
  struct GNUNET_PeerIdentity peer;65,1625

src/include/gnunet_nc_lib.h,28
#define GNUNET_NC_H44,1286

src/include/gnunet_config.h,295
#define GNUNET_CONFIG_H22,833
#define GNUNET_VERSION 34,1038
#define GNUNET_MAJOR_VERSION 37,1106
#define GNUNET_MINOR_VERSION 40,1158
#define GNUNET_MICRO_VERSION 43,1210
#define GNUNET_EXPERIMENTAL 46,1290
#define GNUNET_CURL_GNUTLS 49,1363
#define GNUNET_FS_EXTRACTOR_ENABLED 56,1549

src/include/gnunet_conversation_service.h,1261
#define GNUNET_CONVERSATION_SERVICE_H54,1960
#define GNUNET_CONVERSATION_VERSION 75,2337
struct GNUNET_CONVERSATION_PhoneRecord93,2905
  uint32_t version GNUNET_PACKED;100,3099
  uint32_t reserved GNUNET_PACKED;105,3181
  struct GNUNET_PeerIdentity peer;110,3282
  struct GNUNET_HashCode line_port;115,3374
enum GNUNET_CONVERSATION_PhoneEventCode123,3497
  GNUNET_CONVERSATION_EC_PHONE_RING,129,3643
  GNUNET_CONVERSATION_EC_PHONE_HUNG_UP135,3793
(*GNUNET_CONVERSATION_PhoneEventHandler)GNUNET_CONVERSATION_PhoneEventHandler148,4062
enum GNUNET_CONVERSATION_CallerEventCode162,4648
  GNUNET_CONVERSATION_EC_CALLER_SUSPEND,169,4888
  GNUNET_CONVERSATION_EC_CALLER_RESUME176,5125
(*GNUNET_CONVERSATION_CallerEventHandler)GNUNET_CONVERSATION_CallerEventHandler189,5386
enum GNUNET_CONVERSATION_CallEventCode312,9533
  GNUNET_CONVERSATION_EC_CALL_RINGING,318,9674
  GNUNET_CONVERSATION_EC_CALL_PICKED_UP,323,9800
  GNUNET_CONVERSATION_EC_CALL_GNS_FAIL,332,10131
  GNUNET_CONVERSATION_EC_CALL_HUNG_UP,340,10431
  GNUNET_CONVERSATION_EC_CALL_SUSPENDED,347,10668
  GNUNET_CONVERSATION_EC_CALL_RESUMED,354,10907
  GNUNET_CONVERSATION_EC_CALL_ERROR361,11120
(*GNUNET_CONVERSATION_CallEventHandler)GNUNET_CONVERSATION_CallEventHandler372,11305

src/include/gnunet_container_lib.h,1740
#define GNUNET_CONTAINER_LIB_H61,1652
typedef int (*GNUNET_CONTAINER_HashCodeIterator)GNUNET_CONTAINER_HashCodeIterator130,3591
enum GNUNET_CONTAINER_MultiHashMapOption357,9698
  GNUNET_CONTAINER_MULTIHASHMAPOPTION_REPLACE,365,9961
  GNUNET_CONTAINER_MULTIHASHMAPOPTION_MULTIPLE,371,10089
  GNUNET_CONTAINER_MULTIHASHMAPOPTION_UNIQUE_ONLY,378,10294
  GNUNET_CONTAINER_MULTIHASHMAPOPTION_UNIQUE_FAST389,10754
(*GNUNET_CONTAINER_MultiHashMapIteratorCallback)GNUNET_CONTAINER_MultiHashMapIteratorCallback405,11103
(*GNUNET_CONTAINER_PeerMapIterator)GNUNET_CONTAINER_PeerMapIterator690,19848
(*GNUNET_CONTAINER_ShortmapIterator)GNUNET_CONTAINER_ShortmapIterator973,28371
(*GNUNET_CONTAINER_MultiUuidmapIteratorCallback)GNUNET_CONTAINER_MultiUuidmapIteratorCallback1257,36807
(*GNUNET_CONTAINER_MultiHashMapIterator32Callback)GNUNET_CONTAINER_MultiHashMapIterator32Callback1554,45579
#define GNUNET_CONTAINER_DLL_insert(1797,52463
#define GNUNET_CONTAINER_DLL_insert_tail(1821,53639
#define GNUNET_CONTAINER_DLL_insert_after(1846,54875
#define GNUNET_CONTAINER_DLL_insert_before(1879,56704
#define GNUNET_CONTAINER_DLL_remove(1916,58667
#define GNUNET_CONTAINER_MDLL_insert(1947,60266
#define GNUNET_CONTAINER_MDLL_insert_tail(1972,61612
#define GNUNET_CONTAINER_MDLL_insert_after(1998,63019
#define GNUNET_CONTAINER_MDLL_insert_before(2032,65085
#define GNUNET_CONTAINER_MDLL_remove(2066,67080
#define GNUNET_CONTAINER_DLL_insert_sorted(2097,68863
typedef uint64_t GNUNET_CONTAINER_HeapCostType;2136,71274
enum GNUNET_CONTAINER_HeapOrder2143,71382
  GNUNET_CONTAINER_HEAP_ORDER_MAX,2149,71492
  GNUNET_CONTAINER_HEAP_ORDER_MIN2155,71604
(*GNUNET_CONTAINER_HeapIterator)GNUNET_CONTAINER_HeapIterator2256,73845

src/include/gnunet_applications.h,779
#define GNUNET_APPLICATIONS_H36,1137
#define GNUNET_APPLICATION_TYPE_END 49,1319
#define GNUNET_APPLICATION_TYPE_TEST 54,1375
#define GNUNET_APPLICATION_PORT_FS_BLOCK_TRANSFER 59,1478
#define GNUNET_APPLICATION_PORT_RPS 64,1596
#define GNUNET_APPLICATION_PORT_INTERNET_RESOLVER 71,1807
#define GNUNET_APPLICATION_PORT_IPV4_GATEWAY 76,1922
#define GNUNET_APPLICATION_PORT_IPV6_GATEWAY 81,2033
#define GNUNET_APPLICATION_TYPE_EXIT_REGEX_PREFIX 87,2196
#define GNUNET_APPLICATION_TYPE_CONSENSUS 94,2310
#define GNUNET_APPLICATION_TYPE_SET 100,2446
#define GNUNET_APPLICATION_TYPE_CONVERSATION_CONTROL 106,2539
#define GNUNET_APPLICATION_TYPE_CONVERSATION_AUDIO 112,2647
#define GNUNET_APPLICATION_TYPE_MQTT 118,2752
#define GNUNET_APPLICATION_TYPE_MULTICAST 124,2835

src/include/gnunet_set_service.h,1457
#define GNUNET_SET_SERVICE_H40,1105
#define GNUNET_SET_CONTEXT_MESSAGE_MAX_SIZE 59,1425
enum GNUNET_SET_OperationType86,1864
  GNUNET_SET_OPERATION_NONE,91,1969
  GNUNET_SET_OPERATION_INTERSECTION,96,2078
  GNUNET_SET_OPERATION_UNION101,2202
enum GNUNET_SET_Status108,2278
  GNUNET_SET_STATUS_OK,120,2599
  GNUNET_SET_STATUS_ADD_LOCAL,129,2810
  GNUNET_SET_STATUS_ADD_REMOTE,138,3030
  GNUNET_SET_STATUS_FAILURE,144,3162
  GNUNET_SET_STATUS_HALF_DONE,151,3375
  GNUNET_SET_STATUS_DONE156,3477
enum GNUNET_SET_ResultMode163,3559
  GNUNET_SET_RESULT_FULL,170,3700
  GNUNET_SET_RESULT_SYMMETRIC,178,3866
  GNUNET_SET_RESULT_REMOVED,185,4025
  GNUNET_SET_RESULT_ADDED192,4171
struct GNUNET_SET_Element199,4238
  uint16_t size;204,4333
  uint16_t element_type;209,4403
  const void *data;data214,4473
enum GNUNET_SET_OptionType223,4603
  GNUNET_SET_OPTION_END=228,4666
  GNUNET_SET_OPTION_BYZANTINE=236,4925
  GNUNET_SET_OPTION_FORCE_FULL=241,5081
  GNUNET_SET_OPTION_FORCE_DELTA=247,5291
struct GNUNET_SET_Option254,5369
  enum GNUNET_SET_OptionType type;259,5433
    uint64_t num;266,5549
  } v;267,5567
(*GNUNET_SET_Continuation)GNUNET_SET_Continuation277,5677
(*GNUNET_SET_ResultIterator)GNUNET_SET_ResultIterator290,6018
(*GNUNET_SET_ElementIterator)GNUNET_SET_ElementIterator304,6482
(*GNUNET_SET_ListenCallback)GNUNET_SET_ListenCallback324,7331
(*GNUNET_SET_CopyReadyCallback)GNUNET_SET_CopyReadyCallback331,7608

src/include/gnunet_reclaim_service.h,819
#define GNUNET_RECLAIM_SERVICE_H35,1079
#define GNUNET_RECLAIM_VERSION 52,1356
#define GNUNET_RECLAIM_TICKET_RP_URI_MAX_LEN 65,1582
#define GNUNET_RECLAIM_TICKET_RP_URI_URN_PREFIX 67,1632
struct GNUNET_RECLAIM_Ticket75,1925
  char gns_name[gns_name83,2092
typedef void (*GNUNET_RECLAIM_TicketCallback)GNUNET_RECLAIM_TicketCallback114,2844
typedef void (*GNUNET_RECLAIM_IssueTicketCallback)GNUNET_RECLAIM_IssueTicketCallback127,3199
typedef void (*GNUNET_RECLAIM_ContinuationWithStatus)GNUNET_RECLAIM_ContinuationWithStatus141,3600
typedef void (*GNUNET_RECLAIM_AttributeResult)GNUNET_RECLAIM_AttributeResult152,4014
typedef void (*GNUNET_RECLAIM_AttributeTicketResult)GNUNET_RECLAIM_AttributeTicketResult164,4447
typedef void (*GNUNET_RECLAIM_CredentialResult)GNUNET_RECLAIM_CredentialResult178,4923

src/include/gnunet_db_lib.h,414
#define GNUNET_DB_LIB_H26,924
enum GNUNET_DB_QueryStatus36,1171
  GNUNET_DB_STATUS_HARD_ERROR 41,1264
  GNUNET_DB_STATUS_SOFT_ERROR 47,1429
  GNUNET_DB_STATUS_SUCCESS_NO_RESULTS 55,1709
  GNUNET_DB_STATUS_SUCCESS_ONE_RESULT 60,1821
(*GNUNET_DB_EventCallback)GNUNET_DB_EventCallback80,2329
struct GNUNET_DB_EventHeaderP91,2593
  uint16_t size GNUNET_PACKED;97,2741
  uint16_t type GNUNET_PACKED;102,2865

src/include/gnunet_speaker_lib.h,657
#define GNUNET_SPEAKER_SERVICE_H37,1137
typedef int (*GNUNET_SPEAKER_EnableCallback)GNUNET_SPEAKER_EnableCallback56,1449
typedef void (*GNUNET_SPEAKER_DisableCallback)GNUNET_SPEAKER_DisableCallback63,1577
typedef void (*GNUNET_SPEAKER_DestroyCallback)GNUNET_SPEAKER_DestroyCallback70,1704
typedef void (*GNUNET_SPEAKER_PlayCallback)GNUNET_SPEAKER_PlayCallback80,1988
struct GNUNET_SPEAKER_Handle88,2239
  GNUNET_SPEAKER_EnableCallback enable_speaker;93,2308
  GNUNET_SPEAKER_PlayCallback play;98,2386
  GNUNET_SPEAKER_DisableCallback disable_speaker;103,2462
  GNUNET_SPEAKER_DestroyCallback destroy_speaker;108,2587
  void *cls;cls113,2682

src/include/gnunet_datastore_plugin.h,1293
#define PLUGIN_DATASTORE_H35,1107
#define GNUNET_DATASTORE_ENTRY_OVERHEAD 49,1413
(*GNUNET_DATASTORE_DiskUtilizationChange)GNUNET_DATASTORE_DiskUtilizationChange61,1652
struct GNUNET_DATASTORE_PluginEnvironment70,1923
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg75,2006
  GNUNET_DATASTORE_DiskUtilizationChange duc;80,2118
  void *cls;cls85,2191
(*PluginDatumProcessor)PluginDatumProcessor106,2810
(*PluginEstimateSize)PluginEstimateSize130,3618
(*PluginPutCont)PluginPutCont145,3992
(*PluginPut)PluginPut171,4940
(*PluginKeyProcessor)PluginKeyProcessor193,5617
(*PluginGetKeys)PluginGetKeys206,5925
(*PluginGetKey)PluginGetKey225,6559
(*PluginRemoveCont)PluginRemoveCont245,7123
(*PluginRemoveKey)PluginRemoveKey263,7633
(*PluginGetRandom)PluginGetRandom282,8246
(*PluginGetType)PluginGetType299,8785
(*PluginDrop)PluginDrop312,9044
struct GNUNET_DATASTORE_PluginFunctions319,9198
  void *cls;cls325,9337
  PluginEstimateSize estimate_size;331,9482
  PluginPut put;336,9580
  PluginGetKey get_key;341,9680
  PluginGetType get_zero_anonymity;346,9783
  PluginGetRandom get_replication;355,10134
  PluginGetRandom get_expiration;362,10362
  PluginDrop drop;368,10505
  PluginGetKeys get_keys;373,10581
  PluginRemoveKey remove_key;378,10671

src/include/gnunet_transport_monitor_service.h,640
#define GNUNET_TRANSPORT_MONITOR_SERVICE_H38,1149
#define GNUNET_TRANSPORT_MONITOR_VERSION 56,1445
struct GNUNET_TRANSPORT_MonitorInformation62,1552
  const char *address;address67,1684
  enum GNUNET_NetworkType nt;72,1754
  enum GNUNET_TRANSPORT_ConnectionStatus cs;77,1821
  uint32_t num_msg_pending;82,1945
  uint32_t num_bytes_pending;87,2049
  struct GNUNET_TIME_Absolute last_validation;92,2135
  struct GNUNET_TIME_Absolute valid_until;97,2231
  struct GNUNET_TIME_Absolute next_validation;102,2331
  struct GNUNET_TIME_Relative rtt;107,2425
(*GNUNET_TRANSPORT_MonitorCallback)GNUNET_TRANSPORT_MonitorCallback128,3035

src/include/gnunet_socks.h,31
#define GNUNET_SOCKS_H36,1016

src/include/gnunet_peerstore_plugin.h,334
#define GNUNET_PEERSTORE_PLUGIN_H35,1082
typedef void (*GNUNET_PEERSTORE_PluginProcessor)GNUNET_PEERSTORE_PluginProcessor57,1531
struct GNUNET_PEERSTORE_PluginFunctions66,1760
  void *cls;cls71,1860
  (*store_record)store_record90,2588
  (*iterate_records)iterate_records117,3600
  (*expire_records)expire_records137,4325

src/include/gnunet_testing_arm_lib.h,87
#define GNUNET_TESTING_ARM_LIB_H2,33
#define GNUNET_TESTING_ARM_SIMPLE_TRAITS(37,747

src/include/gnunet_testing_testbed_lib.h,95
#define GNUNET_TESTING_TESTBED_LIB_H2,37
#define GNUNET_TESTING_TESTBED_SIMPLE_TRAITS(34,995

src/include/gnunet_transport_core_service.h,274
#define GNUNET_TRANSPORT_CORE_SERVICE_H37,1158
#define GNUNET_TRANSPORT_CORE_VERSION 52,1372
typedef void *(*GNUNET_TRANSPORT_NotifyConnect)GNUNET_TRANSPORT_NotifyConnect73,1964
typedef void (*GNUNET_TRANSPORT_NotifyDisconnect)GNUNET_TRANSPORT_NotifyDisconnect90,2543

src/include/gnunet_testing_lib.h,2416
#define GNUNET_TESTING_LIB_H28,1066
#define GNUNET_TESTING_CMD_MAX_LABEL_LENGTH 35,1172
#define GNUNET_TESTING_FAIL(44,1460
#define GNUNET_TESTING_command_incomplete(58,1894
struct GNUNET_TESTING_AsyncContext80,2808
  struct GNUNET_TESTING_Interpreter *is;is87,2945
  GNUNET_SCHEDULER_TaskCallback notify_finished;92,3051
  void *notify_finished_cls;notify_finished_cls97,3150
  enum GNUNET_GenericReturnValue finished;104,3318
  bool next_called;110,3460
(*GNUNET_TESTING_CommandRunRoutine)GNUNET_TESTING_CommandRunRoutine146,4387
(*GNUNET_TESTING_CommandCleanupRoutine)GNUNET_TESTING_CommandCleanupRoutine158,4608
(*GNUNET_TESTING_CommandGetTraits)GNUNET_TESTING_CommandGetTraits172,5001
#define GNUNET_TESTING_command_new(209,6211
struct GNUNET_TESTING_CommandLabel216,6407
  char value[value218,6444
struct GNUNET_TESTING_Command238,6864
  struct GNUNET_TESTING_CommandLabel label;244,6937
  void *cls;cls249,7067
  const char *name;name254,7144
  GNUNET_TESTING_CommandRunRoutine run;271,7752
  struct GNUNET_TESTING_AsyncContext *ac;ac281,8026
  GNUNET_TESTING_CommandCleanupRoutine cleanup;289,8221
  GNUNET_TESTING_CommandGetTraits traits;302,8654
  struct GNUNET_TIME_Absolute start_time;307,8760
  struct GNUNET_TIME_Absolute finish_time;312,8867
  struct GNUNET_TIME_Absolute last_req_time;323,9441
  unsigned int num_tries;330,9693
  bool asynchronous_finish;338,9996
(*GNUNET_TESTING_CommandIterator)GNUNET_TESTING_CommandIterator431,11949
struct GNUNET_TESTING_Timer484,13192
  const char *prefix;prefix489,13267
  struct GNUNET_TIME_Relative total_duration;494,13354
  struct GNUNET_TIME_Relative success_latency;500,13509
  unsigned int num_commands;505,13604
  unsigned int num_retries;510,13680
#define GNUNET_TESTING_NETJAIL_START_SCRIPT 568,15212
#define GNUNET_TESTING_NETJAIL_STOP_SCRIPT 570,15280
(*GNUNET_TESTING_ResultCallback)GNUNET_TESTING_ResultCallback733,19871
#define GNUNET_TESTING_MAKE_PLUGIN(784,21307
struct GNUNET_TESTING_Trait813,22790
  unsigned int index;820,22971
  const char *trait_name;trait_name825,23065
  const void *ptr;ptr830,23148
#define GNUNET_TESTING_MAKE_DECL_SIMPLE_TRAIT(868,24090
#define GNUNET_TESTING_MAKE_IMPL_SIMPLE_TRAIT(886,24814
#define GNUNET_TESTING_MAKE_DECL_INDEXED_TRAIT(918,26431
#define GNUNET_TESTING_MAKE_IMPL_INDEXED_TRAIT(934,27176
#define GNUNET_TESTING_SIMPLE_TRAITS(967,28925

src/include/gnunet_block_group_lib.h,41
#define GNUNET_BLOCK_GROUP_LIB_H32,1034

src/include/gnunet_identity_service.h,446
#define GNUNET_IDENTITY_SERVICE_H46,1587
#define GNUNET_IDENTITY_VERSION 63,1825
(*GNUNET_IDENTITY_Callback)GNUNET_IDENTITY_Callback156,4635
(*GNUNET_IDENTITY_Continuation)GNUNET_IDENTITY_Continuation200,6001
(*GNUNET_IDENTITY_CreateContinuation)GNUNET_IDENTITY_CreateContinuation240,7109
(*GNUNET_IDENTITY_EgoCallback)GNUNET_IDENTITY_EgoCallback321,9628
(*GNUNET_IDENTITY_EgoSuffixCallback)GNUNET_IDENTITY_EgoSuffixCallback362,10626

src/include/gnunet_error_codes.h,1039
#define GNUNET_ERROR_CODES_H27,996
enum GNUNET_ErrorCode42,1172
  GNUNET_EC_NONE 50,1306
  GNUNET_EC_UNKNOWN 57,1459
  GNUNET_EC_SERVICE_COMMUNICATION_FAILED 64,1619
  GNUNET_EC_IDENTITY_NOT_FOUND 71,1770
  GNUNET_EC_IDENTITY_NAME_CONFLICT 78,1938
  GNUNET_EC_IDENTITY_INVALID 85,2119
  GNUNET_EC_NAMESTORE_UNKNOWN 92,2280
  GNUNET_EC_NAMESTORE_ITERATION_FAILED 99,2441
  GNUNET_EC_NAMESTORE_ZONE_NOT_FOUND 106,2592
  GNUNET_EC_NAMESTORE_RECORD_NOT_FOUND 113,2743
  GNUNET_EC_NAMESTORE_RECORD_DELETE_FAILED 120,2913
  GNUNET_EC_NAMESTORE_ZONE_EMPTY 127,3087
  GNUNET_EC_NAMESTORE_LOOKUP_ERROR 134,3253
  GNUNET_EC_NAMESTORE_NO_RECORDS_GIVEN 141,3404
  GNUNET_EC_NAMESTORE_RECORD_DATA_INVALID 148,3562
  GNUNET_EC_NAMESTORE_NO_LABEL_GIVEN 155,3718
  GNUNET_EC_NAMESTORE_NO_RESULTS 162,3869
  GNUNET_EC_NAMESTORE_RECORD_EXISTS 169,4020
  GNUNET_EC_NAMESTORE_RECORD_TOO_BIG 176,4199
  GNUNET_EC_NAMESTORE_BACKEND_FAILED 183,4388
  GNUNET_EC_NAMESTORE_STORE_FAILED 190,4568
  GNUNET_EC_NAMESTORE_LABEL_INVALID 197,4729

src/include/gnunet_peerstore_service.h,1193
#define GNUNET_PEERSTORE_SERVICE_H37,1089
#define GNUNET_PEERSTORE_HELLO_KEY 52,1305
#define GNUNET_PEERSTORE_TRANSPORT_URLADDRESS_KEY 57,1441
#define GNUNET_PEERSTORE_TRANSPORT_HELLO_KEY 62,1577
#define GNUNET_PEERSTORE_TRANSPORT_BACKCHANNEL_MONOTIME 68,1729
#define GNUNET_PEERSTORE_TRANSPORT_DVLEARN_MONOTIME 75,1915
#define GNUNET_PEERSTORE_TRANSPORT_TCP_COMMUNICATOR_HANDSHAKE 81,2091
#define GNUNET_PEERSTORE_TRANSPORT_TCP_COMMUNICATOR_HANDSHAKE_ACK 87,2284
#define GNUNET_PEERSTORE_TRANSPORT_TCP_COMMUNICATOR_REKEY 93,2477
enum GNUNET_PEERSTORE_StoreOption100,2633
  GNUNET_PEERSTORE_STOREOPTION_MULTIPLE 105,2734
  GNUNET_PEERSTORE_STOREOPTION_REPLACE 111,2879
struct GNUNET_PEERSTORE_Record133,3199
  char *sub_system;sub_system138,3279
  struct GNUNET_PeerIdentity peer;143,3331
  char *key;key148,3402
  void *value;value153,3451
  size_t value_size;158,3506
  struct GNUNET_TIME_Absolute expiry;163,3566
typedef void (*GNUNET_PEERSTORE_Continuation)GNUNET_PEERSTORE_Continuation174,3735
typedef void (*GNUNET_PEERSTORE_Processor)GNUNET_PEERSTORE_Processor191,4127
typedef void (*GNUNET_PEERSTORE_hello_notify_cb)GNUNET_PEERSTORE_hello_notify_cb202,4398

src/include/gnunet_resolver_service.h,195
#define GNUNET_RESOLVER_SERVICE_H36,1050
(*GNUNET_RESOLVER_AddressCallback)GNUNET_RESOLVER_AddressCallback60,1537
(*GNUNET_RESOLVER_HostnameCallback)GNUNET_RESOLVER_HostnameCallback129,3635

src/include/gnunet_datastore_service.h,260
#define GNUNET_DATASTORE_SERVICE_H43,1341
#define GNUNET_DATASTORE_MAX_VALUE_SIZE 70,1775
(*GNUNET_DATASTORE_ContinuationWithStatus)GNUNET_DATASTORE_ContinuationWithStatus108,2943
(*GNUNET_DATASTORE_DatumProcessor)GNUNET_DATASTORE_DatumProcessor254,9674

src/include/gnunet_dht_service.h,1172
#define GNUNET_DHT_SERVICE_H41,1160
#define GNUNET_DHT_DEFAULT_REPUBLISH_FREQUENCY 59,1443
#define GNUNET_DHT_MAXIMUM_REPLICATION_LEVEL 66,1623
enum GNUNET_DHT_RouteOption88,1938
  GNUNET_DHT_RO_NONE 93,2015
  GNUNET_DHT_RO_DEMULTIPLEX_EVERYWHERE 100,2218
  GNUNET_DHT_RO_RECORD_ROUTE 106,2361
  GNUNET_DHT_RO_FIND_APPROXIMATE 111,2443
  GNUNET_DHT_RO_TRUNCATED 116,2535
  GNUNET_DHT_RO_LAST_HOP 122,2695
struct GNUNET_DHT_HopSignature131,2824
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;136,2917
  struct GNUNET_TIME_AbsoluteNBO expiration_time;141,3017
  struct GNUNET_HashCode h_data GNUNET_PACKED;146,3121
  struct GNUNET_PeerIdentity pred;152,3278
  struct GNUNET_PeerIdentity succ;157,3370
struct GNUNET_DHT_PathElement166,3630
  struct GNUNET_CRYPTO_EddsaSignature sig;172,3755
  struct GNUNET_PeerIdentity pred;184,4256
(*GNUNET_DHT_GetIterator)GNUNET_DHT_GetIterator289,7783
(*GNUNET_DHT_MonitorGetCB)GNUNET_DHT_MonitorGetCB372,10867
(*GNUNET_DHT_MonitorGetRespCB)GNUNET_DHT_MonitorGetRespCB398,11972
(*GNUNET_DHT_MonitorPutCB)GNUNET_DHT_MonitorPutCB430,13521
(*GNUNET_DHT_HelloGetCallback)GNUNET_DHT_HelloGetCallback534,17573

src/include/gnunet_revocation_service.h,165
#define GNUNET_REVOCATION_SERVICE_H_22,846
#define GNUNET_REVOCATION_VERSION 58,1457
typedef void (*GNUNET_REVOCATION_Callback)GNUNET_REVOCATION_Callback75,1872

src/include/gnunet_signal_lib.h,91
#define GNUNET_SIGNAL_LIB_H41,1229
(*GNUNET_SIGNAL_Handler)GNUNET_SIGNAL_Handler67,1956

src/include/gnunet_op_lib.h,28
#define GNUNET_OP_H37,1170

src/include/gnunet_hello_uri_lib.h,150
#define GNUNET_HELLO_URI_LIB_H36,1048
#define GNUNET_HELLO_ADDRESS_EXPIRATION 58,1346
(*GNUNET_HELLO_UriCallback)GNUNET_HELLO_UriCallback222,5951

src/include/gnunet_consensus_service.h,379
#define GNUNET_CONSENSUS_SERVICE_H36,1035
#define GNUNET_CONSENSUS_ELEMENT_TYPE_USER_MAX 58,1495
typedef void (*GNUNET_CONSENSUS_ElementCallback)GNUNET_CONSENSUS_ElementCallback70,1841
typedef void (*GNUNET_CONSENSUS_InsertDoneCallback)GNUNET_CONSENSUS_InsertDoneCallback121,3986
typedef void (*GNUNET_CONSENSUS_ConcludeCallback)GNUNET_CONSENSUS_ConcludeCallback150,5037

src/include/gnunet_dns_service.h,336
#define GNUNET_DNS_SERVICE_H37,1092
enum GNUNET_DNS_Flags56,1366
  GNUNET_DNS_FLAG_NEVER 61,1446
  GNUNET_DNS_FLAG_REQUEST_MONITOR 70,1782
  GNUNET_DNS_FLAG_PRE_RESOLUTION 81,2231
  GNUNET_DNS_FLAG_POST_RESOLUTION 90,2620
  GNUNET_DNS_FLAG_RESPONSE_MONITOR 99,2967
(*GNUNET_DNS_RequestHandler)GNUNET_DNS_RequestHandler127,4142

src/include/gnunet_vpn_service.h,121
#define GNUNET_VPN_SERVICE_H35,1026
typedef void (*GNUNET_VPN_AllocationCallback)GNUNET_VPN_AllocationCallback65,1821

src/include/gnunet_helper_lib.h,177
#define GNUNET_HELPER_LIB_H46,1382
(*GNUNET_HELPER_ExceptionCallback)GNUNET_HELPER_ExceptionCallback65,1739
(*GNUNET_HELPER_Continuation)GNUNET_HELPER_Continuation149,4659

src/include/gnunet_child_management_lib.h,117
#define GNUNET_CHILD_MANAGEMENT_LIB_H38,1251
(*GNUNET_ChildCompletedCallback)GNUNET_ChildCompletedCallback54,1619

src/include/gnunet_fs_service.h,13495
#define GNUNET_FS_LIB_H37,1109
#define GNUNET_FS_VERSION 72,2089
enum EXTRACTOR_MetaType86,2369
  EXTRACTOR_METATYPE_RESERVED 88,2395
  EXTRACTOR_METATYPE_MIMETYPE 89,2430
  EXTRACTOR_METATYPE_FILENAME 90,2465
  EXTRACTOR_METATYPE_COMMENT 91,2500
  EXTRACTOR_METATYPE_TITLE 92,2534
  EXTRACTOR_METATYPE_BOOK_TITLE 93,2566
  EXTRACTOR_METATYPE_JOURNAL_NAME 94,2603
  EXTRACTOR_METATYPE_AUTHOR_NAME 95,2642
  EXTRACTOR_METATYPE_PUBLICATION_DATE 96,2681
  EXTRACTOR_METATYPE_URL 97,2725
  EXTRACTOR_METATYPE_URI 98,2756
  EXTRACTOR_METATYPE_ISRC 99,2787
  EXTRACTOR_METATYPE_UNKNOWN 100,2819
  EXTRACTOR_METATYPE_DESCRIPTION 101,2854
  EXTRACTOR_METATYPE_KEYWORDS 102,2893
  EXTRACTOR_METATYPE_SUBJECT 103,2929
  EXTRACTOR_METATYPE_PACKAGE_NAME 104,2964
  EXTRACTOR_METATYPE_THUMBNAIL 105,3004
  EXTRACTOR_METATYPE_ALBUM 106,3042
  EXTRACTOR_METATYPE_ARTIST 107,3076
  EXTRACTOR_METATYPE_ORIGINAL_TITLE 108,3111
  EXTRACTOR_METATYPE_GNUNET_FULL_DATA 109,3154
  EXTRACTOR_METATYPE_GNUNET_ORIGINAL_FILENAME 110,3199
enum EXTRACTOR_MetaFormat116,3321
  EXTRACTOR_METAFORMAT_UNKNOWN 121,3385
  EXTRACTOR_METAFORMAT_UTF8 127,3511
  EXTRACTOR_METAFORMAT_BINARY 132,3611
  EXTRACTOR_METAFORMAT_C_STRING 138,3756
typedef int (*EXTRACTOR_MetaDataProcessor)EXTRACTOR_MetaDataProcessor159,4518
#define EXTRACTOR_METATYPE_GNUNET_ORIGINAL_FILENAME 171,5077
#define GNUNET_FS_URI_PREFIX 177,5202
#define GNUNET_FS_URI_KSK_INFIX 178,5246
#define GNUNET_FS_URI_SKS_INFIX 179,5285
#define GNUNET_FS_URI_CHK_INFIX 180,5324
#define GNUNET_FS_URI_LOC_INFIX 181,5363
#define GNUNET_FS_PROBE_UPDATE_FREQUENCY 188,5538
(*GNUNET_FS_KeywordIterator)GNUNET_FS_KeywordIterator212,6089
enum GNUNET_FS_Status629,18319
  GNUNET_FS_STATUS_PUBLISH_START 634,18423
  GNUNET_FS_STATUS_PUBLISH_RESUME 639,18539
  GNUNET_FS_STATUS_PUBLISH_SUSPEND 644,18658
  GNUNET_FS_STATUS_PUBLISH_PROGRESS 649,18783
  GNUNET_FS_STATUS_PUBLISH_ERROR 656,19046
  GNUNET_FS_STATUS_PUBLISH_COMPLETED 663,19293
  GNUNET_FS_STATUS_PUBLISH_STOPPED 670,19493
  GNUNET_FS_STATUS_DOWNLOAD_START 675,19600
  GNUNET_FS_STATUS_DOWNLOAD_RESUME 680,19707
  GNUNET_FS_STATUS_DOWNLOAD_SUSPEND 685,19812
  GNUNET_FS_STATUS_DOWNLOAD_PROGRESS 690,19919
  GNUNET_FS_STATUS_DOWNLOAD_ERROR 695,20034
  GNUNET_FS_STATUS_DOWNLOAD_COMPLETED 702,20241
  GNUNET_FS_STATUS_DOWNLOAD_STOPPED 708,20395
  GNUNET_FS_STATUS_DOWNLOAD_ACTIVE 714,20560
  GNUNET_FS_STATUS_DOWNLOAD_INACTIVE 720,20713
  GNUNET_FS_STATUS_DOWNLOAD_LOST_PARENT 728,20976
  GNUNET_FS_STATUS_SEARCH_START 735,21187
  GNUNET_FS_STATUS_SEARCH_RESUME 742,21367
  GNUNET_FS_STATUS_SEARCH_RESUME_RESULT 748,21507
  GNUNET_FS_STATUS_SEARCH_SUSPEND 755,21699
  GNUNET_FS_STATUS_SEARCH_RESULT 760,21791
  GNUNET_FS_STATUS_SEARCH_RESULT_NAMESPACE 765,21884
  GNUNET_FS_STATUS_SEARCH_UPDATE 771,22034
  GNUNET_FS_STATUS_SEARCH_ERROR 776,22127
  GNUNET_FS_STATUS_SEARCH_PAUSED 781,22220
  GNUNET_FS_STATUS_SEARCH_CONTINUED 786,22328
  GNUNET_FS_STATUS_SEARCH_RESULT_STOPPED 792,22471
  GNUNET_FS_STATUS_SEARCH_RESULT_SUSPEND 798,22621
  GNUNET_FS_STATUS_SEARCH_STOPPED 805,22803
  GNUNET_FS_STATUS_UNINDEX_START 810,22909
  GNUNET_FS_STATUS_UNINDEX_RESUME 815,23017
  GNUNET_FS_STATUS_UNINDEX_SUSPEND 820,23125
  GNUNET_FS_STATUS_UNINDEX_PROGRESS 825,23238
  GNUNET_FS_STATUS_UNINDEX_ERROR 831,23364
  GNUNET_FS_STATUS_UNINDEX_COMPLETED 837,23487
  GNUNET_FS_STATUS_UNINDEX_STOPPED 843,23642
  GNUNET_FS_STATUS_PUBLISH_PROGRESS_DIRECTORY 848,23763
struct GNUNET_FS_ProgressInfo896,24689
    struct GNUNET_FS_PublishStatusEvent906,24863
      struct GNUNET_FS_PublishContext *pc;pc911,24974
      const struct GNUNET_FS_FileInformation *fi;fi916,25099
      void *cctx;cctx922,25304
      void *pctx;pctx928,25463
      const char *filename;filename933,25558
      uint64_t size;941,25794
      struct GNUNET_TIME_Relative eta;948,25964
      struct GNUNET_TIME_Relative duration;954,26138
      uint64_t completed;959,26246
      uint32_t anonymity;964,26348
        struct GNUNET_FS_PublishProgressEvent975,26584
          const void *data;data980,26711
          uint64_t offset;985,26819
          uint64_t data_len;990,26914
          unsigned int depth;996,27075
        } progress;997,27105
        struct GNUNET_FS_PublishProgressDirectoryEvent1003,27257
          uint64_t completed;1008,27410
          uint64_t total;1013,27533
          struct GNUNET_TIME_Relative eta;1021,27837
        } progress_directory;1022,27880
        struct GNUNET_FS_PublishResumeEvent1028,28030
          const char *message;message1033,28181
          const struct GNUNET_FS_Uri *chk_uri;chk_uri1038,28307
          const struct GNUNET_FS_Uri *sks_uri;sks_uri1043,28453
        } resume;1044,28500
        struct GNUNET_FS_PublishCompletedEvent1050,28641
          const struct GNUNET_FS_Uri *chk_uri;chk_uri1055,28760
          const struct GNUNET_FS_Uri *sks_uri;sks_uri1060,28906
        } completed;1061,28953
        struct GNUNET_FS_PublishErrorEvent1067,29093
          const char *message;message1072,29214
        } error;1073,29245
      } specifics;1074,29262
    } publish;1075,29281
    struct GNUNET_FS_DownloadStatusEvent1081,29374
      struct GNUNET_FS_DownloadContext *dc;dc1086,29488
      void *cctx;cctx1093,29696
      void *pctx;pctx1099,29855
      void *sctx;sctx1107,30137
      const struct GNUNET_FS_Uri *uri;uri1112,30213
      const char *filename;filename1117,30324
      uint64_t size;1124,30524
      struct GNUNET_TIME_Relative eta;1131,30696
      struct GNUNET_TIME_Relative duration;1136,30805
      uint64_t completed;1141,30913
      uint32_t anonymity;1146,31017
      int is_active;1151,31107
        struct GNUNET_FS_DownloadProgressEvent1162,31339
          const void *data;data1170,31682
          uint64_t offset;1175,31790
          uint64_t data_len;1180,31885
          struct GNUNET_TIME_Relative block_download_duration;1186,32090
          unsigned int depth;1192,32285
          uint32_t respect_offered;1200,32606
          uint32_t num_transmissions;1208,32914
        } progress;1209,32952
        struct GNUNET_FS_DownloadStartEvent1215,33092
          const struct GNUNET_FS_MetaData *meta;meta1220,33220
        } start;1221,33269
        struct GNUNET_FS_DownloadResumeEvent1227,33407
          const struct GNUNET_FS_MetaData *meta;meta1232,33536
          const char *message;message1237,33689
        } resume;1238,33720
        struct GNUNET_FS_DownloadErrorEvent1244,33858
          const char *message;message1249,33968
        } error;1250,33999
      } specifics;1251,34016
    } download;1252,34035
    struct GNUNET_FS_SearchStatusEvent1257,34126
      struct GNUNET_FS_SearchContext *sc;sc1265,34374
      void *cctx;cctx1274,34758
      void *pctx;pctx1283,35082
      const struct GNUNET_FS_Uri *query;query1289,35212
      struct GNUNET_TIME_Relative duration;1296,35407
      uint32_t anonymity;1301,35527
        struct GNUNET_FS_SearchResultEvent1312,35760
          const struct GNUNET_FS_MetaData *meta;meta1317,35886
          const struct GNUNET_FS_Uri *uri;uri1322,36004
          struct GNUNET_FS_SearchResult *result;result1327,36136
          uint32_t applicability_rank;1333,36321
        } result;1334,36360
        struct GNUNET_FS_SearchResumeResultEvent1340,36504
          const struct GNUNET_FS_MetaData *meta;meta1345,36636
          const struct GNUNET_FS_Uri *uri;uri1350,36754
          struct GNUNET_FS_SearchResult *result;result1355,36886
          int32_t availability_rank;1361,37061
          uint32_t availability_certainty;1367,37217
          uint32_t applicability_rank;1374,37417
        } resume_result;1375,37456
        struct GNUNET_FS_SearchUpdateEvent1381,37600
          void *cctx;cctx1387,37774
          const struct GNUNET_FS_MetaData *meta;meta1392,37870
          const struct GNUNET_FS_Uri *uri;uri1397,37988
          int32_t availability_rank;1403,38157
          uint32_t availability_certainty;1409,38313
          uint32_t applicability_rank;1416,38513
          struct GNUNET_TIME_Relative current_probe_time;1421,38638
        } update;1422,38696
        struct GNUNET_FS_SearchSuspendResultEvent1433,39099
          void *cctx;cctx1439,39280
          const struct GNUNET_FS_MetaData *meta;meta1444,39376
          const struct GNUNET_FS_Uri *uri;uri1449,39494
        } result_suspend;1450,39537
        struct GNUNET_FS_SearchStoppedResultEvent1461,39948
          void *cctx;cctx1467,40129
          const struct GNUNET_FS_MetaData *meta;meta1472,40225
          const struct GNUNET_FS_Uri *uri;uri1477,40343
        } result_stopped;1478,40386
        struct GNUNET_GS_SearchResumeEvent1484,40531
          const char *message;message1489,40687
          int is_paused;1494,40793
        } resume;1495,40818
        struct GNUNET_FS_SearchErrorEvent1501,40954
          const char *message;message1506,41062
        } error;1507,41093
        struct GNUNET_GS_SearchResultNamespaceEvent1512,41207
          const char *name;name1517,41355
          const char *root;root1522,41473
          const struct GNUNET_FS_MetaData *meta;meta1527,41571
          struct GNUNET_CRYPTO_EcdsaPublicKey pseudonym;1532,41691
        } ns;1533,41748
      } specifics;1534,41762
    } search;1535,41781
    struct GNUNET_FS_UnindexEvent1540,41871
      struct GNUNET_FS_UnindexContext *uc;uc1545,41980
      void *cctx;cctx1552,42187
      const char *filename;filename1557,42277
      uint64_t size;1562,42366
      struct GNUNET_TIME_Relative eta;1569,42550
      struct GNUNET_TIME_Relative duration;1575,42724
      uint64_t completed;1580,42832
        struct GNUNET_FS_UnindexProgressEvent1591,43068
          const void *data;data1596,43195
          uint64_t offset;1601,43303
          uint64_t data_len;1606,43398
          unsigned int depth;1612,43559
        } progress;1613,43589
        struct GNUNET_FS_UnindexResumeEvent1619,43729
          const char *message;message1624,43886
        } resume;1625,43917
        struct GNUNET_FS_UnindexErrorEvent1631,44054
          const char *message;message1636,44163
        } error;1637,44194
      } specifics;1638,44211
    } unindex;1639,44230
  } value;1640,44245
  enum GNUNET_FS_Status status;1645,44324
  struct GNUNET_FS_Handle *fsh;fsh1650,44420
(*GNUNET_FS_ProgressCallback)GNUNET_FS_ProgressCallback1670,45158
enum GNUNET_FS_Flags1677,45336
  GNUNET_FS_FLAGS_NONE 1682,45398
  GNUNET_FS_FLAGS_PERSISTENCE 1688,45524
  GNUNET_FS_FLAGS_DO_PROBES 1695,45726
enum GNUNET_FS_OPTIONS1702,45835
  GNUNET_FS_OPTIONS_END 1707,45909
  GNUNET_FS_OPTIONS_DOWNLOAD_PARALLELISM 1714,46118
  GNUNET_FS_OPTIONS_REQUEST_PARALLELISM 1722,46398
struct GNUNET_FS_BlockOptions1730,46558
  struct GNUNET_TIME_Absolute expiration_time;1739,46897
  uint32_t anonymity_level;1745,47078
  uint32_t content_priority;1752,47261
  uint32_t replication_level;1765,47858
(*GNUNET_FS_FileInformationProcessor)GNUNET_FS_FileInformationProcessor1824,49722
(*GNUNET_FS_DataReader)GNUNET_FS_DataReader1949,54946
enum GNUNET_FS_PublishOptions2079,60252
  GNUNET_FS_PUBLISH_OPTION_NONE 2084,60343
  GNUNET_FS_PUBLISH_OPTION_SIMULATE_ONLY 2090,60523
(*GNUNET_FS_PublishContinuation)GNUNET_FS_PublishContinuation2137,62186
(*GNUNET_FS_IndexedFileProcessor)GNUNET_FS_IndexedFileProcessor2231,65086
typedef void (*GNUNET_FS_IdentifierProcessor)GNUNET_FS_IdentifierProcessor2297,66848
enum GNUNET_FS_SearchOptions2341,68794
  GNUNET_FS_SEARCH_OPTION_NONE 2346,68884
  GNUNET_FS_SEARCH_OPTION_LOOPBACK_ONLY 2351,69004
enum GNUNET_FS_DownloadOptions2432,71159
  GNUNET_FS_DOWNLOAD_OPTION_NONE 2437,71251
  GNUNET_FS_DOWNLOAD_OPTION_LOOPBACK_ONLY 2442,71380
  GNUNET_FS_DOWNLOAD_OPTION_RECURSIVE 2448,71545
  GNUNET_FS_DOWNLOAD_NO_TEMPORARIES 2454,71678
  GNUNET_FS_DOWNLOAD_IS_PROBE 2463,72036
#define GNUNET_FS_DIRECTORY_MIME 2582,77295
#define GNUNET_FS_DIRECTORY_MAGIC 2583,77360
#define GNUNET_FS_DIRECTORY_EXT 2584,77414
typedef void (*GNUNET_FS_DirectoryEntryProcessor)GNUNET_FS_DirectoryEntryProcessor2634,78954
enum GNUNET_FS_DirScannerProgressUpdateReason2723,82138
  GNUNET_FS_DIRSCANNER_FILE_START 2728,82249
  GNUNET_FS_DIRSCANNER_FILE_IGNORED,2734,82383
  GNUNET_FS_DIRSCANNER_ALL_COUNTED,2739,82479
  GNUNET_FS_DIRSCANNER_EXTRACT_FINISHED,2744,82582
  GNUNET_FS_DIRSCANNER_FINISHED,2750,82723
  GNUNET_FS_DIRSCANNER_INTERNAL_ERROR2755,82839
typedef void (*GNUNET_FS_DirScannerProgressCallback)GNUNET_FS_DirScannerProgressCallback2770,83290
struct GNUNET_FS_ShareTreeItem2781,83785
  struct GNUNET_FS_ShareTreeItem *prev;prev2786,83864
  struct GNUNET_FS_ShareTreeItem *next;next2791,83951
  struct GNUNET_FS_ShareTreeItem *parent;parent2797,84071
  struct GNUNET_FS_ShareTreeItem *children_head;children_head2803,84202
  struct GNUNET_FS_ShareTreeItem *children_tail;children_tail2809,84340
  struct GNUNET_FS_MetaData *meta;meta2814,84443
  struct GNUNET_FS_Uri *ksk_uri;ksk_uri2819,84557
  char *filename;filename2824,84635
  char *short_filename;short_filename2829,84704
  int is_directory;2834,84781
enum GNUNET_FS_MetaDataSerializationOptions3113,92390
  GNUNET_FS_META_DATA_SERIALIZE_FULL 3119,92503
  GNUNET_FS_META_DATA_SERIALIZE_PART 3126,92682
  GNUNET_FS_META_DATA_SERIALIZE_NO_COMPRESS 3132,92816

src/include/gnunet_namecache_plugin.h,285
#define GNUNET_NAMECACHE_PLUGIN_H38,1155
typedef void (*GNUNET_NAMECACHE_BlockCallback)GNUNET_NAMECACHE_BlockCallback60,1521
struct GNUNET_NAMECACHE_PluginFunctions68,1802
  void *cls;cls73,1902
  int (*cache_block)cache_block83,2178
  int (*lookup_block)lookup_block97,2739

src/include/gnu_name_system_record_types.h,1406
#define GNU_NAME_SYSTEM_RECORD_TYPES_H21,840
#define GNUNET_GNSRECORD_TYPE_PKEY 43,1265
#define GNUNET_GNSRECORD_TYPE_NICK 49,1337
#define GNUNET_GNSRECORD_TYPE_LEHO 55,1411
#define GNUNET_GNSRECORD_TYPE_VPN 61,1480
#define GNUNET_GNSRECORD_TYPE_GNS2DNS 67,1551
#define GNUNET_GNSRECORD_TYPE_BOX 73,1619
#define GNUNET_GNSRECORD_TYPE_PLACE 79,1699
#define GNUNET_GNSRECORD_TYPE_PHONE 85,1780
#define GNUNET_GNSRECORD_TYPE_RECLAIM_ATTRIBUTE 91,1854
#define GNUNET_GNSRECORD_TYPE_RECLAIM_TICKET 97,1944
#define GNUNET_GNSRECORD_TYPE_SBOX 103,2020
#define GNUNET_GNSRECORD_TYPE_DELEGATE 109,2091
#define GNUNET_GNSRECORD_TYPE_ATTRIBUTE 115,2173
#define GNUNET_GNSRECORD_TYPE_RECLAIM_ATTRIBUTE_REF 121,2252
#define GNUNET_GNSRECORD_TYPE_REDIRECT 127,2342
#define GNUNET_GNSRECORD_TYPE_RECLAIM_OIDC_CLIENT 133,2431
#define GNUNET_GNSRECORD_TYPE_RECLAIM_OIDC_REDIRECT 139,2542
#define GNUNET_GNSRECORD_TYPE_RECLAIM_CREDENTIAL 145,2666
#define GNUNET_GNSRECORD_TYPE_RECLAIM_PRESENTATION 151,2782
#define GNUNET_GNSRECORD_TYPE_EDKEY 157,2880
#define GNUNET_GNSRECORD_TYPE_ERIS_READ_CAPABILITY 163,3003
#define GNUNET_GNSRECORD_TYPE_MESSENGER_ROOM_ENTRY 169,3123
#define GNUNET_GNSRECORD_TYPE_TOMBSTONE 175,3259
#define GNUNET_GNSRECORD_TYPE_MESSENGER_ROOM_DETAILS 181,3370
#define GNUNET_GNSRECORD_TYPE_DID_DOCUMENT 187,3477
#define GNUNET_GNSRECORD_TYPE_GNS_REGISTRAR_METADATA 193,3586

src/include/gnunet_nat_auto_service.h,124
#define GNUNET_NAT_AUTO_SERVICE_H35,1040
(*GNUNET_NAT_AUTO_AutoResultCallback)GNUNET_NAT_AUTO_AutoResultCallback102,2835

src/include/gnunet_getopt_lib.h,1009
#define GNUNET_GETOPT_LIB_H41,1226
struct GNUNET_GETOPT_CommandLineProcessorContext56,1452
  const char *binaryName;binaryName61,1544
  const char *binaryOptions;binaryOptions66,1628
  const struct GNUNET_GETOPT_CommandLineOption *allOptions;allOptions71,1712
  char *const *argv;argv76,1812
  unsigned int argc;81,1875
  unsigned int currentArgument;86,1932
typedef int (*GNUNET_GETOPT_CommandLineOptionProcessor)GNUNET_GETOPT_CommandLineOptionProcessor99,2314
struct GNUNET_GETOPT_CommandLineOption109,2544
  const char shortName;114,2628
  const char *name;name119,2712
  const char *argumentHelp;argumentHelp124,2797
  const char *description;description129,2882
  int require_argument;135,3015
  int option_mandatory;140,3099
  int option_exclusive;145,3166
  GNUNET_GETOPT_CommandLineOptionProcessor processor;150,3232
  void (*cleaner)cleaner156,3398
  void *scls;scls161,3490
#define GNUNET_GETOPT_option_base32_auto(273,7107
#define GNUNET_GETOPT_OPTION_END 474,14023

src/include/gnunet_uri_lib.h,379
#define GNUNET_URI_LIB_H23,1154
struct GNUNET_Uri34,1521
  char *scheme;scheme36,1541
  char *username;username37,1592
  char *password;password38,1640
  char *host;host39,1688
  int port;40,1731
  char *path;path41,1766
  char *query;query42,1827
  char *fragment;fragment43,1869
struct GNUNET_UriParam48,1980
  char *key;key50,2005
  char *val;val51,2018

src/include/gnunet_gnsrecord_lib.h,2742
#define GNUNET_GNSRECORD_LIB_H38,1110
#define GNUNET_GNS_EMPTY_LABEL_AT 55,1413
#define GNUNET_GNSRECORD_MAX_BLOCK_SIZE 60,1522
#define GNUNET_GNSRECORD_TYPE_ANY 66,1625
#define GNUNET_GNSRECORD_RF_RCMP_FLAGS 84,2264
enum GNUNET_GNSRECORD_Flags99,2916
  GNUNET_GNSRECORD_RF_NONE 104,2999
  GNUNET_GNSRECORD_RF_CRITICAL 110,3171
  GNUNET_GNSRECORD_RF_SHADOW 116,3355
  GNUNET_GNSRECORD_RF_SUPPLEMENTAL 122,3452
  GNUNET_GNSRECORD_RF_MAINTENANCE 127,3560
  GNUNET_GNSRECORD_RF_RELATIVE_EXPIRATION 132,3738
  GNUNET_GNSRECORD_RF_PRIVATE 138,3891
enum GNUNET_GNSRECORD_Filter146,4007
  GNUNET_GNSRECORD_FILTER_NONE 153,4172
  GNUNET_GNSRECORD_FILTER_INCLUDE_MAINTENANCE 158,4271
  GNUNET_GNSRECORD_FILTER_OMIT_PRIVATE 163,4363
struct GNUNET_GNSRECORD_Data176,4552
  const void *data;data183,4758
  uint64_t expiration_time;190,4953
  size_t data_size;195,5027
  uint32_t record_type;200,5093
  enum GNUNET_GNSRECORD_Flags flags;205,5157
struct GNUNET_GNSRECORD_PlaceData214,5270
  struct GNUNET_CRYPTO_EddsaPublicKey place_pub_key;219,5348
  struct GNUNET_PeerIdentity origin;224,5448
  uint32_t relay_count GNUNET_PACKED;229,5533
struct GNUNET_GNSRECORD_EcdsaBlock237,5732
  struct GNUNET_CRYPTO_EcdsaPublicKey derived_key;242,5843
  struct GNUNET_CRYPTO_EcdsaSignature signature;247,5936
  struct GNUNET_TIME_AbsoluteNBO expiration_time;252,6033
struct GNUNET_GNSRECORD_EddsaBlock261,6213
  struct GNUNET_CRYPTO_EddsaPublicKey derived_key;266,6324
  struct GNUNET_CRYPTO_EddsaSignature signature;271,6417
  struct GNUNET_TIME_AbsoluteNBO expiration_time;276,6514
struct GNUNET_GNSRECORD_Block283,6606
  uint32_t size;288,6674
  uint32_t type;293,6752
    struct GNUNET_GNSRECORD_EcdsaBlock ecdsa_block;297,6782
    struct GNUNET_GNSRECORD_EddsaBlock eddsa_block;298,6834
struct GNUNET_GNSRECORD_BoxRecord313,7444
  uint16_t protocol GNUNET_PACKED;319,7618
  uint16_t service GNUNET_PACKED;324,7726
  uint32_t record_type GNUNET_PACKED;329,7823
struct GNUNET_GNSRECORD_SBoxRecord347,8577
  uint32_t record_type GNUNET_PACKED;352,8676
struct GNUNET_GNSRECORD_ReverseRecord366,9083
  struct GNUNET_CRYPTO_PublicKey pkey;371,9207
  struct GNUNET_TIME_Absolute expiration;376,9302
typedef void (*GNUNET_GNSRECORD_RecordCallback)GNUNET_GNSRECORD_RecordCallback389,9613
#define GNUNET_MAX_POW_SIZE 864,25136
#define POW_COUNT 872,25430
struct GNUNET_GNSRECORD_PowP880,25547
  struct GNUNET_TIME_AbsoluteNBO timestamp;885,25627
  struct GNUNET_TIME_RelativeNBO ttl;890,25739
  uint64_t pow[POW_COUNT] GNUNET_PACKED;895,25804
struct GNUNET_GNSRECORD_SignaturePurposePS904,25969
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;909,26053
  struct GNUNET_TIME_AbsoluteNBO timestamp;914,26155

src/include/gnunet_datacache_plugin.h,575
#define PLUGIN_DATACACHE_H35,1108
(*GNUNET_DATACACHE_DeleteNotifyCallback)GNUNET_DATACACHE_DeleteNotifyCallback58,1527
struct GNUNET_DATACACHE_PluginEnvironment68,1875
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg73,1958
  const char *section;section78,2055
  void *cls;cls83,2126
  GNUNET_DATACACHE_DeleteNotifyCallback delete_notify;89,2252
  unsigned long long quota;94,2363
struct GNUNET_DATACACHE_PluginFunctions101,2475
  void *cls;cls106,2575
  (*put)put117,2873
  (*get)get134,3359
  (*del)del149,3793
  (*get_closest)get_closest168,4572

src/include/gnunet_util_lib.h,266
#define GNUNET_UTIL_LIB_H31,1031
#define __GNUNET_UTIL_LIB_H_INSIDE__33,1058
#define GNUNET_MAX_MESSAGE_SIZE 52,1441
#define GNUNET_MIN_MESSAGE_SIZE 57,1519
#define GNUNET_AGPL_URL 65,1852
#define GNUNET_S(103,2920
#undef __GNUNET_UTIL_LIB_H_INSIDE__113,3054

src/include/gnunet_rest_lib.h,747
#define GNUNET_REST_LIB_H35,1078
#define GNUNET_REST_HANDLER_END 41,1160
struct GNUNET_REST_RequestHandle43,1214
  struct GNUNET_CONTAINER_MultiHashMap *url_param_map;url_param_map48,1288
  struct GNUNET_CONTAINER_MultiHashMap *header_param_map;header_param_map53,1376
  const char *method;method58,1500
  const char *url;url63,1558
  const char *data;data68,1609
  size_t data_size;73,1666
struct GNUNET_REST_RequestHandlerError76,1690
  int error_code;78,1731
  char*error_text;error_text79,1749
struct GNUNET_REST_RequestHandler82,1772
  const char *method;method87,1847
  const char *namespace;namespace92,1907
  void (*proc)proc97,1967
typedef void (*GNUNET_REST_ResultProcessor)GNUNET_REST_ResultProcessor110,2245

src/include/gnunet_block_plugin.h,1566
#define PLUGIN_BLOCK_H39,1173
(*GNUNET_BLOCK_GroupMarkSeenFunction)GNUNET_BLOCK_GroupMarkSeenFunction55,1517
(*GNUNET_BLOCK_GroupMergeFunction)GNUNET_BLOCK_GroupMergeFunction71,2016
(*GNUNET_BLOCK_GroupSerializeFunction)GNUNET_BLOCK_GroupSerializeFunction85,2516
(*GNUNET_BLOCK_GroupDestroyFunction)GNUNET_BLOCK_GroupDestroyFunction96,2822
struct GNUNET_BLOCK_Group103,3012
  struct GNUENT_BLOCK_Context *ctx;ctx108,3120
  enum GNUNET_BLOCK_Type type;113,3232
  GNUNET_BLOCK_GroupSerializeFunction serialize_cb;119,3348
  GNUNET_BLOCK_GroupMarkSeenFunction mark_seen_cb;125,3509
  GNUNET_BLOCK_GroupMergeFunction merge_cb;131,3651
  GNUNET_BLOCK_GroupDestroyFunction destroy_cb;137,3781
  void *internal_cls;internal_cls142,3886
(*GNUNET_BLOCK_GroupCreateFunction)GNUNET_BLOCK_GroupCreateFunction159,4534
(*GNUNET_BLOCK_QueryEvaluationFunction)GNUNET_BLOCK_QueryEvaluationFunction177,5173
(*GNUNET_BLOCK_BlockEvaluationFunction)GNUNET_BLOCK_BlockEvaluationFunction194,5847
(*GNUNET_BLOCK_ReplyEvaluationFunction)GNUNET_BLOCK_ReplyEvaluationFunction217,6793
(*GNUNET_BLOCK_GetKeyFunction)GNUNET_BLOCK_GetKeyFunction242,7877
struct GNUNET_BLOCK_PluginFunctions253,8267
  void *cls;cls258,8356
  const enum GNUNET_BLOCK_Type *types;types263,8447
  GNUNET_BLOCK_GetKeyFunction get_key;268,8552
  GNUNET_BLOCK_GroupCreateFunction create_group;274,8713
  GNUNET_BLOCK_QueryEvaluationFunction check_query;279,8815
  GNUNET_BLOCK_BlockEvaluationFunction check_block;284,8920
  GNUNET_BLOCK_ReplyEvaluationFunction check_reply;289,9032

src/include/gnunet_signatures.h,2024
#define GNUNET_SIGNATURES_H21,829
#define GNUNET_SIGNATURE_PURPOSE_TEST 52,1509
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_PONG_OWN 58,1648
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DISCONNECT 64,1797
#define GNUNET_SIGNATURE_PURPOSE_GNS_REVOCATION 70,1896
#define GNUNET_SIGNATURE_PURPOSE_NAMESPACE_ADVERTISEMENT 76,2047
#define GNUNET_SIGNATURE_PURPOSE_PEER_PLACEMENT 82,2237
#define GNUNET_SIGNATURE_PURPOSE_DHT_HOP 88,2387
#define GNUNET_SIGNATURE_PURPOSE_HELLO 94,2505
#define GNUNET_SIGNATURE_PURPOSE_DNS_RECORD 100,2618
#define GNUNET_SIGNATURE_PURPOSE_CHAT_MESSAGE 106,2726
#define GNUNET_SIGNATURE_PURPOSE_CHAT_RECEIPT 112,2861
#define GNUNET_SIGNATURE_PURPOSE_NSE_SEND 118,2982
#define GNUNET_SIGNATURE_PURPOSE_GNS_RECORD_SIGN 124,3071
#define GNUNET_SIGNATURE_PURPOSE_SET_ECC_KEY 130,3183
#define GNUNET_SIGNATURE_PURPOSE_FS_UBLOCK 136,3298
#define GNUNET_SIGNATURE_PURPOSE_REGEX_ACCEPT 142,3450
#define GNUNET_SIGNATURE_PURPOSE_CONVERSATION_RING 148,3568
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DKG1 154,3719
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DKG2 160,3872
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DECRYPTION 166,4005
#define GNUNET_SIGNATURE_PURPOSE_RECLAIM_CODE_SIGN 172,4118
#define GNUNET_SIGNATURE_PURPOSE_DELEGATE 178,4229
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_ADDRESS 184,4397
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_EPHEMERAL 190,4596
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_HANDSHAKE 196,4734
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_REKEY 202,4875
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_UDP_HANDSHAKE 208,5016
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_UDP_BROADCAST 214,5149
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_CHALLENGE 220,5402
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DV_HOP 226,5545
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DV_INITIATOR 232,5692
#define GNUNET_SIGNATURE_PURPOSE_CADET_CONNECTION_INITIATOR 238,5833
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_HANDSHAKE_ACK 244,6006

src/include/gnunet_seti_service.h,786
#define GNUNET_SETI_SERVICE_H37,1076
#define GNUNET_SETI_CONTEXT_MESSAGE_MAX_SIZE 56,1397
enum GNUNET_SETI_Status82,1832
  GNUNET_SETI_STATUS_ADD_LOCAL,89,1983
  GNUNET_SETI_STATUS_DEL_LOCAL,95,2176
  GNUNET_SETI_STATUS_FAILURE,101,2308
  GNUNET_SETI_STATUS_DONE106,2409
struct GNUNET_SETI_Element113,2476
  uint16_t size;118,2572
  uint16_t element_type;123,2642
  const void *data;data128,2712
enum GNUNET_SETI_OptionType137,2843
  GNUNET_SETI_OPTION_END 142,2907
  GNUNET_SETI_OPTION_RETURN_INTERSECTION 149,3157
struct GNUNET_SETI_Option156,3246
  enum GNUNET_SETI_OptionType type;161,3311
    uint64_t num;168,3428
  } v;169,3446
(*GNUNET_SETI_ResultIterator)GNUNET_SETI_ResultIterator183,3765
(*GNUNET_SETI_ListenCallback)GNUNET_SETI_ListenCallback205,4733

src/include/gnunet_common.h,5442
#define GNUNET_COMMON_H41,1342
#define bswap_32(58,1641
#define bswap_64(59,1673
#define bswap_32(63,1734
#define bswap_64(64,1765
#define bswap_32(70,1904
#define bswap_64(71,1936
#define GNUNET_UTIL_VERSION 96,2543
enum GNUNET_GenericReturnValue105,2840
  GNUNET_SYSERR 107,2873
  GNUNET_NO 108,2895
  GNUNET_OK 109,2912
  GNUNET_YES 111,2976
#define GNUNET_MIN(115,2999
#define GNUNET_MAX(117,3051
#define __BYTE_ORDER 122,3219
#define __BYTE_ORDER 125,3276
#define __BIG_ENDIAN 131,3369
#define __BIG_ENDIAN 134,3426
#define __LITTLE_ENDIAN 140,3525
#define __LITTLE_ENDIAN 143,3591
#define GNUNET_EXTRA_LOGGING 154,3832
#define BYTE_SWAP_16(162,3965
#define BYTE_SWAP_32(163,4002
#define BYTE_SWAP_64(164,4039
#define BYTE_SWAP_16(166,4082
#define BYTE_SWAP_32(168,4155
#define BYTE_SWAP_64(172,4355
#define GNUNET_htobe16(185,5099
#define GNUNET_htole16(186,5142
#define GNUNET_be16toh(187,5172
#define GNUNET_le16toh(188,5215
#define GNUNET_htobe32(190,5246
#define GNUNET_htole32(191,5289
#define GNUNET_be32toh(192,5319
#define GNUNET_le32toh(193,5362
#define GNUNET_htobe64(195,5393
#define GNUNET_htole64(196,5436
#define GNUNET_be64toh(197,5466
#define GNUNET_le64toh(198,5509
#define GNUNET_htobe16(201,5579
#define GNUNET_htole16(202,5609
#define GNUNET_be16toh(203,5652
#define GNUNET_le16toh(204,5682
#define GNUNET_htobe32(206,5726
#define GNUNET_htole32(207,5756
#define GNUNET_be32toh(208,5799
#define GNUNET_le32toh(209,5829
#define GNUNET_htobe64(211,5873
#define GNUNET_htole64(212,5903
#define GNUNET_be64toh(213,5946
#define GNUNET_le64toh(214,5976
#define GNUNET_NZL(230,6570
#define GNUNET_PACKED 236,6654
#define GNUNET_GCC_STRUCT_LAYOUT241,6783
#define GNUNET_ALIGN 249,6986
#define GNUNET_ALIGN 251,7063
#define GNUNET_UNUSED 257,7170
#define GNUNET_NORETURN 262,7277
#define GNUNET_NETWORK_STRUCT_BEGIN267,7414
#define GNUNET_NETWORK_STRUCT_END272,7537
struct GNUNET_HashCode281,7772
struct GNUNET_ShortHashCode291,7996
struct GNUNET_Uuid305,8353
  uint32_t value[value310,8408
struct GNUNET_MessageHeader317,8476
  uint16_t size GNUNET_PACKED;323,8622
  uint16_t type GNUNET_PACKED;328,8745
struct GNUNET_OperationResultMessage335,8844
  struct GNUNET_MessageHeader header;337,8883
  uint32_t reserved GNUNET_PACKED;339,8922
  uint64_t op_id GNUNET_PACKED;344,8989
  uint64_t result_code GNUNET_PACKED;349,9070
struct GNUNET_AsyncScopeId358,9201
struct GNUNET_AsyncScopeSave369,9375
  struct GNUNET_AsyncScopeId scope_id;374,9472
  int have_scope;379,9591
(*GNUNET_FileNameCallback)GNUNET_FileNameCallback393,9919
(*GNUNET_ContinuationCallback)GNUNET_ContinuationCallback403,10093
(*GNUNET_ResultCallback)GNUNET_ResultCallback419,10427
enum GNUNET_ErrorType431,10728
  GNUNET_ERROR_TYPE_UNSPECIFIED 433,10752
  GNUNET_ERROR_TYPE_NONE 434,10790
  GNUNET_ERROR_TYPE_ERROR 435,10820
  GNUNET_ERROR_TYPE_WARNING 436,10851
  GNUNET_ERROR_TYPE_MESSAGE 440,10994
  GNUNET_ERROR_TYPE_INFO 441,11027
  GNUNET_ERROR_TYPE_DEBUG 442,11057
  GNUNET_ERROR_TYPE_INVALID 443,11089
  GNUNET_ERROR_TYPE_BULK 444,11123
(*GNUNET_Logger)GNUNET_Logger459,11432
GNUNET_log_nocheck 496,12285
#define _GNUNET_BOOLEAN_EXPR(503,12522
#define GN_LIKELY(512,12823
#define GN_UNLIKELY(513,12899
#define GN_LIKELY(515,12983
#define GN_UNLIKELY(516,13014
#define GNUNET_LOG_CALL_STATUS 520,13093
GNUNET_log_from_nocheck 536,13492
#define GNUNET_log_from(543,13741
#define GNUNET_log(569,15710
#define GNUNET_log(595,17684
#define GNUNET_log_from(596,17708
GNUNET_abort_ 637,18770
#define GNUNET_B2S(662,19368
#define GNUNET_assert(931,26077
#define GNUNET_assert(948,27148
#define GNUNET_assert_at(967,28095
#define GNUNET_assert_from(989,29127
#define GNUNET_static_assert(1014,30390
#define GNUNET_static_assert(1024,30744
#define GNUNET_break(1033,30944
#define GNUNET_break_op(1055,31936
#define GNUNET_log_strerror(1075,32993
#define GNUNET_log_from_strerror(1094,33849
#define GNUNET_log_strerror_file(1114,34829
#define GNUNET_log_from_strerror_file(1134,35884
#define GNUNET_htonll(1152,37003
#define GNUNET_ntohll(1171,37283
#define GNUNET_MAX_MALLOC_CHECKED 1218,38080
#define GNUNET_new(1228,38392
#define GNUNET_memcmp(1238,38635
#define GNUNET_memcmp_priv(1267,39429
#define GNUNET_is_zero(1295,40235
#define GNUNET_memcpy(1308,40669
#define GNUNET_new_array(1328,41331
#define GNUNET_new_array_2d(1343,41772
#define GNUNET_new_array_3d(1356,42215
#define GNUNET_malloc(1369,42658
#define GNUNET_memdup(1379,42984
#define GNUNET_malloc_large(1389,43317
#define GNUNET_realloc(1402,43717
#define GNUNET_free_nz(1415,44251
#define GNUNET_free(1429,44863
#define GNUNET_strdup(1443,45223
#define GNUNET_strndup(1455,45556
#define GNUNET_array_grow(1493,46859
#define GNUNET_array_append(1514,47747
#define GNUNET_array_concatenate(1546,49131
GNUNET_asprintf 1586,50524
#define __func__ 1821,57831
#define __func__ 1823,57867
enum GNUNET_SCHEDULER_Priority1835,58239
  GNUNET_SCHEDULER_PRIORITY_KEEP 1840,58336
  GNUNET_SCHEDULER_PRIORITY_IDLE 1845,58417
  GNUNET_SCHEDULER_PRIORITY_BACKGROUND 1851,58540
  GNUNET_SCHEDULER_PRIORITY_DEFAULT 1859,58774
  GNUNET_SCHEDULER_PRIORITY_HIGH 1865,58904
  GNUNET_SCHEDULER_PRIORITY_UI 1871,59026
  GNUNET_SCHEDULER_PRIORITY_URGENT 1879,59230
  GNUNET_SCHEDULER_PRIORITY_SHUTDOWN 1889,59670
  GNUNET_SCHEDULER_PRIORITY_COUNT 1895,59828

src/include/gnunet_program_lib.h,162
#define GNUNET_PROGRAM_LIB_H41,1211
(*GNUNET_PROGRAM_Main)GNUNET_PROGRAM_Main65,1704
#define GNUNET_DAEMON_MAIN(131,4241
#define GNUNET_DAEMON_MAIN(154,5120

src/include/gnunet_rps_service.h,240
#define GNUNET_RPS_SERVICE_H35,989
#define GNUNET_RPS_VERSION 48,1174
typedef void (*GNUNET_RPS_NotifyReadyCB)GNUNET_RPS_NotifyReadyCB67,1599
typedef void (*GNUNET_RPS_NotifyReadySingleInfoCB)GNUNET_RPS_NotifyReadySingleInfoCB82,2164

src/include/platform.h,1297
#define PLATFORM_H32,1114
#define HAVE_USED_CONFIG_H35,1161
#define BREAKPOINT41,1256
#define GNUNET_SIGCHLD 42,1275
#undef HAVE_STATIC_ASSERT50,1401
#define ALLOW_EXTRA_CHECKS 56,1496
#define _XOPEN_SOURCE 62,1602
#define _REENTRANT66,1655
#define VERBOSE_STATS 71,1711
#define DIR_SEPARATOR 165,3497
#define DIR_SEPARATOR_STR 166,3523
#define PATH_SEPARATOR 167,3553
#define PATH_SEPARATOR_STR 168,3580
#define NEWLINE 169,3611
#define _(178,3733
#define LIBEXTRACTOR_GETTEXT_DOMAIN 179,3778
#define __BYTE_ORDER 185,3995
#define __BIG_ENDIAN 186,4027
#define __BYTE_ORDER 190,4081
#define __BIG_ENDIAN 191,4113
#undef HAVE_STAT64193,4195
#undef HAVE_MREMAP194,4214
#define SIZE_MAX 208,4365
#define O_LARGEFILE 212,4426
#define AI_NUMERICSERV 219,4555
#define MAKE_UNALIGNED(224,4612
#define MAKE_UNALIGNED(228,4825
#define GNUNET_TERM_SIG 234,4899
#define PATH_MAX 241,4990
#define GNUNET_THREAD_LOCAL 245,5046
#define GNUNET_THREAD_LOCAL247,5089
#define EXIT_INVALIDARGUMENT 253,5189
#define EXIT_NOTIMPLEMENTED 257,5256
#define EXIT_NOPERMISSION 261,5320
#define EXIT_NOTINSTALLED 265,5382
#define EXIT_NOTCONFIGURED 269,5445
#define EXIT_NOTRUNNING 273,5506
#define EXIT_NO_RESTART 277,5564
# define __nonstring 284,5687
# define __nonstring286,5764

src/include/gnunet_curl_lib.h,508
#define GNUNET_CURL_LIB_H34,1152
(*GNUNET_CURL_RescheduleCallback)GNUNET_CURL_RescheduleCallback49,1484
struct GNUNET_CURL_DownloadBuffer55,1646
  void *buf;buf60,1715
  size_t buf_size;65,1778
  int eno;71,1905
(*GNUNET_CURL_RawParser)GNUNET_CURL_RawParser84,2120
(*GNUNET_CURL_ResponseCleaner)GNUNET_CURL_ResponseCleaner94,2357
(*GNUNET_CURL_JobCompletionCallback)GNUNET_CURL_JobCompletionCallback201,5844
(*GNUNET_CURL_RawJobCompletionCallback)GNUNET_CURL_RawJobCompletionCallback215,6267

src/include/gnunet_mst_lib.h,108
#define GNUNET_MST_LIB_H47,1309
(*GNUNET_MessageTokenizerCallback)GNUNET_MessageTokenizerCallback78,1983

src/include/gnunet_configuration_lib.h,682
#define GNUNET_CONFIGURATION_LIB_H36,1103
(*GNUNET_CONFIGURATION_Callback)GNUNET_CONFIGURATION_Callback257,7090
(*GNUNET_CONFIGURATION_Iterator)GNUNET_CONFIGURATION_Iterator299,8186
(*GNUNET_CONFIGURATION_SectionIterator)GNUNET_CONFIGURATION_SectionIterator312,8517
struct GNUNET_CONFIGURATION_ConfigSettings663,18790
  unsigned int api_version;670,18982
  char *section;section675,19048
  char *option;option680,19102
  char *value;value685,19149
  int is_filename;690,19210
  int list_sections;695,19277
  int rewrite;700,19390
  int diagnostics;705,19457
  int full;710,19567
  int global_ret;716,19663
#define GNUNET_CONFIGURATION_CONFIG_OPTIONS(728,19897

src/include/gnunet_nse_service.h,170
#define GNUNET_NSE_SERVICE_H_22,839
#define GNUNET_NSE_VERSION 59,1506
(*GNUNET_NSE_Callback)GNUNET_NSE_Callback75,1970
#define GNUNET_NSE_log_estimate_to_n(88,2417

src/include/gnunet_namestore_plugin.h,531
#define GNUNET_NAMESTORE_PLUGIN_H35,1089
(*GNUNET_NAMESTORE_RecordIterator)GNUNET_NAMESTORE_RecordIterator63,1847
struct GNUNET_NAMESTORE_PluginFunctions76,2404
  void *cls;cls81,2504
  (*store_records)store_records95,3041
  (*lookup_records)lookup_records112,3717
  (*iterate_records)iterate_records134,4724
  (*zone_to_name)zone_to_name154,5554
  (*edit_records)edit_records176,6454
  (*clear_editor_hint)clear_editor_hint199,7446
  (*create_tables)create_tables212,7885
  (*drop_tables)drop_tables223,8182

src/include/gnunet_buffer_lib.h,204
#define GNUNET_BUFFER_LIB_H36,1107
struct GNUNET_Buffer47,1391
  size_t capacity;52,1455
  size_t position;57,1516
  char *mem;mem62,1569
  int warn_grow;67,1676
GNUNET_buffer_write_fstr 158,3871

src/include/gnunet_dhtu_plugin.h,587
#define PLUGIN_DHTU_H28,901
struct GNUNET_DHTU_PluginEnvironment67,1665
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg72,1743
  void *cls;cls77,1840
  (*address_add_cb)address_add_cb89,2327
  (*address_del_cb)address_del_cb100,2654
  (*network_size_cb)network_size_cb111,3057
  (*connect_cb)connect_cb128,3664
  (*disconnect_cb)disconnect_cb141,4051
  (*receive_cb)receive_cb154,4506
struct GNUNET_DHTU_PluginFunctions166,4751
  void *cls;cls171,4846
  (*try_connect)try_connect181,5125
  (*hold)hold195,5599
  (*drop)drop205,5824
  (*send)send223,6573

src/service/dht/gnunet-service-dht_neighbours.c,4023
#define LOG_TRAFFIC(37,1270
#define SANITY_CHECKS 51,1796
#define MAX_BUCKETS 56,1873
#define DEFAULT_BUCKET_SIZE 61,1995
#define FIND_PEER_REPLICATION_LEVEL 66,2086
#define MAXIMUM_PENDING_PER_PEER 71,2189
#define DHT_MINIMUM_FIND_PEER_INTERVAL 78,2421
#define DHT_AVG_FIND_PEER_INTERVAL 91,3031
#define GET_TIMEOUT 97,3230
struct PeerPutMessage105,3368
  struct GNUNET_MessageHeader header;110,3448
  uint32_t type GNUNET_PACKED;115,3536
  uint16_t options GNUNET_PACKED;120,3604
  uint16_t hop_count GNUNET_PACKED;125,3666
  uint16_t desired_replication_level GNUNET_PACKED;130,3755
  uint16_t put_path_length GNUNET_PACKED;135,3875
  struct GNUNET_TIME_AbsoluteNBO expiration_time;140,3965
  char bloomfilter[bloomfilter145,4091
  struct GNUNET_HashCode key;150,4175
struct PeerResultMessage165,4368
  struct GNUNET_MessageHeader header;170,4454
  uint32_t type GNUNET_PACKED;175,4524
  uint16_t reserved GNUNET_PACKED;180,4583
  uint16_t options GNUNET_PACKED;185,4709
  uint16_t put_path_length GNUNET_PACKED;190,4811
  uint16_t get_path_length GNUNET_PACKED;195,4921
  struct GNUNET_TIME_AbsoluteNBO expiration_time;200,5011
  struct GNUNET_HashCode key;205,5121
struct PeerGetMessage222,5342
  struct GNUNET_MessageHeader header;227,5422
  uint32_t type GNUNET_PACKED;232,5500
  uint16_t options GNUNET_PACKED;237,5568
  uint16_t hop_count GNUNET_PACKED;242,5630
  uint16_t desired_replication_level GNUNET_PACKED;247,5728
  uint16_t result_filter_size GNUNET_PACKED;252,5825
  char bloomfilter[bloomfilter257,5946
  struct GNUNET_HashCode key;262,6028
struct Target281,6257
  struct Target *next;next286,6305
  struct Target *prev;prev291,6361
  struct GNUNET_DHTU_Target *utarget;utarget296,6444
  struct GDS_Underlay *u;u301,6532
  struct PeerInfo *pi;pi306,6603
  struct GNUNET_DHTU_PreferenceHandle *ph;ph311,6695
  unsigned int load;316,6826
  bool dropped;322,6973
struct PeerInfo330,7036
  struct GNUNET_PeerIdentity id;335,7105
  struct GNUNET_HashCode phash;340,7171
  struct GNUNET_TIME_Absolute hello_expiration;345,7264
  struct PeerInfo *next;next350,7352
  struct PeerInfo *prev;prev355,7418
  struct Target *t_head;t_head360,7499
  struct Target *t_tail;t_tail365,7580
  void *hello;hello370,7656
  size_t hello_size;375,7718
  int peer_bucket;380,7787
struct PeerBucket387,7854
  struct PeerInfo *head;head392,7903
  struct PeerInfo *tail;tail397,7958
  unsigned int peers_size;402,8032
static int cache_results;409,8143
static unsigned int closest_bucket;414,8257
static unsigned int newly_found_peers;420,8383
static int disable_try_connect;425,8502
static struct PeerBucket k_buckets[k_buckets430,8621
static struct GNUNET_CONTAINER_MultiPeerMap *all_connected_peers;all_connected_peers436,8810
static unsigned int bucket_size 441,8918
static struct GNUNET_SCHEDULER_Task *find_peer_task;find_peer_task446,9021
send_done_cb 457,9283
do_send 488,9929
sign_path 540,11361
find_bucket 573,12307
add_known_to_bloom 602,13094
send_find_peer_message 627,13805
update_hold 715,17008
GDS_u_connect 740,17615
GDS_u_disconnect 818,20232
get_forward_count 894,22469
GDS_am_closest_peer 950,24343
select_peer 1021,27032
get_target_peers 1236,34151
hello_check 1301,35956
GDS_NEIGHBOURS_handle_put 1321,36458
GDS_NEIGHBOURS_handle_get 1552,44359
GDS_NEIGHBOURS_lookup_peer 1664,48592
GDS_NEIGHBOURS_handle_reply 1672,48791
check_dht_p2p_put 1896,55544
handle_dht_p2p_put 1943,56840
handle_find_my_hello 2173,64709
handle_find_local_hello 2246,67332
handle_local_result 2291,68738
check_dht_p2p_get 2311,69322
handle_dht_p2p_get 2334,69812
process_reply_with_path 2495,76042
check_dht_p2p_result 2549,77900
handle_dht_p2p_result 2587,79089
check_dht_p2p_hello 2772,85409
handle_dht_p2p_hello 2799,86085
GDS_u_receive 2817,86648
GDS_try_connect 2886,88657
GDS_NEIGHBOURS_broadcast 2942,90160
GDS_NEIGHBOURS_init 2964,90673
GDS_NEIGHBOURS_done 2990,91584
GDS_NEIGHBOURS_get_id 3003,91922

src/service/dht/gnunet-service-dht_routing.c,934
#define DHT_MAX_RECENT 37,1219
struct RecentRequest44,1351
  struct GNUNET_PeerIdentity peer;49,1432
  struct GNUNET_HashCode key;54,1506
  struct GNUNET_CONTAINER_HeapNode *heap_node;heap_node59,1593
  struct GNUNET_BLOCK_Group *bg;bg64,1693
  const void *xquery;xquery70,1828
  size_t xquery_size;75,1895
  enum GNUNET_BLOCK_Type type;80,1964
  enum GNUNET_DHT_RouteOption options;85,2030
static struct GNUNET_CONTAINER_Heap *recent_heap;recent_heap92,2119
static struct GNUNET_CONTAINER_MultiHashMap *recent_map;recent_map97,2212
struct ProcessContext103,2318
  const struct GNUNET_DATACACHE_Block *bd;bd108,2371
  const struct GNUNET_DHT_PathElement *get_path;get_path113,2451
  unsigned int get_path_length;118,2552
process 132,2922
GDS_ROUTING_process 255,7172
expire_oldest_entry 279,7937
try_combine_recent 310,9123
GDS_ROUTING_add 346,10168
GDS_ROUTING_init 402,12005
GDS_ROUTING_done 414,12297

src/service/dht/plugin_dhtu_ip.c,2029
#define SCAN_FREQ 34,1073
#define MAX_DESTS 39,1191
struct GNUNET_DHTU_Source46,1334
  struct GNUNET_DHTU_Source *next;next52,1395
  struct GNUNET_DHTU_Source *prev;prev57,1463
  void *app_ctx;app_ctx62,1553
  char *address;address67,1636
  struct sockaddr_storage addr;72,1690
  socklen_t addrlen;77,1768
  unsigned int scan_generation;82,1850
struct GNUNET_DHTU_Target91,2000
  struct GNUNET_DHTU_Target *next;next97,2061
  struct GNUNET_DHTU_Target *prev;prev102,2129
  void *app_ctx;app_ctx107,2219
  struct GNUNET_DHTU_PreferenceHandle *ph_head;ph_head112,2301
  struct GNUNET_DHTU_PreferenceHandle *ph_tail;ph_tail117,2414
  struct GNUNET_PeerIdentity pid;122,2497
  struct sockaddr_storage addr;127,2568
  socklen_t addrlen;132,2646
  unsigned int ph_count;137,2735
struct GNUNET_DHTU_PreferenceHandle145,2867
  struct GNUNET_DHTU_PreferenceHandle *next;next150,2937
  struct GNUNET_DHTU_PreferenceHandle *prev;prev155,3015
  struct GNUNET_DHTU_Target *target;target160,3117
struct Plugin167,3204
  struct GNUNET_DHTU_PluginEnvironment *env;env172,3261
  struct GNUNET_DHTU_Source *src_head;src_head177,3366
  struct GNUNET_DHTU_Source *src_tail;src_tail182,3465
  struct GNUNET_DHTU_Target *dst_head;dst_head188,3615
  struct GNUNET_DHTU_Target *dst_tail;dst_tail193,3710
  struct GNUNET_CONTAINER_MultiHashMap *dsts;dsts198,3808
  struct GNUNET_SCHEDULER_Task *scan_task;scan_task203,3912
  struct GNUNET_SCHEDULER_Task *read_task;read_task208,4011
  char *port;port213,4089
  struct GNUNET_NETWORK_Handle *sock;sock218,4136
  struct GNUNET_PeerIdentity my_id;223,4205
  unsigned int scan_generation;228,4294
  uint16_t port16;233,4368
create_target 247,4665
find_target 312,6669
ip_try_connect 361,8093
ip_hold 425,9561
ip_drop 447,10070
ip_send 475,11022
create_source 509,11980
addrcmp_np 579,14097
addrcmp 625,15304
process_ifcs 677,16920
scan 742,18485
find_source 780,19595
read_cb 807,20214
DHTU_ip_init 951,24111
DHTU_ip_done 1129,28813

src/service/dht/testing_dhtu_cmd_send.c,173
struct SendState34,1065
  struct GNUNET_TESTING_AsyncContext ac;40,1140
send_cleanup 51,1248
send_traits 70,1636
send_run 86,1887
GNUNET_TESTING_DHTU_cmd_send 96,2065

src/service/dht/test_dhtu_ip.c,68
#define TIMEOUT 30,1023
#define CONFIG_FILE 32,1102
main 36,1148

src/service/dht/plugin_dhtu_ip.h,32
#define PLUGIN_DHTU_IP_H22,822

src/service/dht/gnunet-service-dht.h,63
#define GNUNET_SERVICE_DHT_H27,933
#define DEBUG_DHT 34,1089

src/service/dht/gnunet-service-dht_datacache.c,628
#define LOG(33,1200
#define NUM_CLOSEST 39,1366
static struct GNUNET_DATACACHE_Handle *datacache;datacache45,1465
GDS_DATACACHE_handle_put 49,1522
struct GetRequestContext88,2699
  const void *xquery;xquery93,2784
  struct GNUNET_HashCode key;98,2855
  struct GNUNET_BLOCK_Group *bg;bg103,2952
  GDS_DATACACHE_GetCallback gc;108,3032
  void *gc_cls;gc_cls113,3101
  size_t xquery_size;118,3162
  enum GNUNET_BLOCK_ReplyEvaluationResult eval;123,3229
datacache_get_iterator 136,3544
GDS_DATACACHE_handle_get 192,5460
GDS_DATACACHE_get_closest 232,6716
GDS_DATACACHE_init 273,8053
GDS_DATACACHE_done 281,8186

src/service/dht/test_dht_api.c,431
#define TOTAL_TIMEOUT 36,1178
static struct GNUNET_DHT_Handle *dht_handle;dht_handle39,1317
static struct GNUNET_DHT_GetHandle *get_handle;get_handle41,1363
static struct GNUNET_DHT_PutHandle *put_handle;put_handle43,1412
static int ok 45,1461
static struct GNUNET_SCHEDULER_Task *die_task;die_task47,1481
do_shutdown 51,1542
end_badly 74,1928
test_get_iterator 86,2109
test_get 111,2920
run 143,3750
main 182,5035

src/service/dht/gnunet-service-dht.c,1441
#define HELLO_FREQUENCY 44,1432
struct GDS_Underlay50,1526
  struct GDS_Underlay *next;next56,1581
  struct GDS_Underlay *prev;prev61,1643
  struct GNUNET_DHTU_PluginEnvironment env;66,1721
  struct GNUNET_DHTU_PluginFunctions *dhtu;dhtu71,1804
  double network_size_estimate;76,1915
  char *name;name81,2011
struct MyAddress88,2066
  struct MyAddress *next;next93,2117
  struct MyAddress *prev;prev98,2176
  struct GNUNET_DHTU_Source *source;source103,2253
  char *url;url108,2347
  struct GDS_Underlay *u;u113,2404
struct GNUNET_HELLO_Builder *GDS_my_hello;GDS_my_hello120,2456
struct GNUNET_PeerIdentity GDS_my_identity;125,2534
struct GNUNET_HashCode GDS_my_identity_hash;130,2625
struct GNUNET_CRYPTO_EddsaPrivateKey GDS_my_private_key;135,2699
static struct GNUNET_SCHEDULER_Task *hello_task;hello_task140,2797
static struct GDS_Underlay *u_head;u_head145,2889
static struct GDS_Underlay *u_tail;u_tail150,2968
static struct MyAddress *a_head;a_head155,3048
static struct MyAddress *a_tail;a_tail160,3125
static double log_of_network_size_estimate;166,3291
update_network_size_estimate 179,3701
GDS_NSE_get 210,4628
broadcast_hello 225,4825
u_address_add 257,5907
u_address_del 301,7194
GDS_u_try_connect 323,7809
GDS_u_send 336,8103
GDS_u_drop 353,8515
GDS_u_hold 361,8670
shutdown_task 375,8903
load_underlay 435,10146
run 491,11576
GDS_DHT_SERVICE_INIT ("dht", &run)run559,13762

src/service/dht/plugin_dhtu_gnunet.c,1647
struct GNUNET_DHTU_Source40,1307
  void *app_ctx;app_ctx46,1390
struct GNUNET_DHTU_Target55,1525
  void *app_ctx;app_ctx61,1608
  struct Plugin *plugin;plugin66,1676
  struct GNUNET_MQ_Handle *mq;mq71,1758
  struct GNUNET_DHTU_PreferenceHandle *ph_head;ph_head76,1854
  struct GNUNET_DHTU_PreferenceHandle *ph_tail;ph_tail81,1967
  struct GNUNET_TRANSPORT_ApplicationSuggestHandle *ash;ash86,2059
  struct GNUNET_PeerIdentity pid;91,2157
  unsigned int ph_count;96,2259
struct GNUNET_DHTU_PreferenceHandle105,2392
  struct GNUNET_DHTU_PreferenceHandle *next;next110,2462
  struct GNUNET_DHTU_PreferenceHandle *prev;prev115,2540
  struct GNUNET_DHTU_Target *target;target120,2642
struct Plugin127,2729
  struct GNUNET_DHTU_Source src;134,2875
  struct GNUNET_DHTU_PluginEnvironment *env;env139,2950
  struct GNUNET_PEERSTORE_Handle *peerstore;peerstore144,3046
  struct GNUNET_CORE_Handle *core;core149,3137
  struct GNUNET_TRANSPORT_ApplicationHandle *transport;transport154,3219
  struct GNUNET_NSE_Handle *nse;nse159,3320
  struct GNUNET_PEERSTORE_Monitor *peerstore_notify;peerstore_notify165,3492
  struct GNUNET_PeerIdentity my_identity;170,3586
  struct GNUNET_CRYPTO_EddsaPrivateKey *my_priv;my_priv175,3663
gnunet_try_connect 191,4029
gnunet_hold 232,5122
gnunet_drop 262,6035
gnunet_send 301,7468
core_connect_cb 334,8394
core_disconnect_cb 362,9152
add_addr 377,9539
peerinfo_cb 406,10379
error_cb 434,11132
sync_cb 442,11262
core_init_cb 462,11933
check_core_message 490,13054
handle_core_message 507,13390
nse_cb 530,14151
DHTU_gnunet_done 551,14596
DHTU_gnunet_init 584,15599

src/service/dht/gnunet-service-dht_neighbours.h,47
#define GNUNET_SERVICE_DHT_NEIGHBOURS_H28,997

src/service/dht/dht_api.c,3452
#define LOG(36,1146
struct GNUNET_DHT_PutHandle42,1254
  struct GNUNET_DHT_PutHandle *next;next47,1316
  struct GNUNET_DHT_PutHandle *prev;prev52,1386
  GNUNET_SCHEDULER_TaskCallback cont;57,1473
  struct GNUNET_DHT_Handle *dht_handle;dht_handle62,1557
  void *cont_cls;cont_cls67,1636
  struct GNUNET_MQ_Envelope *env;env72,1705
struct GNUNET_DHT_GetHandle78,1778
  GNUNET_DHT_GetIterator iter;83,1858
  void *iter_cls;iter_cls88,1928
  struct GNUNET_DHT_Handle *dht_handle;dht_handle93,1992
  struct GNUNET_HashCode *seen_results;seen_results99,2119
  struct GNUNET_HashCode key;104,2210
  uint64_t unique_id;109,2315
  size_t xquery_size;114,2420
  uint32_t desired_replication_level;119,2487
  enum GNUNET_BLOCK_Type type;124,2581
  enum GNUNET_DHT_RouteOption options;129,2647
  unsigned int seen_results_size;135,2810
  unsigned int seen_results_end;141,2962
struct GNUNET_DHT_MonitorHandle148,3043
  struct GNUNET_DHT_MonitorHandle *next;next153,3099
  struct GNUNET_DHT_MonitorHandle *prev;prev158,3163
  struct GNUNET_DHT_Handle *dht_handle;dht_handle163,3251
  enum GNUNET_BLOCK_Type type;168,3335
  struct GNUNET_HashCode *key;key173,3419
  GNUNET_DHT_MonitorGetCB get_cb;178,3516
  GNUNET_DHT_MonitorGetRespCB get_resp_cb;183,3625
  GNUNET_DHT_MonitorPutCB put_cb;188,3734
  void *cb_cls;cb_cls193,3839
struct GNUNET_DHT_HelloGetHandle200,3936
  struct GNUNET_DHT_HelloGetHandle *next;next206,3994
  struct GNUNET_DHT_HelloGetHandle *prev;prev211,4059
  GNUNET_DHT_HelloGetCallback cb;216,4153
  void *cb_cls;cb_cls221,4224
  struct GNUNET_DHT_Handle *dht_handle;dht_handle226,4289
struct GNUNET_DHT_Handle234,4377
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg239,4443
  struct GNUNET_MQ_Handle *mq;mq244,4537
  struct GNUNET_DHT_MonitorHandle *monitor_head;monitor_head249,4644
  struct GNUNET_DHT_MonitorHandle *monitor_tail;monitor_tail254,4769
  struct GNUNET_DHT_PutHandle *put_head;put_head259,4865
  struct GNUNET_DHT_PutHandle *put_tail;put_tail264,4953
  struct GNUNET_DHT_HelloGetHandle *hgh_head;hgh_head269,5017
  struct GNUNET_DHT_HelloGetHandle *hgh_tail;hgh_tail274,5086
  struct GNUNET_CONTAINER_MultiHashMap *active_requests;active_requests280,5271
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task285,5376
  struct GNUNET_TIME_Relative retry_time;291,5526
  uint64_t uid_gen;296,5612
send_get 316,5981
send_get_known_results 348,7062
add_get_request_to_pending 391,8530
send_monitor_start 414,9106
try_reconnect 442,9786
do_disconnect 476,10752
mq_error_handler 517,12021
handle_monitor_get 533,12317
check_monitor_get_resp 572,13485
handle_monitor_get_resp 608,14448
check_monitor_put 667,16477
handle_monitor_put 701,17322
check_client_result 760,19297
process_client_result 802,20575
handle_client_result 906,23906
check_client_hello 926,24556
handle_client_hello 949,25032
handle_put_cont 971,25494
try_connect 993,25946
GNUNET_DHT_connect 1037,27543
GNUNET_DHT_disconnect 1060,28147
GNUNET_DHT_put 1088,28836
GNUNET_DHT_put_cancel 1146,30701
GNUNET_DHT_get_start 1162,31127
GNUNET_DHT_get_filter_known_results 1211,32702
GNUNET_DHT_get_stop 1235,33550
GNUNET_DHT_monitor_start 1268,34657
GNUNET_DHT_monitor_stop 1300,35617
GNUNET_DHT_pp2s 1328,36399
GNUNET_DHT_verify_path 1351,36966
GNUNET_DHT_hello_get 1442,39561
GNUNET_DHT_hello_get_cancel 1466,40270
GNUNET_DHT_hello_offer 1478,40572

src/service/dht/gnunet-service-dht_datacache.h,110
#define GNUNET_SERVICE_DHT_DATACACHE_H28,1014
(*GDS_DATACACHE_GetCallback)GDS_DATACACHE_GetCallback53,1488

src/service/dht/plugin_dhtu_gnunet.h,36
#define PLUGIN_DHTU_GNUNET_H22,826

src/service/dht/gnunet-service-dht_routing.h,44
#define GNUNET_SERVICE_DHT_ROUTING_H27,983

src/service/dht/gnunet_dht_profiler.c,2511
#define MESSAGE(34,1090
#define DEBUG(37,1206
static unsigned int put_probability 43,1393
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg48,1462
static char *hosts_file;hosts_file53,1581
struct Context63,1732
  struct GNUNET_TESTBED_Peer *peer;peer68,1807
  struct GNUNET_TESTBED_Operation *op;op73,1899
  struct ActiveContext *ac;ac78,2012
struct ActiveContext85,2107
  struct Context *ctx;ctx90,2171
  struct GNUNET_DHT_Handle *dht;dht95,2239
  struct ActiveContext *get_ac;get_ac100,2330
  struct GNUNET_DHT_PutHandle *dht_put;dht_put105,2395
  struct GNUNET_DHT_GetHandle *dht_get;dht_get110,2468
  struct GNUNET_HashCode *hash;hash116,2626
  struct GNUNET_SCHEDULER_Task *delay_task;delay_task121,2687
  unsigned int put_count;126,2786
  uint16_t nrefs;131,2882
static struct Context *a_ctx;a_ctx138,2994
static struct ActiveContext *a_ac;a_ac143,3058
static struct GNUNET_TIME_Relative delay_stats;148,3156
static struct GNUNET_TIME_Relative delay_put;153,3241
static struct GNUNET_TIME_Relative delay_get;158,3324
static struct GNUNET_TIME_Relative timeout;163,3410
static unsigned int num_peers;168,3482
static unsigned int n_active;173,3548
static unsigned int n_dht;178,3642
static unsigned long long n_puts;183,3705
static unsigned int num_puts_per_peer 188,3791
static unsigned long long n_puts_ok;193,3875
static unsigned int n_gets;198,3948
static unsigned int n_gets_ok;203,4017
static unsigned int n_gets_fail;208,4089
static unsigned int replication;213,4153
static struct GNUNET_TESTBED_Operation *bandwidth_stats_op;bandwidth_stats_op218,4232
static struct GNUNET_TESTBED_Peer **testbed_handles;testbed_handles223,4326
static uint64_t outgoing_bandwidth;228,4430
static uint64_t incoming_bandwidth;233,4521
static double average_put_path_length;238,4609
static double average_get_path_length;243,4700
static unsigned int total_put_path_length;248,4791
static unsigned int total_get_path_length;253,4886
static int peers_started 258,5001
  MODE_PUT 265,5106
  MODE_GET 267,5123
} mode;268,5138
static int in_shutdown 274,5180
do_shutdown 290,5398
bandwidth_stats_cont 340,6833
bandwidth_stats_iterator 367,7764
summarize 386,8403
cancel_get 425,9530
get_iter 470,10975
delayed_get 522,12659
put_cont 580,14348
delayed_put 599,14758
dht_connected 658,16789
dht_connect 731,19103
dht_disconnect 748,19465
start_profiling 784,20167
service_started 815,21170
test_run 846,21990
run 915,24019
main 950,24767

src/service/dht/gnunet-service-dht_clients.c,4263
#define SANITY_CHECKS 44,1424
#define LOG_TRAFFIC(49,1520
#define LOG(52,1653
struct ClientQueryRecord66,1966
  struct GNUNET_HashCode key;71,2041
  struct ClientQueryRecord *next;next76,2119
  struct ClientQueryRecord *prev;prev81,2201
  struct ClientHandle *ch;ch86,2289
  const void *xquery;xquery91,2412
  struct GNUNET_HashCode *seen_replies;seen_replies96,2520
  struct GNUNET_CONTAINER_HeapNode *hnode;hnode101,2651
  struct GNUNET_TIME_Relative retry_frequency;107,2800
  struct GNUNET_TIME_Absolute retry_time;112,2917
  uint64_t unique_id;117,3015
  size_t xquery_size;122,3082
  unsigned int seen_replies_count;127,3160
  uint32_t replication;132,3239
  enum GNUNET_DHT_RouteOption msg_options;137,3318
  enum GNUNET_BLOCK_Type type;142,3422
struct ClientMonitorRecord149,3522
  struct ClientMonitorRecord *next;next154,3589
  struct ClientMonitorRecord *prev;prev159,3668
  struct ClientHandle *ch;ch164,3758
  struct GNUNET_HashCode key;169,3853
  enum GNUNET_BLOCK_Type type;174,3937
  int16_t get;179,4029
  int16_t get_resp;184,4113
  uint16_t put;189,4194
struct ClientHandle199,4357
  struct ClientQueryRecord *cqr_head;cqr_head204,4442
  struct ClientQueryRecord *cqr_tail;cqr_tail209,4544
  struct GNUNET_SERVICE_Client *client;client214,4626
  struct GNUNET_MQ_Handle *mq;mq219,4717
struct GNUNET_BLOCK_Context *GDS_block_context;GDS_block_context226,4797
struct GNUNET_STATISTICS_Handle *GDS_stats;GDS_stats231,4892
struct GNUNET_SERVICE_Handle *GDS_service;GDS_service236,4972
const struct GNUNET_CONFIGURATION_Handle *GDS_cfg;GDS_cfg241,5077
static struct ClientMonitorRecord *monitor_head;monitor_head246,5176
static struct ClientMonitorRecord *monitor_tail;monitor_tail251,5273
static struct GNUNET_CONTAINER_MultiHashMap *forward_map;forward_map256,5418
static struct GNUNET_CONTAINER_Heap *retry_heap;retry_heap261,5567
static struct GNUNET_SCHEDULER_Task *retry_task;retry_task266,5680
remove_client_query_record 275,5845
client_connect_cb 305,6843
client_disconnect_cb 328,7385
transmit_request 374,8492
transmit_next_request_task 429,10642
check_dht_local_put 467,11733
handle_dht_local_put 489,12229
handle_local_result 574,15126
check_dht_local_get 594,15750
handle_dht_local_get 611,16100
struct FindByUniqueIdContext683,18836
  struct ClientQueryRecord *cqr;cqr688,18921
  uint64_t unique_id;693,18995
find_by_unique_id 708,19432
check_dht_local_get_result_seen 730,20000
handle_dht_local_get_result_seen 755,20583
struct RemoveByUniqueIdContext794,21870
  struct ClientHandle *ch;ch799,21960
  uint64_t unique_id;804,22031
remove_by_unique_id 818,22421
handle_dht_local_get_stop 845,23194
struct ForwardReplyContext873,24107
  const struct GNUNET_DATACACHE_Block *bd;bd878,24168
  const struct GNUNET_DHT_PathElement *get_path;get_path883,24245
  unsigned int get_path_length;888,24346
forward_reply 905,24855
GDS_CLIENTS_handle_reply 1070,30795
handle_dht_local_hello_get 1144,33206
check_dht_local_hello_offer 1177,34258
handle_dht_local_hello_offer 1201,34797
handle_dht_local_monitor 1237,35707
handle_dht_local_monitor_stop 1265,36474
(*MonitorAction)MonitorAction1308,37539
for_matching_monitors 1322,37852
struct GetActionContext1366,38832
  enum GNUNET_DHT_RouteOption options;1368,38858
  enum GNUNET_BLOCK_Type type;1369,38897
  uint32_t hop_count;1370,38928
  uint32_t desired_replication_level;1371,38950
  struct GNUNET_PeerIdentity trunc_peer;1372,38988
  const struct GNUNET_HashCode *key;key1373,39029
get_action 1385,39262
GDS_CLIENTS_process_get 1405,39819
struct ResponseActionContext1429,40465
  const struct GNUNET_DATACACHE_Block *bd;bd1431,40496
  const struct GNUNET_DHT_PathElement *get_path;get_path1432,40539
  unsigned int get_path_length;1433,40588
response_action 1445,40831
GDS_CLIENTS_process_get_resp 1499,42625
struct PutActionContext1519,43145
  const struct GNUNET_DATACACHE_Block *bd;bd1521,43171
  uint32_t hop_count;1522,43214
  uint32_t desired_replication_level;1523,43236
put_action 1535,43470
GDS_CLIENTS_process_put 1587,45164
GDS_CLIENTS_init 1611,45753
GDS_CLIENTS_stop 1625,46037
#define GDS_DHT_SERVICE_INIT(1641,46342
GDS_CLIENTS_done 1688,48512

src/service/dht/dht.h,3272
#define DHT_H28,930
#define DHT_BLOOM_SIZE 34,1012
struct GNUNET_DHT_ClientGetStopMessage43,1174
  struct GNUNET_MessageHeader header;48,1279
  uint32_t reserved GNUNET_PACKED;53,1348
  uint64_t unique_id GNUNET_PACKED;58,1436
  struct GNUNET_HashCode key;63,1510
struct GNUNET_DHT_ClientGetMessage71,1652
  struct GNUNET_MessageHeader header;76,1748
  uint32_t options GNUNET_PACKED;81,1870
  uint32_t desired_replication_level GNUNET_PACKED;86,1957
  uint32_t type GNUNET_PACKED;92,2113
  struct GNUNET_HashCode key GNUNET_PACKED;97,2184
  uint64_t unique_id GNUNET_PACKED;103,2335
struct GNUNET_DHT_ClientGetResultSeenMessage113,2604
  struct GNUNET_MessageHeader header;118,2724
  uint32_t reserved GNUNET_PACKED;123,2800
  struct GNUNET_HashCode key GNUNET_PACKED;129,2955
  uint64_t unique_id GNUNET_PACKED;134,3053
struct GNUNET_DHT_ClientResultMessage143,3220
  struct GNUNET_MessageHeader header;148,3322
  uint32_t type GNUNET_PACKED;153,3401
  uint32_t reserved GNUNET_PACKED;158,3470
  uint32_t options GNUNET_PACKED;163,3589
  uint32_t put_path_length GNUNET_PACKED;169,3746
  uint32_t get_path_length GNUNET_PACKED;175,3890
  uint64_t unique_id GNUNET_PACKED;180,3989
  struct GNUNET_TIME_AbsoluteNBO expiration;185,4072
  struct GNUNET_HashCode key GNUNET_PACKED;190,4165
struct GNUNET_DHT_ClientPutMessage199,4387
  struct GNUNET_MessageHeader header;204,4483
  uint32_t type GNUNET_PACKED;209,4567
  uint32_t options GNUNET_PACKED;214,4682
  uint32_t desired_replication_level GNUNET_PACKED;219,4769
  struct GNUNET_TIME_AbsoluteNBO expiration;224,4874
  struct GNUNET_HashCode key GNUNET_PACKED;229,4971
struct GNUNET_DHT_MonitorPutMessage238,5151
  struct GNUNET_MessageHeader header;243,5249
  uint32_t options GNUNET_PACKED;248,5371
  uint32_t type GNUNET_PACKED;253,5456
  uint32_t hop_count GNUNET_PACKED;258,5523
  uint32_t desired_replication_level GNUNET_PACKED;263,5612
  uint32_t put_path_length GNUNET_PACKED;269,5786
  struct GNUNET_TIME_AbsoluteNBO expiration_time;274,5881
  struct GNUNET_HashCode key GNUNET_PACKED;279,5983
struct GNUNET_DHT_MonitorStartStopMessage290,6155
  struct GNUNET_MessageHeader header;296,6307
  uint32_t type GNUNET_PACKED;301,6420
  int16_t get GNUNET_PACKED;306,6512
  int16_t get_resp GNUNET_PACKED;311,6610
  int16_t put GNUNET_PACKED;316,6705
  int16_t filter_key GNUNET_PACKED;321,6809
  struct GNUNET_HashCode key GNUNET_PACKED;326,6894
struct GNUNET_DHT_MonitorGetMessage333,7030
  struct GNUNET_MessageHeader header;338,7128
  uint32_t options GNUNET_PACKED;343,7250
  uint32_t type GNUNET_PACKED;348,7335
  uint32_t hop_count GNUNET_PACKED;353,7394
  uint32_t desired_replication_level GNUNET_PACKED;358,7483
  uint32_t reserved GNUNET_PACKED;363,7566
  struct GNUNET_HashCode key GNUNET_PACKED;368,7653
struct GNUNET_DHT_MonitorGetRespMessage376,7818
  struct GNUNET_MessageHeader header;381,7919
  uint32_t type GNUNET_PACKED;386,7989
  uint32_t reserved GNUNET_PACKED;391,8058
  uint32_t options GNUNET_PACKED;396,8177
  uint32_t put_path_length GNUNET_PACKED;401,8279
  uint32_t get_path_length GNUNET_PACKED;406,8389
  struct GNUNET_TIME_AbsoluteNBO expiration_time;411,8479
  struct GNUNET_HashCode key GNUNET_PACKED;416,8589

src/service/exit/exit.h,1740
#define EXIT_H27,961
struct GNUNET_EXIT_TcpServiceStartMessage37,1146
  struct GNUNET_MessageHeader header;42,1261
  uint32_t reserved GNUNET_PACKED;47,1327
  struct GNUNET_TUN_TcpHeader tcp_header;53,1500
struct GNUNET_EXIT_TcpInternetStartMessage63,1687
  struct GNUNET_MessageHeader header;68,1804
  int32_t af GNUNET_PACKED;73,1920
  struct GNUNET_TUN_TcpHeader tcp_header;79,2086
struct GNUNET_EXIT_TcpDataMessage94,2550
  struct GNUNET_MessageHeader header;99,2645
  uint32_t reserved GNUNET_PACKED;104,2711
  struct GNUNET_TUN_TcpHeader tcp_header;110,2983
struct GNUNET_EXIT_UdpServiceMessage120,3155
  struct GNUNET_MessageHeader header;125,3259
  uint16_t source_port GNUNET_PACKED;130,3389
  uint16_t destination_port GNUNET_PACKED;135,3499
struct GNUNET_EXIT_UdpInternetMessage145,3672
  struct GNUNET_MessageHeader header;150,3778
  int32_t af GNUNET_PACKED;155,3894
  uint16_t source_port GNUNET_PACKED;160,4014
  uint16_t destination_port GNUNET_PACKED;165,4124
struct GNUNET_EXIT_UdpReplyMessage178,4447
  struct GNUNET_MessageHeader header;183,4544
  uint16_t source_port GNUNET_PACKED;189,4705
  uint16_t destination_port GNUNET_PACKED;195,4871
struct GNUNET_EXIT_IcmpServiceMessage205,5045
  struct GNUNET_MessageHeader header;210,5151
  int32_t af GNUNET_PACKED;218,5448
  struct GNUNET_TUN_IcmpHeader icmp_header;223,5514
struct GNUNET_EXIT_IcmpInternetMessage236,5902
  struct GNUNET_MessageHeader header;241,6010
  int32_t af GNUNET_PACKED;249,6311
  struct GNUNET_TUN_IcmpHeader icmp_header;255,6423
struct GNUNET_EXIT_IcmpToVPNMessage271,6940
  struct GNUNET_MessageHeader header;276,7040
  int32_t af GNUNET_PACKED;282,7220
  struct GNUNET_TUN_IcmpHeader icmp_header;287,7324

src/service/exit/gnunet-daemon-exit.c,4731
#define REGEX_MAX_PATH_LEN_IPV4 55,1831
#define REGEX_MAX_PATH_LEN_IPV6 61,1969
#define REGEX_REFRESH_FREQUENCY 66,2072
#define DHT_PUT_FREQUENCY 72,2242
#define DNS_ADVERTISEMENT_TIMEOUT 78,2410
#define LOG(85,2548
struct SocketAddress92,2688
  int af;97,2749
    struct in_addr ipv4;107,2867
    struct in6_addr ipv6;112,2944
  } address;113,2970
  uint8_t proto;118,3029
  uint16_t port;123,3097
struct LocalService132,3283
  struct SocketAddress address;137,3361
  struct GNUNET_HashCode descriptor;142,3452
  char *name;name147,3532
  struct GNUNET_CADET_Port *port;port152,3586
  int16_t is_udp;157,3691
struct RedirectInformation166,3880
  struct SocketAddress remote_address;172,4030
  struct SocketAddress local_address;179,4232
struct ChannelState199,4825
  struct GNUNET_CADET_Channel *channel;channel204,4912
  struct GNUNET_PeerIdentity peer;210,5068
  int is_dns;217,5272
      struct GNUNET_CONTAINER_HeapNode *heap_node;heap_node226,5395
      struct GNUNET_HashCode state_key;231,5520
      struct LocalService *serv;serv236,5641
      struct RedirectInformation ri;241,5757
    } tcp_udp;242,5794
      struct GNUNET_DNSSTUB_RequestSocket *rs;rs250,5949
      uint16_t original_id;255,6073
      uint16_t my_id;260,6175
    } dns;261,6197
  } specifics;262,6208
static int global_ret;269,6265
static struct GNUNET_REGEX_Announcement *regex4;regex4274,6343
static struct GNUNET_REGEX_Announcement *regex6;regex6279,6447
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg284,6568
static struct GNUNET_HELPER_Handle *helper_handle;helper_handle289,6659
static char *exit_argv[exit_argv294,6752
static struct in6_addr exit_ipv6addr;299,6826
static unsigned long long ipv6prefix;304,6922
static struct in_addr exit_ipv4addr;309,7007
static struct in_addr exit_ipv4mask;314,7091
static struct GNUNET_STATISTICS_Handle *stats;stats319,7152
static struct GNUNET_CADET_Handle *cadet_handle;cadet_handle324,7231
static struct GNUNET_CONTAINER_MultiHashMap *connections_map;connections_map330,7419
static struct GNUNET_CONTAINER_Heap *connections_heap;connections_heap335,7540
static unsigned long long max_connections;340,7677
static struct GNUNET_CONTAINER_MultiHashMap *services;services345,7801
static struct ChannelState *channels[channels350,7914
static struct GNUNET_DNSSTUB_Context *dnsstub;dnsstub355,8013
static struct GNUNET_DHT_PutHandle *dht_put;dht_put360,8137
static struct GNUNET_DHT_Handle *dht;dht365,8213
static struct GNUNET_SCHEDULER_Task *dht_task;dht_task370,8314
static struct GNUNET_DNS_Advertisement dns_advertisement;376,8449
static struct GNUNET_HashCode dht_put_key;381,8561
static struct GNUNET_CRYPTO_EddsaPrivateKey *peer_key;peer_key386,8643
static struct GNUNET_CADET_Port *dns_port;dns_port391,8729
static struct GNUNET_CADET_Port *cadet_port4;cadet_port4396,8804
static struct GNUNET_CADET_Port *cadet_port6;cadet_port6401,8882
static int ipv4_exit;406,8961
static int ipv6_exit;411,9016
static int ipv4_enabled;416,9098
static int ipv6_enabled;421,9183
struct DnsResponseMessage429,9279
  struct GNUNET_MessageHeader header;434,9390
  struct GNUNET_TUN_DnsHeader dns;439,9458
process_dns_result 456,9750
check_dns_request 497,11055
handle_dns_request 523,11524
hash_redirect_info 572,13036
get_redirect_state 650,15164
check_tcp_service 709,17106
prepare_ipv4_packet 762,18695
prepare_ipv6_packet 866,22220
send_tcp_packet_via_tun 959,25037
send_icmp_packet_via_tun 1065,28306
setup_fresh_address 1177,32166
setup_state_record 1292,36081
send_udp_packet_via_tun 1361,39207
check_udp_remote 1462,42269
handle_udp_remote 1483,42693
check_udp_service 1582,45748
handle_udp_service 1604,46204
handle_tcp_service 1644,47818
check_tcp_remote 1691,49677
handle_tcp_remote 1728,50480
check_tcp_data 1826,53496
handle_tcp_data 1864,54441
make_up_icmpv4_payload 1915,56378
make_up_icmpv6_payload 1945,57604
check_icmp_remote 1974,58779
handle_icmp_remote 1995,59207
make_up_icmp_service_payload 2193,65380
check_icmp_service 2245,66800
handle_icmp_service 2272,67349
free_service_record 2460,73254
new_service_channel 2486,73997
clean_channel 2516,74965
store_service 2560,76220
send_packet_to_cadet_channel 2630,78998
icmp_from_helper 2656,79918
udp_from_helper 2864,86657
tcp_from_helper 2941,89158
message_token 3025,91842
new_channel 3187,97057
free_iterate 3215,97805
dummy_task 3233,98219
cleanup 3245,98377
add_services 3351,100704
read_service_conf 3516,105217
dht_put_cont 3566,106443
do_dht_put 3579,106653
parse_ip_options 3618,108181
advertise_dns_exit 3672,110290
setup_exit_helper_args 3749,113238
run 3899,118033
main 4095,125297

src/service/exit/gnunet-helper-exit.c,530
#define ifr_netmask 51,1845
#define SIOGIFINDEX 52,1884
#define DEBUG 70,2195
#define MAX_SIZE 75,2290
static const char *sbin_sysctl;sbin_sysctl80,2350
static const char *sbin_iptables;sbin_iptables85,2421
struct in6_ifreq93,2607
  struct in6_addr ifr6_addr;95,2626
  uint32_t ifr6_prefixlen;96,2655
  int ifr6_ifindex;97,2710
open_dev_null 111,2943
fork_and_exec 138,3431
init_tun 197,4839
init_tun 245,5712
#define init_tun(268,6107
set_address6 280,6407
set_address4 372,8475
run 471,10564
main 697,16630

src/service/util/gnunet-service-resolver.c,2213
#define DNS_TIMEOUT 37,1125
#define MAX_CACHE 42,1268
struct RecordListEntry47,1355
  struct RecordListEntry *next;next52,1427
  struct RecordListEntry *prev;prev57,1507
  struct GNUNET_DNSPARSER_Record *record;record62,1570
struct ResolveCache69,1656
  struct ResolveCache *next;next74,1725
  struct ResolveCache *prev;prev79,1802
  char *hostname;hostname84,1883
  struct RecordListEntry *records_head;records_head89,1978
  struct RecordListEntry *records_tail;records_tail94,2095
struct ActiveLookup101,2186
  struct ActiveLookup *next;next106,2242
  struct ActiveLookup *prev;prev111,2306
  struct GNUNET_SERVICE_Client *client;client116,2420
  struct GNUNET_DNSSTUB_RequestSocket *resolve_handle;resolve_handle121,2510
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task126,2622
  char *hostname;hostname131,2719
  int did_aaaa;137,2851
  uint16_t record_type;142,2912
  uint32_t client_request_id;148,3073
  uint16_t dns_id;154,3244
static struct ResolveCache *cache_head;cache_head161,3334
static struct ResolveCache *cache_tail;cache_tail166,3440
static struct ResolveCache *hosts_head;hosts_head171,3555
static struct ResolveCache *hosts_tail;hosts_tail176,3670
static struct ActiveLookup *lookup_head;lookup_head181,3770
static struct ActiveLookup *lookup_tail;lookup_tail186,3870
static struct GNUNET_DNSSTUB_Context *dnsstub_ctx;dnsstub_ctx191,3950
static char *my_domain;my_domain196,4070
static unsigned int cache_size;201,4154
free_cache_entry 210,4269
free_hosts_entry 234,4785
free_active_lookup 258,5316
extract_dns_server 286,6038
extract_search_domain 305,6618
lookup_dns_servers 321,7097
make_reverse_hostname 397,9370
send_reply 460,10907
send_end_msg 526,12903
remove_expired 546,13503
try_cache 599,15132
pack 679,17560
cache_answers 710,18357
handle_resolve_result 753,19652
handle_resolve_timeout 864,23449
resolve_and_cache 886,24034
process_get 947,26172
check_get 990,27274
handle_get 1038,28112
shutdown_task 1108,29764
add_host 1133,30311
extract_hosts 1165,31306
load_etc_hosts 1208,32292
init_cb 1270,34000
connect_cb 1313,35210
disconnect_cb 1332,35577
GNUNET_RESOLVER_memory_init 1373,36472

src/service/util/test_resolver_api.c,297
static int disable_rootserver_check;31,982
#define ROOTSERVER_NAME 39,1265
#define ROOTSERVER_IP 40,1310
check_hostname 44,1361
check_localhost_num 62,1685
check_localhost 87,2179
check_127 111,2689
check_rootserver_ip 141,3429
check_rootserver_name 166,4026
run 193,4623
main 337,9344

src/service/arm/gnunet-service-arm.c,2957
#define LOG(32,1066
#define LOG_STRERROR(34,1134
static char *wait_filename;wait_filename42,1315
static FILE *wait_file;wait_file47,1407
#define MAX_NOTIFY_QUEUE 56,1609
struct ServiceListeningInfo68,1767
  struct ServiceListeningInfo *next;next73,1837
  struct ServiceListeningInfo *prev;prev78,1915
  struct sockaddr *service_addr;service_addr83,2007
  struct ServiceList *sl;sl88,2093
  socklen_t service_addr_len;93,2172
  struct GNUNET_NETWORK_Handle *listen_socket;listen_socket98,2242
  struct GNUNET_SCHEDULER_Task *accept_task;accept_task103,2333
struct ServiceList110,2416
  struct ServiceList *next;next115,2484
  struct ServiceList *prev;prev120,2560
  struct ServiceListeningInfo *listen_head;listen_head125,2666
  struct ServiceListeningInfo *listen_tail;listen_tail130,2788
  char *name;name135,2871
  char *binary;binary140,2928
  char *config;config145,2999
  struct GNUNET_SERVICE_Client *killing_client;killing_client151,3133
  uint64_t killing_client_request_id;156,3263
  struct GNUNET_OS_Process *proc;proc161,3359
  struct GNUNET_TIME_Relative backoff;166,3444
  struct GNUNET_TIME_Absolute last_started_at;171,3559
  struct GNUNET_TIME_Absolute restart_at;176,3700
  struct GNUNET_TIME_Absolute killed_at;182,3863
  int force_start;189,4154
  int pipe_control;195,4290
  int last_exit_status;200,4361
static struct ServiceList *running_head;running_head206,4426
static struct ServiceList *running_tail;running_tail211,4505
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg216,4576
static char *prefix_command;prefix_command221,4685
static char *final_option;final_option226,4767
static struct GNUNET_SCHEDULER_Task *child_death_task;child_death_task231,4852
static struct GNUNET_SCHEDULER_Task *child_restart_task;child_restart_task237,4993
static struct GNUNET_DISK_PipeHandle *sigpipe;sigpipe242,5108
static int in_shutdown;247,5192
static int global_ret;252,5251
static int start_user 257,5317
static int start_system 262,5398
static struct GNUNET_SERVICE_Handle *service;service274,5945
static struct GNUNET_NotificationContext *notifier;notifier279,6061
add_unixpath 293,6477
get_server_addresses 342,8156
signal_result 685,18880
broadcast_status 710,19628
start_process 750,20909
find_service 983,29974
accept_connection 1005,30443
create_listen_socket 1025,30941
free_service 1148,35054
check_start 1169,35587
handle_start 1184,35858
trigger_shutdown 1230,36954
check_stop 1247,37334
handle_stop 1262,37603
pool_write 1345,40211
handle_list 1364,40630
handle_test 1451,43355
do_shutdown 1469,43838
list_count 1497,44395
shutdown_task 1514,44735
delayed_restart_task 1578,46523
maint_child_death 1655,49138
sighandler_child_death 1870,56375
setup_service 1894,57005
client_connect_cb 2004,60322
client_disconnect_cb 2026,60851
handle_monitor 2047,61424
run 2070,62125
main 2146,64822
GNUNET_ARM_memory_init 2216,67151

src/service/arm/arm_api.c,1817
#define LOG(33,1079
struct GNUNET_ARM_Operation40,1263
  struct GNUNET_ARM_Operation *next;next45,1340
  struct GNUNET_ARM_Operation *prev;prev50,1425
  struct GNUNET_ARM_Handle *h;h55,1492
  GNUNET_ARM_ResultCallback result_cont;60,1585
  GNUNET_ARM_ServiceListCallback list_cont;65,1680
  void *cont_cls;cont_cls70,1786
  struct GNUNET_SCHEDULER_Task *async;async75,1849
  uint64_t id;80,1933
  enum GNUNET_ARM_Result starting_ret;85,2015
  struct GNUNET_DISK_FileHandle *rfd;rfd90,2129
  int is_arm_stop;95,2231
struct GNUNET_ARM_Handle102,2299
  struct GNUNET_MQ_Handle *mq;mq107,2378
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg112,2464
  struct GNUNET_ARM_Operation *operation_pending_head;operation_pending_head117,2581
  struct GNUNET_ARM_Operation *operation_pending_tail;operation_pending_tail122,2704
  GNUNET_ARM_ConnectionStatusCallback conn_status;127,2825
  void *conn_status_cls;conn_status_cls132,2922
  struct GNUNET_ARM_Operation *thm;thm142,3320
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task147,3409
  struct GNUNET_TIME_Relative retry_backoff;152,3530
  uint64_t request_id_counter;158,3724
  int currently_up;163,3806
reconnect_arm_task 183,4117
reconnect_arm_later 199,4381
find_op_by_id 243,5633
handle_arm_result 262,6050
pool_get 325,8024
check_arm_list_result 350,8609
handle_arm_list_result 399,9941
handle_confirm 466,12000
mq_error_handler 492,12709
reconnect_arm 519,13299
GNUNET_ARM_connect 577,15374
GNUNET_ARM_disconnect 603,15921
start_arm_service 653,17287
GNUNET_ARM_operation_cancel 793,22293
change_service 830,23137
notify_running 876,24432
notify_starting 903,25203
GNUNET_ARM_request_service_start 934,26156
GNUNET_ARM_request_service_stop 1047,30131
GNUNET_ARM_request_service_list 1083,31117

src/service/arm/testing_arm_cmd_start_peer.c,579
struct GNUNET_TESTING_StartPeerState37,1149
  const char *system_label;system_label40,1189
  const char *cfgname;cfgname42,1218
  struct GNUNET_TESTING_Interpreter *is;is47,1276
  struct GNUNET_TESTING_AsyncContext ac;52,1363
  struct GNUNET_TESTBED_System *system;system57,1467
  struct GNUNET_ARM_Handle *ah;ah62,1562
  struct GNUNET_OS_Process *arm;arm67,1651
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg72,1725
conn_status 85,2017
start_peer_run 106,2420
start_peer_cleanup 220,5765
start_peer_traits 254,6466
GNUNET_TESTING_ARM_cmd_start_peer 277,7109

src/service/arm/test_gnunet_service_arm.c,397
#define START_TIMEOUT 36,1305
#define TIMEOUT 39,1401
static int ret 42,1480
static int resolved_ok;44,1501
static int asked_for_a_list;46,1526
static struct GNUNET_ARM_Handle *arm;arm48,1556
static const char hostname[hostname50,1595
trigger_disconnect 54,1682
arm_stop_cb 62,1776
service_list 78,2164
hostname_resolve_cb 110,3020
arm_start_cb 142,3907
run 171,4868
main 188,5343

src/service/arm/test_arm_api.c,450
#define LOG(29,999
#define TIMEOUT 31,1067
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg33,1145
static struct GNUNET_ARM_Handle *arm;arm35,1200
static struct GNUNET_ARM_Operation *op;op37,1239
static int ok 39,1280
static int phase 41,1300
arm_stop_cb 45,1336
resolver_stop_cb 64,1917
dns_notify 88,2716
resolver_start_cb 117,3449
arm_conn 140,4203
arm_start_cb 178,5180
do_shutdown 198,5827
task 214,6024
main 236,6664

src/service/arm/arm.h,849
#define ARM_H26,869
#define DEBUG_ARM 34,1012
struct GNUNET_ARM_StatusMessage41,1126
  struct GNUNET_MessageHeader header;46,1238
  uint32_t status;51,1342
struct GNUNET_ARM_Message56,1414
  struct GNUNET_MessageHeader header;65,1674
  uint32_t reserved;70,1745
  uint64_t request_id;77,1875
struct GNUNET_ARM_ResultMessage86,2004
  struct GNUNET_ARM_Message arm_msg;91,2128
  uint32_t result;96,2224
struct GNUNET_ARM_ServiceInfoMessage99,2247
  uint16_t name_index;104,2345
  uint16_t binary_index;109,2430
  int16_t last_exit_status;114,2499
  uint16_t padding;119,2554
  uint32_t status;124,2640
  struct GNUNET_TIME_AbsoluteNBO restart_at;130,2760
  struct GNUNET_TIME_AbsoluteNBO last_started_at;135,2879
struct GNUNET_ARM_ListResultMessage144,3129
  struct GNUNET_ARM_Message arm_msg;150,3267
  uint16_t count;156,3413

src/service/arm/test_exponential_backoff.c,1222
#define LOG(30,1039
#define LOG_BACKOFF 32,1107
#define TIMEOUT 34,1138
#define SERVICE_TEST_TIMEOUT 36,1216
#define FIVE_MILLISECONDS 38,1275
#define SERVICE 41,1374
#define BINARY 43,1404
#define CFGFILENAME 45,1437
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg48,1485
static struct GNUNET_ARM_Handle *arm;arm50,1540
static struct GNUNET_ARM_MonitorHandle *mon;mon52,1579
static struct GNUNET_SCHEDULER_Task *kt;kt54,1625
static int ok 56,1667
static int phase 58,1687
static int trialCount;60,1710
static struct GNUNET_TIME_Absolute startedWaitingAt;62,1734
struct GNUNET_TIME_Relative waitedFor;64,1788
struct GNUNET_TIME_Relative waitedFor_prev;66,1828
static FILE *killLogFilePtr;killLogFilePtr69,1889
static char *killLogFileName;killLogFileName71,1919
struct ShutdownContext78,2017
  struct GNUNET_MQ_Handle *mq;mq83,2109
  struct GNUNET_SCHEDULER_Task *cancel_task;cancel_task88,2213
service_shutdown_timeout 102,2413
mq_error_handler 117,2791
kill_task 131,3153
trigger_disconnect 174,4562
arm_stop_cb 187,4750
srv_status 199,5061
arm_start_cb 260,7119
task 274,7540
check 307,8375
#define PATH_MAX 335,9115
init 340,9157
houseKeep 389,10635
main 400,10793

src/service/arm/testing_arm_cmd_stop_peer.c,392
struct StopPeerState37,1143
  const char *start_label;start_label42,1219
  const char *label;label47,1282
  struct GNUNET_ARM_Operation *op;op49,1304
  struct GNUNET_TESTING_Interpreter *is;is51,1340
  struct GNUNET_TESTING_AsyncContext ac;53,1382
stop_cb 68,1793
stop_peer_run 90,2241
stop_peer_cleanup 121,3199
stop_peer_traits 141,3552
GNUNET_TESTING_cmd_stop_peer 159,3991

src/service/arm/arm_monitor_api.c,698
#define INIT_TIMEOUT 33,1082
#define LOG(35,1164
struct GNUNET_ARM_MonitorHandle40,1287
  struct GNUNET_MQ_Handle *mq;mq45,1381
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg50,1467
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task55,1569
  struct GNUNET_TIME_Relative retry_backoff;60,1690
  GNUNET_ARM_ServiceMonitorCallback service_status;65,1791
  void *service_status_cls;service_status_cls70,1892
reconnect_arm_monitor_task 90,2240
reconnect_arm_monitor_later 108,2653
check_monitor_notify 131,3366
handle_monitor_notify 154,3901
mq_error_handler 178,4743
reconnect_arm_monitor 194,5033
GNUNET_ARM_monitor_start 233,6402
GNUNET_ARM_monitor_stop 258,6998

src/service/arm/mockup-service.c,151
static int special_ret 27,919
handle_stop 36,1087
client_connect_cb 61,1805
client_disconnect_cb 79,2192
run 89,2391
GNUNET_mockup_done 120,3278

src/service/rest/oidc_helper.h,325
#define JWT_H28,913
#define JWT_ALG 32,993
#define JWT_TYP 33,1015
#define JWT_TYP_VALUE 34,1037
#define JWT_ALG_VALUE_HMAC 36,1066
#define JWT_ALG_VALUE_RSA 37,1101
#define SERVER_ADDRESS 39,1136
enum OIDC_VerificationOptions41,1184
  OIDC_VERIFICATION_DEFAULT 46,1253
  OIDC_VERIFICATION_NO_CODE_VERIFIER 51,1348

src/service/rest/reclaim_plugin.c,3015
#define GNUNET_REST_API_NS_RECLAIM 44,1362
#define GNUNET_REST_API_NS_RECLAIM_ATTRIBUTES 49,1440
#define GNUNET_REST_API_NS_RECLAIM_CREDENTIAL 54,1541
#define GNUNET_REST_API_NS_IDENTITY_TICKETS 59,1638
#define GNUNET_REST_API_NS_IDENTITY_REVOKE 64,1730
#define GNUNET_REST_API_NS_IDENTITY_CONSUME 69,1820
#define ID_REST_STATE_INIT 74,1927
#define ID_REST_STATE_POST_INIT 79,1989
const struct GNUNET_CONFIGURATION_Handle *rcfg;rcfg84,2060
static char *allow_methods;allow_methods89,2156
static struct EgoEntry *ego_head;ego_head94,2205
static struct EgoEntry *ego_tail;ego_tail99,2260
static int state;104,2327
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle109,2385
static struct GNUNET_RECLAIM_Handle *idp;idp114,2470
struct Plugin119,2592
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg121,2608
struct EgoEntry127,2685
  struct EgoEntry *next;next132,2724
  struct EgoEntry *prev;prev137,2771
  char *identifier;identifier142,2829
  char *keystring;keystring147,2885
  struct GNUNET_IDENTITY_Ego *ego;ego152,2930
struct RequestHandle156,2970
  struct RequestHandle *next;next161,3014
  struct RequestHandle *prev;prev166,3066
  struct EgoEntry *ego_entry;ego_entry171,3127
  struct GNUNET_CRYPTO_PrivateKey priv_key;176,3202
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle181,3280
  struct GNUNET_RECLAIM_AttributeList *attr_list;attr_list186,3368
  struct GNUNET_IDENTITY_Operation *op;op191,3455
  struct GNUNET_RECLAIM_Operation *idp_op;idp_op196,3527
  struct GNUNET_RECLAIM_AttributeIterator *attr_it;attr_it201,3607
  struct GNUNET_RECLAIM_CredentialIterator *cred_it;cred_it206,3696
  struct GNUNET_RECLAIM_TicketIterator *ticket_it;ticket_it211,3783
  struct GNUNET_RECLAIM_Ticket ticket;216,3861
  struct GNUNET_TIME_Relative timeout;221,3974
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task226,4084
  GNUNET_REST_ResultProcessor proc;231,4176
  void *proc_cls;proc_cls236,4266
  char *url;url241,4310
  char *emsg;emsg246,4364
  int response_code;251,4410
  json_t *resp_object;resp_object256,4465
static struct RequestHandle *requests_head;requests_head262,4507
static struct RequestHandle *requests_tail;requests_tail267,4567
cleanup_handle 275,4694
do_error 309,5759
do_timeout 335,6489
collect_error_cb 345,6621
finished_cont 352,6713
delete_finished_cb 376,7547
return_response 401,8239
collect_finished_cb 421,8860
ticket_collect 438,9142
add_credential_cont 456,9721
cred_collect 548,12637
list_credential_cont 631,15845
delete_credential_cont 688,17778
list_tickets_cont 755,19982
add_attribute_cont 802,21581
parse_jwt 888,24477
attr_collect 954,26775
list_attribute_cont 1000,28502
delete_attribute_cont 1054,30351
revoke_ticket_cont 1112,32376
consume_cont 1188,34831
consume_ticket_cont 1222,35831
options_cont 1282,37697
list_ego 1333,39823
REST_reclaim_process_request 1409,41871
REST_reclaim_init 1470,44123
REST_reclaim_done 1506,45187

src/service/rest/json_reclaim.c,276
parse_attr 42,1292
clean_attr 126,4085
GNUNET_RECLAIM_JSON_spec_attribute 146,4502
parse_ticket 170,5289
clean_ticket 210,6344
GNUNET_RECLAIM_JSON_spec_ticket 230,6765
parse_credential 254,7580
clean_credential 334,10039
GNUNET_RECLAIM_JSON_spec_credential 354,10466

src/service/rest/gnunet-rest-server.c,3223
#define GNUNET_REST_SERVICE_PORT 45,1295
#define MAX_HTTP_URI_LENGTH 51,1408
#define HTTP_PORT 56,1478
#define HTTPS_PORT 61,1527
#define MHD_CACHE_TIMEOUT 66,1622
#define GN_REST_STATE_INIT 69,1719
#define GN_REST_STATE_PROCESSING 70,1748
static struct GNUNET_SCHEDULER_Task *httpd_task;httpd_task75,1807
static in_addr_t address;80,1891
static struct in6_addr address6;85,1957
static unsigned long long port 90,2052
static struct GNUNET_NETWORK_Handle *lsock4;lsock495,2165
static struct GNUNET_NETWORK_Handle *lsock6;lsock6100,2264
static struct GNUNET_SCHEDULER_Task *ltask4;ltask4105,2349
static struct GNUNET_SCHEDULER_Task *ltask6;ltask6110,2434
static struct MHD_Daemon *httpd;httpd115,2507
static struct MHD_Response *failure_response;failure_response120,2584
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg125,2661
static int echo_origin;130,2755
static int basic_auth_enabled;135,2813
static char *basic_auth_secret;basic_auth_secret140,2874
char cuser[cuser145,2938
static char *allow_origins;allow_origins150,3008
static char *allow_headers;allow_headers155,3071
static char *allow_credentials;allow_credentials160,3138
static struct PluginListEntry *plugins_head;plugins_head165,3199
static struct PluginListEntry *plugins_tail;plugins_tail170,3273
struct PluginListEntry175,3350
  struct PluginListEntry *next;next178,3387
  struct PluginListEntry *prev;prev181,3432
  char *libname;libname186,3503
  void *plugin;plugin191,3549
  GNUNET_REST_ProcessingFunction process_request;196,3600
struct MhdConnectionHandle202,3687
  struct MHD_Connection *con;con204,3716
  struct MHD_Response *response;response206,3747
  struct GNUNET_REST_RequestHandle *data_handle;data_handle208,3781
  struct MHD_PostProcessor *pp;pp210,3831
  int status;212,3864
  int state;214,3879
struct AcceptedRequest220,3925
  struct AcceptedRequest *next;next225,3971
  struct AcceptedRequest *prev;prev230,4025
  struct GNUNET_NETWORK_Handle *sock;sock235,4082
  struct MhdConnectionHandle *con_handle;con_handle240,4149
  int socket_with_mhd;245,4215
static struct AcceptedRequest *req_list_head;req_list_head251,4279
static struct AcceptedRequest *req_list_tail;req_list_tail256,4363
struct GNUNET_REST_Plugin *config_plugin;config_plugin263,4431
struct GNUNET_REST_Plugin *copying_plugin;copying_plugin264,4473
struct GNUNET_REST_Plugin *identity_plugin;identity_plugin265,4516
struct GNUNET_REST_Plugin *namestore_plugin;namestore_plugin266,4560
struct GNUNET_REST_Plugin *gns_plugin;gns_plugin267,4605
struct GNUNET_REST_Plugin *openid_plugin;openid_plugin269,4658
struct GNUNET_REST_Plugin *reclaim_plugin;reclaim_plugin271,4707
run_mhd_now 289,5024
plugin_callback 309,5421
cleanup_url_map 321,5661
cleanup_handle 329,5799
cleanup_ar 359,6809
header_iterator 382,7272
url_iterator 413,8094
post_data_iter 440,8771
create_response 506,11061
kill_httpd 694,17609
schedule_httpd 738,18419
mhd_log_callback 811,20393
mhd_completed_cb 841,21188
mhd_connection_cb 873,22085
do_httpd 932,23435
do_accept 946,23633
do_shutdown 1006,25359
bind_v4 1041,26223
bind_v6 1076,27028
setup_plugin 1113,27918
run 1148,28878

src/service/rest/copying_plugin.c,753
#define GNUNET_REST_API_NS_COPYING 31,997
#define GNUNET_REST_COPYING_TEXT 33,1044
struct Plugin39,1264
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg41,1280
struct RequestHandle44,1333
  struct RequestHandle *next;next49,1377
  struct RequestHandle *prev;prev54,1429
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle59,1500
  GNUNET_REST_ResultProcessor proc;64,1595
  void *proc_cls;proc_cls69,1685
  int response_code;74,1740
static struct RequestHandle *requests_head;requests_head80,1780
static struct RequestHandle *requests_tail;requests_tail85,1840
cleanup_handle 93,1971
get_cont 110,2331
options_cont 131,2767
REST_copying_process_request 161,3696
REST_copying_init 194,4876
REST_copying_done 220,5511

src/service/rest/rest.c,110
GNUNET_REST_namespace_match 37,1102
GNUNET_REST_create_response 44,1258
GNUNET_REST_handle_request 64,1632

src/service/rest/oidc_helper.c,1048
struct OIDC_Parameters45,1353
  struct GNUNET_RECLAIM_Ticket ticket;50,1414
  uint32_t nonce_len GNUNET_PACKED;55,1488
  uint32_t code_challenge_len GNUNET_PACKED;60,1580
  uint32_t attr_list_len GNUNET_PACKED;65,1677
  uint32_t pres_list_len GNUNET_PACKED;70,1771
static char OIDC_profile_claims[OIDC_profile_claims78,1912
static char OIDC_email_claims[OIDC_email_claims87,2211
static char OIDC_phone_claims[OIDC_phone_claims94,2352
static char OIDC_address_claims[OIDC_address_claims101,2509
is_claim_in_address_scope 106,2661
create_jwt_hmac_header 121,2880
replace_char 137,3235
fix_base64 151,3461
generate_userinfo_json 162,3614
OIDC_generate_userinfo 348,9947
generate_id_token_body 364,10489
OIDC_generate_id_token_rsa 423,12501
OIDC_generate_id_token_hmac 475,14250
OIDC_build_authz_code 567,17377
check_code_challenge 697,21700
OIDC_parse_authz_code 754,23637
OIDC_build_token_response 873,27896
OIDC_access_token_new 901,28871
OIDC_access_token_parse 920,29305
OIDC_check_scopes_for_claim_request 959,30492

src/service/rest/identity_plugin.c,2717
#define GNUNET_REST_API_NS_IDENTITY 39,1197
#define GNUNET_REST_API_NS_IDENTITY_PUBKEY 44,1302
#define GNUNET_REST_API_NS_IDENTITY_NAME 49,1421
#define GNUNET_REST_API_NS_SIGN 54,1530
#define GNUNET_REST_IDENTITY_PARAM_PUBKEY 59,1603
#define GNUNET_REST_IDENTITY_PARAM_PRIVKEY 64,1688
#define GNUNET_REST_IDENTITY_PARAM_NAME 69,1768
#define GNUNET_REST_IDENTITY_PARAM_NEWNAME 74,1846
#define GNUNET_REST_IDENTITY_MISSING_NAME 79,1947
#define GNUNET_REST_IDENTITY_MISSING_PUBKEY 84,2061
#define GNUNET_REST_ERROR_NO_DATA 89,2169
#define GNUNET_REST_ERROR_DATA_INVALID 94,2252
#define ID_REST_STATE_INIT 99,2350
#define ID_REST_STATE_POST_INIT 104,2412
const struct GNUNET_CONFIGURATION_Handle *id_cfg;id_cfg109,2483
static char *allow_methods;allow_methods114,2581
static struct EgoEntry *ego_head;ego_head119,2630
static struct EgoEntry *ego_tail;ego_tail124,2685
static int state;129,2752
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle134,2810
struct Plugin139,2945
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg141,2961
struct EgoEntry147,3038
  struct EgoEntry *next;next152,3077
  struct EgoEntry *prev;prev157,3124
  char *identifier;identifier162,3182
  char *keystring;keystring167,3238
  struct GNUNET_IDENTITY_Ego *ego;ego172,3283
struct RequestHandle178,3352
  struct RequestHandle *next;next183,3396
  struct RequestHandle *prev;prev188,3448
  const char *data;data193,3527
  char *name;name198,3585
  size_t data_size;203,3645
  struct GNUNET_IDENTITY_Operation *op;op208,3702
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle213,3776
  struct GNUNET_TIME_Relative timeout;218,3899
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task223,4009
  GNUNET_REST_ResultProcessor proc;228,4101
  void *proc_cls;proc_cls233,4191
  char *url;url238,4235
  enum GNUNET_ErrorCode ec;243,4277
static struct RequestHandle *requests_head;requests_head249,4324
static struct RequestHandle *requests_tail;requests_tail254,4384
cleanup_handle 261,4507
do_error 289,5171
get_egoentry 325,6498
ego_get_all 361,7252
ego_get_response 423,9327
ego_get_pubkey 472,11027
ego_get_name 510,11927
do_finished 547,12752
do_finished_create 578,13509
ego_edit 596,13896
ego_edit_pubkey 680,15965
ego_edit_name 718,16858
ego_create 756,17712
ego_delete_pubkey 851,20380
ego_delete_name 892,21469
struct ego_sign_data_cls925,22371
  void *data;data927,22398
  struct RequestHandle *handle;handle928,22412
ego_sign_data_cb 932,22453
ego_sign_data 992,24107
options_cont 1050,25750
list_ego 1069,26379
REST_identity_process_request 1162,28930
REST_identity_init 1225,31234
REST_identity_done 1260,32244

src/service/rest/config_plugin.c,921
#define GNUNET_REST_API_NS_CONFIG 33,1029
struct Plugin38,1153
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg40,1169
const struct GNUNET_CONFIGURATION_Handle *config_cfg;config_cfg43,1222
struct RequestHandle45,1277
  struct RequestHandle *next;next50,1321
  struct RequestHandle *prev;prev55,1373
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle60,1444
  GNUNET_REST_ResultProcessor proc;65,1539
  void *proc_cls;proc_cls70,1629
  int response_code;75,1684
  char *url;url80,1731
static struct RequestHandle *requests_head;requests_head87,1764
static struct RequestHandle *requests_tail;requests_tail92,1824
cleanup_handle 101,1956
do_error 119,2371
add_sections 131,2614
add_section_contents 152,3115
get_cont 169,3457
set_value 212,4867
set_cont 241,5863
options_cont 349,8833
REST_config_process_request 366,9397
REST_config_done 400,10635
REST_config_init 420,11092

src/service/rest/namestore_plugin.c,2973
#define GNUNET_REST_API_NS_NAMESTORE 40,1236
#define GNUNET_REST_API_NS_NAMESTORE_IMPORT 45,1329
#define ID_REST_STATE_INIT 50,1437
#define ID_REST_STATE_POST_INIT 55,1499
const struct GNUNET_CONFIGURATION_Handle *ns_cfg;ns_cfg59,1569
static char *allow_methods;allow_methods64,1667
static struct EgoEntry *ego_head;ego_head69,1716
static struct EgoEntry *ego_tail;ego_tail74,1771
static int state;79,1838
static struct GNUNET_NAMESTORE_Handle *ns_handle;ns_handle84,1888
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle89,1978
struct Plugin94,2113
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg96,2129
struct EgoEntry102,2219
  struct EgoEntry *next;next107,2258
  struct EgoEntry *prev;prev112,2305
  char *identifier;identifier117,2363
  char *keystring;keystring122,2419
  struct GNUNET_IDENTITY_Ego *ego;ego127,2464
enum UpdateStrategy131,2504
  UPDATE_STRATEGY_REPLACE,133,2526
  UPDATE_STRATEGY_APPEND134,2553
struct RequestHandle140,2612
  struct RequestHandle *next;next145,2656
  struct RequestHandle *prev;prev150,2708
  char *record_name;record_name155,2773
  uint32_t record_type;160,2831
  enum UpdateStrategy update_strategy;165,2902
  struct GNUNET_GNSRECORD_Data *rd;rd170,2976
  unsigned int rd_count;175,3054
  struct GNUNET_NAMESTORE_RecordInfo *ri;ri180,3114
  unsigned int rd_set_count;185,3194
  unsigned int rd_set_pos;190,3265
  struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe195,3330
  struct GNUNET_NAMESTORE_Handle *nc;nc200,3447
  json_t *resp_object;resp_object205,3519
  struct GNUNET_NAMESTORE_ZoneIterator *list_it;list_it211,3584
  const struct GNUNET_CRYPTO_PrivateKey *zone_pkey;zone_pkey216,3676
  struct EgoEntry *ego_entry;ego_entry221,3765
  struct GNUNET_IDENTITY_Operation *op;op226,3832
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle231,3906
  struct GNUNET_TIME_Relative timeout;236,4029
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task241,4139
  GNUNET_REST_ResultProcessor proc;246,4231
  void *proc_cls;proc_cls251,4321
  char *url;url256,4365
  enum GNUNET_ErrorCode ec;261,4407
static struct RequestHandle *requests_head;requests_head268,4455
static struct RequestHandle *requests_tail;requests_tail273,4515
cleanup_handle 281,4639
do_error 329,5938
get_egoentry_namestore 366,7224
namestore_iteration_error 396,7840
create_finished 407,8046
del_finished 426,8488
namestore_list_finished 451,9032
namestore_list_iteration 483,9907
ns_lookup_error_cb 532,11288
ns_get_lookup_cb 542,11473
namestore_get 585,12707
ns_lookup_cb 693,16872
import_next_cb 728,18041
bulk_tx_start 782,19783
namestore_import 876,22971
namestore_add_or_update 925,24250
namestore_update 1013,27052
namestore_add 1031,27473
namestore_delete 1049,27886
options_cont 1111,29803
list_ego 1131,30421
REST_namestore_process_request 1224,32974
REST_namestore_init 1277,34951
REST_namestore_done 1314,36032

src/service/rest/pabc_plugin.c,1251
#define GNUNET_REST_API_NS_PABC 41,1217
#define GNUNET_REST_API_NS_PABC_CR 46,1297
const struct GNUNET_CONFIGURATION_Handle *cfg;cfg51,1380
static char *allow_methods;allow_methods56,1475
struct Plugin61,1583
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg63,1599
struct RequestHandle67,1653
  struct RequestHandle *next;next72,1697
  struct RequestHandle *prev;prev77,1749
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle82,1813
  struct GNUNET_TIME_Relative timeout;87,1936
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task92,2046
  GNUNET_REST_ResultProcessor proc;97,2138
  void *proc_cls;proc_cls102,2228
  char *url;url107,2272
  char *emsg;emsg112,2326
  int response_code;117,2372
  json_t *resp_object;resp_object122,2427
static struct RequestHandle *requests_head;requests_head128,2469
static struct RequestHandle *requests_tail;requests_tail133,2529
cleanup_handle 141,2656
do_error 167,3351
do_timeout 192,4003
return_response 202,4135
set_attributes_from_idtoken 219,4641
setup_new_user_context 291,6939
cr_cont 308,7374
options_cont 556,15276
rest_identity_process_request 573,15774
libgnunet_plugin_rest_pabc_init 618,17190
libgnunet_plugin_rest_reclaim_done 649,18021

src/service/rest/openid_plugin.c,6628
#define GNUNET_REST_API_NS_OIDC 47,1394
#define GNUNET_REST_API_NS_OIDC_CONFIG 52,1460
#define GNUNET_REST_API_NS_AUTHORIZE 57,1566
#define GNUNET_REST_API_NS_TOKEN 62,1650
#define GNUNET_REST_API_JWKS 67,1734
#define GNUNET_REST_API_NS_USERINFO 72,1806
#define GNUNET_REST_API_NS_LOGIN 77,1889
#define ID_REST_STATE_INIT 82,1982
#define ID_REST_STATE_POST_INIT 87,2044
#define OIDC_GRANT_TYPE_KEY 92,2110
#define OIDC_GRANT_TYPE_VALUE 97,2183
#define OIDC_CODE_KEY 102,2260
#define OIDC_RESPONSE_TYPE_KEY 107,2324
#define OIDC_CLIENT_ID_KEY 112,2402
#define OIDC_SCOPE_KEY 117,2468
#define OIDC_REDIRECT_URI_KEY 122,2533
#define OIDC_STATE_KEY 127,2605
#define OIDC_NONCE_KEY 132,2663
#define OIDC_CLAIMS_KEY 137,2722
#define OIDC_CODE_CHALLENGE_KEY 142,2792
#define OIDC_CODE_VERIFIER_KEY 147,2877
#define OIDC_COOKIE_EXPIRATION 152,2972
#define OIDC_COOKIE_HEADER_KEY 157,3040
#define OIDC_AUTHORIZATION_HEADER_KEY 162,3127
#define OIDC_COOKIE_HEADER_INFORMATION_KEY 167,3228
#define OIDC_COOKIE_HEADER_ACCESS_DENIED 172,3332
#define OIDC_EXPECTED_AUTHORIZATION_RESPONSE_TYPE 177,3449
#define OIDC_EXPECTED_AUTHORIZATION_SCOPE 182,3561
#define OIDC_ERROR_KEY_INVALID_CLIENT 187,3658
#define OIDC_ERROR_KEY_INVALID_SCOPE 192,3759
#define OIDC_ERROR_KEY_INVALID_REQUEST 197,3860
#define OIDC_ERROR_KEY_INVALID_TOKEN 202,3963
#define OIDC_ERROR_KEY_INVALID_COOKIE 207,4063
#define OIDC_ERROR_KEY_SERVER_ERROR 212,4171
#define OIDC_ERROR_KEY_UNSUPPORTED_GRANT_TYPE 217,4272
#define OIDC_ERROR_KEY_UNSUPPORTED_RESPONSE_TYPE 222,4401
#define OIDC_ERROR_KEY_UNAUTHORIZED_CLIENT 227,4530
#define OIDC_ERROR_KEY_ACCESS_DENIED 232,4640
#define OIDC_JWK_RSA_FILENAME 237,4730
#define CONSUME_TIMEOUT 242,4839
static char *OIDC_ignored_parameter_array[OIDC_ignored_parameter_array248,4976
struct GNUNET_CONTAINER_MultiHashMap *oidc_code_cache;oidc_code_cache259,5471
struct GNUNET_CONTAINER_MultiHashMap *OIDC_cookie_jar_map;OIDC_cookie_jar_map264,5586
const struct GNUNET_CONFIGURATION_Handle *oid_cfg;oid_cfg269,5682
static char *allow_methods;allow_methods274,5781
static struct EgoEntry *ego_head;ego_head279,5830
static struct EgoEntry *ego_tail;ego_tail284,5885
static int state;289,5952
static struct GNUNET_IDENTITY_Handle *identity_handle;identity_handle294,6011
static struct GNUNET_GNS_Handle *gns_handle;gns_handle299,6089
static struct GNUNET_RECLAIM_Handle *idp;idp304,6164
static struct GNUNET_TIME_Relative consume_timeout;309,6255
struct Plugin314,6387
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg316,6403
json_t *oidc_jwk;oidc_jwk322,6511
struct OIDC_Variables327,6563
  struct GNUNET_CRYPTO_PublicKey client_pkey;332,6629
  char *client_id;client_id337,6722
  char *redirect_uri;redirect_uri342,6781
  char *scope;scope347,6845
  char *state;state352,6893
  char *nonce;nonce357,6941
  char *claims;claims362,6990
  char *response_type;response_type367,7047
  char *login_identity;login_identity372,7129
  int user_cancelled;377,7206
  char *code_challenge;code_challenge382,7270
  char *code_verifier;code_verifier387,7335
struct EgoEntry394,7387
  struct EgoEntry *next;next399,7426
  struct EgoEntry *prev;prev404,7473
  char *identifier;identifier409,7531
  char *keystring;keystring414,7587
  struct GNUNET_IDENTITY_Ego *ego;ego419,7632
struct RequestHandle423,7672
  struct RequestHandle *next;next428,7716
  struct RequestHandle *prev;prev433,7768
  struct EgoEntry *ego_entry;ego_entry438,7829
  struct GNUNET_CRYPTO_PrivateKey priv_key;443,7904
  struct OIDC_Variables *oidc;oidc448,7981
  struct GNUNET_GNS_LookupRequest *gns_op;gns_op453,8044
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle458,8121
  struct GNUNET_RECLAIM_AttributeList *attr_idtoken_list;attr_idtoken_list463,8222
  struct GNUNET_RECLAIM_AttributeList *attr_userinfo_list;attr_userinfo_list468,8332
  struct GNUNET_RECLAIM_CredentialList *credentials;credentials473,8421
  struct GNUNET_RECLAIM_PresentationList *presentations;presentations478,8506
  struct GNUNET_IDENTITY_Operation *op;op483,8600
  struct GNUNET_RECLAIM_Operation *idp_op;idp_op489,8673
  struct GNUNET_SCHEDULER_Task *consume_timeout_op;consume_timeout_op494,8759
  struct GNUNET_RECLAIM_AttributeIterator *attr_it;attr_it499,8848
  struct GNUNET_RECLAIM_CredentialIterator *cred_it;cred_it504,8938
  struct GNUNET_RECLAIM_TicketIterator *ticket_it;ticket_it510,9026
  struct GNUNET_RECLAIM_Ticket ticket;515,9104
  struct GNUNET_TIME_Relative timeout;520,9217
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task525,9327
  GNUNET_REST_ResultProcessor proc;530,9419
  void *proc_cls;proc_cls535,9509
  char *url;url540,9553
  char *access_token;access_token545,9608
  char *tld;tld550,9669
  char *redirect_prefix;redirect_prefix555,9720
  char *redirect_suffix;redirect_suffix560,9783
  char *emsg;emsg565,9849
  char *edesc;edesc570,9908
  int response_code;575,9955
  int public_client;580,10008
static struct RequestHandle *requests_head;requests_head586,10048
static struct RequestHandle *requests_tail;requests_tail591,10108
cleanup_handle 599,10235
do_error 661,12492
do_userinfo_error 698,13918
do_redirect_error 727,14813
do_timeout 755,15702
options_cont 772,15972
cookie_identity_interpretation 792,16522
read_jwk_from_file 889,19510
write_jwk_to_file 915,20087
generate_jwk 936,20528
get_oidc_dir_path 952,20785
get_oidc_jwk_path 981,21642
login_redirect 1000,22000
oidc_iteration_error 1098,25543
oidc_ticket_issue_cb 1113,25933
attribute_list_merge 1179,28409
oidc_cred_collect_finished_cb 1234,31014
oidc_cred_collect 1261,32089
oidc_attr_collect_finished_cb 1299,33595
attr_in_claims_request 1327,34576
attr_in_idtoken_request 1365,35582
attr_in_userinfo_request 1373,35767
oidc_attr_collect 1384,36023
code_redirect 1429,37934
build_redirect 1498,40666
lookup_redirect_uri_result 1541,42092
client_redirect 1620,44564
get_url_parameter_copy 1637,45057
build_authz_response 1664,45815
tld_iter 1778,49638
authorize_endpoint 1802,50265
login_cont 1877,53038
parse_credentials_basic_auth 1945,55575
parse_credentials_post_body 2000,57359
check_authorization 2046,58913
find_ego 2143,62241
token_endpoint 2168,62825
consume_ticket 2453,73072
consume_fail 2549,76873
userinfo_endpoint 2645,80251
jwks_endpoint 2744,84030
list_ego 2825,86878
oidc_config_endpoint 2902,88919
oidc_config_cors 3003,92744
REST_openid_process_request 3027,93571
REST_openid_init 3086,96050
cleanup_hashmap 3127,97414
REST_openid_done 3141,97679

src/service/rest/gns_plugin.c,1386
#define GNUNET_REST_API_NS_GNS 39,1178
#define GNUNET_REST_GNS_PARAM_RECORD_TYPE 44,1263
#define GNUNET_REST_GNS_ERROR_UNKNOWN 49,1364
#define GNUNET_REST_GNS_NOT_FOUND 54,1466
const struct GNUNET_CONFIGURATION_Handle *gns_cfg;gns_cfg59,1556
static char *allow_methods;allow_methods64,1655
static struct GNUNET_GNS_Handle *gns;gns69,1713
struct Plugin74,1831
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg76,1847
struct RequestHandle82,1930
  struct RequestHandle *next;next87,1974
  struct RequestHandle *prev;prev92,2026
  struct GNUNET_GNS_LookupWithTldRequest *gns_lookup;gns_lookup97,2092
  char *name;name102,2180
  int record_type;107,2235
  struct GNUNET_REST_RequestHandle *rest_handle;rest_handle112,2288
  struct GNUNET_TIME_Relative timeout;117,2411
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task122,2521
  GNUNET_REST_ResultProcessor proc;127,2613
  void *proc_cls;proc_cls132,2703
  char *url;url137,2747
  char *emsg;emsg142,2801
  int response_code;147,2847
static struct RequestHandle *requests_head;requests_head153,2887
static struct RequestHandle *requests_tail;requests_tail158,2947
cleanup_handle 165,3086
do_error 201,3944
do_timeout 229,4795
handle_gns_response 248,5220
get_gns_cont 292,6522
options_cont 358,8485
REST_gns_process_request 386,9337
REST_gns_init 431,10805
REST_gns_done 463,11671

src/service/zonemaster/gnunet-service-zonemaster.c,4106
#define LOG_STRERROR_FILE(34,1191
#define PUBLISH_OPS_PER_EXPIRATION 44,1551
#define DELTA_INTERVAL 51,1733
#define NS_BLOCK_SIZE 56,1833
#define JOB_QUEUE_LIMIT 61,1966
#define NAMESTORE_MONITOR_QUEUE_LIMIT 67,2093
#define INITIAL_ZONE_ITERATION_INTERVAL 73,2217
#define MAXIMUM_ZONE_ITERATION_INTERVAL 79,2364
#define LATE_ITERATION_SPEEDUP_FACTOR 86,2579
#define DHT_GNS_REPLICATION_LEVEL 91,2688
static pthread_t * worker;96,2748
static pthread_mutex_t sign_jobs_lock;101,2817
static pthread_mutex_t sign_results_lock;106,2901
static pthread_cond_t sign_jobs_cond;111,2987
static int in_shutdown 116,3078
static int monitor_halted 121,3142
static struct GNUNET_DISK_PipeHandle *notification_pipe;notification_pipe126,3215
static struct GNUNET_SCHEDULER_Task *pipe_read_task;pipe_read_task131,3299
struct RecordPublicationJob133,3353
  struct RecordPublicationJob *next;next139,3405
  struct RecordPublicationJob *prev;prev144,3464
  struct GNUNET_CRYPTO_PrivateKey zone;149,3555
  struct GNUNET_GNSRECORD_Block *block;block154,3631
  struct GNUNET_GNSRECORD_Block *block_priv;block_priv160,3792
  size_t block_size;165,3901
  struct GNUNET_TIME_Absolute expire_pub;170,3997
  char *label;label175,4099
  struct GNUNET_DHT_PutHandle *ph;ph180,4166
  struct GNUNET_TIME_Absolute start_date;185,4248
static struct RecordPublicationJob *sign_jobs_head;sign_jobs_head193,4383
static struct RecordPublicationJob *sign_jobs_tail;sign_jobs_tail198,4457
static struct RecordPublicationJob *sign_results_head;sign_results_head203,4572
static struct RecordPublicationJob *sign_results_tail;sign_results_tail208,4649
static struct RecordPublicationJob *dht_jobs_head;dht_jobs_head214,4793
static struct RecordPublicationJob *dht_jobs_tail;dht_jobs_tail219,4866
struct CacheOperation225,4966
  struct CacheOperation *prev;prev230,5022
  struct CacheOperation *next;next235,5086
  struct GNUNET_NAMECACHE_QueueEntry *qe;qe240,5162
static struct GNUNET_STATISTICS_Handle *statistics;statistics248,5254
static struct GNUNET_DHT_Handle *dht_handle;dht_handle253,5340
static struct GNUNET_NAMESTORE_Handle *namestore_handle;namestore_handle258,5433
static struct GNUNET_NAMESTORE_ZoneMonitor *zmon;zmon263,5562
static struct GNUNET_NAMECACHE_Handle *namecache;namecache268,5660
static int disable_namecache;274,5825
static struct GNUNET_NAMESTORE_ZoneIterator *namestore_iter;namestore_iter279,5926
static unsigned int job_queue_length;284,6046
static unsigned long long num_public_records;289,6131
static unsigned long long last_num_public_records;294,6212
static unsigned long long put_cnt;300,6404
static struct GNUNET_TIME_Relative target_iteration_velocity_per_record;309,6697
static struct GNUNET_TIME_Relative min_relative_record_time;315,6869
static struct GNUNET_TIME_Relative last_min_relative_record_time;321,7026
static struct GNUNET_TIME_Relative zone_publish_time_window_default;326,7143
static struct GNUNET_TIME_Relative zone_publish_time_window;332,7323
static struct GNUNET_TIME_Absolute last_put_100;338,7505
static struct GNUNET_TIME_Relative sub_delta;346,7791
static struct GNUNET_SCHEDULER_Task *zone_publish_task;zone_publish_task351,7867
static unsigned int ns_iteration_left;357,8047
static int first_zone_iteration;362,8150
static int cache_keys;368,8280
static struct CacheOperation *cop_head;cop_head373,8332
static struct CacheOperation *cop_tail;cop_tail378,8401
free_job 382,8455
shutdown_task 399,8774
finish_cache_operation 495,11410
refresh_block 519,12078
publish_zone_namestore_next 552,13136
calculate_put_interval 577,13673
update_velocity 629,15780
check_zone_namestore_next 731,19614
dht_put_continuation 775,21280
dispatch_job 812,22341
initiate_put_from_pipe_trigger 888,25512
zone_iteration_error 962,28101
zone_iteration_finished 987,28778
handle_record 1038,30565
publish_zone_dht_start 1089,31954
dispatch_job_monitor 1126,33265
handle_monitor_event 1203,36561
handle_monitor_error 1252,38065
sign_worker 1263,38310
notification_pipe_cb 1300,39711
run 1316,40120

src/service/nse/test_nse_api.c,181
static struct GNUNET_NSE_Handle *h;h30,983
static struct GNUNET_SCHEDULER_Task *die_task;die_task32,1020
end_test 41,1159
check_nse_message 62,1716
run 79,2210
main 95,2682

src/service/nse/perf_kdf.c,32
perfHash 33,1040
main 49,1387

src/service/nse/nse_api.c,496
#define LOG(34,1138
struct GNUNET_NSE_Handle39,1261
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg44,1327
  struct GNUNET_MQ_Handle *mq;mq49,1424
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task54,1526
  struct GNUNET_TIME_Relative reconnect_delay;59,1621
  GNUNET_NSE_Callback recv_cb;64,1738
  void *recv_cb_cls;recv_cb_cls69,1827
mq_error_handler 92,2340
handle_estimate 113,2823
reconnect 131,3342
GNUNET_NSE_connect 164,4370
GNUNET_NSE_disconnect 192,4939

src/service/nse/test_nse_multipeer.c,432
#define NUM_PEERS 35,1218
#define TIMEOUT 40,1279
struct NSEPeer46,1406
  struct GNUNET_TESTBED_Operation *op;op51,1474
  struct GNUNET_NSE_Handle *nse_handle;nse_handle56,1554
static struct NSEPeer nse_peers[nse_peers63,1641
static int ok;68,1723
shutdown_task 75,1808
handle_estimate 96,2312
nse_connect_complete_cb 121,3164
nse_connect_adapter 154,4095
nse_disconnect_adapter 171,4499
run 191,5026
main 223,6122

src/service/nse/nse.h,294
#define NSE_H29,964
struct GNUNET_NSE_ClientMessage42,1233
  struct GNUNET_MessageHeader header;47,1323
  uint32_t reserved GNUNET_PACKED;52,1394
  struct GNUNET_TIME_AbsoluteNBO timestamp;57,1499
  double size_estimate GNUNET_PACKED;62,1597
  double std_deviation GNUNET_PACKED;69,1745

src/service/nse/gnunet-service-nse.c,3352
#define USE_RANDOM_DELAYS 58,2135
#define DEBUG_NSE 63,2229
#define HISTORY_SIZE 68,2328
#define NSE_PRIORITY 74,2445
#define log2(79,2613
static unsigned long long nse_work_required;85,2746
static struct GNUNET_TIME_Relative gnunet_nse_interval;90,2864
static struct GNUNET_TIME_Relative proof_find_delay;95,2966
struct GNUNET_CLIENT_TestHandle *logger_test;logger_test102,3116
static struct GNUNET_TESTBED_LOGGER_Handle *lh;lh107,3228
static struct GNUNET_BIO_WriteHandle *histogram;histogram112,3355
static struct GNUNET_CRYPTO_PowSalt salt 119,3452
struct NSEPeerEntry125,3554
  struct GNUNET_MQ_Handle *mq;mq130,3640
  const struct GNUNET_PeerIdentity *id;id135,3723
  struct GNUNET_SCHEDULER_Task *transmit_task;transmit_task140,3826
  int previous_round;147,4037
  unsigned int received_messages;153,4160
  unsigned int transmitted_messages;158,4271
  unsigned int last_transmitted_size;163,4374
struct GNUNET_NSE_FloodMessage175,4591
  struct GNUNET_MessageHeader header;180,4682
  uint32_t hop_count GNUNET_PACKED;185,4784
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;190,4847
  struct GNUNET_TIME_AbsoluteNBO timestamp;196,4985
  uint32_t matching_bits GNUNET_PACKED;203,5143
  struct GNUNET_PeerIdentity origin;208,5231
  uint64_t proof_of_work GNUNET_PACKED;213,5346
  struct GNUNET_CRYPTO_EddsaSignature signature;218,5449
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg225,5576
static struct GNUNET_STATISTICS_Handle *stats;stats230,5676
static struct GNUNET_CORE_Handle *core_api;core_api235,5763
static struct GNUNET_CONTAINER_MultiPeerMap *peers;peers240,5847
static double current_size_estimate;246,5995
static double current_std_dev 252,6120
static uint32_t hop_count_max;257,6231
static struct GNUNET_NSE_FloodMessage next_message;262,6317
static struct GNUNET_NSE_FloodMessage size_estimate_messages[size_estimate_messages267,6421
static unsigned int estimate_index;272,6540
static unsigned int estimate_count;277,6628
static struct GNUNET_SCHEDULER_Task *flood_task;flood_task282,6739
static struct GNUNET_SCHEDULER_Task *proof_task;proof_task287,6837
static struct GNUNET_NotificationContext *nc;nc292,6950
static struct GNUNET_TIME_Absolute next_timestamp;297,7029
static struct GNUNET_TIME_Absolute current_timestamp;302,7116
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key307,7212
static struct GNUNET_PeerIdentity my_identity;312,7317
static uint64_t my_proof;317,7405
setup_estimate_message 327,7566
#define WEST 336,7726
handle_start 428,10342
get_matching_bits_delay 453,11066
get_delay_randomization 473,11721
get_matching_bits 503,12536
get_transmit_delay 532,13526
transmit_task_cb 581,15135
update_network_size_estimate 645,17449
setup_flood_message 662,17808
schedule_current_round 701,19215
update_flood_message 739,20315
check_proof_of_work 791,22093
write_proof 817,22817
find_proof 847,23650
#define ROUND_SIZE 849,23675
verify_message_crypto 915,25706
update_flood_times 951,26917
handle_p2p_estimate 991,27981
handle_core_connect 1165,34025
handle_core_disconnect 1205,35395
flush_comp_cb 1236,36276
shutdown_task 1254,36486
core_init 1319,37713
status_cb 1364,39188
run 1393,39771
client_connect_cb 1526,44802
client_disconnect_cb 1544,45189
GNUNET_NSE_memory_init 1576,46139

src/service/hostlist/gnunet-daemon-hostlist_server.h,47
#define GNUNET_DAEMON_HOSTLIST_SERVER_H28,983

src/service/hostlist/gnunet-daemon-hostlist.h,70
#define MAX_URL_LEN 36,1149
#define MAX_BYTES_PER_HOSTLISTS 41,1248

src/service/hostlist/gnunet-daemon-hostlist_client.c,3787
#define MIN_CONNECTIONS 40,1352
#define MAX_NUMBER_HOSTLISTS 45,1432
#define SAVING_INTERVAL 50,1518
#define TESTING_INTERVAL 56,1666
#define WAITING_INTERVAL 62,1845
#define HOSTLIST_INITIAL 72,2053
#define HOSTLIST_FAILED_DOWNLOAD 77,2149
#define HOSTLIST_SUCCESSFUL_DOWNLOAD 82,2254
#define HOSTLIST_SUCCESSFUL_HELLO 87,2376
struct Hostlist93,2479
  struct Hostlist *prev;prev98,2577
  struct Hostlist *next;next103,2679
  const char *hostlist_uri;hostlist_uri108,2757
  uint64_t quality;118,3257
  struct GNUNET_TIME_Absolute time_creation;123,3366
  struct GNUNET_TIME_Absolute time_last_usage;128,3465
  uint32_t hello_count;133,3585
  uint32_t times_used;138,3682
struct StoreHelloEntry144,3755
  struct StoreHelloEntry *prev;prev149,3819
  struct StoreHelloEntry *next;next154,3891
  struct GNUNET_PEERSTORE_StoreHelloContext *sc;sc159,3957
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg165,4040
static struct GNUNET_STATISTICS_Handle *stats;stats170,4125
static char *proxy;proxy175,4233
static char *proxy_username;proxy_username180,4308
static char *proxy_password;proxy_password185,4392
static curl_proxytype proxy_type;190,4472
static size_t download_pos;195,4562
static char *current_url;current_url200,4633
static CURL *curl;curl205,4692
static CURLM *multi;multi210,4750
static uint32_t stat_bytes_downloaded;215,4845
static struct GNUNET_TIME_Relative hostlist_delay;220,4947
static struct GNUNET_SCHEDULER_Task *ti_check_download;ti_check_download225,5074
static struct GNUNET_SCHEDULER_Task *ti_download;ti_download230,5182
static struct GNUNET_SCHEDULER_Task *ti_saving_task;ti_saving_task235,5301
static struct GNUNET_SCHEDULER_Task *ti_download_dispatcher_task;ti_download_dispatcher_task240,5411
static struct GNUNET_SCHEDULER_Task *ti_testing_intervall_task;ti_testing_intervall_task245,5555
static struct GNUNET_TIME_Absolute end_time;250,5687
static struct StoreHelloEntry *she_head;she_head255,5806
static struct StoreHelloEntry *she_tail;she_tail260,5921
static struct Hostlist *linked_list_head;linked_list_head265,6022
static struct Hostlist *linked_list_tail;linked_list_tail270,6125
static struct Hostlist *current_hostlist;current_hostlist275,6218
static unsigned int linked_list_size;280,6322
static struct Hostlist *hostlist_to_test;hostlist_to_test285,6420
static struct GNUNET_STATISTICS_GetHandle *sget;sget290,6515
static int stat_bogus_url;295,6632
static int stat_testing_hostlist;300,6727
static int stat_testing_allowed;305,6838
static int stat_download_in_progress;310,6949
static unsigned int stat_use_bootstrap;315,7056
static int stat_learning;320,7166
static unsigned int stat_download_successful;325,7253
static unsigned int stat_hellos_obtained;330,7384
static unsigned int stat_connection_count;335,7496
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore340,7584
shc_cont 344,7648
callback_download 370,8345
get_bootstrap_server 461,11006
download_get_url 527,12459
#define CURL_EASY_SETOPT(573,13689
checked_add 604,14708
checked_sub 627,15041
linked_list_contains 642,15321
linked_list_get_lowest_quality 662,15714
insert_hostlist 687,16214
update_hostlist 723,17372
clean_up 777,19059
download_prepare 850,20785
task_download 911,22642
download_hostlist 1008,25293
task_download_dispatcher 1151,30049
task_check 1178,30847
task_testing_intervall_reset 1230,32469
task_hostlist_saving 1245,32810
handler_connect 1267,33458
handler_disconnect 1288,34015
handler_advertisement 1307,34514
primary_task 1370,36517
stat_timeout_task 1392,37066
process_stat 1410,37579
load_hostlist_file 1429,38146
save_hostlist_file 1539,41771
GNUNET_HOSTLIST_client_start 1644,45215
GNUNET_HOSTLIST_client_stop 1816,51582

src/service/hostlist/gnunet-daemon-hostlist_server.c,1491
#define GNUNET_ADV_TIMEOUT 43,1420
struct GNUNET_CONTAINER_MultiPeerMap *hellos;hellos49,1573
static struct MHD_Daemon *daemon_handle_v6;daemon_handle_v654,1696
static struct MHD_Daemon *daemon_handle_v4;daemon_handle_v459,1817
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg64,1892
static struct GNUNET_STATISTICS_Handle *stats;stats69,1982
static struct GNUNET_CORE_Handle *core;core74,2104
struct GNUNET_SCHEDULER_Task *peerstore_notify_task;peerstore_notify_task80,2295
static struct GNUNET_PEERSTORE_Monitor *peerstore_notify;peerstore_notify86,2479
static struct GNUNET_SCHEDULER_Task *hostlist_task_v4;hostlist_task_v491,2576
static struct GNUNET_SCHEDULER_Task *hostlist_task_v6;hostlist_task_v696,2670
static struct MHD_Response *response;response101,2761
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore106,2844
static int advertising;111,2965
static char *hostlist_uri;hostlist_uri116,3033
struct HostSet122,3104
  char *data;data127,3191
  unsigned int size;132,3251
static struct HostSet *builder;builder139,3350
add_cors_headers 149,3540
finish_response 163,3943
host_processor 198,5045
accept_policy_callback 248,6598
access_handler_callback 299,8689
adv_transmit 386,11698
connect_handler 425,13067
process_notify 467,14121
run_daemon 538,16563
prepare_daemon 561,17140
error_cb 601,18349
sync_cb 609,18479
start_notify 617,18634
GNUNET_HOSTLIST_server_start 647,19763
GNUNET_HOSTLIST_server_stop 861,27204

src/service/hostlist/gnunet-daemon-hostlist.c,856
static int advertising;38,1262
static int provide_hostlist;43,1349
static GNUNET_CORE_ConnectEventHandler server_ch;48,1434
static int bootstrapping;54,1573
static int learning;60,1687
static struct GNUNET_STATISTICS_Handle *stats;stats65,1739
static struct GNUNET_CORE_Handle *core;core70,1861
static GNUNET_HOSTLIST_UriHandler client_adv_handler;75,1967
static GNUNET_CORE_ConnectEventHandler client_ch;80,2077
static GNUNET_CORE_DisconnectEventHandler client_dh;85,2186
struct GNUNET_HOSTLIST_ADV_Message101,2719
  struct GNUNET_MessageHeader header;106,2830
  uint32_t reserved GNUNET_PACKED;111,2915
static struct GNUNET_PeerIdentity me;119,3015
core_init 129,3202
check_advertisement 144,3496
handle_advertisement 176,4173
connect_handler 196,4686
disconnect_handler 227,5576
cleaning_task 249,6051
run 284,6753
main 358,8911

src/service/hostlist/test_gnunet_daemon_hostlist_learning.c,1585
#define MAX_URL_LEN 33,1191
#define TIMEOUT 38,1270
#define CHECK_INTERVAL 40,1349
struct PeerContext44,1490
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg46,1511
  struct GNUNET_MessageHeader *hello;hello47,1554
  struct GNUNET_CORE_Handle *core;core48,1592
  struct GNUNET_STATISTICS_Handle *stats;stats49,1627
  struct GNUNET_OS_Process *arm_proc;arm_proc50,1669
static int timeout;53,1711
static int adv_sent;55,1732
static int adv_arrived;57,1754
static int learned_hostlist_saved;59,1779
static int learned_hostlist_downloaded;61,1815
static char *current_adv_uri;current_adv_uri63,1856
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg65,1887
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task67,1942
static struct GNUNET_SCHEDULER_Task *check_task;check_task69,1994
static struct PeerContext adv_peer;71,2044
static struct PeerContext learn_peer;73,2081
static struct GNUNET_STATISTICS_GetHandle *download_stats;download_stats75,2120
static struct GNUNET_STATISTICS_GetHandle *urisrecv_stat;urisrecv_stat77,2180
static struct GNUNET_STATISTICS_GetHandle *advsent_stat;advsent_stat79,2239
shutdown_testcase 83,2310
timeout_error 170,4715
process_downloads_done 181,4936
do_shutdown 188,5027
process_downloads 195,5092
process_uris_recv_done 217,5689
process_uris_recv 224,5778
process_adv_sent_done 251,6467
process_adv_sent 258,6554
check_statistics 284,7205
check_ad_arrive 331,8779
handle_ad_arrive 347,9113
setup_learn_peer 398,10778
setup_adv_peer 455,12779
run 479,13583
check 508,14375
main 566,15869

src/service/hostlist/test_gnunet_daemon_hostlist.c,719
#define TIMEOUT 35,1166
static int ok;37,1245
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task39,1261
struct PeerContext41,1313
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg43,1334
  struct GNUNET_TRANSPORT_CoreHandle *th;th44,1377
  struct GNUNET_MessageHeader *hello;hello45,1419
  struct GNUNET_TRANSPORT_HelloGetHandle *ghh;ghh46,1457
  struct GNUNET_OS_Process *arm_proc;arm_proc47,1504
static struct PeerContext p1;50,1546
static struct PeerContext p2;52,1577
clean_up 56,1621
timeout_error 86,2121
notify_connect 104,2525
process_hello 121,2924
setup_peer 133,3209
waitpid_task 167,4638
stop_arm 186,5270
shutdown_task 197,5529
run 205,5609
check 220,6038
main 242,6611

src/service/hostlist/test_gnunet_daemon_hostlist_reconnect.c,683
#define TIMEOUT 35,1240
static int ok;37,1319
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task39,1335
struct PeerContext41,1387
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg43,1408
  struct GNUNET_TRANSPORT_CoreHandle *th;th44,1451
  struct GNUNET_MessageHeader *hello;hello45,1493
  struct GNUNET_TRANSPORT_HelloGetHandle *ghh;ghh46,1531
  struct GNUNET_OS_Process *arm_proc;arm_proc47,1578
static struct PeerContext p1;50,1620
static struct PeerContext p2;52,1651
timeout_error 59,1724
notify_connect 78,2147
process_hello 90,2427
setup_peer 102,2712
waitpid_task 136,4141
stop_arm 155,4773
shutdown_task 166,5032
run 199,5597
main 214,6019

src/service/hostlist/gnunet-daemon-hostlist_client.h,112
#define GNUNET_DAEMON_HOSTLIST_CLIENT_H26,981
(*GNUNET_HOSTLIST_UriHandler)GNUNET_HOSTLIST_UriHandler39,1238

src/service/peerstore/peerstore_api.c,3397
#define LOG(34,1140
struct GNUNET_PEERSTORE_Handle43,1505
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg48,1574
  struct GNUNET_MQ_Handle *mq;mq53,1655
  struct GNUNET_PEERSTORE_StoreContext *store_head;store_head58,1735
  struct GNUNET_PEERSTORE_StoreContext *store_tail;store_tail63,1836
  struct GNUNET_PEERSTORE_IterateContext *iterate_head;iterate_head68,1939
  struct GNUNET_PEERSTORE_IterateContext *iterate_tail;iterate_tail73,2046
  struct GNUNET_CONTAINER_MultiHashMap *watches;watches78,2146
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task83,2264
  struct GNUNET_TIME_Relative reconnect_delay;88,2363
  uint32_t last_op_id;93,2428
struct GNUNET_PEERSTORE_StoreHelloContext100,2502
  struct GNUNET_PEERSTORE_Handle *h;h105,2581
  GNUNET_PEERSTORE_Continuation cont;110,2671
  void *cont_cls;cont_cls115,2752
  struct GNUNET_MessageHeader *hello;hello120,2829
  struct GNUNET_PeerIdentity pid;125,2912
  struct GNUNET_PEERSTORE_StoreContext *sc;sc130,2994
  struct GNUNET_PEERSTORE_IterateContext *ic;ic135,3084
struct GNUNET_PEERSTORE_StoreContext141,3173
  struct GNUNET_PEERSTORE_StoreContext *next;next146,3244
  struct GNUNET_PEERSTORE_StoreContext *prev;prev151,3323
  struct GNUNET_PEERSTORE_Handle *h;h156,3420
  GNUNET_PEERSTORE_Continuation cont;161,3517
  uint32_t rid;166,3584
  void *cont_cls;cont_cls171,3638
  char *sub_system;sub_system176,3706
  char *key;key181,3773
  void *value;value186,3828
  struct GNUNET_PeerIdentity peer;191,3884
  size_t size;196,3966
  struct GNUNET_TIME_Absolute expiry;201,4027
  enum GNUNET_PEERSTORE_StoreOption options;206,4116
  struct GNUNET_MQ_Envelope *env;env211,4198
struct StoreHelloCls217,4299
  struct GNUNET_PEERSTORE_StoreContext *sc;sc222,4372
  struct GNUNET_PEERSTORE_StoreHelloContext *huc;huc227,4475
struct GNUNET_PEERSTORE_IterateContext233,4570
  struct GNUNET_PEERSTORE_IterateContext *next;next238,4643
  struct GNUNET_PEERSTORE_IterateContext *prev;prev243,4724
  struct GNUNET_PEERSTORE_Handle *h;h248,4823
  char *sub_system;sub_system253,4910
  struct GNUNET_PeerIdentity peer;258,4971
  char *key;key263,5053
  GNUNET_PEERSTORE_Processor callback;268,5119
  void *callback_cls;callback_cls273,5200
  uint32_t rid;278,5251
  struct GNUNET_MQ_Envelope *env;env283,5304
struct GNUNET_PEERSTORE_NotifyContext290,5384
  struct GNUNET_PEERSTORE_Handle *h;h295,5459
  GNUNET_PEERSTORE_hello_notify_cb callback;300,5549
  void *callback_cls;callback_cls305,5637
  struct GNUNET_PEERSTORE_Monitor *wc;wc310,5705
  unsigned int canceled;315,5788
  uint32_t rid;320,5842
get_op_id 343,6433
disconnect 355,6619
disconnect_and_schedule_reconnect 379,7147
handle_client_error 401,7957
GNUNET_PEERSTORE_connect 419,8359
GNUNET_PEERSTORE_disconnect 443,8855
destroy_storecontext 456,9290
GNUNET_PEERSTORE_store_cancel 472,9615
GNUNET_PEERSTORE_store 501,10510
handle_store_result 565,12511
destroy_iteratecontext 593,13351
handle_iterate_end 609,13736
check_iterate_result 638,14535
handle_iterate_result 652,14846
GNUNET_PEERSTORE_iteration_next 693,15944
GNUNET_PEERSTORE_iteration_stop 722,16677
GNUNET_PEERSTORE_iteration_start 741,17215
reconnect 802,19071
hello_store_success 851,20750
hello_add_iter 872,21194
GNUNET_PEERSTORE_hello_add 917,22804
GNUNET_PEERSTORE_hello_add_cancel 962,24444

src/service/peerstore/peerstore.h,1996
#define PEERSTORE_H_27,921
struct PeerstoreRecordMessage37,1067
  struct GNUNET_MessageHeader header;42,1138
  struct GNUNET_PeerIdentity peer;47,1208
  struct GNUNET_TIME_AbsoluteNBO expiry;52,1282
  uint32_t rid GNUNET_PACKED;57,1351
  uint32_t /* enum GNUNET_PEERSTORE_StoreOption */ options GNUNET_PACKED;63,1454
  uint16_t key_size GNUNET_PACKED;69,1616
  uint16_t value_size GNUNET_PACKED;75,1735
  uint16_t sub_system_size GNUNET_PACKED;82,1868
  uint16_t reserved GNUNET_PACKED;87,1937
struct PeerstoreResultMessage95,2066
  struct GNUNET_MessageHeader header;100,2137
  uint32_t rid GNUNET_PACKED;105,2205
  uint32_t result GNUNET_PACKED;111,2308
struct StoreKeyHashMessage118,2390
  struct GNUNET_MessageHeader header;123,2458
  uint32_t rid GNUNET_PACKED;128,2526
  struct GNUNET_HashCode keyhash;133,2595
struct PeerstoreMonitorStartMessage139,2668
  struct GNUNET_MessageHeader header;144,2745
  struct GNUNET_PeerIdentity peer;149,2815
  uint32_t rid GNUNET_PACKED;154,2880
  uint16_t key_size GNUNET_PACKED;160,2998
  uint16_t peer_set GNUNET_PACKED;165,3106
  uint16_t sub_system_size GNUNET_PACKED;171,3236
  uint16_t iterate_first GNUNET_PACKED;176,3347
struct PeerstoreMonitorNextMessage184,3450
  struct GNUNET_MessageHeader header;189,3526
  uint64_t limit GNUNET_PACKED;194,3611
struct PeerstoreIterationStartMessage201,3683
  struct GNUNET_MessageHeader header;206,3762
  struct GNUNET_PeerIdentity peer;211,3832
  uint32_t rid GNUNET_PACKED;216,3897
  uint16_t peer_set GNUNET_PACKED;221,4000
  uint16_t sub_system_size GNUNET_PACKED;227,4130
  uint16_t reserved GNUNET_PACKED;232,4199
  uint16_t key_size GNUNET_PACKED;238,4322
struct PeerstoreIterationNextMessage247,4435
  struct GNUNET_MessageHeader header;252,4513
  uint64_t limit GNUNET_PACKED;257,4598
  uint32_t rid GNUNET_PACKED;262,4660
struct PeerstoreIterationStopMessage265,4694
  struct GNUNET_MessageHeader header;270,4772
  uint32_t rid GNUNET_PACKED;275,4840

src/service/peerstore/test_peerstore_api_watch.c,486
static int ok 30,1032
static struct GNUNET_PEERSTORE_Handle *h;h32,1052
static struct GNUNET_PEERSTORE_Monitor *wc;wc34,1095
static struct GNUNET_PEERSTORE_StoreContext *sr;sr36,1140
static char *ss ss38,1190
static char *k k40,1237
static char *val val42,1287
static struct GNUNET_PeerIdentity p;44,1339
finish 47,1389
cont2 65,1734
cont 72,1796
static int initial_iteration 87,2249
watch_cb 90,2305
sync_cb 115,2873
error_cb 123,3016
run 131,3098
main 156,3840

src/service/peerstore/gnunet-service-peerstore.c,2738
#define EXPIRED_RECORDS_CLEANUP_INTERVAL 39,1237
struct Monitor50,1383
  struct Monitor *next;next55,1441
  struct Monitor *prev;prev60,1511
  struct PeerstoreClient *pc;pc65,1603
  struct GNUNET_SCHEDULER_Task *task;task70,1689
  struct GNUNET_SCHEDULER_Task *sa_wait_warning;sa_wait_warning75,1779
  struct GNUNET_TIME_Absolute sa_waiting_start;80,1889
  uint64_t seq;89,2129
  uint64_t limit;95,2249
  uint64_t iteration_cnt;103,2508
  int in_first_iteration;108,2598
  int peer_set;113,2659
  char *sub_system;sub_system118,2723
  struct GNUNET_PeerIdentity peer;123,2775
  char *key;key128,2846
struct Iteration134,2907
  struct Iteration *next;next139,2967
  struct Iteration *prev;prev144,3039
  struct PeerstoreClient *pc;pc149,3135
  uint64_t seq;158,3361
  uint32_t request_id;163,3466
  uint32_t offset;172,3722
  int send_end;179,3957
  char *sub_system;sub_system184,4021
  struct GNUNET_PeerIdentity peer;189,4073
  char *key;key194,4144
  int peer_set;199,4188
struct PeerstoreClient205,4238
  struct GNUNET_SERVICE_Client *client;client210,4291
  struct GNUNET_MQ_Handle *mq;mq215,4393
  struct Iteration *op_head;op_head221,4529
  struct Iteration *op_tail;op_tail227,4663
struct StoreRecordContext231,4697
  struct GNUNET_PEERSTORE_Record *record;record236,4770
  uint32_t rid;241,4845
  struct PeerstoreClient *pc;pc246,4890
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg252,4954
static char *db_lib_name;db_lib_name257,5049
static struct GNUNET_PEERSTORE_PluginFunctions *db;db262,5103
static struct GNUNET_SCHEDULER_Task *expire_task;expire_task267,5205
static struct Monitor *monitors_head;monitors_head272,5279
static struct Monitor *monitors_tail;monitors_tail277,5341
static struct GNUNET_NotificationContext *monitor_nc;monitor_nc282,5436
shutdown_task 290,5564
cleanup_expired_records 322,6213
expire_records_continuation 351,6978
monitor_sync 370,7513
watch_notifier 391,8034
struct IterationProcResult429,9097
  struct Iteration *ic;ic434,9169
  uint64_t limit;439,9268
iterate_proc 454,9601
destroy_iteration 496,10527
iteration_done_client_continue 511,10840
run_iteration_round 538,11542
check_iterate_start 581,13095
handle_iterate_start 608,13641
handle_iterate_stop 647,14800
handle_iterate_next 679,15623
monitor_iterate_cb 728,16914
monitor_iteration_next 788,18375
check_monitor_start 836,19667
handle_monitor_start 862,20190
handle_monitor_next 909,21697
store_record_continuation 954,22902
check_store 979,23574
handle_store 1007,24173
client_connect_cb 1051,25652
client_disconnect_cb 1073,26174
store_hello_continuation 1115,27194
hosts_directory_scan_callback 1129,27428
run 1195,29539

src/service/peerstore/perf_peerstore_store.c,472
#define STORES 29,1009
static int ok 31,1031
static struct GNUNET_PEERSTORE_Handle *h;h33,1051
static struct GNUNET_PEERSTORE_Monitor *wc;wc35,1094
static char *ss ss37,1139
static struct GNUNET_PeerIdentity p;38,1182
static char *k k39,1219
static char *v v40,1265
static int count 42,1312
static int count_fin 43,1334
disconnect 46,1373
store_cont 56,1538
store 68,1722
watch_cb 81,2092
error_cb 90,2272
sync_cb 96,2332
run 107,2479
main 123,2971

src/service/peerstore/peerstore_api_monitor.c,1006
#define LOG(32,1091
struct GNUNET_PEERSTORE_Monitor37,1250
  struct GNUNET_PEERSTORE_Monitor *next;next42,1316
  struct GNUNET_PEERSTORE_Monitor *prev;prev47,1390
  GNUNET_SCHEDULER_TaskCallback error_cb;52,1477
  void *error_cb_cls;error_cb_cls57,1562
  GNUNET_PEERSTORE_Processor callback;62,1637
  void *callback_cls;callback_cls67,1718
  struct GNUNET_HashCode keyhash;72,1783
  const struct GNUNET_PeerIdentity *peer;peer77,1872
  const char *key;key82,1969
  char *sub_system;sub_system87,2042
  uint32_t rid;92,2091
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg97,2129
  GNUNET_SCHEDULER_TaskCallback sync_cb;102,2204
  void *sync_cb_cls;sync_cb_cls107,2275
  struct GNUNET_MQ_Handle *mq;mq112,2317
  int iterate_first;117,2385
handle_sync 121,2422
check_result 138,2793
handle_result 152,3079
mq_error_handler 176,3698
reconnect 185,3835
GNUNET_PEERSTORE_monitor_start 239,5646
GNUNET_PEERSTORE_monitor_stop 282,6629
GNUNET_PEERSTORE_monitor_next 295,6841

src/service/peerstore/test_peerstore_api_store.c,597
static int ok 30,1018
static struct GNUNET_PEERSTORE_Handle *h;h32,1038
static struct GNUNET_PEERSTORE_IterateContext *ic;ic33,1080
static char *subsystem subsystem35,1132
static struct GNUNET_PeerIdentity pid;36,1185
static char *key key37,1224
static char *val1 val138,1275
static char *val2 val239,1328
static char *val3 val340,1382
static int count 42,1438
finish 46,1474
test3_cont2 54,1578
test3_cont 76,2094
test3 95,2548
test2_cont2 111,2973
test2_cont 134,3574
test2 151,3983
test1_cont2 167,4409
test1_cont 191,4944
test1 210,5453
run 227,5935
main 238,6159

src/service/peerstore/test_peerstore_api_iterate.c,518
static int ok 29,1033
static struct GNUNET_PEERSTORE_Handle *h;h31,1053
static struct GNUNET_PEERSTORE_IterateContext *ic;ic32,1095
static char *ss ss34,1147
static struct GNUNET_PeerIdentity p1;35,1195
static struct GNUNET_PeerIdentity p2;36,1233
static char *k1 k137,1271
static char *k2 k238,1324
static char *k3 k339,1377
static char *val val40,1430
static int count 41,1483
finish 44,1518
iter3_cb 52,1622
iter2_cb 74,2011
iter1_cb 101,2642
store_cont 129,3336
run 173,4603
main 196,5249

src/service/peerstore/peerstore_common.c,149
PEERSTORE_hash_key 33,1036
PEERSTORE_create_record_mq_envelope 62,1809
PEERSTORE_parse_record_message 106,3293
PEERSTORE_destroy_record 156,4447

src/service/transport/transport_api_cmd_start_peer.c,248
#define LOG(38,1237
hello_iter_cb 50,1420
retrieve_hello 82,2254
notify_disconnect 101,2821
notify_connect 121,3250
start_peer_run 168,4476
start_peer_cleanup 379,11285
start_peer_traits 408,11894
GNUNET_TRANSPORT_cmd_start_peer 444,13364

src/service/transport/transport-testing2.c,631
#define LOG(30,1008
find_peer_context 34,1143
GNUNET_TRANSPORT_TESTING_find_connecting_context 57,1711
set_p1c 83,2669
set_mq 95,2860
set_p2c 105,3010
clear_p1c 117,3201
clear_p2c 129,3395
notify_connect 141,3591
notify_disconnect 251,6866
hello_iter_cb 326,9412
retrieve_hello 359,10255
GNUNET_TRANSPORT_TESTING_start_peer 374,10757
GNUNET_TRANSPORT_TESTING_restart_peer 524,15501
GNUNET_TRANSPORT_TESTING_stop_peer 614,18049
GNUNET_TRANSPORT_TESTING_connect_peers 729,20849
GNUNET_TRANSPORT_TESTING_connect_peers_cancel 780,22373
GNUNET_TRANSPORT_TESTING_done 811,23147
GNUNET_TRANSPORT_TESTING_init 851,24140

src/service/transport/gnunet-service-transport.c,31045
#define RING_BUFFER_SIZE 88,4089
#define MAX_FC_RETRANSMIT_COUNT 93,4201
#define MAX_CUMMULATIVE_ACKS 99,4371
#define FC_NO_CHANGE_REPLY_PROBABILITY 113,5091
#define IN_PACKET_SIZE_WITHOUT_MTU 119,5253
#define GOODPUT_AGING_SLOTS 125,5397
#define DEFAULT_WINDOW_SIZE 131,5532
#define MAX_INCOMING_REQUEST 141,5896
#define MAX_DV_DISCOVERY_SELECTION 147,6048
#define RECV_WINDOW_SIZE 157,6401
#define MIN_DV_PATH_LENGTH_FOR_INITIATOR 166,6638
#define MAX_DV_HOPS_ALLOWED 171,6727
#define MAX_DV_LEARN_PENDING 177,6852
#define MAX_DV_PATHS_TO_TARGET 182,6966
#define DELAY_WARN_THRESHOLD 189,7186
#define DV_FORWARD_TIMEOUT 196,7375
#define DEFAULT_ACK_WAIT_DURATION 202,7541
#define DV_QUALITY_RTT_THRESHOLD 210,7823
#define DV_PATH_VALIDITY_TIMEOUT 217,8063
#define BACKCHANNEL_INACTIVITY_TIMEOUT 224,8281
#define DV_PATH_DISCOVERY_FREQUENCY 231,8517
#define EPHEMERAL_VALIDITY 237,8670
#define REASSEMBLY_EXPIRATION 243,8853
#define FAST_VALIDATION_CHALLENGE_FREQ 250,9075
#define MAX_VALIDATION_CHALLENGE_FREQ 256,9250
#define ACK_CUMMULATOR_TIMEOUT 264,9538
#define DV_LEARN_BASE_FREQUENCY 271,9740
#define DV_LEARN_QUALITY_THRESHOLD 277,9935
#define MAX_ADDRESS_VALID_UNTIL 282,10033
#define ADDRESS_VALIDATION_LIFETIME 288,10207
#define MIN_DELAY_ADDRESS_VALIDATION 297,10554
#define VALIDATION_RTT_BUFFER_FACTOR 305,10869
#define COMMUNICATOR_TOTAL_QUEUE_LIMIT 313,11120
#define QUEUE_LENGTH_LIMIT 320,11333
#define QUEUE_ENTRY_TIMEOUT 325,11375
struct MessageUUIDP334,11557
  uint64_t uuid GNUNET_PACKED;340,11687
struct AcknowledgementUUIDP347,11797
  struct GNUNET_Uuid value;352,11860
struct TransportBackchannelEncapsulationMessage358,11955
  struct GNUNET_MessageHeader header;363,12088
struct EphemeralConfirmationPS375,12360
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;380,12467
  struct GNUNET_TIME_AbsoluteNBO sender_monotonic_time;396,13234
  struct GNUNET_PeerIdentity target;401,13332
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral_key;407,13470
struct TransportDVBoxPayloadP415,13658
  struct GNUNET_PeerIdentity sender;420,13731
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;426,13870
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;438,14407
struct TransportReliabilityBoxMessage449,14665
  struct GNUNET_MessageHeader header;454,14777
  uint32_t ack_countdown GNUNET_PACKED;462,15056
  struct AcknowledgementUUIDP ack_uuid;469,15250
struct TransportCummulativeAckPayloadP476,15331
  struct GNUNET_TIME_RelativeNBO ack_delay;484,15605
  struct AcknowledgementUUIDP ack_uuid;489,15705
struct TransportReliabilityAckMessage500,16050
  struct GNUNET_MessageHeader header;505,16162
  uint32_t ack_counter GNUNET_PACKED;511,16345
struct TransportFragmentBoxMessage521,16567
  struct GNUNET_MessageHeader header;526,16669
  uint16_t frag_off GNUNET_PACKED;531,16773
  uint16_t msg_size GNUNET_PACKED;536,16878
  struct AcknowledgementUUIDP ack_uuid;545,17253
  struct MessageUUIDP msg_uuid;551,17426
struct DvInitPS572,18264
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;577,18359
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;591,18980
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;596,19110
struct DvHopPS616,19944
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;621,20032
  struct GNUNET_PeerIdentity pred;626,20145
  struct GNUNET_PeerIdentity succ;631,20237
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;636,20353
struct DVPathEntryP644,20506
  struct GNUNET_PeerIdentity hop;649,20577
  struct GNUNET_CRYPTO_EddsaSignature hop_sig;655,20725
struct TransportDVLearnMessage672,21371
  struct GNUNET_MessageHeader header;677,21469
  uint16_t num_hops GNUNET_PACKED;683,21609
  uint16_t bidirectional GNUNET_PACKED;693,22022
  struct GNUNET_TIME_RelativeNBO non_network_delay;700,22247
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;714,22868
  struct GNUNET_CRYPTO_EddsaSignature init_sig;720,23037
  struct GNUNET_PeerIdentity initiator;725,23161
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;730,23282
struct TransportDVBoxMessage760,24665
  struct GNUNET_MessageHeader header;765,24759
  unsigned int without_fc;770,24865
  uint16_t total_hops GNUNET_PACKED;778,25113
  uint16_t num_hops GNUNET_PACKED;785,25334
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral_key;791,25511
  struct GNUNET_ShortHashCode iv;798,25754
  struct GNUNET_HashCode hmac;805,25984
  uint16_t orig_size GNUNET_PACKED;812,26219
struct TransportValidationChallengeMessage831,26841
  struct GNUNET_MessageHeader header;836,26971
  uint32_t reserved GNUNET_PACKED;841,27040
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;846,27139
  struct GNUNET_TIME_AbsoluteNBO sender_time;852,27334
struct TransportValidationPS860,27496
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;865,27601
  struct GNUNET_TIME_RelativeNBO validity_duration;871,27774
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;876,27884
struct TransportValidationResponseMessage884,28043
  struct GNUNET_MessageHeader header;889,28171
  uint32_t reserved GNUNET_PACKED;894,28240
  struct GNUNET_CRYPTO_EddsaSignature signature;900,28387
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;905,28507
  struct GNUNET_TIME_AbsoluteNBO origin_time;911,28695
  struct GNUNET_TIME_RelativeNBO validity_duration;917,28827
struct TransportGlobalNattedAddress920,28883
  unsigned int address_length;925,28989
struct TransportFlowControlMessage938,29449
  struct GNUNET_MessageHeader header;943,29555
  uint32_t seq GNUNET_PACKED;952,29891
  uint64_t inbound_window_size GNUNET_PACKED;958,30034
  uint64_t outbound_sent GNUNET_PACKED;965,30247
  uint64_t outbound_window_size GNUNET_PACKED;975,30681
  struct GNUNET_TIME_AbsoluteNBO sender_time;985,31117
  unsigned int number_of_addresses;991,31243
  size_t size_of_addresses;996,31369
enum ClientType1007,31580
  CT_NONE 1012,31653
  CT_CORE 1017,31741
  CT_MONITOR 1022,31813
  CT_COMMUNICATOR 1027,31894
  CT_APPLICATION 1032,32008
enum RouteMessageOptions1040,32129
  RMO_NONE 1045,32215
  RMO_DV_ALLOWED 1050,32298
  RMO_UNCONFIRMED_ALLOWED 1055,32409
  RMO_ANYTHING_GOES 1060,32517
  RMO_REDUNDANT 1067,32770
struct LearnLaunchEntry1074,32852
  struct LearnLaunchEntry *prev;prev1079,32939
  struct LearnLaunchEntry *next;next1084,33034
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;1089,33135
  struct GNUNET_TIME_Absolute launch_time;1095,33335
struct TransmissionHistoryEntry1103,33496
  uint64_t bytes_sent;1108,33594
  uint64_t bytes_received;1114,33717
struct PerformanceData1121,33809
  struct GNUNET_TIME_Relative aged_rtt;1126,33881
  struct TransmissionHistoryEntry the[the1132,34023
  unsigned int last_age;1138,34202
struct CommunicatorMessageContext1189,35331
  struct CommunicatorMessageContext *next;next1195,35472
  struct CommunicatorMessageContext *prev;prev1201,35621
  struct TransportClient *tc;tc1206,35731
  struct GNUNET_TRANSPORT_IncomingMessage im;1211,35841
  const struct GNUNET_MessageHeader *mh;mh1216,35933
  uint16_t total_hops;1222,36095
  unsigned int continue_send;1227,36217
struct RingBufferEntry1234,36353
  struct CommunicatorMessageContext *cmc;cmc1239,36445
  struct GNUNET_MessageHeader *mh;mh1244,36533
struct CoreSentContext1251,36615
  struct CoreSentContext *next;next1256,36709
  struct CoreSentContext *prev;prev1261,36811
  struct VirtualLink *vl;vl1266,36889
  uint16_t size;1271,36958
  uint16_t isize;1279,37190
struct ReassemblyContext1286,37284
  struct MessageUUIDP msg_uuid;1292,37406
  struct VirtualLink *virtual_link;virtual_link1297,37493
  struct GNUNET_CONTAINER_HeapNode *hn;hn1302,37600
  uint8_t *bitfield;bitfield1311,37909
  struct GNUNET_TIME_Absolute reassembly_timeout;1316,38005
  struct GNUNET_TIME_Absolute last_frag;1322,38201
  uint16_t msg_size;1327,38313
  uint16_t msg_missing;1333,38461
struct VirtualLink1350,38997
  struct GNUNET_PeerIdentity target;1355,39086
  struct GNUNET_CONTAINER_MultiHashMap32 *reassembly_map;reassembly_map1362,39313
  struct GNUNET_CONTAINER_Heap *reassembly_heap;reassembly_heap1369,39562
  struct GNUNET_SCHEDULER_Task *reassembly_timeout_task;reassembly_timeout_task1374,39705
  struct CommunicatorMessageContext *cmc_head;cmc_head1380,39892
  struct CommunicatorMessageContext *cmc_tail;cmc_tail1386,40069
  struct PendingMessage *pending_msg_head;pending_msg_head1391,40180
  struct PendingMessage *pending_msg_tail;pending_msg_tail1396,40287
  struct CoreSentContext *csc_tail;csc_tail1401,40400
  struct CoreSentContext *csc_head;csc_head1406,40506
  struct GNUNET_SCHEDULER_Task *visibility_task;visibility_task1414,40786
  struct GNUNET_SCHEDULER_Task *fc_retransmit_task;fc_retransmit_task1420,40936
  unsigned int fc_retransmit_count;1425,41058
  unsigned int confirmed;1431,41220
  struct Neighbour *n;n1436,41324
  struct DistanceVector *dv;dv1441,41430
  struct GNUNET_TIME_Absolute n_challenge_time;1448,41654
  struct GNUNET_TIME_Absolute last_fc_transmission;1455,41872
  struct GNUNET_TIME_Absolute last_fc_timestamp;1464,42200
  struct GNUNET_TIME_Relative last_fc_rtt;1470,42400
  uint64_t message_uuid_ctr;1476,42536
  uint64_t available_fc_window_size;1485,42870
  uint64_t incoming_fc_window_size_ram;1493,43137
  uint64_t incoming_fc_window_size;1500,43333
  uint64_t incoming_fc_window_size_used;1509,43666
  int64_t incoming_fc_window_size_loss;1522,44360
  uint64_t outbound_fc_window_size;1528,44523
  uint64_t outbound_fc_window_size_used;1535,44704
  uint64_t last_outbound_window_size_received;1546,45180
  uint32_t fc_seq_gen;1552,45350
  uint32_t last_fc_seq;1559,45497
  int core_recv_window;1572,46112
struct PendingAcknowledgement1579,46216
  struct PendingAcknowledgement *next_pm;next_pm1585,46382
  struct PendingAcknowledgement *prev_pm;prev_pm1591,46559
  struct PendingAcknowledgement *next_queue;next_queue1598,46770
  struct PendingAcknowledgement *prev_queue;prev_queue1605,46984
  struct PendingAcknowledgement *next_dvh;next_dvh1612,47194
  struct PendingAcknowledgement *prev_dvh;prev_dvh1619,47402
  struct PendingAcknowledgement *next_pa;next_pa1626,47634
  struct PendingAcknowledgement *prev_pa;prev_pa1633,47865
  struct AcknowledgementUUIDP ack_uuid;1638,47976
  struct PendingMessage *pm;pm1644,48127
  struct DistanceVectorHop *dvh;dvh1650,48323
  struct Queue *queue;queue1656,48498
  struct GNUNET_TIME_Absolute transmission_time;1661,48586
  uint16_t message_size;1666,48719
  unsigned int num_send;1671,48846
struct DistanceVectorHop1678,48925
  struct DistanceVectorHop *next_dv;next_dv1683,49007
  struct DistanceVectorHop *prev_dv;prev_dv1688,49100
  struct DistanceVectorHop *next_neighbour;next_neighbour1693,49171
  struct DistanceVectorHop *prev_neighbour;prev_neighbour1698,49249
  struct PendingAcknowledgement *pa_head;pa_head1703,49353
  struct PendingAcknowledgement *pa_tail;pa_tail1708,49455
  struct Neighbour *next_hop;next_hop1713,49556
  struct DistanceVector *dv;dv1718,49649
  const struct GNUNET_PeerIdentity *path;path1725,49893
  struct GNUNET_TIME_Absolute timeout;1731,50039
  struct GNUNET_TIME_Absolute path_valid_until;1740,50369
  struct PerformanceData pd;1745,50487
  unsigned int distance;1752,50708
struct DistanceVector1760,50852
  struct GNUNET_PeerIdentity target;1765,50924
  struct DistanceVectorHop *dv_head;dv_head1770,51005
  struct DistanceVectorHop *dv_tail;dv_tail1775,51086
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task1780,51201
  struct VirtualLink *vl;vl1786,51387
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;1792,51527
  struct GNUNET_TIME_Absolute ephemeral_validity;1797,51627
  struct GNUNET_TIME_Absolute monotime;1802,51731
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral_key;1807,51808
  struct GNUNET_HashCode *km;km1812,51948
struct QueueEntry1825,52390
  struct QueueEntry *next;next1830,52442
  struct QueueEntry *prev;prev1835,52502
  struct Queue *queue;queue1840,52580
  struct PendingMessage *pm;pm1845,52674
  uint64_t mid;1850,52792
  struct GNUNET_TIME_Absolute creation_timestamp;1855,52865
struct Queue1863,53035
  struct Queue *next_neighbour;next_neighbour1868,53083
  struct Queue *prev_neighbour;prev_neighbour1873,53149
  struct Queue *prev_client;prev_client1878,53215
  struct Queue *next_client;next_client1883,53278
  struct PendingAcknowledgement *pa_head;pa_head1888,53366
  struct PendingAcknowledgement *pa_tail;pa_tail1893,53467
  struct QueueEntry *queue_head;queue_head1898,53573
  struct QueueEntry *queue_tail;queue_tail1903,53669
  struct Neighbour *neighbour;neighbour1908,53755
  struct TransportClient *tc;tc1913,53842
  const char *address;address1918,53919
  unsigned int unlimited_length;1923,53995
  struct GNUNET_SCHEDULER_Task *transmit_task;transmit_task1929,54135
  struct GNUNET_TIME_Absolute validated_until;1938,54503
  struct PerformanceData pd;1943,54601
  struct GNUNET_PEERSTORE_Monitor *mo;mo1949,54783
  uint64_t mid_gen;1955,54919
  uint32_t qid;1960,55012
  uint32_t mtu;1965,55097
  uint32_t num_msg_pending;1970,55149
  uint32_t num_bytes_pending;1975,55210
  unsigned int queue_length;1980,55303
  uint64_t q_capacity;1985,55373
  uint32_t priority;1990,55429
  enum GNUNET_NetworkType nt;1995,55504
  enum GNUNET_TRANSPORT_ConnectionStatus cs;2000,55586
  int idle;2006,55755
  enum GNUNET_GenericReturnValue is_global_natted;2011,55855
struct Neighbour2018,55982
  struct GNUNET_PeerIdentity pid;2023,56044
  struct DistanceVectorHop *dv_head;dv_head2029,56207
  struct DistanceVectorHop *dv_tail;dv_tail2035,56373
  struct Queue *queue_head;queue_head2040,56464
  struct Queue *queue_tail;queue_tail2045,56546
  struct GNUNET_PEERSTORE_IterateContext *get;get2051,56697
  struct GNUNET_PEERSTORE_StoreContext *sc;sc2057,56902
  struct VirtualLink *vl;vl2063,57086
  struct GNUNET_TIME_Absolute last_dv_learn_monotime;2069,57248
  int dv_monotime_available;2075,57453
  struct GNUNET_CONTAINER_MultiPeerMap *natted_addresses;natted_addresses2080,57563
  unsigned int number_of_addresses;2085,57693
  size_t size_of_global_addresses;2090,57803
  enum GNUNET_GenericReturnValue is_global_natted;2095,57911
struct IncomingRequest2103,58083
  struct IncomingRequest *next;next2108,58140
  struct IncomingRequest *prev;prev2113,58205
  struct GNUNET_PEERSTORE_Monitor *nc;nc2118,58286
  struct GNUNET_PeerIdentity pid;2123,58369
struct PeerRequest2130,58490
  struct GNUNET_PeerIdentity pid;2135,58554
  struct TransportClient *tc;tc2140,58642
  struct GNUNET_PEERSTORE_Monitor *nc;nc2145,58721
  enum GNUNET_MQ_PriorityPreferences pk;2152,58862
  struct GNUNET_BANDWIDTH_Value32NBO bw;2157,58970
enum PendingMessageType2164,59064
  PMT_CORE 2169,59156
  PMT_FRAGMENT_BOX 2174,59204
  PMT_RELIABILITY_BOX 2179,59263
  PMT_DV_BOX 2184,59358
struct PendingMessage2214,60687
  struct PendingMessage *next_vl;next_vl2219,60771
  struct PendingMessage *prev_vl;prev_vl2224,60866
  struct PendingMessage *next_client;next_client2229,60990
  struct PendingMessage *prev_client;prev_client2234,61119
  struct PendingMessage *next_frag;next_frag2240,61257
  struct PendingMessage *prev_frag;prev_frag2246,61394
  struct PendingAcknowledgement *pa_head;pa_head2251,61493
  struct PendingAcknowledgement *pa_tail;pa_tail2256,61598
  struct PendingMessage *bpm;bpm2262,61752
  struct VirtualLink *vl;vl2268,61938
  struct GNUNET_PeerIdentity target;2273,62047
  struct QueueEntry *qe;qe2283,62498
  struct TransportClient *client;client2288,62610
  struct PendingMessage *head_frag;head_frag2293,62721
  struct PendingMessage *tail_frag;tail_frag2298,62834
  struct PendingMessage *frag_parent;frag_parent2303,62926
  struct GNUNET_TIME_Absolute timeout;2308,63056
  struct GNUNET_TIME_Absolute next_attempt;2313,63185
  struct MessageUUIDP msg_uuid;2319,63369
  uint64_t logging_uuid;2325,63524
  enum PendingMessageType pmt;2330,63596
  enum GNUNET_MQ_PriorityPreferences prefs;2336,63705
  struct DistanceVectorHop *used_dvh;used_dvh2341,63825
  uint16_t bytes_msg;2346,63911
  uint16_t frag_off;2351,64005
  uint32_t frags_in_flight;2356,64084
  uint32_t frags_in_flight_round;2361,64171
  uint16_t frag_count;2366,64255
  int16_t msg_uuid_set;2371,64341
struct TransportCummulativeAckPayload2380,64452
  struct GNUNET_TIME_Absolute receive_time;2386,64625
  struct AcknowledgementUUIDP ack_uuid;2391,64725
struct AcknowledgementCummulator2399,64858
  struct GNUNET_PeerIdentity target;2404,64963
  struct TransportCummulativeAckPayload ack_uuids[ack_uuids2409,65081
  struct GNUNET_SCHEDULER_Task *task;task2416,65342
  struct GNUNET_TIME_Absolute min_transmission_time;2421,65458
  uint32_t ack_counter;2428,65721
  unsigned int num_acks;2433,65834
struct AddressListEntry2440,65910
  struct AddressListEntry *next;next2445,65968
  struct AddressListEntry *prev;prev2450,66034
  struct TransportClient *tc;tc2455,66127
  struct GNUNET_PEERSTORE_StoreHelloContext *shc;shc2460,66194
  const char *address;address2465,66282
  void *signed_address;signed_address2470,66338
  size_t signed_address_len;2475,66402
  struct GNUNET_PEERSTORE_StoreContext *sc;sc2480,66508
  struct GNUNET_SCHEDULER_Task *st;st2485,66611
  struct GNUNET_TIME_Relative expiration;2491,66763
  uint32_t aid;2496,66868
  enum GNUNET_NetworkType nt;2501,66940
struct TransportClient2508,67029
  struct TransportClient *next;next2513,67086
  struct TransportClient *prev;prev2518,67151
  struct GNUNET_SERVICE_Client *client;client2523,67223
  struct GNUNET_MQ_Handle *mq;mq2528,67310
  enum ClientType type;2533,67388
      struct PendingMessage *pending_msg_head;pending_msg_head2546,67668
      struct PendingMessage *pending_msg_tail;pending_msg_tail2551,67795
    } core;2552,67842
      struct GNUNET_PeerIdentity peer;2564,68088
      int one_shot;2569,68185
    } monitor;2570,68205
      char *address_prefix;address_prefix2582,68438
      struct Queue *queue_head;queue_head2587,68548
      struct Queue *queue_tail;queue_tail2592,68662
      struct AddressListEntry *addr_head;addr_head2598,68806
      struct AddressListEntry *addr_tail;addr_tail2604,68960
      unsigned int total_queue_length;2611,69213
      struct GNUNET_SCHEDULER_Task *free_queue_entry_task;free_queue_entry_task2616,69322
      enum GNUNET_TRANSPORT_CommunicatorCharacteristics cc;2621,69449
    } communicator;2622,69509
      struct GNUNET_CONTAINER_MultiPeerMap *requests;requests2633,69779
    } application;2634,69833
  } details;2635,69852
struct ValidationState2643,69997
  struct GNUNET_PeerIdentity pid;2649,70148
  struct GNUNET_TIME_Absolute valid_until;2657,70487
  struct GNUNET_TIME_Absolute validated_until;2663,70661
  struct GNUNET_TIME_Absolute first_challenge_use;2671,70980
  struct GNUNET_TIME_Absolute last_challenge_use;2679,71303
  struct GNUNET_TIME_Absolute next_challenge;2688,71736
  struct GNUNET_TIME_Relative challenge_backoff;2698,72198
  struct GNUNET_TIME_Relative validation_rtt;2704,72417
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;2713,72855
  struct GNUNET_HashCode hc;2718,72960
  struct GNUNET_SCHEDULER_Task *revalidation_task;revalidation_task2723,73040
  char *address;address2728,73138
  struct GNUNET_CONTAINER_HeapNode *hn;hn2735,73332
  struct GNUNET_PEERSTORE_StoreContext *sc;sc2741,73498
  uint32_t last_window_consum_limit;2748,73743
  int awaiting_queue;2754,73933
struct Backtalker2764,74218
  struct GNUNET_PeerIdentity pid;2769,74275
  struct GNUNET_TIME_Absolute monotonic_time;2774,74382
  struct GNUNET_TIME_Absolute timeout;2779,74477
  struct GNUNET_CRYPTO_EcdhePublicKey last_ephemeral;2784,74588
  struct GNUNET_SCHEDULER_Task *task;task2790,74757
  struct CommunicatorMessageContext *cmc;cmc2795,74881
  struct GNUNET_PEERSTORE_IterateContext *get;get2801,75038
  struct GNUNET_PEERSTORE_StoreContext *sc;sc2807,75227
  size_t body_size;2813,75371
static struct RingBufferEntry *ring_buffer[ring_buffer2819,75508
static unsigned int ring_buffer_head;2824,75607
static unsigned int is_ring_buffer_full;2829,75707
static struct PendingMessage *ring_buffer_dv[ring_buffer_dv2834,75880
static unsigned int ring_buffer_dv_head;2839,75981
static unsigned int is_ring_buffer_dv_full;2844,76084
static struct TransportClient *clients_head;clients_head2849,76192
static struct TransportClient *clients_tail;clients_tail2854,76301
static struct GNUNET_STATISTICS_Handle *GST_stats;GST_stats2859,76377
static const struct GNUNET_CONFIGURATION_Handle *GST_cfg;GST_cfg2864,76462
static struct GNUNET_PeerIdentity GST_my_identity;2869,76548
struct GNUNET_HELLO_Builder *GST_my_hello;GST_my_hello2874,76621
static struct GNUNET_CRYPTO_EddsaPrivateKey *GST_my_private_key;GST_my_private_key2879,76693
static struct GNUNET_CONTAINER_MultiPeerMap *neighbours;neighbours2885,76888
static struct GNUNET_CONTAINER_MultiPeerMap *backtalkers;backtalkers2891,77075
static struct GNUNET_CONTAINER_MultiPeerMap *ack_cummulators;ack_cummulators2897,77254
static struct GNUNET_CONTAINER_MultiUuidmap *pending_acks;pending_acks2903,77439
static struct GNUNET_CONTAINER_MultiPeerMap *dv_routes;dv_routes2909,77598
static struct GNUNET_CONTAINER_MultiPeerMap *validation_map;validation_map2915,77782
static struct GNUNET_CONTAINER_MultiHashMap *revalidation_map;revalidation_map2921,77976
static struct GNUNET_CONTAINER_MultiPeerMap *links;links2927,78138
static struct GNUNET_CONTAINER_MultiShortmap *dvlearn_map;dvlearn_map2932,78259
static struct LearnLaunchEntry *lle_head lle_head2937,78367
static struct LearnLaunchEntry *lle_tail lle_tail2942,78465
static struct GNUNET_CONTAINER_Heap *validation_heap;validation_heap2949,78699
struct GNUNET_NAT_Handle *nh;nh2954,78804
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore2959,78874
static struct GNUNET_SCHEDULER_Task *dvlearn_task;dvlearn_task2964,78970
static struct GNUNET_SCHEDULER_Task *validation_task;validation_task2969,79065
static struct IncomingRequest *ir_head;ir_head2976,79250
static struct IncomingRequest *ir_tail;ir_tail2981,79336
static unsigned int ir_total;2986,79428
static unsigned long long logging_uuid_gen;2991,79526
static struct GNUNET_TIME_Absolute hello_mono_time;3001,79988
static int in_shutdown;3007,80143
get_age 3020,80484
free_incoming_request 3035,80741
free_pending_acknowledgement 3053,81096
free_fragment_tree 3104,82739
free_pending_message 3140,83687
free_reassembly_context 3223,85898
reassembly_cleanup_task 3242,86474
free_reassembly_cb 3275,87320
free_virtual_link 3292,87581
free_validation_state 3348,89142
lookup_neighbour 3390,90426
lookup_virtual_link 3403,90731
struct MonitorEvent3412,90910
  struct GNUNET_TIME_Absolute last_validation;3417,90997
  struct GNUNET_TIME_Absolute valid_until;3418,91044
  struct GNUNET_TIME_Absolute next_validation;3419,91087
  struct GNUNET_TIME_Relative rtt;3424,91186
  enum GNUNET_TRANSPORT_ConnectionStatus cs;3429,91258
  uint32_t num_msg_pending;3434,91339
  uint32_t num_bytes_pending;3439,91400
free_distance_vector_hop 3452,91735
cores_send_disconnect_info 3485,92548
free_dv_route 3511,93269
notify_monitor 3566,94661
notify_monitors 3603,96027
client_connect_cb 3632,96887
remove_global_addresses 3652,97402
free_neighbour 3671,97764
core_send_connect_info 3734,99585
cores_send_connect_info 3753,100052
check_for_queue_with_higher_prio 3782,100842
schedule_transmit_on_queue 3815,101894
check_link_down 3892,104662
free_queue 3943,106130
free_address_list_entry 4035,109012
stop_peer_request 4069,109881
client_disconnect_cb 4102,110689
notify_client_connect_info 4194,113426
resume_communicators 4223,114284
handle_client_start 4250,115005
check_client_send 4291,116209
client_send_response 4326,117052
pick_random_dv_hops 4360,118052
check_communicator_available 4436,120262
finish_cmc_handling_with_continue 4463,120877
finish_cmc_handling 4493,121745
handle_client_recv_ok 4509,122168
handle_communicator_available 4557,123539
check_communicator_backchannel 4590,124535
sign_ephemeral 4627,125301
free_timedout_queue_entry 4651,126038
queue_send_msg 4703,127688
route_via_neighbour 4840,132565
struct DVKeyState4913,135182
  gcry_cipher_hd_t cipher;4918,135246
    struct GNUNET_CRYPTO_AuthKey hmac_key;4928,135408
  } material;4939,135625
dv_setup_key_state_from_km 4952,135925
dv_hmac 4994,137729
dv_encrypt 5013,138274
dv_decrypt 5031,138864
dv_key_clean 5049,139297
typedef void (*DVMessageHandler)DVMessageHandler5066,139797
encapsulate_for_dv 5086,140733
send_dv_to_neighbour 5204,145020
route_control_message_without_fc 5226,145826
task_consider_sending_fc 5338,149832
struct AddGlobalAddressesContext5350,150033
  size_t off;5352,150068
  char *tgnas;tgnas5353,150082
add_global_addresses 5358,150140
consider_sending_fc 5389,151178
check_vl_transmission 5494,155518
handle_client_send 5632,161114
handle_communicator_backchannel 5704,163733
check_add_address 5768,165767
peerstore_store_own_cb 5799,166383
shc_cont 5823,167183
store_pi 5857,168395
create_address_entry 5921,170555
handle_add_address 5950,171307
handle_del_address 5982,172397
core_env_sent_cb 6035,173876
finish_handling_raw_message 6056,174382
handle_raw_message 6160,178248
check_fragment_box 6263,181926
destroy_ack_cummulator 6294,182572
transmit_cummulative_ack_cb 6313,182986
cummulative_ack 6381,185114
struct FindByMessageUuidContext6428,186713
  struct MessageUUIDP message_uuid;6433,186782
  struct ReassemblyContext *rc;rc6438,186876
find_by_message_uuid 6452,187210
handle_fragment_box 6475,187729
check_reliability_box 6645,193427
handle_reliability_box 6672,194334
update_pd_age 6713,195862
update_performance_data 6740,196603
update_queue_performance 6766,197415
update_dvh_performance 6782,197896
completed_pending_message 6798,198358
handle_acknowledged 6881,200875
check_reliability_ack 6906,201724
handle_reliability_ack 6937,202486
check_backchannel_encapsulation 6988,204269
handle_backchannel_encapsulation 7025,205169
path_cleanup_cb 7094,207312
send_msg_from_cache 7118,207810
activate_core_visible_dv_path 7264,212574
learn_dv_path 7351,215871
check_dv_learn 7514,222237
forward_dv_learn 7560,223460
validate_dv_initiator_signature 7642,226599
struct NeighbourSelectionContext7671,227552
  const struct TransportDVLearnMessage *dvl;dvl7676,227634
  const struct DVPathEntryP *hops;hops7681,227713
  struct GNUNET_TIME_Absolute in_time;7686,227796
  uint32_t selections[selections7691,227884
  unsigned int num_eligible;7696,227993
  unsigned int num_selections;7701,228091
  uint16_t nhops;7706,228166
  uint16_t bi_history;7711,228251
dv_neighbour_selection 7724,228521
dv_neighbour_transmission 7753,229360
calculate_fork_degree 7831,232498
neighbour_store_dvmono_cb 7878,234022
handle_dv_learn 7897,234508
check_dv_box 8231,246827
forward_dv_box 8269,247967
free_backtalker 8376,251655
free_backtalker_cb 8417,252557
backtalker_timeout_cb 8436,252910
backtalker_monotime_cb 8462,253576
backtalker_monotime_store_cb 8520,255193
update_backtalker_monotime 8545,255765
handle_dv_box 8588,257060
check_incoming_msg 8849,265827
struct CheckKnownAddressContext8867,266166
  const char *address;address8872,266256
  struct ValidationState *vs;vs8877,266351
check_known_address 8891,266687
update_next_challenge_time 8923,267406
start_address_validation 8958,268549
hello_for_incoming_cb 9023,271057
handle_hello_for_incoming 9065,272004
hello_for_incoming_error_cb 9095,272828
hello_for_incoming_sync_cb 9103,272977
handle_validation_challenge 9119,273397
struct CheckKnownChallengeContext9229,277408
  const struct GNUNET_CRYPTO_ChallengeNonceP *challenge;challenge9234,277502
  struct ValidationState *vs;vs9239,277631
check_known_challenge 9253,277971
peerstore_store_validation_cb 9276,278509
find_queue 9298,279058
revalidation_start_cb 9319,279500
revalidate_map_it 9340,279983
handle_validation_response 9362,280484
handle_incoming_msg 9592,289520
check_flow_control 9621,290450
handle_flow_control 9652,291605
demultiplex_with_cmc 9790,297030
check_add_queue_message 9862,299724
set_pending_message_uuid 9883,300155
prepare_pending_acknowledgement 9901,300646
fragment_message 9948,302291
reliability_box_message 10079,307048
reorder_root_pm 10146,309483
check_next_attempt_tree 10170,310299
harmonize_flight_round 10194,310815
update_pm_next_attempt 10217,311340
struct PendingMessageScoreContext10320,315105
  struct PendingMessage *best;best10325,315213
  struct DistanceVectorHop *dvh;dvh10330,315325
  size_t real_overhead;10335,315431
  unsigned int consideration_counter;10340,315535
  int frag;10345,315616
  int relb;10350,315678
  int to_early;10355,315777
  unsigned int frags_in_flight;10360,315879
  struct GNUNET_TIME_Relative to_early_retry_delay;10365,316012
select_best_pending_from_link 10381,316541
extract_box_cb 10557,323674
transmit_on_queue 10608,325387
handle_del_queue_message 10861,334422
free_queue_entry 10894,335332
handle_send_message_ack 10991,338844
notify_client_queues 11069,341375
handle_monitor_start 11098,342172
lookup_communicator 11126,342962
suggest_to_connect 11151,343620
validation_transmit_on_queue 11206,345320
validation_start_cb 11255,347032
struct QueueQualityContext11315,349083
  struct Queue *q;q11320,349167
  unsigned int quality_count;11325,349253
  unsigned int num_queues;11330,349348
  unsigned int k;11336,349467
check_connection_quality 11352,349877
start_dv_learn 11390,350992
get_address_without_port 11501,355345
check_validation_request_pending 11528,356076
neighbour_dv_monotime_cb 11572,357402
iterate_address_and_compare_cb 11603,358209
check_for_global_natted_error_cb 11647,359461
check_for_global_natted_sync_cb 11655,359642
struct TransportGlobalNattedAddressClosure11662,359837
  char *addr;addr11667,359926
  struct TransportGlobalNattedAddress *tgna;tgna11672,360006
contains_address 11677,360094
check_for_global_natted 11696,360594
handle_add_queue_message 11796,364326
handle_update_queue_message 11942,369895
handle_queue_create_ok 11996,371712
handle_queue_create_fail 12027,372677
handle_suggest_cancel 12058,373525
hello_for_client_cb 12083,374135
handle_hello_for_client 12126,375074
hello_for_client_error_cb 12156,375886
hello_for_client_sync_cb 12164,376033
handle_suggest 12179,376370
check_request_hello_validation 12242,378322
handle_request_hello_validation 12259,378752
free_neighbour_cb 12285,379343
free_dv_routes_cb 12309,379796
free_validation_state_cb 12332,380193
free_pending_ack_cb 12354,380633
free_ack_cummulator_cb 12374,381028
do_shutdown 12395,381482
shutdown_task 12485,384465
run 12514,385039

src/service/transport/test_transport_api_monitor_peers.c,671
#define TIMEOUT 31,1085
#define TIMEOUT_TRANSMIT 36,1230
#define TEST_MESSAGE_SIZE 39,1324
#define TEST_MESSAGE_TYPE 41,1356
static struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc43,1389
static struct GNUNET_TRANSPORT_PeerMonitoringContext *pmc_p1;pmc_p145,1455
static struct GNUNET_TRANSPORT_PeerMonitoringContext *pmc_p2;pmc_p247,1518
static int p1_c;49,1581
static int p2_c;51,1599
static int p1_c_notify;53,1617
static int p2_c_notify;55,1642
custom_shutdown 59,1680
notify_receive 75,1928
sendtask 94,2558
check_done 101,2625
notify_connect 117,2928
monitor1_cb 137,3483
monitor2_cb 162,4259
start_monitors 187,5035
main 203,5610

src/service/transport/transport_api2_application.c,991
#define LOG(32,1137
struct GNUNET_TRANSPORT_ApplicationSuggestHandle39,1292
  struct GNUNET_PeerIdentity id;44,1419
  struct GNUNET_TRANSPORT_ApplicationHandle *ch;ch49,1526
  enum GNUNET_MQ_PriorityPreferences pk;54,1629
  struct GNUNET_BANDWIDTH_Value32NBO bw;59,1731
struct GNUNET_TRANSPORT_ApplicationHandle66,1850
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg71,1930
  struct GNUNET_CONTAINER_MultiPeerMap *sug_requests;sug_requests78,2200
  struct GNUNET_MQ_Handle *mq;mq83,2333
  struct GNUNET_SCHEDULER_Task *task;task88,2409
  struct GNUNET_TIME_Relative backoff;93,2490
reconnect_task 112,2840
force_reconnect 127,3062
error_handler 147,3555
transmit_suggestion 168,4173
reconnect 194,4857
GNUNET_TRANSPORT_application_init 219,5574
free_sug_handle 242,6141
GNUNET_TRANSPORT_application_done 257,6457
GNUNET_TRANSPORT_application_suggest 289,7453
GNUNET_TRANSPORT_application_suggest_cancel 323,8326
GNUNET_TRANSPORT_application_validate 366,9784

src/service/transport/transport_api_cmd_send_simple_performance.c,649
#define LOG(36,1138
struct SendSimplePerfState42,1249
  struct GNUNET_TESTING_AsyncContext ac;47,1336
  const char *start_peer_label;start_peer_label53,1434
  const char *create_label;create_label59,1537
  struct GNUNET_TESTING_NetjailTopology *topology;topology64,1629
  unsigned int size;69,1728
  unsigned int max_send;74,1804
struct MQWrapper77,1833
  struct SendSimplePerfState *sss;sss82,1891
  struct GNUNET_MQ_Handle *mq;mq87,1970
  uint32_t num_send;92,2053
send_simple_cleanup 100,2172
send_simple_single 109,2281
send_simple_cb 143,3402
send_simple_run 164,3876
GNUNET_TRANSPORT_cmd_send_simple_performance 192,4936

src/service/transport/transport_api2_monitor.c,553
struct GNUNET_TRANSPORT_MonitorContext36,1167
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg41,1244
  struct GNUNET_MQ_Handle *mq;mq46,1351
  struct GNUNET_PeerIdentity peer;51,1437
  int one_shot;56,1544
  GNUNET_TRANSPORT_MonitorCallback cb;61,1614
  void *cb_cls;cb_cls66,1690
send_start_monitor 86,2003
disconnect 106,2473
error_handler 122,2797
check_monitor_data 144,3402
handle_monitor_data 159,3737
handle_monitor_end 184,4651
reconnect 206,5080
GNUNET_TRANSPORT_monitor 254,6999
GNUNET_TRANSPORT_monitor_cancel 285,7716

src/service/transport/gnunet-service-transport.h,243
#define GNUNET_SERVICE_TRANSPORT_H27,940
#define VERBOSE_VALIDATION 34,1115
(*GNUNET_TRANSPORT_NeighbourChangeCallback)GNUNET_TRANSPORT_NeighbourChangeCallback85,2093
(*GST_BlacklistTestContinuation)GST_BlacklistTestContinuation112,3356

src/service/transport/transport_api_cmd_connecting_peers.c,181
#define LOG(37,1190
connect_peers_run 44,1321
notify_connect 181,6123
connect_peers_cleanup 233,7905
connect_peers_traits 246,8096
GNUNET_TRANSPORT_cmd_connect_peers 264,8656

src/service/transport/transport_api2_communication.c,3634
#define DEFAULT_MAX_QUEUE_LENGTH 38,1291
struct FlowControl44,1396
  struct FlowControl *next;next49,1449
  struct FlowControl *prev;prev54,1510
  GNUNET_TRANSPORT_MessageCompletedCallback cb;59,1605
  void *cb_cls;cb_cls64,1689
  struct GNUNET_PeerIdentity sender;69,1749
  uint64_t id;74,1844
struct AckPending82,1960
  struct AckPending *next;next87,2012
  struct AckPending *prev;prev92,2072
  struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch97,2153
  struct GNUNET_PeerIdentity receiver;102,2247
  uint64_t mid;107,2344
  uint32_t qid;112,2436
struct GNUNET_TRANSPORT_CommunicatorHandle119,2526
  struct GNUNET_TRANSPORT_AddressIdentifier *ai_head;ai_head124,2664
  struct GNUNET_TRANSPORT_AddressIdentifier *ai_tail;ai_tail129,2812
  struct FlowControl *fc_head;fc_head134,2942
  struct FlowControl *fc_tail;fc_tail139,3049
  struct AckPending *ap_head;ap_head144,3156
  struct AckPending *ap_tail;ap_tail149,3262
  struct GNUNET_TRANSPORT_QueueHandle *queue_head;queue_head154,3334
  struct GNUNET_TRANSPORT_QueueHandle *queue_tail;queue_tail159,3427
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg164,3515
  const char *config_section;config_section169,3605
  const char *addr_prefix;addr_prefix174,3676
  GNUNET_TRANSPORT_CommunicatorMqInit mq_init;180,3834
  void *mq_init_cls;mq_init_cls185,3923
  GNUNET_TRANSPORT_CommunicatorNotify notify_cb;192,4118
  void *notify_cb_cls;notify_cb_cls197,4211
  struct GNUNET_MQ_Handle *mq;mq202,4292
  unsigned long long max_queue_length;207,4375
  uint64_t fc_gen;212,4467
  uint32_t aid_gen;218,4589
  uint32_t queue_gen;223,4655
  enum GNUNET_TRANSPORT_CommunicatorCharacteristics cc;228,4732
struct GNUNET_TRANSPORT_QueueHandle236,4941
  struct GNUNET_TRANSPORT_QueueHandle *next;next241,5011
  struct GNUNET_TRANSPORT_QueueHandle *prev;prev246,5089
  struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch251,5182
  char *address;address256,5291
  struct GNUNET_MQ_Handle *mq;mq261,5344
  struct GNUNET_PeerIdentity peer;266,5429
  enum GNUNET_NetworkType nt;271,5523
  enum GNUNET_TRANSPORT_ConnectionStatus cs;276,5606
  uint32_t queue_id;281,5726
  uint32_t mtu;286,5806
  uint64_t q_len;291,5854
  uint32_t priority;295,5905
struct GNUNET_TRANSPORT_AddressIdentifier303,6048
  struct GNUNET_TRANSPORT_AddressIdentifier *next;next308,6124
  struct GNUNET_TRANSPORT_AddressIdentifier *prev;prev313,6208
  struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch318,6323
  char *address;address323,6411
  struct GNUNET_TIME_Relative expiration;329,6517
  uint32_t aid;335,6662
  enum GNUNET_NetworkType nt;340,6726
send_add_address 360,7072
send_del_address 384,7771
send_add_queue 404,8235
send_update_queue 435,9168
send_del_queue 461,9861
disconnect 484,10495
error_handler 513,11150
handle_incoming_ack 534,11721
check_create_queue 580,13201
handle_create_queue 595,13560
check_send_msg 635,14807
send_ack 653,15256
send_ack_cb 678,15883
handle_send_msg 700,16419
check_backchannel_incoming 744,17839
handle_backchannel_incoming 761,18215
reconnect 783,18799
GNUNET_TRANSPORT_communicator_connect 827,20609
GNUNET_TRANSPORT_communicator_disconnect 870,21817
GNUNET_TRANSPORT_communicator_receive 887,22207
GNUNET_TRANSPORT_communicator_mq_add 957,24247
GNUNET_TRANSPORT_communicator_mq_update 991,25091
GNUNET_TRANSPORT_communicator_mq_del 1018,25691
GNUNET_TRANSPORT_communicator_address_add 1040,26415
GNUNET_TRANSPORT_communicator_address_remove 1067,27121
GNUNET_TRANSPORT_communicator_address_remove_all 1086,27589
GNUNET_TRANSPORT_communicator_notify 1103,28007

src/service/transport/test_transport_api.c,155
#define TIMEOUT 37,1307
static struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc39,1385
notify_receive 43,1464
test 85,2661
main 114,3451

src/service/transport/gnunet-communicator-udp.c,8217
#define DEFAULT_REKEY_TIME_INTERVAL 54,2022
#define PROTO_QUEUE_TIMEOUT 59,2156
#define BROADCAST_FREQUENCY 64,2272
#define INTERFACE_SCAN_FREQUENCY 69,2397
#define ADDRESS_VALIDITY_PERIOD 76,2608
#define WORKING_QUEUE_INTERVALL 78,2664
#define AES_KEY_SIZE 84,2796
#define AES_IV_SIZE 89,2858
#define GCM_TAG_SIZE 94,2920
#define GENERATE_AT_ONCE 96,2952
#define KCN_THRESHOLD 107,3306
#define KCN_TARGET 115,3504
#define MAX_SQN_DELTA 126,3917
#define MAX_SECRETS 137,4290
#define DEFAULT_REKEY_MAX_BYTES 143,4434
#define COMMUNICATOR_ADDRESS_PREFIX 149,4551
#define COMMUNICATOR_CONFIG_SECTION 154,4653
struct UdpHandshakeSignature164,4942
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;169,5059
  struct GNUNET_PeerIdentity sender;174,5190
  struct GNUNET_PeerIdentity receiver;179,5312
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral;184,5406
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;190,5586
struct InitialKX198,5749
  struct GNUNET_CRYPTO_ElligatorRepresentative representative;203,5825
  uint8_t gcm_tag[gcm_tag209,6033
struct UDPConfirmation218,6176
  struct GNUNET_PeerIdentity sender;223,6236
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;228,6371
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;234,6552
struct UDPAck246,6827
  struct GNUNET_MessageHeader header;251,6911
  uint32_t sequence_ack GNUNET_PACKED;257,7069
  struct GNUNET_HashCode cmac;262,7167
struct UdpBroadcastSignature274,7603
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;279,7720
  struct GNUNET_PeerIdentity sender;284,7837
  struct GNUNET_HashCode h_address;289,7926
struct UDPBroadcast299,8225
  struct GNUNET_PeerIdentity sender;304,8288
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;310,8428
struct UDPBox318,8611
  struct GNUNET_ShortHashCode kid;327,8946
  uint8_t gcm_tag[gcm_tag336,9295
struct UDPRekey343,9386
  struct GNUNET_MessageHeader header;348,9474
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral;353,9559
struct KeyCacheEntry368,9861
  struct KeyCacheEntry *next;next373,9916
  struct KeyCacheEntry *prev;prev378,9979
  struct GNUNET_ShortHashCode kid;387,10329
  struct SharedSecret *ss;ss392,10411
  uint32_t sequence_number;397,10515
struct SharedSecret416,10910
  struct SharedSecret *next;next421,10964
  struct SharedSecret *prev;prev426,11026
  struct KeyCacheEntry *kce_head;kce_head431,11142
  struct KeyCacheEntry *kce_tail;kce_tail436,11263
  struct SenderAddress *sender;sender441,11363
  struct ReceiverAddress *receiver;receiver446,11463
  struct GNUNET_HashCode master;451,11539
  struct GNUNET_HashCode cmac;456,11634
  uint32_t sequence_used;462,11773
  uint32_t sequence_allowed;469,11967
  unsigned int active_kce_count;474,12044
  size_t bytes_sent;479,12130
  int rekey_initiated;484,12202
  int override_available_acks;489,12300
struct SenderAddress497,12467
  struct GNUNET_PeerIdentity target;502,12534
  struct GNUNET_CONTAINER_HeapNode *hn;hn507,12622
  struct SharedSecret *ss_head;ss_head512,12739
  struct SharedSecret *ss_tail;ss_tail517,12847
  struct sockaddr *address;address522,12924
  socklen_t address_len;527,12993
  struct GNUNET_HashCode key;532,13068
  struct GNUNET_TIME_Absolute timeout;537,13141
  unsigned int num_secrets;542,13231
  unsigned int acks_available;548,13356
  enum GNUNET_NetworkType nt;553,13445
  int sender_destroy_called;558,13534
  struct GNUNET_SCHEDULER_Task *kce_task;kce_task563,13610
  int kce_task_finished;568,13696
  int kce_send_ack_on_finish;573,13781
struct ReceiverAddress581,13937
  struct GNUNET_TIME_Absolute rekey_timeout;586,14012
  struct GNUNET_PeerIdentity target;591,14102
  struct GNUNET_HashCode key;596,14189
  struct SharedSecret *ss_head;ss_head601,14300
  struct SharedSecret *ss_tail;ss_tail606,14412
  char *foreign_addr;foreign_addr612,14559
  struct sockaddr *address;address617,14626
  socklen_t address_len;622,14695
  struct GNUNET_CONTAINER_HeapNode *hn;hn627,14771
  struct GNUNET_MQ_Handle *kx_mq;kx_mq632,14876
  struct GNUNET_MQ_Handle *d_mq;d_mq637,14980
  struct GNUNET_TRANSPORT_QueueHandle *kx_qh;kx_qh642,15065
  struct GNUNET_TRANSPORT_QueueHandle *d_qh;d_qh647,15168
  struct GNUNET_TIME_Absolute timeout;652,15266
  size_t kx_mtu;657,15378
  size_t d_mtu;662,15473
  unsigned int num_secrets;667,15540
  unsigned int acks_available;673,15667
  enum GNUNET_NetworkType nt;678,15756
  int receiver_destroy_called;683,15849
struct BroadcastInterface689,15935
  struct BroadcastInterface *next;next694,15995
  struct BroadcastInterface *prev;prev699,16063
  struct GNUNET_SCHEDULER_Task *broadcast_task;broadcast_task704,16151
  struct sockaddr *sa;sa709,16252
  struct sockaddr *ba;ba714,16336
  struct UDPBroadcast bcm;719,16417
  struct ipv6_mreq mcreq;725,16549
  socklen_t salen;730,16619
  int found;735,16713
static struct GNUNET_TIME_Relative rekey_interval;741,16760
static unsigned long long rekey_max_bytes;746,16882
static struct GNUNET_CONTAINER_MultiShortmap *key_cache;key_cache751,16969
static struct GNUNET_SCHEDULER_Task *read_task;read_task756,17054
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task761,17133
static struct GNUNET_SCHEDULER_Task *broadcast_task;broadcast_task766,17224
static struct GNUNET_STATISTICS_Handle *stats;stats771,17313
static struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch776,17389
static struct GNUNET_CONTAINER_MultiHashMap *receivers;receivers781,17519
static struct GNUNET_CONTAINER_MultiHashMap *senders;senders786,17646
static struct GNUNET_CONTAINER_Heap *senders_heap;senders_heap791,17774
static struct GNUNET_CONTAINER_Heap *receivers_heap;receivers_heap796,17903
static struct BroadcastInterface *bi_head;bi_head801,18010
static struct BroadcastInterface *bi_tail;bi_tail806,18107
static struct GNUNET_NETWORK_Handle *udp_sock;udp_sock811,18174
static int have_v6_socket;816,18273
static struct GNUNET_PeerIdentity my_identity;821,18328
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key826,18404
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg831,18496
static struct GNUNET_TRANSPORT_ApplicationHandle *ah;ah836,18622
static struct GNUNET_NT_InterfaceScanner *is;is841,18732
static struct GNUNET_NAT_Handle *nat;nat846,18817
static uint16_t my_port;851,18911
static int disable_v6;856,18970
bi_destroy 865,19104
receiver_destroy 896,20009
kce_destroy 945,21454
get_kid 966,22078
kce_generate 993,22856
secret_destroy 1024,23739
sender_destroy 1077,25517
get_iv_key 1107,26387
reschedule_sender_timeout 1137,27282
reschedule_receiver_timeout 1151,27667
check_timeouts 1166,28077
calculate_cmac 1209,29294
pass_plaintext_to_core 1234,30099
setup_cipher 1283,31955
try_decrypt 1318,33122
setup_shared_secret_dec 1352,34036
setup_initial_shared_secret_dec 1370,34505
setup_shared_secret_ephemeral 1392,35198
setup_initial_shared_secret_ephemeral 1418,36109
purge_secrets 1458,37358
add_acks 1486,37981
handle_ack 1539,39720
consider_ss_ack 1596,41520
kce_generate_cb 1631,42779
try_handle_plaintext 1676,44083
decrypt_box 1783,47905
struct SearchContext1866,50527
  const struct sockaddr *address;address1871,50595
  socklen_t address_len;1876,50678
  struct SenderAddress *sender;sender1881,50762
setup_sender 1897,51232
verify_confirmation 1950,53058
sockaddr_to_udpaddr_string 1979,53935
sock_read 2013,54600
udp_address_to_sockaddr 2249,62986
do_pad 2380,66265
send_msg_with_kx 2400,66796
mq_send_kx 2507,70477
create_rekey 2519,70749
mq_send_d 2551,71781
mq_destroy_d 2702,77098
mq_destroy_kx 2725,77722
mq_cancel 2746,78238
mq_error 2763,78675
setup_receiver_mq 2783,79189
mq_init 2864,82656
get_receiver_delete_it 2954,85560
get_sender_delete_it 2976,86016
do_shutdown 2997,86357
struct AckInfo3075,88258
  const struct UDPAck *ack;ack3077,88275
  const struct GNUNET_PeerIdentity *sender;sender3079,88304
handle_ack_by_sender 3083,88363
enc_notify_cb 3107,88975
nat_address_cb 3145,90293
ifc_broadcast 3187,91405
iface_proc 3280,94835
do_broadcast 3390,98487
try_connection_reversal 3411,99086
run 3430,99618
main 3636,106613

src/service/transport/test_transport_api2.c,155
#define TIMEOUT 37,1311
static struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc39,1389
notify_receive 43,1468
test 85,2665
main 114,3455

src/service/transport/transport-testing-main2.c,1184
struct GNUNET_TRANSPORT_TESTING_ConnectRequestList32,1007
  struct GNUNET_TRANSPORT_TESTING_ConnectRequestList *next;next37,1094
  struct GNUNET_TRANSPORT_TESTING_ConnectRequestList *prev;prev42,1189
  struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc47,1294
  struct GNUNET_TRANSPORT_TESTING_ConnectRequest *cr;cr52,1403
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p1;p157,1497
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p2;p262,1588
do_shutdown 72,1793
do_timeout 116,2945
struct GNUNET_TRANSPORT_TESTING_InternalPeerContext133,3371
  struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc138,3475
  unsigned int off;143,3587
struct ConnectPairInfo150,3663
  const struct GNUNET_PeerIdentity *sender;sender155,3725
  struct GNUNET_TRANSPORT_TESTING_InternalPeerContext *ipi;ipi160,3825
connect_cb 171,4101
GNUNET_TRANSPORT_TESTING_find_peer 209,5189
my_nc 233,5964
my_nd 260,6723
check_test 284,7334
handle_test 298,7625
check_test2 321,8254
handle_test2 335,8547
do_connect 356,9092
start_cb 403,10663
connect_check_run 443,11915
GNUNET_TRANSPORT_TESTING_connect_check 508,14502
GNUNET_TRANSPORT_TESTING_main_ 566,16306

src/service/transport/gnunet-communicator-unix.c,2242
#define DEFAULT_MAX_QUEUE_LENGTH 44,1599
#define COMMUNICATOR_ADDRESS_PREFIX 49,1690
#define COMMUNICATOR_CONFIG_SECTION 54,1793
#define UNIX_MTU 60,1885
#define UNIX_MTU 62,1919
struct UNIXMessage70,2017
  struct GNUNET_MessageHeader header;75,2071
  struct GNUNET_PeerIdentity sender;80,2190
struct Queue89,2290
  struct Queue *next;next94,2374
  struct Queue *prev;prev99,2466
  struct GNUNET_PeerIdentity target;104,2533
  struct sockaddr_un *address;address109,2615
  socklen_t address_len;114,2687
  struct UNIXMessage *msg;msg120,2843
  struct GNUNET_MQ_Handle *mq;mq125,2932
  struct GNUNET_TRANSPORT_QueueHandle *qh;qh130,3017
  unsigned long long bytes_in_queue;135,3132
  struct GNUNET_TIME_Absolute timeout;140,3211
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task145,3288
static struct GNUNET_PeerIdentity my_identity;151,3366
static struct GNUNET_SCHEDULER_Task *read_task;read_task156,3441
static struct GNUNET_SCHEDULER_Task *write_task;write_task161,3518
static unsigned long long delivering_messages;166,3661
static unsigned long long max_queue_length;171,3795
static struct GNUNET_STATISTICS_Handle *stats;stats176,3875
static struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch181,3951
static struct GNUNET_CONTAINER_MultiPeerMap *queue_map;queue_map186,4068
static struct Queue *queue_head;queue_head191,4175
static struct Queue *queue_tail;queue_tail196,4259
static struct GNUNET_NETWORK_Handle *unix_sock;unix_sock201,4342
static struct GNUNET_TRANSPORT_AddressIdentifier *ai;ai206,4454
queue_destroy 217,4711
queue_timeout 257,5751
reschedule_queue_timeout 290,6720
unix_address_to_sockaddr 307,7185
struct LookupCtx334,7849
  struct Queue *res;res339,7924
  const struct sockaddr_un *un;un344,7991
  socklen_t un_len;349,8066
lookup_queue_it 362,8348
lookup_queue 385,8862
select_write_cb 409,9507
mq_send 525,13821
mq_destroy 558,14982
mq_cancel 577,15322
mq_error 603,15974
setup_queue 626,16569
receive_complete_cb 707,19503
select_read_cb 733,20349
mq_init 857,24489
get_queue_delete_it 907,25785
do_shutdown 926,26114
enc_notify_cb 975,27173
run 995,27648
main 1124,32230
GNUNET_TRANSPORT_communicator_unix_memory_init 1156,33068

src/service/transport/test_transport_plugin_cmd_simple_send_dv.c,849
#define LOG(38,1270
#define BASE_DIR 40,1325
#define TOPOLOGY_CONFIG 42,1353
#define TIMEOUT 44,1417
static unsigned int number_received;49,1544
static struct GNUNET_TESTING_Command block_send;51,1582
static struct GNUNET_TESTING_Command block_receive;53,1632
static struct GNUNET_TESTING_Command connect_peers;55,1685
static struct GNUNET_TESTING_Command local_prepared;57,1738
static struct GNUNET_TESTING_Command start_peer;59,1792
static struct GNUNET_TESTING_Interpreter *is;is61,1842
check_test 69,2014
handle_test 83,2293
get_waiting_for_barriers 142,4170
all_peers_started 154,4393
handle_result 177,5014
notify_connect 198,5478
all_local_tests_prepared 225,6444
start_testcase 251,7367
libgnunet_test_transport_plugin_cmd_simple_send_dv_init 400,11802
libgnunet_test_transport_plugin_cmd_simple_send_dv_done 424,12447

src/service/transport/test_transport_testing_startstop.c,328
#define TIMEOUT 29,1073
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task32,1152
static struct GNUNET_TRANSPORT_TESTING_PeerContext *p;p34,1204
static struct GNUNET_TRANSPORT_TESTING_Handle *tth;tth36,1260
static int ret;38,1313
end 42,1343
end_badly 56,1635
start_cb 67,1790
run 80,2060
main 114,3222

src/service/transport/communicator.h,556
#define COMMUNICAOTR_H27,962
struct GNUNET_TRANSPORT_CommunicatorGenericKXConfirmation44,1499
  struct GNUNET_MessageHeader header;49,1644
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;54,1769
  struct GNUNET_TIME_RelativeNBO validity;60,1959
  struct GNUNET_HashCode token;66,2126
struct GNUNET_TRANSPORT_CommunicatorGenericFCLimits92,3079
  struct GNUNET_MessageHeader header;97,3212
  uint32_t msg_window_size;104,3421
  uint64_t msg_cummulative_ack;109,3522
  uint64_t bytes_window_size;116,3713
  uint64_t bytes_cummulative_ack;121,3818

src/service/transport/gnunet-communicator-quic.c,2960
#define COMMUNICATOR_CONFIG_SECTION 52,1790
#define COMMUNICATOR_ADDRESS_PREFIX 53,1846
#define MAX_DATAGRAM_SIZE 54,1889
#define LOCAL_CONN_ID_LEN 59,2061
#define MAX_TOKEN_LEN 60,2090
#define CID_LEN 64,2226
#define TOKEN_LEN 65,2283
#define STREAMID_BI 70,2415
#define ADDRESS_VALIDITY_PERIOD 76,2545
struct GNUNET_CONTAINER_MultiHashMap *conn_map;conn_map81,2698
struct GNUNET_CONTAINER_MultiHashMap *addr_map;addr_map86,2796
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg91,2877
static struct GNUNET_TIME_Relative rekey_interval;96,2962
static struct GNUNET_NETWORK_Handle *udp_sock;udp_sock101,3044
static struct GNUNET_SCHEDULER_Task *read_task;read_task106,3122
static struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch111,3201
static struct GNUNET_TRANSPORT_ApplicationHandle *ah;ah116,3287
static int have_v6_socket;121,3372
static uint16_t my_port;126,3430
static unsigned long long rekey_max_bytes;131,3486
static quiche_config *config config136,3560
struct GNUNET_PeerIdentity my_identity;141,3626
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key146,3695
static struct GNUNET_NAT_Handle *nat;nat151,3795
struct PeerAddress161,4145
  struct GNUNET_PeerIdentity target;166,4210
  int id_rcvd;171,4327
  int id_sent;176,4427
  int is_receiver;181,4518
  char *foreign_addr;foreign_addr187,4652
  struct sockaddr *address;address192,4719
  socklen_t address_len;197,4788
  struct quic_conn *conn;conn202,4876
  struct GNUNET_MQ_Handle *d_mq;d_mq207,4972
  struct GNUNET_TRANSPORT_QueueHandle *d_qh;d_qh212,5062
  struct GNUNET_TIME_Absolute timeout;217,5156
  size_t d_mtu;223,5297
  enum GNUNET_NetworkType nt;228,5371
  int peer_destroy_called;233,5464
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task251,5820
static struct GNUNET_NT_InterfaceScanner *is;is256,5927
static struct GNUNET_STATISTICS_Handle *stats;stats261,6009
struct quic_conn268,6287
  uint8_t cid[cid270,6306
  quiche_conn *conn;conn272,6341
struct QUIC_header278,6455
  uint8_t type;280,6476
  uint32_t version;281,6492
  uint8_t scid[scid283,6513
  size_t scid_len;284,6553
  uint8_t dcid[dcid286,6573
  size_t dcid_len;287,6613
  uint8_t odcid[odcid289,6633
  size_t odcid_len;290,6674
  uint8_t token[token292,6695
  size_t token_len;293,6727
recv_from_streams 302,6897
mint_token 406,10218
validate_token 419,10678
create_conn 453,11369
flush_egress 492,12599
reschedule_peer_timeout 535,13736
peer_destroy 550,14132
get_peer_delete_it 596,15489
mq_send_d 617,15943
mq_destroy_d 674,17514
mq_cancel 695,17997
mq_error 712,18435
udp_address_to_sockaddr 732,18945
setup_peer_mq 867,22487
sockaddr_to_udpaddr_string 928,24651
notify_cb 966,25548
check_timeouts 996,26474
mq_init 1055,28606
try_connection_reversal 1156,32258
nat_address_cb 1180,33124
do_shutdown 1222,34203
sock_read 1267,35179
run 1587,46861
main 1771,53061

src/service/transport/transport_api2_core.c,1728
#define LOG(34,1174
#define STARTING_NEIGHBOURS_SIZE 39,1322
#define SEND_WINDOW_SIZE 49,1678
struct Neighbour55,1784
  struct GNUNET_PeerIdentity id;60,1848
  struct GNUNET_TRANSPORT_CoreHandle *h;h65,1925
  struct GNUNET_MQ_Handle *mq;mq70,2019
  struct GNUNET_MQ_Envelope *env;env75,2135
  void *handlers_cls;handlers_cls80,2215
  unsigned int ready_window;86,2336
  int16_t awaiting_done;95,2676
  uint16_t env_size;100,2750
struct GNUNET_TRANSPORT_CoreHandle108,2878
  void *cls;cls113,2959
  struct GNUNET_MQ_MessageHandler *handlers;handlers119,3066
  GNUNET_TRANSPORT_NotifyConnect nc_cb;124,3164
  GNUNET_TRANSPORT_NotifyDisconnect nd_cb;129,3260
  struct GNUNET_MQ_Handle *mq;mq134,3368
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg139,3435
  struct GNUNET_CONTAINER_MultiPeerMap *neighbours;neighbours145,3618
  struct GNUNET_PeerIdentity self;150,3744
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task155,3848
  struct GNUNET_TIME_Relative reconnect_delay;160,3947
  struct GNUNET_TIME_Absolute restarted_at;165,4045
  int check_self;171,4219
neighbour_find 193,4664
neighbour_delete 211,5191
mq_error_handler 246,6178
notify_send_done 268,6939
do_send 286,7322
mq_send_impl 313,8144
mq_destroy_impl 362,9500
mq_cancel_impl 379,9885
peer_mq_error_handler 407,10456
handle_connect 426,10881
handle_disconnect 474,12324
handle_send_ok 501,13019
check_recv 547,14035
handle_recv 577,14712
reconnect 606,15449
disconnect 657,17110
disconnect_and_schedule_reconnect 675,17481
GNUNET_TRANSPORT_core_get_mq 710,18715
GNUNET_TRANSPORT_core_receive_continue 743,19859
GNUNET_TRANSPORT_core_connect 775,20937
GNUNET_TRANSPORT_core_disconnect 826,22391

src/service/transport/transport-testing-communicator.c,2176
#define LOG(37,1223
struct MyClient39,1305
  struct MyClient *prev;prev41,1323
  struct MyClient *next;next42,1348
  struct GNUNET_SERVICE_Client *client;client46,1418
  struct GNUNET_MQ_Handle *c_mq;c_mq51,1504
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorHandle *tc;tc56,1563
struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorQueue63,1694
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorHandle *tc_h;tc_h68,1815
  struct GNUNET_MQ_Envelope *open_queue_env;open_queue_env77,2188
  struct GNUNET_PeerIdentity peer_id;82,2309
  uint32_t qid;87,2381
  uint64_t mid;92,2441
  uint32_t nt;97,2512
  uint32_t mtu;102,2599
  uint64_t q_len;107,2674
  uint32_t priority;112,2721
  uint32_t cs;117,2812
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorQueue *next;next122,2878
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorQueue *prev;prev127,3001
struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorTransmission134,3132
check_communicator_available 149,3415
handle_communicator_available 172,3941
check_communicator_backchannel 213,5207
handle_communicator_backchannel 238,5755
check_add_address 290,7493
handle_add_address 312,7956
check_incoming_msg 348,9166
handle_incoming_msg 372,9648
handle_queue_create_ok 419,11093
handle_queue_create_fail 444,11802
check_add_queue_message 467,12332
handle_add_queue_message 484,12682
handle_update_queue_message 532,14144
shutdown_service 579,15592
connect_cb 600,16002
disconnect_cb 646,17380
handle_send_message_ack 676,18151
transport_communicator_start 698,18745
shutdown_process 766,21906
shutdown_statistics 789,22528
shutdown_peerstore 802,22765
shutdown_communicator 815,23002
communicator_start 828,23208
shutdown_nat 874,24709
shutdown_resolver 887,24938
resolver_start 899,25089
statistics_start 933,25849
peerstore_start 963,26817
nat_start 993,27754
GNUNET_TRANSPORT_TESTING_transport_communicator_service_start 1033,29246
GNUNET_TRANSPORT_TESTING_transport_communicator_service_stop 1096,31564
GNUNET_TRANSPORT_TESTING_transport_communicator_open_queue 1127,32522
GNUNET_TRANSPORT_TESTING_transport_communicator_send1173,33827

src/service/transport/transport-testing-loggers2.c,95
GNUNET_TRANSPORT_TESTING_log_connect 37,1128
GNUNET_TRANSPORT_TESTING_log_disconnect 62,1766

src/service/transport/test_transport_plugin_cmd_simple_send.c,740
#define LOG(38,1260
#define BASE_DIR 40,1315
#define TOPOLOGY_CONFIG 42,1343
#define TIMEOUT 44,1407
static struct GNUNET_TESTING_Command block_send;46,1486
static struct GNUNET_TESTING_Command block_receive;48,1536
static struct GNUNET_TESTING_Command connect_peers;50,1589
static struct GNUNET_TESTING_Command local_prepared;52,1642
static struct GNUNET_TESTING_Interpreter *is;is54,1696
check_test 62,1868
handle_test 75,2116
get_waiting_for_barriers 91,2618
all_peers_started 103,2841
handle_result 124,3386
notify_connect 146,3851
all_local_tests_prepared 168,4512
start_testcase 194,5435
libgnunet_test_transport_plugin_cmd_simple_send_init 344,10040
libgnunet_test_transport_plugin_cmd_simple_send_done 368,10682

src/service/transport/transport.h,5857
#define TRANSPORT_H27,952
#define DEBUG_TRANSPORT 33,1062
typedef void (*NotifyConnect)NotifyConnect46,1426
struct StartMessage61,1783
  struct GNUNET_MessageHeader header;66,1872
  uint32_t options;73,2039
  struct GNUNET_PeerIdentity self;79,2195
struct ConnectInfoMessage87,2326
  struct GNUNET_MessageHeader header;92,2423
  uint32_t reserved GNUNET_PACKED;100,2608
  struct GNUNET_BANDWIDTH_Value32NBO quota_out;105,2703
  struct GNUNET_PeerIdentity id;111,2807
struct DisconnectInfoMessage119,2938
  struct GNUNET_MessageHeader header;124,3041
  uint32_t reserved GNUNET_PACKED;129,3120
  struct GNUNET_PeerIdentity peer;134,3195
struct InboundMessage142,3362
  struct GNUNET_MessageHeader header;147,3452
  struct GNUNET_PeerIdentity peer;152,3537
struct SendOkMessage160,3691
  struct GNUNET_MessageHeader header;165,3783
  uint32_t reserved GNUNET_PACKED;170,3923
  uint16_t success GNUNET_PACKED;178,4185
  uint16_t bytes_msg GNUNET_PACKED;183,4258
  uint32_t bytes_physical GNUNET_PACKED;189,4398
  struct GNUNET_PeerIdentity peer;195,4494
struct RecvOkMessage204,4685
  struct GNUNET_MessageHeader header;209,4777
  uint32_t increase_window_delta GNUNET_PACKED;215,4915
  struct GNUNET_PeerIdentity peer;220,5023
struct OutboundMessage228,5202
  struct GNUNET_MessageHeader header;233,5293
  uint32_t priority GNUNET_PACKED;238,5397
  struct GNUNET_TIME_RelativeNBO timeout;246,5568
  struct GNUNET_PeerIdentity peer;252,5674
struct GNUNET_TRANSPORT_CommunicatorAvailableMessage262,5856
  struct GNUNET_MessageHeader header;267,5990
  uint32_t cc;272,6114
struct GNUNET_TRANSPORT_AddAddressMessage281,6230
  struct GNUNET_MessageHeader header;286,6348
  uint32_t aid GNUNET_PACKED;291,6447
  struct GNUNET_TIME_RelativeNBO expiration;296,6525
  uint32_t nt;301,6625
struct GNUNET_TRANSPORT_DelAddressMessage310,6758
  struct GNUNET_MessageHeader header;315,6876
  uint32_t aid GNUNET_PACKED;320,6952
struct GNUNET_TRANSPORT_IncomingMessage327,7042
  struct GNUNET_MessageHeader header;332,7159
  uint32_t fc_on GNUNET_PACKED;337,7246
  uint64_t fc_id GNUNET_PACKED;342,7340
  struct GNUNET_TIME_RelativeNBO expected_address_validity;348,7497
  struct GNUNET_PeerIdentity sender;353,7594
  struct GNUNET_PeerIdentity neighbour_sender;358,7685
struct GNUNET_TRANSPORT_IncomingMessageAck368,7878
  struct GNUNET_MessageHeader header;373,8002
  uint32_t reserved GNUNET_PACKED;378,8071
  uint64_t fc_id GNUNET_PACKED;383,8154
  struct GNUNET_PeerIdentity sender;388,8247
struct GNUNET_TRANSPORT_AddQueueMessage395,8327
  struct GNUNET_MessageHeader header;400,8443
  uint32_t qid GNUNET_PACKED;405,8546
  struct GNUNET_PeerIdentity receiver;410,8640
  uint32_t nt;415,8734
  uint32_t mtu;420,8829
  uint64_t q_len;426,8974
  uint32_t priority;431,9061
  uint32_t cs;436,9152
struct GNUNET_TRANSPORT_UpdateQueueMessage445,9268
  struct GNUNET_MessageHeader header;450,9387
  uint32_t qid GNUNET_PACKED;455,9490
  struct GNUNET_PeerIdentity receiver;460,9584
  uint32_t nt;465,9678
  uint32_t mtu;470,9773
  uint64_t q_len;476,9918
  uint32_t priority;481,10005
  uint32_t cs;486,10096
struct GNUNET_TRANSPORT_DelQueueMessage493,10168
  struct GNUNET_MessageHeader header;498,10287
  uint32_t qid GNUNET_PACKED;503,10363
  struct GNUNET_PeerIdentity receiver;508,10457
struct GNUNET_TRANSPORT_CreateQueue515,10568
  struct GNUNET_MessageHeader header;520,10681
  uint32_t request_id GNUNET_PACKED;525,10764
  struct GNUNET_PeerIdentity receiver;530,10865
struct GNUNET_TRANSPORT_CreateQueueResponse539,11051
  struct GNUNET_MessageHeader header;545,11232
  uint32_t request_id GNUNET_PACKED;550,11315
struct GNUNET_TRANSPORT_SendMessageTo557,11432
  struct GNUNET_MessageHeader header;562,11543
  uint32_t qid GNUNET_PACKED;567,11626
  uint64_t mid GNUNET_PACKED;572,11709
  struct GNUNET_PeerIdentity receiver;577,11778
struct GNUNET_TRANSPORT_SendMessageToAck586,11906
  struct GNUNET_MessageHeader header;591,12024
  uint32_t status GNUNET_PACKED;596,12128
  uint64_t mid GNUNET_PACKED;601,12215
  uint32_t qid GNUNET_PACKED;606,12322
  struct GNUNET_PeerIdentity receiver;611,12391
struct GNUNET_TRANSPORT_CommunicatorBackchannel620,12593
  struct GNUNET_MessageHeader header;625,12729
  uint32_t reserved;630,12813
  struct GNUNET_PeerIdentity pid;635,12865
struct GNUNET_TRANSPORT_CommunicatorBackchannelIncoming649,13243
  struct GNUNET_MessageHeader header;655,13401
  uint32_t reserved;660,13485
  struct GNUNET_PeerIdentity pid;665,13537
struct GNUNET_TRANSPORT_MonitorStart675,13724
  struct GNUNET_MessageHeader header;680,13839
  uint32_t one_shot;685,13969
  struct GNUNET_PeerIdentity peer;690,14065
struct GNUNET_TRANSPORT_MonitorData697,14133
  struct GNUNET_MessageHeader header;702,14246
  uint32_t nt GNUNET_PACKED;707,14354
  struct GNUNET_PeerIdentity peer;712,14420
  struct GNUNET_TIME_AbsoluteNBO last_validation;717,14521
  struct GNUNET_TIME_AbsoluteNBO valid_until;718,14571
  struct GNUNET_TIME_AbsoluteNBO next_validation;719,14617
  struct GNUNET_TIME_RelativeNBO rtt;724,14719
  uint32_t cs GNUNET_PACKED;729,14803
  uint32_t num_msg_pending GNUNET_PACKED;734,14877
  uint32_t num_bytes_pending GNUNET_PACKED;739,14961
struct GNUNET_TRANSPORT_AddressToVerify748,15102
  struct GNUNET_MessageHeader header;753,15230
  uint32_t reserved;758,15299
  struct GNUNET_PeerIdentity peer;763,15364
struct ExpressPreferenceMessage773,15563
  struct GNUNET_MessageHeader header;780,15741
  uint32_t pk GNUNET_PACKED;786,15902
  struct GNUNET_PeerIdentity peer;791,15986
  struct GNUNET_BANDWIDTH_Value32NBO bw;796,16103
struct RequestHelloValidationMessage804,16259
  struct GNUNET_MessageHeader header;809,16380
  uint32_t nt GNUNET_PACKED;815,16533
  struct GNUNET_PeerIdentity peer;820,16619

src/service/transport/ieee80211_radiotap.h,2075
#define IEEE80211RADIOTAP_H36,1628
#define PKTHDR_RADIOTAP_VERSION 43,1796
struct ieee80211_radiotap_header64,2643
  u8 it_version;66,2678
  u8 it_pad;71,2955
  __le16 it_len;72,2968
  __le32 it_present;77,3236
} __packed;84,3640
enum ieee80211_radiotap_type183,7177
  IEEE80211_RADIOTAP_TSFT 185,7208
  IEEE80211_RADIOTAP_FLAGS 186,7239
  IEEE80211_RADIOTAP_RATE 187,7271
  IEEE80211_RADIOTAP_CHANNEL 188,7302
  IEEE80211_RADIOTAP_FHSS 189,7336
  IEEE80211_RADIOTAP_DBM_ANTSIGNAL 190,7367
  IEEE80211_RADIOTAP_DBM_ANTNOISE 191,7407
  IEEE80211_RADIOTAP_LOCK_QUALITY 192,7446
  IEEE80211_RADIOTAP_TX_ATTENUATION 193,7485
  IEEE80211_RADIOTAP_DB_TX_ATTENUATION 194,7526
  IEEE80211_RADIOTAP_DBM_TX_POWER 195,7570
  IEEE80211_RADIOTAP_ANTENNA 196,7610
  IEEE80211_RADIOTAP_DB_ANTSIGNAL 197,7645
  IEEE80211_RADIOTAP_DB_ANTNOISE 198,7685
  IEEE80211_RADIOTAP_RX_FLAGS 199,7724
  IEEE80211_RADIOTAP_TX_FLAGS 200,7760
  IEEE80211_RADIOTAP_RTS_RETRIES 201,7796
  IEEE80211_RADIOTAP_DATA_RETRIES 202,7835
  IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE 205,7941
  IEEE80211_RADIOTAP_VENDOR_NAMESPACE 206,7987
  IEEE80211_RADIOTAP_EXT 207,8031
#define IEEE80211_CHAN_TURBO 211,8086
#define IEEE80211_CHAN_CCK 212,8146
#define IEEE80211_CHAN_OFDM 213,8204
#define IEEE80211_CHAN_2GHZ 214,8263
#define IEEE80211_CHAN_5GHZ 215,8333
#define IEEE80211_CHAN_PASSIVE 216,8402
#define IEEE80211_CHAN_DYN 217,8474
#define IEEE80211_CHAN_GFSK 218,8545
#define IEEE80211_RADIOTAP_F_CFP 221,8651
#define IEEE80211_RADIOTAP_F_SHORTPRE 224,8830
#define IEEE80211_RADIOTAP_F_WEP 228,9069
#define IEEE80211_RADIOTAP_F_FRAG 231,9257
#define IEEE80211_RADIOTAP_F_FCS 234,9444
#define IEEE80211_RADIOTAP_F_DATAPAD 235,9517
#define IEEE80211_RADIOTAP_F_BADFCS 239,9795
#define IEEE80211_RADIOTAP_F_RX_BADPLCP 242,9896
#define IEEE80211_RADIOTAP_F_TX_FAIL 245,10008
#define IEEE80211_RADIOTAP_F_TX_CTS 247,10145
#define IEEE80211_RADIOTAP_F_TX_RTS 248,10221
#define ieee80211chan2mhz(253,10524
get_unaligned_le16 260,10675
ieee80211_get_radiotap_len 267,10759

src/service/transport/test_communicator_basic.c,3517
#define LOG(38,1167
#define NUM_PEERS 42,1342
static struct GNUNET_SCHEDULER_Task *to_task[to_task44,1363
static int queue_est 46,1421
static struct GNUNET_PeerIdentity peer_id[peer_id48,1456
static char *communicator_binary;communicator_binary50,1511
GNUNET_TRANSPORT_TESTING_TransportCommunicatorHandle *tc_hs[tc_hs53,1560
static struct GNUNET_CONFIGURATION_Handle *cfg_peers[cfg_peers55,1633
static struct GNUNET_STATISTICS_Handle *stats[stats57,1699
static char *cfg_peers_name[cfg_peers_name59,1758
static int finished[finished61,1799
static int ret;63,1832
static int bidirect 65,1849
static size_t long_message_size;67,1883
static struct GNUNET_TIME_Absolute start_short[start_short69,1917
static struct GNUNET_TIME_Absolute start_long[start_long71,1977
static struct GNUNET_TIME_Absolute timeout[timeout73,2036
static char *communicator_name;communicator_name77,2171
static char *test_name;test_name79,2204
static struct GNUNET_STATISTICS_GetHandle *box_stats[box_stats81,2229
static struct GNUNET_STATISTICS_GetHandle *rekey_stats[rekey_stats83,2295
#define TEST_SECTION 85,2363
#define SHORT_MESSAGE_SIZE 87,2398
#define LONG_MESSAGE_SIZE 89,2430
#define ALLOWED_PACKET_LOSS 91,2475
#define BURST_PACKETS 93,2507
#define TOTAL_ITERATIONS 95,2535
#define PEER_A 97,2563
#define PEER_B 99,2581
static unsigned int iterations_left[iterations_left101,2599
#define TIMEOUT_MULTIPLIER 103,2648
#define DEFAULT_DELAY 105,2678
#define SHORT_BURST_WINDOW 108,2777
#define LONG_BURST_WINDOW 111,2874
enum TestPhase114,2970
  TP_INIT,116,2987
  TP_BURST_SHORT,117,2998
  TP_BURST_LONG,118,3016
  TP_SIZE_CHECK119,3033
static unsigned int phase_short[phase_short122,3053
static unsigned int phase_long[phase_long124,3098
static unsigned int phase_size[phase_size126,3142
static long long unsigned int allowed_packet_loss_short;128,3186
static long long unsigned int allowed_packet_loss_long;130,3244
static long long unsigned int burst_packets_short;132,3301
static long long unsigned int burst_packets_long;134,3353
static long long unsigned int delay_long_value;136,3404
static long long unsigned int delay_short_value;138,3453
static struct GNUNET_TIME_Relative delay_short;140,3503
static struct GNUNET_TIME_Relative delay_long;142,3552
static size_t num_sent_short[num_sent_short144,3600
static size_t num_sent_long[num_sent_long146,3642
static size_t num_sent_size[num_sent_size148,3683
static uint32_t ack[ack150,3724
static enum TestPhase phase[phase152,3757
static size_t num_received_short[num_received_short154,3798
static size_t num_received_long[num_received_long156,3844
static size_t num_received_size[num_received_size158,3889
static uint64_t avg_latency[avg_latency160,3934
communicator_available_cb 163,3987
open_queue 178,4320
add_address_cb 200,4937
queue_create_reply_cb 236,5990
handle_backchannel_cb 253,6426
make_payload 270,6875
get_tc_h 288,7462
get_peer_nr_from_tc 311,7862
get_peer_nr 322,8070
process_statistics_box_done 332,8299
process_statistics_rekey_done 351,8712
process_statistics 370,9128
short_test_cb 433,10880
short_test 468,12017
size_test 477,12189
long_test_cb 518,13498
long_test 551,14570
choose_phase 560,14739
finish_phase_long 659,19098
finish_phase_short 692,20096
latency_timeout 723,21123
add_queue_cb 805,23450
update_avg_latency 851,24863
load_phase_config 894,26091
incoming_message_cb 935,27318
do_shutdown 1047,30705
run 1081,31458
main 1128,32998

src/service/transport/gnunet-communicator-tcp.c,9448
#define NAT_TIMEOUT 48,1554
#define ADDRESS_VALIDITY_PERIOD 54,1743
#define DEFAULT_MAX_QUEUE_LENGTH 65,2161
#define BUF_SIZE 71,2307
#define DEFAULT_REKEY_INTERVAL 76,2423
#define PROTO_QUEUE_TIMEOUT 81,2552
#define REKEY_MAX_BYTES 87,2724
#define INITIAL_KX_SIZE 93,2858
#define INITIAL_CORE_KX_SIZE 100,3070
#define COMMUNICATOR_ADDRESS_PREFIX 108,3290
#define COMMUNICATOR_CONFIG_SECTION 113,3392
struct TcpHandshakeSignature122,3585
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;127,3702
  struct GNUNET_PeerIdentity sender;132,3833
  struct GNUNET_PeerIdentity receiver;137,3955
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral;142,4049
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;148,4229
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;153,4395
struct TcpHandshakeAckSignature160,4583
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;165,4707
  struct GNUNET_PeerIdentity sender;170,4838
  struct GNUNET_PeerIdentity receiver;175,4960
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;181,5130
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;186,5296
struct TCPConfirmation192,5410
  struct GNUNET_PeerIdentity sender;197,5470
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;202,5605
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;208,5786
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;213,5952
struct TCPConfirmationAck220,6079
  struct GNUNET_MessageHeader header;227,6190
  struct GNUNET_PeerIdentity sender;232,6264
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;237,6403
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;243,6584
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;248,6750
struct TCPBox255,6857
  struct GNUNET_MessageHeader header;263,7129
  struct GNUNET_ShortHashCode hmac;273,7576
struct TCPRekey284,7831
  struct GNUNET_MessageHeader header;289,7919
  struct GNUNET_ShortHashCode hmac;299,8365
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral;304,8438
  struct GNUNET_CRYPTO_EddsaSignature sender_sig;309,8581
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;315,8762
struct TcpRekeySignature322,8922
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;327,9031
  struct GNUNET_PeerIdentity sender;332,9162
  struct GNUNET_PeerIdentity receiver;337,9284
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral;342,9378
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;348,9558
struct TCPFinish356,9805
  struct GNUNET_MessageHeader header;361,9895
  struct GNUNET_ShortHashCode hmac;371,10341
struct TCPNATProbeMessage378,10495
  struct GNUNET_MessageHeader header;383,10594
  struct GNUNET_PeerIdentity clientIdentity;388,10689
struct PendingReversal396,10810
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task401,10865
  struct GNUNET_PeerIdentity target;406,10961
  struct sockaddr *in;in411,11050
struct ListenTask417,11114
  struct GNUNET_SCHEDULER_Task *listen_task;listen_task422,11169
  struct GNUNET_NETWORK_Handle *listen_sock;listen_sock427,11247
struct Queue433,11327
  struct GNUNET_PeerIdentity target;438,11386
  struct GNUNET_NETWORK_Handle *listen_sock;listen_sock443,11456
  struct GNUNET_NETWORK_Handle *sock;sock448,11571
  gcry_cipher_hd_t in_cipher;453,11667
  gcry_cipher_hd_t out_cipher;458,11755
  struct GNUNET_HashCode key;463,11820
  struct GNUNET_HashCode in_hmac;468,11922
  struct GNUNET_HashCode out_hmac;474,12063
  struct GNUNET_SCHEDULER_Task *read_task;read_task479,12153
  struct GNUNET_SCHEDULER_Task *write_task;write_task484,12252
  struct sockaddr *address;address489,12341
  uint64_t rekey_left_bytes;495,12479
  struct GNUNET_TIME_Absolute rekey_time;501,12614
  socklen_t address_len;506,12697
  struct GNUNET_MQ_Handle *mq;mq511,12784
  struct GNUNET_TRANSPORT_QueueHandle *qh;qh516,12869
  unsigned long long bytes_in_queue;521,12984
  char cread_buf[cread_buf526,13088
  char cwrite_buf[cwrite_buf531,13176
  char pread_buf[pread_buf536,13265
  char pwrite_buf[pwrite_buf541,13388
  size_t cread_off;547,13572
  size_t cwrite_off;553,13714
  size_t pread_off;559,13858
  size_t pwrite_off;565,14001
  struct GNUNET_TIME_Absolute timeout;570,14064
  unsigned int backpressure;579,14422
  enum GNUNET_NetworkType nt;584,14509
  enum GNUNET_TRANSPORT_ConnectionStatus cs;589,14594
  int mq_awaits_continue;594,14712
  int finishing;599,14820
  int destroyed;607,15091
  int rekeyed;613,15208
  struct GNUNET_TIME_AbsoluteNBO rekey_monotonic_time;618,15281
  struct GNUNET_TIME_AbsoluteNBO handshake_monotonic_time;623,15398
  struct GNUNET_TIME_AbsoluteNBO handshake_ack_monotonic_time;628,15523
  struct GNUNET_CRYPTO_ChallengeNonceP challenge;633,15703
  struct GNUNET_CRYPTO_ChallengeNonceP challenge_received;638,15976
  struct GNUNET_PEERSTORE_IterateContext *rekey_monotime_get;rekey_monotime_get643,16133
  struct GNUNET_PEERSTORE_IterateContext *handshake_monotime_get;handshake_monotime_get648,16290
  struct GNUNET_PEERSTORE_IterateContext *handshake_ack_monotime_get;handshake_ack_monotime_get653,16455
  struct GNUNET_PEERSTORE_StoreContext *rekey_monotime_sc;rekey_monotime_sc658,16619
  struct GNUNET_PEERSTORE_StoreContext *handshake_monotime_sc;handshake_monotime_sc663,16769
  struct GNUNET_PEERSTORE_StoreContext *handshake_ack_monotime_sc;handshake_ack_monotime_sc668,16927
  size_t unverified_size;674,17086
  int initial_core_kx_done;679,17181
struct ProtoQueue687,17329
  struct ProtoQueue *next;next692,17381
  struct ProtoQueue *prev;prev697,17441
  struct GNUNET_NETWORK_Handle *listen_sock;listen_sock702,17501
  struct GNUNET_NETWORK_Handle *sock;sock707,17616
  struct GNUNET_SCHEDULER_Task *write_task;write_task712,17710
  char write_buf[write_buf717,17829
  size_t write_off;722,17923
  struct GNUNET_SCHEDULER_Task *read_task;read_task727,17998
  struct sockaddr *address;address732,18086
  socklen_t address_len;737,18155
  struct GNUNET_TIME_Absolute timeout;742,18227
  char ibuf[ibuf748,18373
  size_t ibuf_off;753,18462
struct PortOnlyIpv4Ipv6759,18575
  struct sockaddr *addr_ipv4;addr_ipv4764,18651
  socklen_t addr_len_ipv4;769,18723
  struct sockaddr *addr_ipv6;addr_ipv6774,18801
  socklen_t addr_len_ipv6;779,18873
struct Addresses786,18979
  struct Addresses *next;next791,19030
  struct Addresses *prev;prev796,19089
  struct sockaddr *addr;addr801,19177
  socklen_t addr_len;806,19274
static unsigned long long max_queue_length;814,19388
static struct GNUNET_STATISTICS_Handle *stats;stats819,19468
static struct GNUNET_TRANSPORT_CommunicatorHandle *ch;ch824,19544
static struct GNUNET_CONTAINER_MultiHashMap *queue_map;queue_map829,19661
static struct GNUNET_CONTAINER_MultiHashMap *lt_map;lt_map834,19782
static struct GNUNET_PeerIdentity my_identity;839,19863
static unsigned long long rekey_max_bytes;844,19945
static struct GNUNET_TIME_Relative rekey_interval;849,20019
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key854,20099
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg859,20191
static struct GNUNET_NT_InterfaceScanner *is;is864,20301
static struct GNUNET_NAT_Handle *nat;nat869,20386
static struct ProtoQueue *proto_head;proto_head874,20458
static struct ProtoQueue *proto_tail;proto_tail879,20530
struct GNUNET_RESOLVER_RequestHandle *resolve_request_handle;resolve_request_handle884,20620
static struct Addresses *addrs_head;addrs_head889,20757
static struct Addresses *addrs_tail;addrs_tail894,20869
static int addrs_lens;899,20978
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore904,21041
static int shutdown_running 909,21152
static int disable_v6;914,21220
static unsigned int bind_port;919,21304
static struct GNUNET_CONTAINER_MultiHashMap *pending_reversals;pending_reversals924,21374
queue_destroy 944,21867
calculate_hmac 1055,24987
queue_finish 1083,25835
core_read_finished_cb 1121,26984
pass_plaintext_to_core 1170,28560
setup_cipher 1217,30127
rekey_monotime_store_cb 1272,32728
rekey_monotime_cb 1293,33369
setup_in_cipher 1354,35636
do_rekey 1373,36212
handshake_ack_monotime_store_cb 1435,38741
handshake_ack_monotime_cb 1457,39423
send_challenge 1518,41530
setup_out_cipher 1563,43076
inject_rekey 1579,43545
pending_reversals_delete_it 1634,45736
check_and_remove_pending_reversal 1657,46389
free_proto_queue 1697,47862
proto_queue_write 1729,48701
queue_write 1774,50029
try_handle_plaintext 1871,53547
queue_read 2129,61945
tcp_address_to_sockaddr_numeric_v6 2257,66435
tcp_address_to_sockaddr_numeric_v4 2285,67168
tcp_address_to_sockaddr_port_only 2309,67818
extract_address 2365,69335
extract_port 2423,70552
tcp_address_to_sockaddr 2505,72238
mq_send 2559,73420
mq_destroy 2603,75123
mq_cancel 2622,75462
mq_error 2641,75922
boot_queue 2661,76450
transmit_kx 2697,77803
start_initial_kx_out 2745,79472
handshake_monotime_store_cb 2763,80055
handshake_monotime_cb 2784,80720
decrypt_and_check_tc 2856,83618
queue_read_kx 2903,85229
proto_read_kx 3008,88752
create_proto_queue 3124,92392
listen_cb 3179,94137
try_connection_reversal 3218,95373
pending_reversal_timeout 3258,96753
mq_init 3302,98478
get_lt_delete_it 3508,105051
get_queue_delete_it 3540,105728
do_shutdown 3559,106053
enc_notify_cb 3632,107931
nat_address_cb 3657,108738
add_addr 3702,110005
init_socket 3736,110945
nat_register 3886,115646
init_socket_resolv 3949,117626
run 4005,119132
main 4153,123672

src/service/transport/transport-testing-communicator.h,2438
(*GNUNET_TRANSPORT_TESTING_BackchannelCallback)GNUNET_TRANSPORT_TESTING_BackchannelCallback52,1608
(*GNUNET_TRANSPORT_TESTING_CommunicatorAvailableCallback)GNUNET_TRANSPORT_TESTING_CommunicatorAvailableCallback67,2108
(*GNUNET_TRANSPORT_TESTING_AddAddressCallback)GNUNET_TRANSPORT_TESTING_AddAddressCallback88,3001
(*GNUNET_TRANSPORT_TESTING_QueueCreateReplyCallback)GNUNET_TRANSPORT_TESTING_QueueCreateReplyCallback107,3822
(*GNUNET_TRANSPORT_TESTING_AddQueueCallback)GNUNET_TRANSPORT_TESTING_AddQueueCallback122,4345
(*GNUNET_TRANSPORT_TESTING_IncomingMessageCallback)GNUNET_TRANSPORT_TESTING_IncomingMessageCallback140,5034
struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorHandle150,5519
  struct MyClient *client_head;client_head155,5606
  struct MyClient *client_tail;client_tail156,5638
  struct GNUNET_MQ_Handle *c_mq;c_mq161,5714
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg166,5802
  char *cfg_filename;cfg_filename171,5902
  struct GNUNET_PeerIdentity peer_id;173,5925
  struct GNUNET_SERVICE_Handle *tsh;tsh178,6020
  struct GNUNET_SCHEDULER_Task *ts_shutdown_task;ts_shutdown_task184,6157
  struct GNUNET_OS_Process *c_proc;c_proc190,6261
  struct GNUNET_OS_Process *nat_proc;nat_proc195,6327
  struct GNUNET_OS_Process *resolver_proc;resolver_proc200,6408
  struct GNUNET_OS_Process *stat_proc;stat_proc205,6496
  struct GNUNET_OS_Process *ps_proc;ps_proc210,6579
  struct GNUNET_SCHEDULER_Task *c_shutdown_task;c_shutdown_task215,6706
  enum GNUNET_TRANSPORT_CommunicatorCharacteristics c_characteristics;220,6816
  char *c_addr_prefix;c_addr_prefix225,6942
  char *c_address;c_address230,7020
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorQueue *queue_head;queue_head235,7124
  struct GNUNET_TRANSPORT_TESTING_TransportCommunicatorQueue *queue_tail;queue_tail240,7283
    communicator_available_cb;247,7517
  GNUNET_TRANSPORT_TESTING_AddAddressCallback add_address_cb;252,7622
  GNUNET_TRANSPORT_TESTING_QueueCreateReplyCallback queue_create_reply_cb;257,7758
  GNUNET_TRANSPORT_TESTING_AddQueueCallback add_queue_cb;262,7907
  GNUNET_TRANSPORT_TESTING_IncomingMessageCallback incoming_msg_cb;267,8039
  GNUNET_TRANSPORT_TESTING_BackchannelCallback bc_cb;272,8153
  struct GNUNET_SERVICE_Handle *sh;sh277,8244
  void *cb_cls;cb_cls282,8329
  GNUNET_SCHEDULER_TaskCallback cont;287,8407
  void *cont_cls;cont_cls292,8480
  int bc_enabled;297,8538

src/service/transport/test_transport_plugin_cmd_udp_backchannel.c,662
#define LOG(38,1260
#define BASE_DIR 40,1339
#define TOPOLOGY_CONFIG 42,1367
#define TIMEOUT 44,1435
static struct GNUNET_TESTING_Command block_send;46,1514
static struct GNUNET_TESTING_Command connect_peers;48,1564
static struct GNUNET_TESTING_Command local_prepared;50,1617
static struct GNUNET_TESTING_Interpreter *is;is52,1671
check_test 61,1844
handle_test 74,2092
get_waiting_for_barriers 89,2510
all_peers_started 101,2733
handle_result 122,3275
notify_connect 144,3740
all_local_tests_prepared 163,4254
libgnunet_test_transport_plugin_cmd_udp_backchannel_init 185,4837
libgnunet_test_transport_plugin_cmd_udp_backchannel_done 355,10131

src/service/transport/test_transport_plugin_cmd_just_run.c,1176
#define LOG(39,1293
#define BASE_DIR 41,1348
#define TOPOLOGY_CONFIG 43,1376
#define TIMEOUT 45,1440
#define MAX_RECEIVED 47,1519
#define MESSAGE_SIZE 49,1546
static struct GNUNET_TESTING_Command block_script;51,1574
static struct GNUNET_TESTING_Command connect_peers;53,1626
static struct GNUNET_TESTING_Command local_prepared;55,1679
static struct GNUNET_TESTING_Command start_peer;57,1733
static struct GNUNET_TESTING_Interpreter *is;is59,1783
static struct GNUNET_CONTAINER_MultiPeerMap *senders;senders61,1830
struct Sender63,1885
  unsigned long long num_received;68,1959
  struct GNUNET_TIME_Relative mean_time;73,2051
  struct GNUNET_TIME_Absolute time_first;78,2143
check_test 87,2314
get_waiting_for_barriers 96,2493
all_peers_started 124,3346
handle_result 136,3531
all_local_tests_prepared 180,4654
child_completed_callback 196,5147
check_encrypted 210,5392
core_receive_continue 217,5495
handle_encrypted 245,6079
handle_ephemeral_key 254,6238
handle_ping 263,6401
handle_pong 272,6555
start_testcase 297,7807
libgnunet_test_transport_plugin_cmd_just_run_init 463,13245
libgnunet_test_transport_plugin_cmd_just_run_done 485,13775

src/service/transport/transport-testing-cmds.h,1097
#define TRANSPORT_TESTING_CMDS_H28,968
struct ConnectPeersState39,1193
  struct GNUNET_TESTING_AsyncContext ac;44,1278
  GNUNET_TESTING_notify_connect_cb notify_connect;46,1320
  const struct GNUNET_TESTBED_System *tl_system;tl_system51,1422
  const char *create_label;create_label54,1525
  uint32_t num;60,1614
  const char *start_peer_label;start_peer_label66,1687
  struct GNUNET_TESTING_NetjailTopology *topology;topology71,1769
  struct GNUNET_TESTING_NodeConnection *node_connections_head;node_connections_head76,1866
  struct GNUNET_TESTING_Interpreter *is;is78,1930
  unsigned int con_num;83,2012
  unsigned int additional_connects;88,2134
  unsigned int con_num_notified;93,2242
  unsigned int additional_connects_notified;98,2408
  unsigned int wait_for_connect;103,2572
(*GNUNET_TRANSPORT_notify_connect_cb)GNUNET_TRANSPORT_notify_connect_cb108,2625
struct TestState112,2785
  char *testdir;testdir118,2878
  char *cfgname;cfgname124,2976
  struct GNUNET_TESTING_NetjailTopology *topology;topology129,3046
#define GNUNET_TRANSPORT_SIMPLE_TRAITS(253,7798

src/service/transport/transport_api_cmd_send_simple.c,372
#define LOG(36,1138
struct SendSimpleState42,1249
  uint32_t num;48,1334
  const char *start_peer_label;start_peer_label54,1407
  const char *create_label;create_label60,1510
  struct GNUNET_TESTING_NetjailTopology *topology;topology65,1602
send_simple_cleanup 74,1752
send_simple_cb 83,1860
send_simple_run 114,2671
GNUNET_TRANSPORT_cmd_send_simple 141,3726

src/service/transport/transport-testing2.h,5352
#define TRANSPORT_TESTING_H28,981
struct GNUNET_TRANSPORT_TESTING_PeerContext53,1522
  struct GNUNET_TRANSPORT_TESTING_PeerContext *next;next58,1609
  struct GNUNET_TRANSPORT_TESTING_PeerContext *prev;prev63,1708
  struct GNUNET_TRANSPORT_TESTING_Handle *tth;tth68,1825
  struct GNUNET_TRANSPORT_ApplicationHandle *ah;ah73,1909
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg78,1997
  struct GNUNET_TRANSPORT_CoreHandle *th;th83,2090
  struct GNUNET_PEERSTORE_Handle *ph;ph88,2174
  struct GNUNET_PEERSTORE_IterateContext *pic;pic93,2297
  char *hello;hello98,2368
  size_t hello_size;103,2412
  struct GNUNET_TESTING_Peer *peer;peer108,2473
  struct GNUNET_PeerIdentity id;113,2541
  struct GNUNET_OS_Process *arm_proc;arm_proc118,2626
  struct GNUNET_MQ_MessageHandler *handlers;handlers123,2699
  GNUNET_TRANSPORT_NotifyConnect nc;128,2786
  GNUNET_TRANSPORT_NotifyDisconnect nd;133,2868
  GNUNET_SCHEDULER_TaskCallback start_cb;138,2953
  struct GNUNET_SCHEDULER_Task *rh_task;rh_task143,3028
  void *cb_cls;cb_cls148,3129
  void *start_cb_cls;start_cb_cls153,3188
  unsigned int no;158,3266
struct GNUNET_TRANSPORT_TESTING_ConnectRequest165,3344
  struct GNUNET_TRANSPORT_TESTING_ConnectRequest *next;next170,3425
  struct GNUNET_TRANSPORT_TESTING_ConnectRequest *prev;prev175,3514
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p1;p1180,3613
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p2;p2185,3707
  struct GNUNET_SCHEDULER_Task *tct;tct190,3820
  struct GNUNET_TRANSPORT_ApplicationSuggestHandle *ah_sh;ah_sh195,3932
  GNUNET_SCHEDULER_TaskCallback cb;200,4043
  void *cb_cls;cb_cls205,4116
  struct GNUNET_MQ_Handle *mq;mq210,4197
  int p1_c;215,4295
  int p2_c;220,4374
  int connected;225,4461
struct GNUNET_TRANSPORT_TESTING_Handle232,4517
  struct GNUNET_TESTBED_System *tl_system;tl_system237,4605
  struct GNUNET_TRANSPORT_TESTING_ConnectRequest *cc_head;cc_head242,4695
  struct GNUNET_TRANSPORT_TESTING_ConnectRequest *cc_tail;cc_tail247,4801
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p_head;p_head252,4896
  struct GNUNET_TRANSPORT_TESTING_PeerContext *p_tail;p_tail257,4987
typedef void (*GNUNET_TRANSPORT_TESTING_ConnectContextCallback)GNUNET_TRANSPORT_TESTING_ConnectContextCallback369,7816
typedef void (*GNUNET_TRANSPORT_TESTING_ConnectContinuation)GNUNET_TRANSPORT_TESTING_ConnectContinuation401,8682
struct GNUNET_TRANSPORT_TESTING_TestMessage419,9047
  struct GNUNET_MessageHeader header;424,9168
  uint32_t num GNUNET_PACKED;429,9278
struct GNUNET_TRANSPORT_TESTING_PerformanceTestMessage432,9312
  struct GNUNET_MessageHeader header;437,9456
  struct GNUNET_TIME_AbsoluteNBO time_send;442,9558
  uint32_t num GNUNET_PACKED;447,9674
typedef void (*GNUNET_TRANSPORT_TESTING_ReceiveCallback)GNUNET_TRANSPORT_TESTING_ReceiveCallback461,9944
typedef void (*GNUNET_TRANSPORT_TESTING_NotifyConnect)GNUNET_TRANSPORT_TESTING_NotifyConnect476,10384
typedef void (*GNUNET_TRANSPORT_TESTING_NotifyDisconnect)GNUNET_TRANSPORT_TESTING_NotifyDisconnect490,10763
struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext500,11019
  GNUNET_SCHEDULER_TaskCallback connect_continuation;505,11132
  void *connect_continuation_cls;connect_continuation_cls510,11241
  const char *config_file;config_file516,11384
  GNUNET_TRANSPORT_TESTING_ReceiveCallback rec;521,11475
  GNUNET_TRANSPORT_TESTING_NotifyConnect nc;526,11593
  GNUNET_TRANSPORT_TESTING_NotifyDisconnect nd;531,11711
  void *cls;cls536,11814
  GNUNET_SCHEDULER_TaskCallback shutdown_task;541,11877
  void *shutdown_task_cls;shutdown_task_cls546,11972
  GNUNET_SCHEDULER_TaskCallback pre_connect_task;554,12229
  void *pre_connect_task_cls;pre_connect_task_cls559,12327
  struct GNUNET_TIME_Relative timeout;564,12410
  int bi_directional;569,12523
  unsigned int num_peers;576,12677
  char **cfg_files;cfg_files581,12783
  struct GNUNET_TRANSPORT_TESTING_PeerContext **p;p586,12854
  const char *test_plugin;test_plugin591,12943
  const char *test_name;test_name596,13010
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg601,13092
  struct GNUNET_TRANSPORT_TESTING_Handle *tth;tth606,13180
  int global_ret;612,13374
  uint32_t send_num_gen;620,13606
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task627,13742
  struct GNUNET_SCHEDULER_Task *connect_task;connect_task632,13833
  unsigned int started;637,13937
  struct GNUNET_TRANSPORT_TESTING_ConnectRequestList *crl_head;crl_head642,14011
  struct GNUNET_TRANSPORT_TESTING_ConnectRequestList *crl_tail;crl_tail647,14125
  struct GNUNET_TRANSPORT_TESTING_InternalPeerContext *ip;ip652,14240
typedef int (*GNUNET_TRANSPORT_TESTING_CheckCallback)GNUNET_TRANSPORT_TESTING_CheckCallback707,15959
#define GNUNET_TRANSPORT_TESTING_main(742,17024
#define GNUNET_TRANSPORT_TESTING_SIMPLE_MTYPE 782,18478
#define GNUNET_TRANSPORT_TESTING_SIMPLE_MTYPE2 787,18578
#define GNUNET_TRANSPORT_TESTING_SIMPLE_PERFORMANCE_MTYPE 792,18669
struct GNUNET_TRANSPORT_TESTING_SendClosure799,18875
  struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc804,18968
  size_t (*get_size_cb)get_size_cb811,19191
  unsigned int num_messages;817,19354
  GNUNET_SCHEDULER_TaskCallback cont;822,19456
  void *cont_cls;cont_cls827,19533
#define GNUNET_TRANSPORT_TESTING_LARGE_MESSAGE_SIZE 847,20022

src/service/transport/transport-testing-filenames2.c,237
extract_filename 37,1242
GNUNET_TRANSPORT_TESTING_get_test_name 73,1842
GNUNET_TRANSPORT_TESTING_get_test_source_name 107,2504
GNUNET_TRANSPORT_TESTING_get_test_plugin_name 127,2887
GNUNET_TRANSPORT_TESTING_get_config_name 174,3920

src/service/transport/test_transport_start_with_config.c,39
#define TIMEOUT 30,1050
main 34,1134

src/service/transport/test_transport_plugin_cmd_nat_upnp.c,671
#define LOG(38,1260
#define BASE_DIR 40,1315
#define TOPOLOGY_CONFIG 42,1343
#define TIMEOUT 44,1407
static struct GNUNET_TESTING_Command block_send;46,1486
static struct GNUNET_TESTING_Command block_receive;48,1536
static struct GNUNET_TESTING_Command connect_peers;50,1589
static struct GNUNET_TESTING_Command local_prepared;52,1642
static struct GNUNET_TESTING_Interpreter *is;is54,1696
check_test 62,1868
handle_test 75,2116
get_waiting_for_barriers 91,2617
handle_result 121,3512
notify_connect 143,3977
start_testcase 179,5621
libgnunet_test_transport_plugin_cmd_nat_upnp_init 337,10741
libgnunet_test_transport_plugin_cmd_nat_upnp_done 359,11271

src/service/transport/transport_api_cmd_backchannel_check.c,1093
#define LOG(37,1190
#define UDP 39,1268
#define MAX_LINE_LENGTH 44,1337
struct CheckState50,1430
  struct GNUNET_TESTING_AsyncContext ac;55,1508
  unsigned int node_n;60,1614
  unsigned int namespace_n;65,1692
  const struct GNUNET_TESTBED_System *tl_system;tl_system70,1771
  const char *create_label;create_label73,1874
  uint32_t num;79,1963
  const char *start_peer_label;start_peer_label85,2036
  struct GNUNET_TESTING_NetjailTopology *topology;topology90,2118
  struct GNUNET_TESTING_NodeConnection *node_connections_head;node_connections_head95,2215
  unsigned int con_num;100,2319
  unsigned int received_backchannel_msgs;105,2402
  char **search_string;search_string110,2489
  struct GNUNET_DISK_FileHandle *fh;fh115,2557
  struct GNUNET_SCHEDULER_Task *task;task120,2643
  FILE *stream;stream125,2730
read_from_log 133,2813
will_the_other_node_connect_via_udp 232,5888
add_search_string 333,9330
backchannel_check_run 400,11152
backchannel_check_traits 506,14890
backchannel_check_cleanup 520,15182
GNUNET_TRANSPORT_cmd_backchannel_check 529,15315

src/service/transport/test_transport_plugin_cmd_simple_send_performance.c,1054
#define LOG(36,1180
#define BASE_DIR 38,1235
#define TOPOLOGY_CONFIG 40,1263
#define TIMEOUT 42,1327
#define MAX_RECEIVED 44,1406
#define MESSAGE_SIZE 46,1433
static struct GNUNET_TESTING_Command block_send;48,1461
static struct GNUNET_TESTING_Command block_receive;50,1511
static struct GNUNET_TESTING_Command connect_peers;52,1564
static struct GNUNET_TESTING_Command local_prepared;54,1617
static struct GNUNET_TESTING_Command start_peer;56,1671
static struct GNUNET_TESTING_Interpreter *is;is58,1721
static struct GNUNET_CONTAINER_MultiPeerMap *senders;senders60,1768
struct Sender62,1823
  unsigned long long num_received;67,1897
  struct GNUNET_TIME_Relative mean_time;72,1989
  struct GNUNET_TIME_Absolute time_first;77,2081
check_test 86,2252
handle_test 100,2523
get_waiting_for_barriers 195,5962
handle_result 225,6857
notify_connect 247,7322
start_testcase 283,8976
libgnunet_test_transport_plugin_cmd_simple_send_performance_init 447,14504
libgnunet_test_transport_plugin_cmd_simple_send_performance_done 469,15064

src/service/transport/transport-testing-send2.c,201
#define TIMEOUT_TRANSMIT 31,1020
find_cr 39,1162
GNUNET_TRANSPORT_TESTING_send 67,2032
do_send 144,4551
GNUNET_TRANSPORT_TESTING_simple_send 178,5600
GNUNET_TRANSPORT_TESTING_large_send 214,6560

src/service/transport/test_transport_address_switch.c,1003
#define TIMEOUT 54,2185
static struct GNUNET_TRANSPORT_TESTING_ConnectCheckContext *ccc;ccc57,2264
static struct GNUNET_SCHEDULER_Task *measure_task;measure_task59,2330
struct PeerStats65,2424
  struct GNUNET_STATISTICS_Handle *stat;stat67,2443
  unsigned int addresses_avail;69,2485
  unsigned int switch_attempts;71,2518
  unsigned int switch_success;73,2551
  unsigned int switch_fail;75,2583
static struct PeerStats stats[stats78,2615
static unsigned long long bytes_sent_after_switch;81,2709
static unsigned long long bytes_recv_after_switch;83,2761
stat_start_attempt_cb 87,2825
stat_success_attempt_cb 105,3257
stat_fail_attempt_cb 120,3635
stat_addresses_available 138,4036
static struct WatchEntry154,4392
  const char *stat_name;stat_name159,4468
  GNUNET_STATISTICS_Iterator stat_handler;164,4532
} watches[watches165,4575
custom_shutdown 179,5113
notify_receive 284,8064
notify_send 322,9329
progress_indicator 347,10156
connected_cb 368,10612
main 409,12049

src/service/transport/testing_transport_traits.c,40
GNUNET_TRANSPORT_SIMPLE_TRAITS 31,1086

src/service/transport/transport_api_cmd_stop_peer.c,216
#define LOG(38,1235
struct StopPeerState45,1347
  const char *start_label;start_label48,1411
stop_peer_run 57,1576
stop_peer_cleanup 111,3036
stop_peer_traits 124,3195
GNUNET_TRANSPORT_cmd_stop_peer 141,3533

src/service/transport/gnunet-transport.c,3598
#define RESOLUTION_TIMEOUT 36,1172
#define OP_TIMEOUT 42,1301
struct ValidationResolutionContext48,1442
  struct ValidationResolutionContext *next;next53,1508
  struct ValidationResolutionContext *prev;prev58,1586
  struct GNUNET_HELLO_Address *addrcp;addrcp63,1667
  struct GNUNET_TIME_Absolute last_validation;68,1748
  struct GNUNET_TIME_Absolute valid_until;73,1836
  struct GNUNET_TIME_Absolute next_validation;78,1921
  struct GNUNET_TRANSPORT_AddressToStringContext *asc;asc83,2014
  char *transport;transport88,2099
  int printed;93,2158
struct MonitoredPeer99,2244
  enum GNUNET_TRANSPORT_PeerState state;104,2302
  struct GNUNET_TIME_Absolute state_timeout;109,2369
  struct GNUNET_HELLO_Address *address;address114,2455
struct PeerResolutionContext120,2558
  struct PeerResolutionContext *next;next125,2618
  struct PeerResolutionContext *prev;prev130,2686
  struct GNUNET_HELLO_Address *addrcp;addrcp135,2761
  struct GNUNET_TRANSPORT_AddressToStringContext *asc;asc140,2848
  enum GNUNET_TRANSPORT_PeerState state;145,2932
  struct GNUNET_TIME_Absolute state_timeout;150,3005
  char *transport;transport155,3085
  int printed;160,3144
#define BLOCKSIZE 167,3205
static struct GNUNET_TRANSPORT_CoreHandle *handle;handle172,3266
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg177,3350
struct GNUNET_TRANSPORT_Blacklist *blacklist;blacklist182,3430
static int benchmark_send;187,3499
static int benchmark_receive;192,3549
static int benchmark_receive;197,3602
static int iterate_connections;202,3655
static int iterate_all;207,3710
static int monitor_connects;212,3757
static int monitor_connections;217,3809
static int monitor_plugins;222,3864
static int do_disconnect;227,3915
static int numeric;232,3964
static int ret;237,4029
static int monitor_connect_counter;242,4103
static unsigned long long traffic_received;247,4198
static unsigned long long traffic_sent;252,4297
static struct GNUNET_TIME_Absolute start_time;257,4395
static struct GNUNET_CONTAINER_MultiPeerMap *monitored_peers;monitored_peers262,4500
static struct GNUNET_CONTAINER_MultiPeerMap *monitored_plugins;monitored_plugins267,4634
static struct GNUNET_TRANSPORT_PeerMonitoringContext *pic;pic272,4768
static struct GNUNET_TRANSPORT_PluginMonitor *pm;pm277,4892
static struct GNUNET_PeerIdentity pid;283,5035
static struct GNUNET_SCHEDULER_Task *op_timeout;op_timeout288,5113
static unsigned int verbosity;293,5203
struct GNUNET_OS_Process *resolver;resolver298,5271
static unsigned int address_resolutions;303,5357
static struct ValidationResolutionContext *vc_head;vc_head308,5453
static struct ValidationResolutionContext *vc_tail;vc_tail313,5560
static struct PeerResolutionContext *rc_head;rc_head318,5656
static struct PeerResolutionContext *rc_tail;rc_tail323,5746
destroy_it 335,6036
shutdown_task 355,6471
operation_timeout 446,8910
do_send 492,10061
notify_connect 519,10810
notify_disconnect 555,11687
monitor_notify_connect 581,12375
monitor_notify_disconnect 608,13160
check_dummy 635,13896
handle_dummy 648,14156
print_info 679,15071
process_peer_string 726,16825
resolve_peer_address 816,19283
process_peer_iteration_cb 852,20680
struct PluginMonitorAddress889,21777
  struct GNUNET_TRANSPORT_AddressToStringContext *asc;asc894,21852
  char *str;str899,21953
  struct GNUNET_TRANSPORT_SessionInfo si;905,22081
print_plugin_event_info 916,22283
address_cb 987,24478
plugin_monitoring_cb 1021,25582
process_peer_monitoring_cb 1090,27577
blacklist_cb 1161,29643
run 1178,30084
main 1359,35734

src/service/transport/test_transport_plugin_cmd_simple_send_broadcast.c,760
#define LOG(36,1190
#define BASE_DIR 38,1245
#define TOPOLOGY_CONFIG 40,1273
#define TIMEOUT 42,1337
static struct GNUNET_TESTING_Command block_send;44,1416
static struct GNUNET_TESTING_Command block_receive;46,1466
static struct GNUNET_TESTING_Command connect_peers;48,1519
static struct GNUNET_TESTING_Command local_prepared;50,1572
static struct GNUNET_TESTING_Interpreter *is;is52,1626
check_test 60,1798
handle_test 73,2046
get_waiting_for_barriers 89,2612
all_peers_started 101,2835
handle_result 124,3456
notify_connect 145,3920
all_local_tests_prepared 195,5322
start_testcase 221,6245
libgnunet_test_transport_plugin_cmd_simple_send_broadcast_init 364,10478
libgnunet_test_transport_plugin_cmd_simple_send_broadcast_done 388,11130

src/service/topology/test_gnunet_daemon_topology.c,690
#define NUM_PEERS 31,1052
#define THRESHOLD 42,1523
#define TIMEOUT 47,1606
static unsigned int connect_left;52,1720
static int result;57,1789
static int checked_peers;62,1868
struct GNUNET_TESTBED_Operation *op[op67,1925
static struct GNUNET_SCHEDULER_Task *timeout_tid;timeout_tid72,2006
struct peerctx77,2104
  int index;79,2121
  struct GNUNET_STATISTICS_Handle *statistics;statistics80,2134
  int connections;81,2181
  int reported;82,2200
shutdown_task 87,2262
timeout_task 106,2588
statistics_iterator 122,2878
ca_statistics 163,3958
da_statistics 171,4110
service_connect_complete 188,4529
notify_connect_complete 214,5255
do_connect 231,5637
main 282,7186

src/service/topology/gnunet-daemon-topology.c,2589
#define HELLO_ADVERTISEMENT_MIN_FREQUENCY 45,1386
#define HELLO_ADVERTISEMENT_MIN_REPEAT_FREQUENCY 51,1570
struct Peer58,1745
  struct GNUNET_PeerIdentity pid;63,1808
  struct GNUNET_MQ_Handle *mq;mq69,1938
  struct GNUNET_MessageHeader *hello;hello74,2039
  struct GNUNET_CONTAINER_BloomFilter *filter;filter80,2176
  struct GNUNET_TIME_Absolute next_hello_allowed;85,2300
  struct GNUNET_TIME_Absolute filter_expiration;90,2421
  struct GNUNET_SCHEDULER_Task *hello_delay_task;hello_delay_task96,2569
  struct GNUNET_TRANSPORT_ApplicationSuggestHandle *ash;ash101,2663
  uint32_t strength;106,2786
struct StoreHelloEntry113,2858
  struct StoreHelloEntry *prev;prev118,2922
  struct StoreHelloEntry *next;next123,2994
  struct GNUNET_PEERSTORE_StoreHelloContext *sc;sc128,3060
struct GNUNET_SCHEDULER_Task *peerstore_notify_task;peerstore_notify_task135,3263
static struct GNUNET_PEERSTORE_Monitor *peerstore_notify;peerstore_notify142,3448
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg147,3537
static struct GNUNET_CORE_Handle *handle;handle152,3631
static struct GNUNET_PEERSTORE_Handle *ps;ps157,3718
struct GNUNET_TRANSPORT_ApplicationHandle *transport;transport162,3806
static struct GNUNET_PeerIdentity my_identity;167,3895
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key172,3971
static struct GNUNET_CONTAINER_MultiPeerMap *peers;peers179,4195
static struct GNUNET_STATISTICS_Handle *stats;stats184,4292
static struct GNUNET_SCHEDULER_Task *add_task;add_task190,4445
static unsigned int connection_count;195,4556
static unsigned int target_connection_count;200,4636
static struct StoreHelloEntry *she_head;she_head205,4755
static struct StoreHelloEntry *she_tail;she_tail210,4870
free_peer 221,5138
attempt_connect 260,6045
make_peer 307,7474
setup_filter 335,8144
struct FindAdvHelloContext357,8991
  struct Peer *peer;peer362,9067
  struct Peer *result;result367,9165
  size_t max_size;372,9247
  struct GNUNET_TIME_Relative next_adv;374,9267
find_advertisable_hello 387,9553
schedule_next_hello 436,11052
reschedule_hellos 497,13102
connect_notify 531,14003
try_add_peers 572,15075
add_peer_task 587,15329
disconnect_notify 603,15654
address_iterator 645,16798
consider_for_advertising 664,17137
error_cb 743,19738
sync_cb 753,19925
process_peer 771,20397
start_notify 829,22190
core_init 858,23058
check_hello 887,23851
shc_cont 903,24204
handle_hello 927,24793
cleaning_task 961,25796
run 1023,27210
main 1078,29014
GNUNET_TOPOLOGY_memory_init 1109,29904

src/service/setu/setu_api.c,1782
#define LOG(34,1099
struct GNUNET_SETU_Handle39,1205
  struct GNUNET_MQ_Handle *mq;mq44,1279
  struct GNUNET_SETU_OperationHandle *ops_head;ops_head49,1366
  struct GNUNET_SETU_OperationHandle *ops_tail;ops_tail54,1470
  int destroy_requested;61,1726
  int invalid;66,1817
struct GNUNET_SETU_Request74,1903
  uint32_t accept_id;80,2031
  int accepted;86,2138
struct GNUNET_SETU_OperationHandle94,2264
  GNUNET_SETU_ResultIterator result_cb;100,2381
  void *result_cls;result_cls105,2465
  struct GNUNET_SETU_Handle *set;set111,2592
  struct GNUNET_MQ_Envelope *conclude_mqm;conclude_mqm117,2731
  uint32_t *request_id_addr;request_id_addr123,2917
  struct GNUNET_SETU_OperationHandle *prev;prev128,2999
  struct GNUNET_SETU_OperationHandle *next;next133,3096
  uint32_t request_id;138,3211
struct GNUNET_SETU_ListenHandle145,3287
  struct GNUNET_MQ_Handle*mq;mq150,3368
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg157,3538
  GNUNET_SETU_ListenCallback listen_cb;163,3667
  void *listen_cls;listen_cls168,3751
  struct GNUNET_HashCode app_id;173,3819
  struct GNUNET_TIME_Relative reconnect_backoff;178,3921
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task183,4035
check_result 196,4259
handle_result 211,4550
set_operation_destroy 290,7002
GNUNET_SETU_operation_cancel 320,7840
handle_client_set_error 354,8752
GNUNET_SETU_create 384,9583
GNUNET_SETU_add_element 429,11078
GNUNET_SETU_destroy 471,12254
GNUNET_SETU_prepare 497,12962
check_request 584,15694
handle_request 609,16272
handle_client_listener_error 652,17734
listen_connect 675,18467
GNUNET_SETU_listen 717,19946
GNUNET_SETU_listen_cancel 749,20730
GNUNET_SETU_accept 769,21161
GNUNET_SETU_commit 851,23943
GNUNET_SETU_element_hash 890,25072

src/service/setu/gnunet-setu-ibf-profiler.c,769
static unsigned int asize 32,1012
static unsigned int bsize 33,1044
static unsigned int csize 34,1076
static unsigned int hash_num 35,1108
static unsigned int ibf_size 36,1142
static enum GNUNET_CRYPTO_Quality random_quality 39,1214
static struct GNUNET_CONTAINER_MultiHashMap *set_a;set_a41,1294
static struct GNUNET_CONTAINER_MultiHashMap *set_b;set_b42,1346
static struct GNUNET_CONTAINER_MultiHashMap *set_c;set_c44,1431
static struct GNUNET_CONTAINER_MultiHashMap *key_to_hashcode;key_to_hashcode46,1484
static struct InvertibleBloomFilter *ibf_a;ibf_a48,1547
static struct InvertibleBloomFilter *ibf_b;ibf_b49,1591
register_hashcode 53,1649
iter_hashcodes 69,2032
insert_iterator 84,2488
remove_iterator 94,2695
run 105,3005
main 262,7839

src/service/setu/perf_setu_api.c,905
static struct GNUNET_PeerIdentity local_id;35,1087
static struct GNUNET_HashCode app_id;37,1132
static struct GNUNET_SETU_Handle *set1;set139,1171
static struct GNUNET_SETU_Handle *set2;set241,1212
static struct GNUNET_SETU_ListenHandle *listen_handle;listen_handle43,1253
static struct GNUNET_SETU_OperationHandle *oh1;oh145,1309
static struct GNUNET_SETU_OperationHandle *oh2;oh247,1358
static const struct GNUNET_CONFIGURATION_Handle *config;config49,1407
static int ret;51,1465
static struct GNUNET_SCHEDULER_Task *tt;tt53,1482
static struct GNUNET_CONFIGURATION_Handle *setu_cfg;setu_cfg60,1592
result_cb_set1 64,1659
result_cb_set2 111,2622
listen_cb 150,3461
start 172,4124
gen_rdm_bytestream 198,4912
initRandomSets 211,5149
timeout_fail 266,6562
do_shutdown 281,6799
run 325,7602
perf_thread 379,9502
run_petf_thread 391,9741
execute_perf 420,10254
main 465,11881

src/service/setu/ibf.h,543
#define GNUNET_CONSENSUS_IBF_H29,956
struct IBF_Key46,1228
  uint64_t key_val;48,1245
struct IBF_KeyHash55,1301
  uint32_t key_hash_val;57,1322
struct IBF_Count64,1403
  int64_t count_val;66,1422
#define IBF_BUCKET_SIZE 73,1491
struct InvertibleBloomFilter83,1801
  uint32_t size;88,1884
  uint8_t hash_num;94,1982
  int local_decoded_count;101,2156
  int remote_decoded_count;108,2338
  struct IBF_Key *key_sum;key_sum114,2478
  struct IBF_KeyHash *key_hash_sum;key_hash_sum120,2611
  struct IBF_Count *count;count127,2788

src/service/setu/setu.h,2311
#define SET_H27,949
struct GNUNET_SETU_CreateMessage40,1230
  struct GNUNET_MessageHeader header;45,1321
struct GNUNET_SETU_ListenMessage55,1543
  struct GNUNET_MessageHeader header;60,1634
  uint32_t reserved GNUNET_PACKED;65,1703
  struct GNUNET_HashCode app_id;70,1771
struct GNUNET_SETU_AcceptMessage78,1929
  struct GNUNET_MessageHeader header;83,2020
  uint32_t accept_reject_id GNUNET_PACKED;88,2122
  uint32_t request_id GNUNET_PACKED;93,2217
  uint8_t force_delta;99,2363
  uint8_t force_full;105,2482
  uint8_t byzantine;111,2595
  uint8_t symmetric;117,2717
  uint32_t byzantine_lower_bound;123,2833
  uint64_t byzantine_upper_bond;130,2963
  uint64_t bandwidth_latency_tradeoff;136,3126
  uint64_t ibf_bucket_number_factor;142,3296
  uint64_t ibf_number_of_buckets_per_element;148,3434
struct GNUNET_SETU_RejectMessage157,3606
  struct GNUNET_MessageHeader header;162,3697
  uint32_t accept_reject_id GNUNET_PACKED;167,3799
struct GNUNET_SETU_RequestMessage174,3906
  struct GNUNET_MessageHeader header;179,4000
  uint32_t accept_id GNUNET_PACKED;185,4127
  struct GNUNET_PeerIdentity peer_id;190,4214
struct GNUNET_SETU_EvaluateMessage202,4571
  struct GNUNET_MessageHeader header;207,4666
  uint32_t request_id GNUNET_PACKED;213,4823
  struct GNUNET_PeerIdentity target_peer;218,4914
  struct GNUNET_HashCode app_id;223,4989
  uint8_t force_delta;229,5131
  uint8_t force_full;235,5250
  uint8_t byzantine;241,5363
  uint8_t symmetric;246,5462
  uint32_t byzantine_lower_bound;252,5578
  uint64_t byzantine_upper_bond;258,5707
  uint64_t bandwidth_latency_tradeoff;264,5870
  uint64_t ibf_bucket_number_factor;270,6040
  uint64_t ibf_number_of_buckets_per_element;276,6178
struct GNUNET_SETU_ResultMessage289,6556
  struct GNUNET_MessageHeader header;294,6647
  uint64_t current_size;299,6721
  uint32_t request_id GNUNET_PACKED;304,6789
  uint16_t result_status GNUNET_PACKED;310,6926
  uint16_t element_type GNUNET_PACKED;315,7037
struct GNUNET_SETU_ElementMessage325,7197
  struct GNUNET_MessageHeader header;330,7286
  uint16_t element_type GNUNET_PACKED;335,7380
  uint16_t reserved GNUNET_PACKED;340,7465
struct GNUNET_SETU_CancelMessage349,7620
  struct GNUNET_MessageHeader header;354,7711
  uint32_t request_id GNUNET_PACKED;359,7804

src/service/setu/gnunet-service-setu.c,9821
#define LOG(41,1384
#define INCOMING_CHANNEL_TIMEOUT 47,1560
#define SE_STRATA_COUNT 52,1668
#define SE_IBFS_TOTAL_SIZE 59,1837
#define SE_IBF_HASH_NUM 64,1953
#define MAX_BUCKETS_PER_MESSAGE 69,2049
#define MAX_IBF_SIZE 76,2276
#define IBF_MIN_SIZE 83,2397
#define DIFFERENTIAL_RTT_MEAN 89,2543
#define SECURITY_LEVEL 95,2642
#define PROBABILITY_FOR_NEW_ROUND 102,2797
#define MEASURE_PERFORMANCE 108,2882
enum UnionOperationPhase114,2972
  PHASE_EXPECT_SE,119,3076
  PHASE_EXPECT_IBF,130,3466
  PHASE_EXPECT_IBF_LAST,135,3538
  PHASE_ACTIVE_DECODING,140,3605
  PHASE_PASSIVE_DECODING,145,3697
  PHASE_FINISH_CLOSING,151,3853
  PHASE_FINISH_WAITING,157,4035
  PHASE_FINISHED,163,4191
  PHASE_FULL_SENDING,169,4329
  PHASE_FULL_RECEIVING175,4465
enum MODE_OF_OPERATION182,4534
  DIFFERENTIAL_SYNC,187,4627
  FULL_SYNC_LOCAL_SENDING_FIRST,192,4707
  FULL_SYNC_REMOTE_SENDING_FIRST197,4795
struct ElementEntry207,5050
  struct GNUNET_SETU_Element element;213,5186
  struct GNUNET_HashCode element_hash;219,5351
  unsigned int generation;224,5453
  int remote;230,5595
struct ClientState250,5858
  struct Set *set;set255,5948
  struct Listener *listener;listener260,6042
  struct GNUNET_SERVICE_Client *client;client265,6104
  struct GNUNET_MQ_Handle *mq;mq270,6177
struct Operation277,6275
  struct GNUNET_PeerIdentity peer;284,6427
  uint64_t initial_size;289,6540
  struct Operation *next;next294,6642
  struct Operation *prev;prev299,6745
  struct GNUNET_CADET_Channel *channel;channel304,6810
  struct Listener *listener;listener309,6897
  struct GNUNET_MQ_Handle *mq;mq314,6975
  struct GNUNET_MessageHeader *context_msg;context_msg319,7054
  struct Set *set;set325,7208
  struct MultiStrataEstimator *se;se331,7328
  struct InvertibleBloomFilter *remote_ibf;remote_ibf336,7411
  struct InvertibleBloomFilter *local_ibf;local_ibf341,7511
  struct GNUNET_CONTAINER_MultiHashMap32 *key_to_element;key_to_element348,7720
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task354,7902
  struct GNUNET_CONTAINER_MultiHashMap *demanded_hashes;demanded_hashes359,8029
  enum UnionOperationPhase phase;364,8136
  int client_done_sent;369,8229
  uint64_t ibf_buckets_received;374,8334
  uint32_t salt_send;379,8424
  uint32_t salt_receive;384,8531
  uint32_t received_fresh;390,8666
  uint32_t received_total;395,8766
  uint32_t salt;400,8842
  uint32_t remote_element_count;405,8904
  uint32_t client_request_id;410,9015
  int force_delta;416,9154
  int force_full;422,9269
  int byzantine;428,9378
  int symmetric;434,9496
  uint64_t byzantine_lower_bound;440,9608
  uint32_t suggest_id;447,9841
  unsigned int generation_created;453,9941
  uint64_t rtt_bandwidth_tradeoff;459,10037
  uint8_t ibf_number_buckets_per_element;465,10126
  uint8_t ibf_bucket_number_factor;472,10268
  uint8_t peer_site;479,10405
  uint64_t local_element_count;485,10470
  uint8_t mode_of_operation;490,10571
  struct GNUNET_CONTAINER_MultiHashMap *message_control_flow;message_control_flow495,10670
  struct GNUNET_CONTAINER_MultiHashMap *inquiries_sent;inquiries_sent500,10812
  uint64_t total_elements_size_local;506,10909
  uint64_t byzantine_upper_bound;511,11000
  uint8_t differential_sync_iterations;516,11112
  uint64_t remote_set_diff;521,11220
  uint64_t local_set_diff;526,11315
  bool active_passive_switch_required;531,11404
struct SetContent539,11571
  struct GNUNET_CONTAINER_MultiHashMap *elements;elements544,11668
  struct GNUNET_CONTAINER_MultiHashMap *elements_randomized;elements_randomized549,11807
  uint64_t elements_randomized_salt;554,11931
  unsigned int refcount;559,12023
  unsigned int latest_generation;564,12083
  int iterator_count;569,12176
struct Set576,12273
  struct Set *next;next581,12375
  struct Set *prev;prev586,12452
  struct ClientState *cs;cs592,12595
  struct SetContent *content;content598,12715
  struct MultiStrataEstimator *se;se604,12889
  struct Operation *ops_head;ops_head609,12989
  struct Operation *ops_tail;ops_tail614,13084
  unsigned int current_generation;620,13254
struct KeyEntry628,13369
  struct IBF_Key ibf_key;633,13458
  struct ElementEntry *element;element641,13633
  int received;648,13843
struct SendElementClosure656,13942
  struct IBF_Key ibf_key;662,14044
  struct Operation *op;op668,14142
struct Listener676,14275
  struct Listener *next;next681,14354
  struct Listener *prev;prev686,14441
  struct Operation *op_head;op_head693,14670
  struct Operation *op_tail;op_tail700,14903
  struct ClientState *cs;cs706,15022
  struct GNUNET_CADET_Port *open_port;open_port711,15107
  struct GNUNET_HashCode app_id;717,15280
static struct GNUNET_CADET_Handle *cadet;cadet726,15410
static struct GNUNET_STATISTICS_Handle *_GSS_statistics;_GSS_statistics731,15483
static struct Listener *listener_head;listener_head736,15596
static struct Listener *listener_tail;listener_tail741,15691
static unsigned int num_clients;746,15768
static int in_shutdown;752,15915
static uint32_t suggest_id;759,16166
static const struct GNUNET_CONFIGURATION_Handle *setu_cfg;setu_cfg766,16286
struct perf_num_send_received_msg774,16411
  uint64_t sent;776,16447
  uint64_t sent_var_bytes;777,16464
  uint64_t received;778,16491
  uint64_t received_var_bytes;779,16512
struct per_store_struct785,16606
  struct perf_num_send_received_msg operation_request;787,16632
  struct perf_num_send_received_msg se;788,16687
  struct perf_num_send_received_msg request_full;789,16727
  struct perf_num_send_received_msg element_full;790,16777
  struct perf_num_send_received_msg full_done;791,16827
  struct perf_num_send_received_msg ibf;792,16874
  struct perf_num_send_received_msg inquery;793,16915
  struct perf_num_send_received_msg element;794,16960
  struct perf_num_send_received_msg demand;795,17005
  struct perf_num_send_received_msg offer;796,17049
  struct perf_num_send_received_msg done;797,17092
  struct perf_num_send_received_msg over;798,17134
  uint64_t se_diff;799,17176
  uint64_t se_diff_remote;800,17196
  uint64_t se_diff_local;801,17223
  uint64_t active_passive_switches;802,17249
  uint8_t mode_of_operation;803,17285
struct per_store_struct perf_store;806,17318
enum MESSAGE_CONTROL_FLOW_STATE813,17441
  MSG_CFS_UNINITIALIZED,818,17515
  MSG_CFS_SENT,823,17594
  MSG_CFS_EXPECTED,828,17675
  MSG_CFS_RECEIVED,833,17750
enum MESSAGE_TYPE840,17833
  OFFER_MESSAGE,845,17889
  DEMAND_MESSAGE,850,17944
  ELEMENT_MESSAGE,855,18001
struct messageControlFlowElement862,18087
  enum MESSAGE_CONTROL_FLOW_STATE offer;867,18192
  enum MESSAGE_CONTROL_FLOW_STATE demand;871,18304
  enum MESSAGE_CONTROL_FLOW_STATE element;875,18418
load_config 887,18606
sum_sent_received_bytes 926,20002
calculate_perf_store 941,20467
estimate_best_mode_of_operation 1051,24579
check_valid_phase 1191,30137
update_message_control_flow 1226,31361
is_message_in_message_control_flow 1316,33603
determinate_done_message_iterator 1372,34802
determinate_avg_element_size_iterator 1396,35437
create_randomized_element_iterator 1417,36062
destroy_key_to_element_iter 1456,37442
send_client_done 1480,37918
check_byzantine_bounds 1532,39588
free_values_iter(1556,40154
_GSS_operation_destroy 1580,40866
incoming_destroy 1670,43426
_GSS_operation_destroy2 1699,44136
fail_union_operation 1729,44833
full_sync_plausibility_check 1757,45557
check_max_differential_rounds 1823,47897
get_ibf_key 1849,48673
struct GetElementContext1866,49076
  struct GNUNET_HashCode hash;1871,49148
  struct KeyEntry *k;k1876,49222
op_get_element_iterator 1891,49590
op_get_element 1918,50300
op_register_element 1958,51560
salt_key 1983,52344
unsalt_key 2000,52657
prepare_ibf_iterator 2020,53023
_GSS_is_element_of_operation 2049,53790
init_key_to_element_iterator 2067,54275
initialize_key_to_element 2094,55003
prepare_ibf 2116,55686
send_ibf 2149,56659
get_size_from_difference 2238,58978
get_next_ibf_size 2249,59324
send_full_element_iterator 2271,60074
send_full_set 2307,61106
check_union_p2p_strata_estimator 2348,62384
handle_union_p2p_strata_estimator 2380,63163
send_offers_iterator 2641,72307
send_offers_for_key 2729,74738
decode_and_send 2753,75293
check_union_p2p_send_full 2956,81381
handle_union_p2p_send_full 2970,81615
check_union_p2p_ibf 3053,84664
handle_union_p2p_ibf 3112,85980
send_client_element 3212,88979
maybe_finish 3251,90128
check_union_p2p_elements 3304,91463
handle_union_p2p_elements 3327,92035
check_union_p2p_full_element 3452,95726
handle_union_p2p_full_element 3471,96101
check_union_p2p_inquiry 3571,99199
handle_union_p2p_inquiry 3601,99918
send_missing_full_elements_iter 3674,102321
check_union_p2p_request_full 3709,103295
handle_union_p2p_request_full 3717,103442
handle_union_p2p_full_done 3805,106542
check_union_p2p_demand 3896,109266
handle_union_p2p_demand 3923,109957
check_union_p2p_offer 4046,113680
handle_union_p2p_offer 4079,114536
handle_union_p2p_done 4205,118272
handle_union_p2p_over 4280,120472
get_incoming 4299,120920
client_connect_cb 4324,121512
destroy_elements_iterator 4347,122012
client_disconnect_cb 4366,122426
check_incoming_msg 4452,124947
handle_incoming_msg 4498,126395
handle_client_create_set 4552,128274
incoming_timeout_cb 4604,129809
channel_new_cb 4632,130664
channel_end_cb 4675,132270
channel_window_cb 4700,133072
handle_client_listen 4716,133436
handle_client_reject 4817,137784
check_client_set_add 4849,138781
handle_client_set_add 4865,139223
advance_generation 4932,141340
check_client_evaluate 4949,141761
handle_client_evaluate 4967,142281
handle_client_cancel 5149,149679
handle_client_accept 5204,151160
shutdown_task 5366,156986
run 5397,157679

src/service/setu/gnunet-service-setu_strata_estimator.c,455
#define FAIL_10_1_COMPATIBILTIY 37,1223
#define MULTI_SE_BASE_COUNT 43,1324
#define AVG_BYTE_SIZE_SE 50,1444
determine_strata_count 59,1615
salt_key 80,2174
unsalt_key 98,2502
strata_estimator_write 118,2948
strata_estimator_read 176,4555
strata_estimator_insert 235,6171
strata_estimator_remove 268,6884
strata_estimator_create 302,7802
strata_estimator_difference 359,9672
strata_estimator_dup 433,12495
strata_estimator_destroy 464,13487

src/service/setu/test_setu_api.c,748
static struct GNUNET_PeerIdentity local_id;32,1011
static struct GNUNET_HashCode app_id;34,1056
static struct GNUNET_SETU_Handle *set1;set136,1095
static struct GNUNET_SETU_Handle *set2;set238,1136
static struct GNUNET_SETU_ListenHandle *listen_handle;listen_handle40,1177
static struct GNUNET_SETU_OperationHandle *oh1;oh142,1233
static struct GNUNET_SETU_OperationHandle *oh2;oh244,1282
static const struct GNUNET_CONFIGURATION_Handle *config;config46,1331
static int ret;48,1389
static struct GNUNET_SCHEDULER_Task *tt;tt50,1406
result_cb_set1 54,1461
result_cb_set2 101,2424
listen_cb 140,3263
start 162,3926
init_set2 189,4750
init_set1 212,5334
timeout_fail 233,5807
do_shutdown 248,6044
run 292,6847
main 344,8675

src/service/setu/gnunet-service-setu_protocol.h,1598
#define SET_PROTOCOL_H27,978
struct OperationRequestMessage35,1082
  struct GNUNET_MessageHeader header;40,1185
  uint32_t element_count GNUNET_PACKED;45,1276
  struct GNUNET_HashCode app_idX;50,1382
struct IBFMessage62,1618
  struct GNUNET_MessageHeader header;67,1700
  uint32_t ibf_size;72,1798
  uint32_t offset GNUNET_PACKED;77,1885
  uint16_t salt GNUNET_PACKED;82,1982
  uint16_t ibf_counter_bit_length;87,2061
struct InquiryMessage101,2328
  struct GNUNET_MessageHeader header;106,2414
  uint32_t salt GNUNET_PACKED;111,2520
struct IntersectionElementInfoMessage122,2778
  struct GNUNET_MessageHeader header;127,2896
  uint32_t sender_element_count GNUNET_PACKED;132,2988
struct BFMessage139,3117
  struct GNUNET_MessageHeader header;144,3204
  uint32_t sender_element_count GNUNET_PACKED;149,3312
  struct GNUNET_HashCode element_xor_hash;155,3471
  uint32_t sender_mutator GNUNET_PACKED;160,3568
  uint32_t bloomfilter_total_length GNUNET_PACKED;165,3665
  uint32_t bits_per_element GNUNET_PACKED;170,3793
struct IntersectionDoneMessage184,4120
  struct GNUNET_MessageHeader header;189,4223
  uint32_t final_element_count GNUNET_PACKED;194,4321
  struct GNUNET_HashCode element_xor_hash;199,4443
struct StrataEstimatorMessage206,4562
  struct GNUNET_MessageHeader header;211,4658
  uint8_t se_count;216,4744
  uint64_t set_size GNUNET_PACKED;221,4804
struct TransmitFullMessage229,4923
  struct GNUNET_MessageHeader header;234,5015
  uint32_t remote_set_difference;239,5126
  uint32_t remote_set_size;244,5200
  uint32_t local_set_difference;249,5301

src/service/setu/gnunet-service-setu_strata_estimator.h,324
#define GNUNET_SERVICE_SETU_STRATA_ESTIMATOR_H29,1009
struct StrataEstimator47,1300
  struct InvertibleBloomFilter **strata;strata52,1377
  unsigned int strata_count;57,1471
  unsigned int ibf_size;62,1554
struct MultiStrataEstimator65,1583
  struct StrataEstimator **stratas;stratas70,1657
  uint8_t size;75,1749

src/service/setu/ibf.c,471
#define LOG(31,1015
#define IBF_KEY_HASH_VAL(38,1178
ibf_key_from_hashcode 48,1437
ibf_hashcode_from_key 62,1708
ibf_create 84,2323
ibf_get_indices 123,3177
ibf_insert_into 148,3752
ibf_insert 172,4278
ibf_remove 190,4626
ibf_is_empty 205,4965
ibf_decode 221,5292
ibf_get_max_counter 287,6829
ibf_write_slice 312,7453
pack_counter 349,8357
unpack_counter 413,9927
ibf_read_slice 494,11843
ibf_subtract 534,13008
ibf_dup 555,13602
ibf_destroy 579,14387

src/service/setu/ibf_sim.c,185
#define MAX_IBF_DECODE 34,1129
#define ROUNDS 37,1199
#define FIX1 41,1272
#define FIX2 43,1347
#define STRATA 46,1384
#define VERBOSE 49,1423
#define SLOW 51,1486
main 54,1506

src/service/namecache/test_namecache_api_cache_block.c,604
#define TEST_RECORD_TYPE 28,1014
#define TEST_RECORD_DATALEN 30,1066
#define TEST_RECORD_DATA 32,1099
#define TIMEOUT 34,1129
static struct GNUNET_NAMECACHE_Handle *nsh;nsh37,1209
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task39,1254
static struct GNUNET_CRYPTO_PrivateKey privkey;41,1307
static struct GNUNET_CRYPTO_PublicKey pubkey;43,1356
static int res;45,1403
static struct GNUNET_NAMECACHE_QueueEntry *nsqe;nsqe47,1420
cleanup 51,1483
endbadly 68,1727
end 81,1872
rd_decrypt_cb 89,1931
name_lookup_proc 112,2555
cache_cont 147,3527
run 168,4115
main 227,6034

src/service/namecache/namecache.h,742
#define NAMECACHE_H28,978
#define MAX_NAME_LEN 33,1063
struct GNUNET_NAMECACHE_Header40,1166
  struct GNUNET_MessageHeader header;46,1306
  uint32_t r_id GNUNET_PACKED;51,1380
struct LookupBlockMessage58,1459
  struct GNUNET_NAMECACHE_Header gns_header;63,1561
  struct GNUNET_HashCode query GNUNET_PACKED;68,1635
struct LookupBlockResponseMessage75,1713
  struct GNUNET_NAMECACHE_Header gns_header;80,1832
  struct GNUNET_TIME_AbsoluteNBO expire;85,1911
struct BlockCacheMessage94,2043
  struct GNUNET_NAMECACHE_Header gns_header;99,2143
  struct GNUNET_TIME_AbsoluteNBO expire;104,2222
struct BlockCacheResponseMessage113,2361
  struct GNUNET_NAMECACHE_Header gns_header;118,2478
  int32_t op_result GNUNET_PACKED;123,2585

src/service/namecache/gnunet-service-namecache.c,784
#define LOG_STRERROR_FILE(35,1183
struct NamecacheClient44,1496
  struct GNUNET_SERVICE_Client *client;client49,1549
  struct GNUNET_MQ_Handle *mq;mq54,1647
static const struct GNUNET_CONFIGURATION_Handle *GSN_cfg;GSN_cfg61,1716
static struct GNUNET_STATISTICS_Handle *statistics;statistics66,1819
static struct GNUNET_NAMECACHE_PluginFunctions *GSN_database;GSN_database71,1899
static char *db_lib_name;db_lib_name76,2001
cleanup_task 85,2102
client_disconnect_cb 112,2796
client_connect_cb 134,3322
struct LookupBlockContext154,3800
  struct NamecacheClient *nc;nc159,3880
  uint32_t request_id;164,3961
  int status;169,4016
handle_lookup_block_it 180,4242
handle_lookup_block 216,5393
check_block_cache 270,7232
handle_block_cache 284,7513
run 326,8876

src/service/namecache/namecache_api.c,1405
#define LOG(38,1195
struct GNUNET_NAMECACHE_QueueEntry45,1368
  struct GNUNET_NAMECACHE_QueueEntry *next;next50,1437
  struct GNUNET_NAMECACHE_QueueEntry *prev;prev55,1514
  struct GNUNET_NAMECACHE_Handle *nsh;nsh60,1613
  GNUNET_NAMECACHE_ContinuationWithStatus cont;65,1691
  void *cont_cls;cont_cls70,1778
  GNUNET_NAMECACHE_BlockProcessor block_proc;75,1869
  void *block_proc_cls;block_proc_cls80,1960
  uint32_t op_id;85,2053
struct GNUNET_NAMECACHE_Handle92,2124
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg97,2196
  struct GNUNET_MQ_Handle *mq;mq102,2289
  struct GNUNET_CLIENT_TransmitHandle *th;th107,2388
  struct GNUNET_NAMECACHE_QueueEntry *op_head;op_head112,2489
  struct GNUNET_NAMECACHE_QueueEntry *op_tail;op_tail117,2594
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task122,2674
  struct GNUNET_TIME_Relative reconnect_delay;127,2778
  int reconnect;132,2901
  uint32_t last_op_id_used;137,2989
find_qe 158,3414
check_lookup_block_response 185,3999
handle_lookup_block_response 201,4407
handle_block_cache_response 263,6066
mq_error_handler 297,7078
reconnect 312,7332
reconnect_task 341,8284
force_reconnect 356,8499
get_op_id 390,9538
GNUNET_NAMECACHE_connect 403,9812
GNUNET_NAMECACHE_disconnect 426,10221
GNUNET_NAMECACHE_block_cache 463,11139
GNUNET_NAMECACHE_lookup_block 512,12727
GNUNET_NAMECACHE_cancel 553,13948

src/service/namestore/namestore_api.c,3308
#define LOG(36,1140
#define NAMESTORE_DELAY_TOLERANCE 42,1333
struct GNUNET_NAMESTORE_QueueEntry48,1488
  struct GNUNET_NAMESTORE_QueueEntry *next;next53,1557
  struct GNUNET_NAMESTORE_QueueEntry *prev;prev58,1634
  struct GNUNET_NAMESTORE_Handle *h;h63,1733
  GNUNET_NAMESTORE_ContinuationWithStatus cont;68,1809
  void *cont_cls;cont_cls73,1896
  GNUNET_NAMESTORE_RecordMonitor proc;78,1988
  GNUNET_NAMESTORE_RecordSetMonitor proc2;83,2101
  GNUNET_NAMESTORE_EditRecordSetBeginCallback edit_proc;88,2240
  void *proc_cls;proc_cls93,2336
  GNUNET_SCHEDULER_TaskCallback error_cb;98,2400
  void *error_cb_cls;error_cb_cls103,2485
  struct GNUNET_MQ_Envelope *env;env109,2595
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task114,2707
  uint32_t op_id;119,2822
struct GNUNET_NAMESTORE_ZoneIterator126,2893
  struct GNUNET_NAMESTORE_ZoneIterator *next;next131,2964
  struct GNUNET_NAMESTORE_ZoneIterator *prev;prev136,3043
  struct GNUNET_NAMESTORE_Handle *h;h141,3144
  GNUNET_SCHEDULER_TaskCallback finish_cb;146,3231
  void *finish_cb_cls;finish_cb_cls151,3317
  GNUNET_NAMESTORE_RecordMonitor proc;156,3400
  GNUNET_NAMESTORE_RecordSetMonitor proc2;161,3499
  void *proc_cls;proc_cls166,3581
  GNUNET_SCHEDULER_TaskCallback error_cb;171,3645
  void *error_cb_cls;error_cb_cls176,3730
  struct GNUNET_MQ_Envelope *env;env182,3840
  struct GNUNET_CRYPTO_PrivateKey zone;187,3917
  uint32_t op_id;192,4026
struct GNUNET_NAMESTORE_Handle199,4097
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg204,4169
  struct GNUNET_MQ_Handle *mq;mq209,4278
  struct GNUNET_NAMESTORE_QueueEntry *op_head;op_head214,4367
  struct GNUNET_NAMESTORE_QueueEntry *op_tail;op_tail219,4472
  struct GNUNET_NAMESTORE_ZoneIterator *z_head;z_head224,4585
  struct GNUNET_NAMESTORE_ZoneIterator *z_tail;z_tail229,4699
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task234,4780
  struct GNUNET_TIME_Relative reconnect_delay;239,4884
  int reconnect;244,5007
  uint32_t last_op_id_used;249,5095
find_qe 270,5476
find_zi 289,5903
free_qe 306,6185
free_ze 325,6567
check_rd 346,7084
handle_generic_response 368,7538
check_lookup_result 397,8306
handle_lookup_result 449,9466
check_edit_record_set_response 524,11587
handle_edit_record_set_response 561,12549
check_record_result 611,13970
handle_record_result 653,14909
handle_record_result_end 737,17396
check_zone_to_name_response 776,18460
handle_zone_to_name_response 815,19442
mq_error_handler 904,22372
reconnect 919,22624
reconnect_task 975,24719
force_reconnect 990,24934
get_op_id 1027,25891
GNUNET_NAMESTORE_connect 1040,26165
GNUNET_NAMESTORE_disconnect 1063,26574
warn_delay 1102,27505
GNUNET_NAMESTORE_record_set_store 1121,28021
GNUNET_NAMESTORE_records_store 1141,28630
records_lookup 1267,32508
GNUNET_NAMESTORE_records_lookup 1320,34023
GNUNET_NAMESTORE_records_lookup2 1337,34481
GNUNET_NAMESTORE_zone_to_name 1355,34957
GNUNET_NAMESTORE_zone_iteration_start 1401,36441
GNUNET_NAMESTORE_zone_iteration_start2 1450,37900
GNUNET_NAMESTORE_zone_iterator_next 1501,39412
GNUNET_NAMESTORE_zone_iteration_stop 1524,40109
GNUNET_NAMESTORE_cancel 1549,40761
GNUNET_NAMESTORE_record_set_edit_begin 1560,40925
GNUNET_NAMESTORE_record_set_edit_cancel 1614,42887

src/service/namestore/test_namestore_api_zone_iteration_specific_zone.c,945
#define TEST_RECORD_TYPE 29,1075
#define TIMEOUT 32,1128
static struct GNUNET_NAMESTORE_Handle *nsh;nsh35,1208
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task37,1253
static struct GNUNET_CRYPTO_PrivateKey privkey;39,1306
static struct GNUNET_CRYPTO_PrivateKey privkey2;41,1355
static struct GNUNET_NAMESTORE_ZoneIterator *zi;zi43,1405
static int res;45,1455
static int returned_records;47,1472
static char *s_name_1;s_name_149,1502
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_151,1526
static char *s_name_2;s_name_253,1572
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_255,1596
static char *s_name_3;s_name_357,1642
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_359,1666
endbadly 68,1798
end 77,1904
fail_cb 116,2594
zone_proc 124,2666
zone_proc_end 211,4670
put_cont 232,5079
create_record 282,6426
empty_zone_proc 308,7120
empty_zone_proc_end 338,7895
run 388,9612
main 422,10742

src/service/namestore/test_namestore_api_store_update.c,708
#define TEST_RECORD_TYPE 30,1106
#define TEST_RECORD_DATALEN 32,1158
#define TEST_RECORD_DATA 34,1191
#define TEST_RECORD_DATALEN2 36,1221
#define TEST_RECORD_DATA2 38,1255
#define TIMEOUT 40,1286
static struct GNUNET_NAMESTORE_Handle *nsh;nsh43,1366
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task45,1411
static struct GNUNET_CRYPTO_PrivateKey privkey;47,1464
static struct GNUNET_CRYPTO_PublicKey pubkey;49,1513
static int res;51,1560
static int update_performed;53,1577
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe55,1607
static const char *name name57,1657
endbadly 66,1790
end 76,1916
lookup_success 102,2293
put_cont 168,4530
run 188,5200
main 236,6793

src/service/namestore/test_namestore_api_lookup_nick.c,773
#define TEST_RECORD_TYPE 28,1003
#define TEST_RECORD_DATALEN 30,1055
#define TEST_NICK 32,1088
#define TEST_RECORD_DATA 34,1124
#define TIMEOUT 36,1154
static struct GNUNET_NAMESTORE_Handle *nsh;nsh38,1232
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task40,1277
static struct GNUNET_CRYPTO_PrivateKey privkey;42,1330
static struct GNUNET_CRYPTO_PublicKey pubkey;44,1379
static int res;46,1426
static struct GNUNET_GNSRECORD_Data rd_orig;48,1443
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe50,1489
static const char *name name53,1591
static char *record_data;record_data55,1623
cleanup 58,1662
endbadly 77,1966
end 90,2111
lookup_it 98,2170
fail_cb 219,5312
put_cont 226,5371
nick_cont 255,6207
run 280,7069
main 323,8449

src/service/namestore/test_namestore_api_edit_records.c,708
#define TEST_RECORD_TYPE 30,1096
#define TEST_RECORD_DATALEN 32,1148
#define TEST_RECORD_DATA 34,1181
#define TIMEOUT 36,1211
static struct GNUNET_NAMESTORE_Handle *nsh;nsh39,1291
static struct GNUNET_NAMESTORE_Handle *nsh2;nsh241,1336
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task43,1382
static struct GNUNET_CRYPTO_PrivateKey privkey;45,1435
static struct GNUNET_CRYPTO_PublicKey pubkey;47,1484
static int res;49,1531
static int removed;51,1548
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe53,1569
cleanup 56,1631
endbadly 78,1960
end 91,2105
cancel_done 102,2270
begin_cont_b 110,2419
begin_cont 127,2910
preload_cont 148,3495
run 179,4363
main 227,5907

src/service/namestore/perf_namestore_api_zone_iteration.c,838
#define TEST_RECORD_TYPE 29,1060
#define TIMEOUT 36,1272
#define BENCHMARK_SIZE 44,1571
#define MAX_REC_SIZE 49,1631
#define BLOCK_SIZE 57,1869
static struct GNUNET_NAMESTORE_Handle *nsh;nsh59,1893
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task61,1938
static struct GNUNET_SCHEDULER_Task *t;t63,1990
static struct GNUNET_CRYPTO_PrivateKey privkey;65,2031
static struct GNUNET_NAMESTORE_ZoneIterator *zi;zi67,2080
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe69,2130
static int res;71,2178
static unsigned int off;73,2195
static unsigned int left_until_next;75,2221
static struct GNUNET_TIME_Absolute start;79,2305
end 88,2415
timeout 124,2983
create_record 134,3128
zone_end 153,3562
fail_cb 178,4045
zone_proc 188,4159
put_cont 266,5935
publish_record 283,6229
run 330,7734
main 353,8430

src/service/namestore/test_namestore_api_zone_to_name.c,697
#define TEST_RECORD_TYPE 28,999
#define RECORDS 30,1051
#define TEST_RECORD_DATALEN 32,1070
#define TEST_RECORD_DATA 34,1103
#define TIMEOUT 36,1133
static struct GNUNET_NAMESTORE_Handle *nsh;nsh39,1213
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task41,1258
static struct GNUNET_CRYPTO_PrivateKey privkey;43,1311
static struct GNUNET_CRYPTO_PublicKey pubkey;45,1360
static struct GNUNET_CRYPTO_PublicKey s_zone_value;47,1407
static char *s_name;s_name49,1460
static int res;51,1482
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe53,1499
endbadly 62,1661
end 71,1757
zone_to_name_proc 92,2056
error_cb 145,3186
put_cont 157,3365
run 192,4300
main 240,5894

src/service/namestore/test_namestore_api_zone_iteration.c,936
#define TEST_RECORD_TYPE 29,1074
#define TIMEOUT 32,1127
static struct GNUNET_NAMESTORE_Handle *nsh;nsh35,1207
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task37,1252
static struct GNUNET_CRYPTO_PrivateKey privkey;39,1305
static struct GNUNET_CRYPTO_PrivateKey privkey2;41,1354
static struct GNUNET_NAMESTORE_ZoneIterator *zi;zi43,1404
static int res;45,1454
static int returned_records;47,1471
static char *s_name_1;s_name_149,1501
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_151,1525
static char *s_name_2;s_name_253,1571
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_255,1595
static char *s_name_3;s_name_357,1641
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_359,1665
endbadly 69,1856
end 78,1962
zone_end 117,2652
fail_cb 136,3050
zone_proc 143,3109
put_cont 254,5639
create_record 305,6993
empty_zone_proc 331,7687
empty_zone_end 361,8462
run 405,10065
main 441,11205

src/service/namestore/test_namestore_api_zone_iteration_stop.c,897
#define TEST_RECORD_TYPE 28,1035
#define TIMEOUT 30,1087
#define WAIT 31,1165
static struct GNUNET_NAMESTORE_Handle *nsh;nsh33,1239
static struct GNUNET_CRYPTO_PrivateKey privkey;35,1284
static struct GNUNET_CRYPTO_PrivateKey privkey2;37,1333
static struct GNUNET_NAMESTORE_ZoneIterator *zi;zi39,1383
static int res;41,1433
static int returned_records;43,1450
static char *s_name_1;s_name_145,1480
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_147,1504
static char *s_name_2;s_name_249,1550
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_251,1574
static char *s_name_3;s_name_353,1620
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_355,1644
end 64,1804
delayed_end 98,2386
fail_cb 105,2460
zone_proc 112,2519
zone_proc_end 231,5359
put_cont 247,5758
create_record 292,7031
empty_zone_proc 318,7725
empty_zone_proc_end 346,8474
run 393,10019
main 424,10978

src/service/namestore/test_namestore_api_monitoring_existing.c,987
#define TEST_RECORD_TYPE 28,1050
#define TIMEOUT 31,1103
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg33,1181
static struct GNUNET_NAMESTORE_Handle *nsh;nsh35,1236
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task37,1281
static struct GNUNET_CRYPTO_PrivateKey privkey;39,1334
static struct GNUNET_CRYPTO_PrivateKey privkey2;41,1383
static struct GNUNET_NAMESTORE_ZoneMonitor *zm;zm43,1433
static int res;45,1482
static const char *s_name_1;s_name_147,1499
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_149,1529
static const char *s_name_2;s_name_251,1575
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_253,1605
static const char *s_name_3;s_name_355,1651
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_357,1681
struct GNUNET_NAMESTORE_QueueEntry *ns_ops[ns_ops59,1727
endbadly 68,1889
end 78,2015
zone_proc 129,2913
fail_cb 200,4456
sync_cb 207,4515
put_cont 214,4572
create_record 252,5336
run 275,5878
main 367,9615

src/service/namestore/namestore.h,3959
#define NAMESTORE_H28,978
#define MAX_NAME_LEN 33,1063
struct GNUNET_NAMESTORE_Header40,1166
  struct GNUNET_MessageHeader header;46,1306
  uint32_t r_id GNUNET_PACKED;51,1380
struct RecordSet54,1415
  uint16_t name_len GNUNET_PACKED;59,1463
  uint16_t rd_len GNUNET_PACKED;64,1549
  uint16_t rd_count GNUNET_PACKED;69,1628
  uint16_t reserved GNUNET_PACKED;74,1705
struct RecordStoreMessage86,1910
  struct GNUNET_NAMESTORE_Header gns_header;91,2012
  uint16_t rd_set_count;96,2097
  uint16_t key_len GNUNET_PACKED;101,2163
struct NamestoreResponseMessage113,2343
  struct GNUNET_NAMESTORE_Header gns_header;118,2455
  uint32_t ec GNUNET_PACKED;123,2535
struct EditRecordSetResponseMessage130,2614
  struct GNUNET_NAMESTORE_Header gns_header;135,2738
  uint16_t editor_hint_len GNUNET_PACKED;140,2827
  uint16_t ec GNUNET_PACKED;145,2896
  uint16_t rd_len GNUNET_PACKED;150,2976
  uint16_t rd_count GNUNET_PACKED;155,3055
struct LabelLookupMessage167,3191
  struct GNUNET_NAMESTORE_Header gns_header;172,3294
  uint16_t label_len GNUNET_PACKED;177,3376
  uint16_t unused GNUNET_PACKED;182,3437
  uint16_t filter;187,3506
  uint16_t key_len GNUNET_PACKED;192,3566
struct EditRecordSetMessage203,3750
  struct GNUNET_NAMESTORE_Header gns_header;208,3857
  uint16_t label_len GNUNET_PACKED;213,3939
  uint16_t editor_hint_len GNUNET_PACKED;218,4000
  uint16_t reserved GNUNET_PACKED;223,4067
  uint16_t key_len GNUNET_PACKED;228,4143
struct EditRecordSetCancelMessage241,4375
  struct GNUNET_NAMESTORE_Header gns_header;246,4495
  uint16_t label_len GNUNET_PACKED;251,4577
  uint16_t editor_hint_len GNUNET_PACKED;256,4638
  uint16_t editor_hint_replacement_len GNUNET_PACKED;261,4705
  uint16_t key_len GNUNET_PACKED;266,4800
struct LabelLookupResponseMessage280,5063
  struct GNUNET_NAMESTORE_Header gns_header;285,5183
  uint16_t name_len GNUNET_PACKED;290,5258
  uint16_t rd_len GNUNET_PACKED;295,5344
  uint16_t rd_count GNUNET_PACKED;300,5423
  int16_t found GNUNET_PACKED;306,5545
  uint16_t reserved GNUNET_PACKED;311,5615
  uint16_t key_len GNUNET_PACKED;316,5691
struct ZoneToNameMessage329,5903
  struct GNUNET_NAMESTORE_Header gns_header;334,6004
  uint16_t key_len GNUNET_PACKED;339,6090
  uint16_t pkey_len GNUNET_PACKED;344,6178
struct ZoneToNameResponseMessage357,6374
  struct GNUNET_NAMESTORE_Header gns_header;362,6492
  int32_t ec GNUNET_PACKED;370,6702
  uint16_t name_len GNUNET_PACKED;375,6767
  uint16_t rd_len GNUNET_PACKED;380,6853
  uint16_t rd_count GNUNET_PACKED;385,6932
  uint16_t key_len GNUNET_PACKED;390,7008
struct RecordResultMessage403,7244
  struct GNUNET_NAMESTORE_Header gns_header;408,7348
  struct GNUNET_TIME_AbsoluteNBO expire;414,7494
  uint16_t name_len GNUNET_PACKED;419,7565
  uint16_t rd_len GNUNET_PACKED;424,7651
  uint16_t rd_count GNUNET_PACKED;429,7730
  uint16_t key_len GNUNET_PACKED;434,7806
struct TxControlMessage446,8035
  struct GNUNET_NAMESTORE_Header gns_header;451,8133
  uint16_t reserved GNUNET_PACKED;456,8224
  uint16_t control GNUNET_PACKED;461,8313
struct TxControlResultMessage468,8404
  struct GNUNET_NAMESTORE_Header gns_header;473,8515
  uint32_t ec GNUNET_PACKED;478,8603
struct ZoneMonitorStartMessage487,8675
  struct GNUNET_MessageHeader header;492,8783
  uint32_t iterate_first GNUNET_PACKED;498,8928
  uint16_t filter;504,9058
  uint16_t key_len GNUNET_PACKED;509,9118
struct ZoneMonitorNextMessage520,9282
  struct GNUNET_MessageHeader header;525,9388
  uint32_t reserved;530,9457
  uint64_t limit;537,9650
struct ZoneIterationStartMessage544,9726
  struct GNUNET_NAMESTORE_Header gns_header;549,9843
  uint16_t filter;555,9978
  uint16_t key_len GNUNET_PACKED;560,10038
struct ZoneIterationNextMessage571,10212
  struct GNUNET_NAMESTORE_Header gns_header;576,10327
  uint64_t limit;583,10546
struct ZoneIterationStopMessage590,10624
  struct GNUNET_NAMESTORE_Header gns_header;595,10739

src/service/namestore/test_namestore_api_store.c,550
#define TEST_RECORD_TYPE 28,999
#define TEST_RECORD_DATALEN 30,1051
#define TEST_RECORD_DATA 32,1084
#define TIMEOUT 34,1114
static struct GNUNET_NAMESTORE_Handle *nsh;nsh37,1194
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task39,1239
static struct GNUNET_CRYPTO_PrivateKey privkey;41,1292
static struct GNUNET_CRYPTO_PublicKey pubkey;43,1341
static int res;45,1388
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe47,1405
cleanup 51,1468
endbadly 68,1712
end 81,1857
put_cont 89,1916
run 106,2337
main 149,3691

src/service/namestore/perf_namestore_api_import.c,918
#define TEST_RECORD_TYPE 29,1034
#define TEST_RECORD_COUNT 31,1086
#define TIMEOUT 38,1279
#define BENCHMARK_SIZE 46,1578
#define MAX_REC_SIZE 51,1638
#define BLOCK_SIZE 59,1876
static struct GNUNET_NAMESTORE_Handle *nsh;nsh61,1900
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task63,1945
static struct GNUNET_SCHEDULER_Task *t;t65,1997
static struct GNUNET_CRYPTO_PrivateKey privkey;67,2038
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe69,2087
static int res;71,2135
static struct GNUNET_TIME_Absolute start;73,2152
struct GNUNET_NAMESTORE_RecordInfo ri[ri75,2195
int single_put_pos;77,2254
static int bulk_count 79,2275
end 88,2370
timeout 119,2850
create_record 129,2995
put_cont_bulk_tx 155,3529
publish_records_bulk_tx 184,4259
put_cont_bulk 204,4830
publish_records_bulk 253,6163
put_cont_single 271,6706
publish_records_single 302,7538
run 329,8467
main 359,9350

src/service/namestore/namestore_api_monitor.c,929
struct GNUNET_NAMESTORE_ZoneMonitor38,1193
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg43,1278
  struct GNUNET_MQ_Handle *mq;mq48,1374
  GNUNET_SCHEDULER_TaskCallback error_cb;53,1451
  void *error_cb_cls;error_cb_cls58,1536
  GNUNET_NAMESTORE_RecordMonitor monitor;63,1604
  GNUNET_NAMESTORE_RecordSetMonitor monitor2;68,1692
  enum GNUNET_GNSRECORD_Filter filter;73,1791
  void *monitor_cls;monitor_cls78,1872
  GNUNET_SCHEDULER_TaskCallback sync_cb;83,1952
  void *sync_cb_cls;sync_cb_cls88,2035
  struct GNUNET_CRYPTO_PrivateKey zone;93,2090
  int iterate_first;98,2195
  uint32_t key_len;103,2250
handle_sync 123,2557
check_result 142,2965
handle_result 211,4504
mq_error_handler 259,6182
reconnect 274,6425
GNUNET_NAMESTORE_zone_monitor_start 316,7926
GNUNET_NAMESTORE_zone_monitor_start2 353,8859
GNUNET_NAMESTORE_zone_monitor_next 414,10928
GNUNET_NAMESTORE_zone_monitor_stop 432,11383

src/service/namestore/test_namestore_api_remove_not_existing_record.c,551
#define TEST_RECORD_TYPE 28,1004
#define TEST_RECORD_DATALEN 30,1035
#define TEST_RECORD_DATA 32,1068
#define TIMEOUT 34,1098
static struct GNUNET_NAMESTORE_Handle *nsh;nsh37,1178
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task39,1223
static struct GNUNET_CRYPTO_PrivateKey privkey;41,1276
static struct GNUNET_CRYPTO_PublicKey pubkey;43,1325
static int res;45,1372
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe47,1389
cleanup 51,1452
endbadly 68,1700
end 81,1845
put_cont 89,1904
run 124,2751
main 156,3732

src/service/namestore/test_namestore_api_zone_iteration_nick.c,1059
#define TEST_RECORD_TYPE 29,1068
#define ZONE_NICK_1 31,1120
#define ZONE_NICK_2 32,1148
#define TIMEOUT 34,1177
static struct GNUNET_NAMESTORE_Handle *nsh;nsh37,1257
static struct GNUNET_CRYPTO_PrivateKey privkey;39,1302
static struct GNUNET_CRYPTO_PrivateKey privkey2;41,1351
static struct GNUNET_NAMESTORE_ZoneIterator *zi;zi43,1401
static int res;45,1451
static int returned_records;47,1468
static char *s_name_1;s_name_149,1498
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_151,1522
static char *s_name_2;s_name_253,1568
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_255,1592
static char *s_name_3;s_name_357,1638
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_359,1662
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe61,1708
end 71,1903
check_zone_1 106,2485
check_zone_2 123,2857
zone_proc_end 141,3244
zone_proc 153,3497
fail_cb 200,4567
put_cont 207,4626
create_record 252,5891
nick_2_cont 273,6409
nick_1_cont 308,7547
empty_zone_proc 343,8731
empty_zone_end 372,9481
run 405,10585
main 436,11539

src/service/namestore/test_common.c,81
TNC_test_plugin 31,1006
#define SETUP_CFG2(97,2853
#define SETUP_CFG(115,3984

src/service/namestore/test_namestore_api_remove.c,600
#define TEST_RECORD_TYPE 28,995
#define TEST_RECORD_DATALEN 30,1047
#define TEST_RECORD_DATA 32,1080
#define TIMEOUT 34,1110
static struct GNUNET_NAMESTORE_Handle *nsh;nsh37,1190
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task39,1235
static struct GNUNET_CRYPTO_PrivateKey privkey;41,1288
static struct GNUNET_CRYPTO_PublicKey pubkey;43,1337
static int res;45,1384
static int removed;47,1401
static struct GNUNET_NAMESTORE_QueueEntry *nsqe;nsqe49,1422
cleanup 53,1485
endbadly 70,1729
end 83,1874
remove_cont 91,1933
put_cont 116,2649
run 148,3615
main 196,5127

src/service/namestore/gnunet-service-namestore.c,4847
#define LOG_STRERROR_FILE(35,1200
#define MONITOR_STALL_WARN_DELAY 41,1413
#define NC_SIZE 46,1528
struct ZoneIteration57,1648
  struct ZoneIteration *next;next62,1712
  struct ZoneIteration *prev;prev67,1788
  struct NamestoreClient *nc;nc72,1888
  struct GNUNET_GNSRECORD_Data *nick;nick77,1967
  struct GNUNET_CRYPTO_PrivateKey zone;82,2062
  enum GNUNET_GNSRECORD_Filter filter;87,2142
  uint64_t seq;96,2377
  uint32_t request_id;101,2482
  uint32_t offset;110,2738
  int send_end;117,2973
struct NamestoreClient123,3023
  struct GNUNET_SERVICE_Client *client;client128,3076
  struct GNUNET_NAMESTORE_PluginFunctions *GSN_database;GSN_database133,3161
  char *db_lib_name;db_lib_name138,3278
  struct GNUNET_MQ_Handle *mq;mq143,3361
  struct ZoneIteration *op_head;op_head149,3497
  struct ZoneIteration *op_tail;op_tail155,3635
struct ZoneMonitor162,3705
  struct ZoneMonitor *next;next167,3767
  struct ZoneMonitor *prev;prev172,3841
  struct NamestoreClient *nc;nc177,3937
  struct GNUNET_CRYPTO_PrivateKey zone;182,4010
  enum GNUNET_GNSRECORD_Filter filter;187,4090
  struct GNUNET_SCHEDULER_Task *task;task192,4185
  struct GNUNET_SCHEDULER_Task *sa_wait_warning;sa_wait_warning197,4275
  struct GNUNET_TIME_Absolute sa_waiting_start;202,4385
  uint64_t seq;211,4630
  uint64_t limit;217,4750
  uint64_t iteration_cnt;225,5009
  int in_first_iteration;230,5099
  int run_again;235,5182
  int sa_waiting;243,5481
struct StoreActivity251,5648
  struct StoreActivity *next;next256,5703
  struct StoreActivity *prev;prev261,5766
  struct NamestoreClient *nc;nc266,5857
  uint32_t rid;271,5920
  uint16_t rd_set_pos;276,5985
  uint16_t rd_set_count;281,6065
  struct GNUNET_CRYPTO_PrivateKey private_key;286,6129
  const struct RecordSet *rs;rs292,6278
  struct ZoneMonitor *zm_pos;zm_pos297,6392
struct NickCache305,6481
  struct GNUNET_CRYPTO_PrivateKey zone;310,6546
  struct GNUNET_GNSRECORD_Data *rd;rd315,6624
  struct GNUNET_TIME_Absolute last_used;320,6725
static struct NickCache nick_cache[nick_cache326,6822
static const struct GNUNET_CRYPTO_PrivateKey zero;331,6904
static const struct GNUNET_CONFIGURATION_Handle *GSN_cfg;GSN_cfg336,6989
static struct GNUNET_STATISTICS_Handle *statistics;statistics341,7092
static char *db_lib_name;db_lib_name346,7184
struct GNUNET_NAMESTORE_PluginFunctions *GSN_database;GSN_database351,7250
static struct ZoneMonitor *monitor_head;monitor_head357,7345
static struct ZoneMonitor *monitor_tail;monitor_tail362,7424
static struct StoreActivity *sa_head;sa_head367,7526
static struct StoreActivity *sa_tail;sa_tail372,7625
static struct GNUNET_NotificationContext *monitor_nc;monitor_nc377,7720
static int return_orphaned;382,7813
cleanup_task 390,7915
free_store_activity 416,8467
lookup_nick_it 436,9184
cache_nick 479,10369
get_nick_record 523,11438
merge_with_nick_records 598,13897
send_lookup_response_with_filter 678,16503
send_store_response 805,20824
zone_iteration_done_client_continue 834,21729
warn_monitor_slow 858,22390
continue_store_activity 877,22939
client_disconnect_cb 970,26258
client_connect_cb 1042,28026
struct RecordLookupContext1084,29363
  const char *label;label1089,29431
  char *editor_hint;editor_hint1094,29494
  char *res_rd;res_rd1099,29552
  struct GNUNET_GNSRECORD_Data *nick;nick1104,29609
  int found;1109,29699
  enum GNUNET_GNSRECORD_Filter filter;1114,29748
  unsigned int res_rd_count;1119,29834
  ssize_t rd_ser_len;1124,29919
lookup_it 1141,30474
check_edit_record_set 1260,34281
handle_edit_record_set 1289,35077
check_edit_record_set_cancel 1389,38551
handle_edit_record_set_cancel 1422,39480
check_record_lookup 1502,42317
handle_record_lookup 1528,42940
check_record_store 1622,46177
struct LookupExistingRecordsContext1645,46702
  struct GNUNET_TIME_Absolute exp;1651,46810
  int only_tombstone;1657,46947
get_existing_rd_exp 1673,47412
store_record_set 1711,48715
handle_record_store 1911,55948
struct ZoneToNameCtx1980,58050
  struct NamestoreClient *nc;nc1985,58107
  uint32_t rid;1990,58210
  enum GNUNET_ErrorCode ec;1997,58452
handle_zone_to_name_it 2012,58755
check_zone_to_name 2078,61063
handle_zone_to_name 2092,61378
struct ZoneIterationProcResult2168,64229
  struct ZoneIteration *zi;zi2173,64305
  uint64_t limit;2178,64408
  int run_again;2183,64489
zone_iterate_proc 2198,64821
run_zone_iteration_round 2247,66225
check_iteration_start 2294,68180
handle_iteration_start 2319,68717
handle_iteration_stop 2363,70011
handle_iteration_next 2395,70853
monitor_unblock 2430,71837
monitor_sync 2472,72924
monitor_iterate_cb 2509,73940
check_monitor_start 2547,75180
handle_monitor_start 2572,75693
monitor_iteration_next 2623,77315
handle_monitor_next 2672,78747
run 2732,80448

src/service/namestore/test_namestore_api_monitoring.c,926
#define TEST_RECORD_TYPE 28,1041
#define TIMEOUT 31,1094
static struct GNUNET_NAMESTORE_Handle *nsh;nsh34,1174
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task36,1219
static struct GNUNET_CRYPTO_PrivateKey privkey;38,1272
static struct GNUNET_CRYPTO_PrivateKey privkey2;40,1321
static struct GNUNET_NAMESTORE_ZoneMonitor *zm;zm42,1371
static int res;44,1420
static char *s_name_1;s_name_146,1437
static struct GNUNET_GNSRECORD_Data *s_rd_1;s_rd_148,1461
static char *s_name_2;s_name_250,1507
static struct GNUNET_GNSRECORD_Data *s_rd_2;s_rd_252,1531
static char *s_name_3;s_name_354,1577
static struct GNUNET_GNSRECORD_Data *s_rd_3;s_rd_356,1601
struct GNUNET_NAMESTORE_QueueEntry *ns_ops[ns_ops58,1647
do_shutdown 62,1708
endbadly 117,2677
end 125,2745
zone_proc 133,2808
put_cont 198,4392
create_record 233,5204
fail_cb 254,5722
sync_cb 261,5781
run 268,5838
main 353,9346

src/service/dns/dns_api.c,824
struct GNUNET_DNS_RequestHandle34,1047
  struct GNUNET_DNS_Handle *dh;dh39,1117
  uint64_t request_id;44,1237
  uint32_t generation;49,1349
struct GNUNET_DNS_Handle56,1399
  struct GNUNET_MQ_Handle *mq;mq61,1479
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg66,1550
  GNUNET_DNS_RequestHandler rh;71,1650
  void *rh_cls;rh_cls76,1719
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task81,1787
  uint32_t generation;86,1924
  enum GNUNET_DNS_Flags flags;91,1997
  unsigned int pending_requests;97,2149
force_reconnect 116,2449
mq_error_handler 139,3067
check_request 156,3441
handle_request 176,3844
reconnect 196,4350
GNUNET_DNS_request_forward 237,5704
GNUNET_DNS_request_drop 265,6406
GNUNET_DNS_request_answer 296,7270
GNUNET_DNS_connect 340,8421
GNUNET_DNS_disconnect 363,8937

src/service/dns/gnunet-helper-dns.c,659
#define MAX_SIZE 86,3251
struct in6_ifreq92,3383
  struct in6_addr ifr6_addr;94,3402
  uint32_t ifr6_prefixlen;95,3431
  unsigned int ifr6_ifindex;96,3458
static const char *sbin_iptables;sbin_iptables103,3548
static const char *sbin_ip6tables;sbin_ip6tables108,3633
static const char *sbin_sysctl;sbin_sysctl113,3716
static const char *sbin_ip;sbin_ip118,3799
#define DNS_PORT 123,3861
#define DNS_MARK 131,4134
#define DNS_TABLE 140,4477
static int cpipe[cpipe147,4597
signal_handler 157,4807
open_dev_null 173,5207
fork_and_exec 200,5695
init_tun 258,7079
set_address6 309,8096
set_address4 406,10309
run 511,12575
main 738,19223

src/service/dns/gnunet-service-dns.c,1874
#define DNS_PORT 52,2070
#define LOG(58,2129
enum RequestPhase65,2272
  RP_INIT,70,2341
  RP_REQUEST_MONITOR,76,2469
  RP_QUERY,82,2637
  RP_INTERNET_DNS,87,2705
  RP_MODIFY,94,2912
  RP_RESPONSE_MONITOR,100,3065
  RP_DROP105,3151
struct ClientRecord112,3208
  struct ClientRecord *next;next117,3275
  struct ClientRecord *prev;prev122,3350
  struct GNUNET_SERVICE_Client *client;client127,3419
  struct GNUNET_MQ_Handle *mq;mq132,3513
  enum GNUNET_DNS_Flags flags;137,3584
struct RequestRecord144,3670
  struct ClientRecord **client_wait_list;client_wait_list150,3820
  char *payload;payload156,3975
  struct GNUNET_DNSSTUB_RequestSocket *rs;rs162,4099
  struct sockaddr_storage src_addr;167,4223
  struct sockaddr_storage dst_addr;172,4350
  uint64_t request_id;179,4569
  size_t payload_length;184,4638
  unsigned int client_wait_list_length;189,4716
  enum RequestPhase phase;194,4808
static int global_ret;201,4884
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg206,4944
static struct GNUNET_STATISTICS_Handle *stats;stats211,5022
static struct GNUNET_HELPER_Handle *hijacker;hijacker216,5142
static char *helper_argv[helper_argv221,5262
static struct ClientRecord *clients_head;clients_head226,5338
static struct ClientRecord *clients_tail;clients_tail231,5427
static struct RequestRecord requests[requests236,5509
static uint64_t request_id_gen;241,5609
static struct GNUNET_DNSSTUB_Context *dnsstub;dnsstub246,5686
cleanup_rr 255,5855
cleanup_task 272,6167
request_done 303,6812
send_request_to_client 479,12298
next_phase 529,13579
client_connect_cb 674,17298
client_disconnect_cb 698,17876
process_dns_result 735,18765
handle_client_init 779,20072
check_client_response 797,20453
handle_client_response 811,20720
process_helper_messages 909,23895
run 1080,29857
GNUNET_DNS_init 1244,35202

src/service/dns/dns.h,480
#define DNS_H27,935
struct GNUNET_DNS_Register35,1046
  struct GNUNET_MessageHeader header;40,1144
  uint32_t flags GNUNET_PACKED;45,1256
struct GNUNET_DNS_Request52,1365
  struct GNUNET_MessageHeader header;57,1465
  uint32_t reserved GNUNET_PACKED;62,1534
  uint64_t request_id GNUNET_PACKED;67,1606
struct GNUNET_DNS_Response76,1776
  struct GNUNET_MessageHeader header;81,1878
  uint32_t drop_flag GNUNET_PACKED;86,2014
  uint64_t request_id GNUNET_PACKED;91,2087

src/service/dns/gnunet-zonewalk.c,918
struct Request32,1013
  struct Request *next;next37,1075
  struct Request *prev;prev42,1145
  struct GNUNET_DNSSTUB_RequestSocket *rs;rs47,1240
  void *raw;raw52,1316
  size_t raw_len;57,1374
  char *hostname;hostname62,1437
  time_t time;67,1510
  int issue_num;72,1578
  uint16_t id;77,1649
static struct GNUNET_DNSSTUB_Context *ctx;ctx84,1708
static unsigned int pending;89,1806
static unsigned int lookups;94,1887
static unsigned int failures;99,1959
static unsigned int records;104,2029
static struct Request *req_head;req_head109,2110
static struct Request *req_tail;req_tail114,2195
static struct GNUNET_SCHEDULER_Task *t;t119,2251
#define THRESH 124,2355
#define TIME_THRESH 130,2486
#define MAX_RETRIES 135,2578
process_record 145,2725
process_result 314,7220
submit_req 411,9832
process_queue 446,10730
do_shutdown 472,11249
run 492,11532
queue 509,11856
main 570,13388

src/service/dns/gnunet-dns-redirector.c,276
static struct GNUNET_DNS_Handle *handle;handle34,1047
static char *n4;n439,1126
static char *n6;n644,1184
static int ret;49,1246
static unsigned int verbosity;54,1303
modify_record 63,1425
modify_request 135,3802
do_disconnect 182,4935
run 201,5306
main 234,6047

src/service/dns/gnunet-dns-monitor.c,353
static struct GNUNET_DNS_Handle *handle;handle34,1037
static int inbound_only;39,1101
static int outbound_only;44,1149
static int ret;49,1220
static unsigned int verbosity;54,1277
get_type 64,1495
get_class 102,2328
display_query 125,2744
display_record 141,3068
display_request 280,7602
do_disconnect 341,9604
run 360,9975
main 382,10588

src/service/revocation/test_revocation_testvectors.c,316
int res;7,147
struct RevocationTv9,157
  char *d;d11,179
  char *zid;zid12,190
  char *ztld;ztld13,203
  char *m;m14,217
  char *proof;proof15,228
  int diff;16,243
  int epochs;17,255
struct RevocationTv rtvs[rtvs20,273
print_bytes_ 171,4628
print_bytes 201,5125
parsehex 210,5251
main 240,5785

src/service/revocation/gnunet-service-revocation.c,1705
struct PeerEntry57,1971
  struct GNUNET_MQ_Handle *mq;mq62,2048
  struct GNUNET_PeerIdentity id;67,2131
  struct GNUNET_SCHEDULER_Task *transmit_task;transmit_task72,2230
  struct GNUNET_SETU_OperationHandle *so;so77,2356
static struct GNUNET_SETU_Handle *revocation_set;revocation_set84,2452
static struct GNUNET_CONTAINER_MultiHashMap *revocation_map;revocation_map90,2623
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg95,2733
static struct GNUNET_STATISTICS_Handle *stats;stats100,2833
static struct GNUNET_CORE_Handle *core_api;core_api105,2934
static struct GNUNET_CONTAINER_MultiPeerMap *peers;peers110,3018
static struct GNUNET_PeerIdentity my_identity;115,3114
static struct GNUNET_DISK_FileHandle *revocation_db;revocation_db120,3214
static struct GNUNET_SETU_ListenHandle *revocation_union_listen_handle;revocation_union_listen_handle125,3346
static unsigned long long revocation_work_required;130,3515
static struct GNUNET_TIME_Relative epoch_duration;135,3610
static struct GNUNET_HashCode revocation_set_union_app_id;141,3767
new_peer_entry 151,4004
verify_revoke_message 174,4777
client_connect_cb 202,5466
client_disconnect_cb 218,5781
check_query_message 227,5965
handle_query_message 251,6393
do_flood 302,8138
publicize_rm 341,9359
check_revoke_message 427,11966
handle_revoke_message 451,12398
check_p2p_revoke 477,13163
handle_p2p_revoke 500,13554
add_revocation 521,14211
transmit_task_cb 586,16210
handle_core_connect 621,17382
handle_core_disconnect 685,19454
free_entry 729,20735
shutdown_task 744,20952
core_init 790,21997
handle_revocation_union_request 820,23006
run 869,24377
GNUNET_REVOCATION_memory_init 1055,31132

src/service/revocation/revocation.h,519
#define REVOCATION_H27,928
struct QueryMessage37,1088
  struct GNUNET_MessageHeader header;42,1171
  uint32_t key_len GNUNET_PACKED;47,1239
struct QueryResponseMessage58,1369
  struct GNUNET_MessageHeader header;63,1469
  uint32_t is_valid GNUNET_PACKED;68,1570
struct RevokeMessage79,1921
  struct GNUNET_MessageHeader header;84,2006
  uint32_t pow_size GNUNET_PACKED;89,2092
struct RevocationResponseMessage98,2199
  struct GNUNET_MessageHeader header;103,2305
  uint32_t is_valid GNUNET_PACKED;109,2459

src/service/revocation/test_revocation.c,1387
#define NUM_TEST_PEERS 32,1103
struct TestPeer34,1129
  struct GNUNET_TESTBED_Peer *p;p36,1147
  struct GNUNET_TESTBED_Operation *identity_op;identity_op37,1180
  struct GNUNET_TESTBED_Operation *core_op;core_op38,1228
  struct GNUNET_IDENTITY_Handle *idh;idh39,1272
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg40,1310
  const struct GNUNET_CRYPTO_PrivateKey *privkey;privkey41,1359
  struct GNUNET_CRYPTO_PublicKey pubkey;42,1409
  struct GNUNET_CRYPTO_EcdsaSignature sig;43,1450
  struct GNUNET_IDENTITY_Operation *create_id_op;create_id_op44,1493
  struct GNUNET_IDENTITY_EgoLookup *ego_lookup;ego_lookup45,1543
  struct GNUNET_REVOCATION_Handle *revok_handle;revok_handle46,1591
  struct GNUNET_CORE_Handle *ch;ch47,1640
  struct GNUNET_REVOCATION_PowCalculationHandle *pow;pow48,1673
static struct TestPeer testpeers[testpeers51,1731
static int ok;56,1825
do_shutdown 60,1854
revocation_remote_cb 98,2775
check_revocation 124,3359
revocation_cb 134,3584
static struct GNUNET_REVOCATION_PowP *proof_of_work;proof_of_work145,3827
ego_cb 148,3893
identity_create_cb 196,5668
identity_completion_cb 227,6730
identity_connect_adapter 254,7935
identity_disconnect_adapter 268,8287
connect_cb 278,8452
core_completion_cb 314,9745
core_connect_adapter 330,10079
core_disconnect_adapter 343,10413
test_connection 353,10566
main 403,12066

src/service/revocation/revocation_api.c,624
struct GNUNET_REVOCATION_Query35,1158
  struct GNUNET_MQ_Handle *mq;mq40,1238
  GNUNET_REVOCATION_Callback func;45,1321
  void *func_cls;func_cls50,1395
query_mq_error_handler 64,1737
handle_revocation_query_response 84,2202
GNUNET_REVOCATION_query 108,2972
GNUNET_REVOCATION_query_cancel 155,4426
struct GNUNET_REVOCATION_Handle169,4648
  struct GNUNET_MQ_Handle *mq;mq174,4729
  GNUNET_REVOCATION_Callback func;179,4813
  void *func_cls;func_cls184,4887
revocation_mq_error_handler 198,5229
handle_revocation_response 218,5704
GNUNET_REVOCATION_revoke 249,6872
GNUNET_REVOCATION_revoke_cancel 323,9244

src/service/testbed/test_testbed_portreservation.c,68
#define LOG(32,1097
int status;38,1196
run 44,1261
main 84,2503

src/service/testbed/gnunet-testbed.c,216
#define LOG(31,1050
static int ret;37,1159
static unsigned int create_no;42,1221
static char *create_cfg_template;create_cfg_template47,1311
create_unique_cfgs 51,1358
run_no_scheduler 158,4565
main 189,5315

src/service/testbed/testbed.c,895
#define LOG(31,975
#define LOW_PORT 39,1276
#define HIGH_PORT 46,1511
struct GNUNET_TESTBED_System53,1662
  char *tmppath;tmppath59,1784
  char *trusted_ip;trusted_ip65,1913
  char *hostname;hostname70,1964
  uint32_t path_counter;90,2839
  uint16_t lowport;95,2917
  uint16_t highport;100,2991
GNUNET_TESTBED_system_create_with_portrange 105,3048
GNUNET_TESTBED_system_create 136,3867
GNUNET_TESTBED_system_destroy 150,4305
GNUNET_TESTBED_reserve_port 163,4638
GNUNET_TESTBED_release_port 252,7409
struct UpdateContext276,8018
  struct GNUNET_TESTBED_System *system;system281,8110
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg286,8202
  char *gnunet_home;gnunet_home291,8310
  uint16_t *ports;ports298,8515
  unsigned int nports;303,8591
  int status;308,8694
update_config 323,9002
update_config_sections 420,12423
GNUNET_TESTBED_configuration_create 532,16062

src/service/testbed/testbed_api_cmd_system_create.c,266
struct TestSystemState36,1140
  struct GNUNET_TESTBED_System *test_system;test_system38,1165
  const char *testdir;testdir40,1211
system_create_run 49,1334
system_create_traits 65,1716
system_create_cleanup 89,2335
GNUNET_TESTBED_cmd_system_create 108,2703

src/service/identity/identity_api_suffix_lookup.c,486
#define LOG(31,1025
struct GNUNET_IDENTITY_EgoSuffixLookup37,1136
  struct GNUNET_MQ_Handle *mq;mq42,1217
  char *suffix;suffix47,1292
  GNUNET_IDENTITY_EgoSuffixCallback cb;52,1360
  void *cb_cls;cb_cls57,1436
check_identity_result_code 70,1676
handle_identity_result_code 86,2014
check_identity_update 104,2423
handle_identity_update 128,2940
mq_error_handler 165,4248
GNUNET_IDENTITY_ego_lookup_by_suffix 185,4719
GNUNET_IDENTITY_ego_lookup_by_suffix_cancel 237,6328

src/service/identity/identity_api.c,1614
#define LOG(34,1136
struct GNUNET_IDENTITY_Operation40,1275
  struct GNUNET_IDENTITY_Handle *h;h45,1349
  struct GNUNET_IDENTITY_Operation *next;next50,1432
  struct GNUNET_IDENTITY_Operation *prev;prev55,1521
  const struct GNUNET_MessageHeader *msg;msg61,1664
  GNUNET_IDENTITY_Continuation cont;67,1841
  GNUNET_IDENTITY_CreateContinuation create_cont;73,2004
  struct GNUNET_CRYPTO_PrivateKey pk;78,2122
  GNUNET_IDENTITY_Callback cb;84,2319
  void *cls;cls89,2398
struct GNUNET_IDENTITY_Handle96,2451
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg101,2522
  struct GNUNET_MQ_Handle *mq;mq106,2612
  struct GNUNET_CONTAINER_MultiHashMap *egos;egos112,2756
  GNUNET_IDENTITY_Callback cb;117,2862
  void *cb_cls;cb_cls122,2930
  struct GNUNET_IDENTITY_Operation *op_head;op_head127,2991
  struct GNUNET_IDENTITY_Operation *op_tail;op_tail132,3081
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task137,3197
  struct GNUNET_TIME_Relative reconnect_delay;142,3292
  int in_receive;147,3405
GNUNET_IDENTITY_ego_get_anonymous 157,3578
free_ego 197,4451
reschedule_connect 224,5121
mq_error_handler 275,6807
handle_identity_result_code 291,7087
check_identity_update 324,7927
handle_identity_update 348,8453
reconnect 440,11166
GNUNET_IDENTITY_connect 487,12595
GNUNET_IDENTITY_ego_get_private_key 517,13302
GNUNET_IDENTITY_ego_get_public_key 529,13552
private_key_create 541,13898
GNUNET_IDENTITY_create 561,14387
GNUNET_IDENTITY_rename 621,16322
GNUNET_IDENTITY_delete 674,17949
GNUNET_IDENTITY_cancel 715,19115
GNUNET_IDENTITY_disconnect 732,19387

src/service/identity/test_identity.c,481
#define TIMEOUT 32,1038
static int res;38,1154
static struct GNUNET_IDENTITY_Handle *h;h43,1210
static struct GNUNET_IDENTITY_Operation *op;op48,1293
static struct GNUNET_SCHEDULER_Task *endbadly_task;endbadly_task53,1391
#define CHECK(55,1444
cleanup 71,1800
endbadly 93,2068
end 103,2186
notification_cb 126,2764
delete_cont 195,4156
finally_delete 210,4365
fail_rename_cont 223,4579
success_rename_cont 240,4943
create_cb 255,5268
run 290,6425
main 307,6973

src/service/identity/gnunet-service-identity.c,1451
struct Ego45,1408
  struct Ego *next;next50,1461
  struct Ego *prev;prev55,1522
  struct GNUNET_CRYPTO_PrivateKey pk;60,1584
  char *identifier;identifier65,1671
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg72,1744
static struct GNUNET_CONFIGURATION_Handle *subsystem_cfg;subsystem_cfg78,1910
static struct GNUNET_STATISTICS_Handle *stats;stats83,2014
static struct GNUNET_NotificationContext *nc;nc88,2125
static char *ego_directory;ego_directory93,2224
static char *subsystem_cfg_file;subsystem_cfg_file98,2325
static struct Ego *ego_head;ego_head103,2395
static struct Ego *ego_tail;ego_tail108,2461
get_ego_filename 118,2666
client_disconnect_cb 139,3077
client_connect_cb 158,3543
shutdown_task 172,3774
send_result_code 210,4582
create_update_message 234,5318
handle_start_message 266,6380
check_lookup_message 308,7719
handle_lookup_message 324,8104
check_lookup_by_suffix_message 358,9089
handle_lookup_by_suffix_message 374,9504
notify_listeners 418,10876
check_create_message 449,12005
handle_create_message 487,12817
struct RenameContext548,14791
  const char *old_name;old_name553,14841
  const char *new_name;new_name558,14893
handle_ego_rename 569,15141
check_rename_message 600,16086
handle_rename_message 638,16963
handle_ego_delete 720,19666
check_delete_message 751,20599
handle_delete_message 783,21283
read_from_file 830,22823
process_ego_file 901,24549
run 942,25502

src/service/identity/identity.h,1239
#define IDENTITY_H29,965
struct GNUNET_IDENTITY_Ego36,1043
  struct GNUNET_HashCode id;41,1126
  struct GNUNET_CRYPTO_PublicKey pub;46,1195
  struct GNUNET_CRYPTO_PrivateKey pk;51,1273
  char *name;name56,1368
  void *ctx;ctx61,1441
  bool pub_initialized;66,1512
struct ResultCodeMessage80,1760
  struct GNUNET_MessageHeader header;85,1852
  uint32_t result_code GNUNET_PACKED;91,1979
struct LookupMessage98,2101
  struct GNUNET_MessageHeader header;104,2239
struct UpdateMessage113,2388
  struct GNUNET_MessageHeader header;118,2471
  uint16_t name_len GNUNET_PACKED;124,2626
  uint16_t end_of_list GNUNET_PACKED;129,2734
  uint16_t key_len GNUNET_PACKED;134,2801
  uint16_t reserved GNUNET_PACKED;139,2874
struct CreateRequestMessage150,3090
  struct GNUNET_MessageHeader header;155,3180
  uint16_t name_len GNUNET_PACKED;160,3309
  uint16_t key_len GNUNET_PACKED;165,3373
struct RenameMessage177,3595
  struct GNUNET_MessageHeader header;182,3678
  uint16_t old_name_len GNUNET_PACKED;187,3804
  uint16_t new_name_len GNUNET_PACKED;192,3931
struct DeleteMessage203,4157
  struct GNUNET_MessageHeader header;208,4240
  uint16_t name_len GNUNET_PACKED;213,4362
  uint16_t reserved GNUNET_PACKED;218,4428

src/service/identity/identity_api_lookup.c,450
#define LOG(31,1018
struct GNUNET_IDENTITY_EgoLookup37,1129
  struct GNUNET_MQ_Handle *mq;mq42,1204
  char *name;name47,1288
  GNUNET_IDENTITY_EgoCallback cb;52,1354
  void *cb_cls;cb_cls57,1424
check_identity_result_code 70,1664
handle_identity_result_code 85,1988
check_identity_update 102,2361
handle_identity_update 125,2864
mq_error_handler 168,4382
GNUNET_IDENTITY_ego_lookup 186,4767
GNUNET_IDENTITY_ego_lookup_cancel 236,6231

src/service/datastore/perf_datastore_api.c,939
#define TIMEOUT 44,1770
#define MAX_SIZE 49,1893
#define REPORT_ID 55,2038
#define PUT_10 60,2137
#define ITERATIONS 67,2331
#define QUOTA_PUTS 74,2534
static unsigned long long stored_bytes;80,2646
static unsigned long long stored_entries;85,2750
static unsigned long long stored_ops;92,2964
static struct GNUNET_TIME_Absolute start_time;97,3043
static const char *plugin_name;plugin_name102,3127
static struct GNUNET_DATASTORE_Handle *datastore;datastore107,3196
static int ok;112,3288
enum RunPhase117,3353
  RP_DONE 122,3424
  RP_PUT,127,3501
  RP_CUT,132,3573
  RP_PUT_QUOTA,138,3734
  RP_REPORT,143,3796
  RP_ERROR148,3869
struct CpsRunContext157,4067
  enum RunPhase phase;162,4134
  size_t size;167,4236
  unsigned int i;173,4358
  unsigned int j;180,4553
check_success 206,5274
remove_next 272,6834
delete_value 314,8022
run_continuation 350,9041
run_tests 535,15879
run 567,16689
main 609,17881

src/service/datastore/datastore.h,1583
#define DATASTORE_H28,981
struct ReserveMessage39,1165
  struct GNUNET_MessageHeader header;44,1253
  uint32_t entries GNUNET_PACKED;49,1337
  uint64_t amount GNUNET_PACKED;54,1417
struct StatusMessage64,1661
  struct GNUNET_MessageHeader header;69,1747
  int32_t status GNUNET_PACKED;74,1831
  struct GNUNET_TIME_AbsoluteNBO min_expiration;80,2005
struct ReleaseReserveMessage89,2205
  struct GNUNET_MessageHeader header;94,2308
  int32_t rid GNUNET_PACKED;99,2380
struct GetKeyMessage107,2492
  struct GNUNET_MessageHeader header;112,2580
  uint32_t type GNUNET_PACKED;117,2696
  uint64_t next_uid GNUNET_PACKED;122,2778
  uint32_t random GNUNET_PACKED;127,2862
  struct GNUNET_HashCode key;132,2926
struct GetMessage140,3039
  struct GNUNET_MessageHeader header;145,3120
  uint32_t type GNUNET_PACKED;150,3236
  uint64_t next_uid GNUNET_PACKED;155,3318
  uint32_t random GNUNET_PACKED;160,3402
struct GetZeroAnonymityMessage168,3524
  struct GNUNET_MessageHeader header;173,3632
  uint32_t type GNUNET_PACKED;178,3746
  uint64_t next_uid GNUNET_PACKED;183,3828
struct DataMessage191,3945
  struct GNUNET_MessageHeader header;199,4200
  uint32_t rid GNUNET_PACKED;204,4298
  uint32_t size GNUNET_PACKED;209,4381
  uint32_t type GNUNET_PACKED;214,4509
  uint32_t priority GNUNET_PACKED;219,4603
  uint32_t anonymity GNUNET_PACKED;224,4704
  uint32_t replication GNUNET_PACKED;229,4785
  uint32_t reserved GNUNET_PACKED;234,4856
  uint64_t uid;242,5089
  struct GNUNET_TIME_AbsoluteNBO expiration;247,5163
  struct GNUNET_HashCode key;252,5265

src/service/datastore/test_datastore_api_management.c,888
#define TIMEOUT 36,1254
#define ITERATIONS 42,1432
enum RunPhase44,1457
  RP_PUT,46,1473
  RP_GET,47,1483
  RP_DONE,48,1493
  RP_GET_FAIL49,1504
struct CpsRunContext53,1523
  struct GNUNET_HashCode key;55,1546
  int i;56,1576
  int found;57,1585
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg58,1598
  void *data;data59,1647
  enum RunPhase phase;60,1661
static struct GNUNET_DATASTORE_Handle *datastore;datastore64,1689
static struct GNUNET_TIME_Absolute now;66,1740
static int ok;68,1781
static const char *plugin_name;plugin_name70,1797
get_size 74,1845
get_data 81,1916
get_type 91,2029
get_priority 98,2075
get_anonymity 105,2129
get_expiration 112,2204
check_success 126,2395
check_value 141,2787
check_nothing 176,3763
run_continuation 197,4319
run_tests 274,6719
run 297,7289
ignore_payload_cb 338,8420
test_plugin 349,8563
main 390,9608

src/service/datastore/gnunet-service-datastore.c,2619
#define MAX_PENDING 37,1208
#define MAX_BF_SIZE 42,1281
#define MAX_EXPIRE_DELAY 48,1433
#define MIN_EXPIRE_DELAY 55,1635
static char *quota_stat_name;quota_stat_name61,1789
static struct GNUNET_SCHEDULER_Task *stat_timeout_task;stat_timeout_task66,1857
#define MAX_STAT_SYNC_LAG 72,1998
struct DatastorePlugin78,2062
  struct GNUNET_DATASTORE_PluginFunctions *api;api84,2183
  char *short_name;short_name89,2292
  char *lib_name;lib_name94,2391
  struct GNUNET_DATASTORE_PluginEnvironment env;100,2493
struct ReservationList107,2594
  struct ReservationList *next;next112,2659
  struct GNUNET_SERVICE_Client *client;client117,2743
  uint64_t amount;122,2835
  uint64_t entries;127,2906
  int32_t rid;132,2968
static struct DatastorePlugin *plugin;plugin139,3045
static struct ReservationList *reservations;reservations144,3147
static struct GNUNET_CONTAINER_BloomFilter *filter;filter149,3262
static char *plugin_name;plugin_name154,3346
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg159,3403
static struct GNUNET_STATISTICS_Handle *stats;stats164,3502
static unsigned long long cache_size;172,3777
static unsigned long long reserved;177,3870
static unsigned long long payload;183,3977
static struct GNUNET_SCHEDULER_Task *expired_kill_task;expired_kill_task189,4088
static struct GNUNET_TIME_Absolute min_expiration;197,4383
static unsigned long long quota;202,4484
static int do_drop;207,4569
static int refresh_bf;212,4649
static unsigned int last_sync;219,4803
static int stats_worked;224,4884
sync_stats 232,5005
static int cleaning_done;247,5403
static struct GNUNET_STATISTICS_GetHandle *stat_get;stat_get252,5473
static struct GNUNET_SERVICE_Handle *service;service257,5560
expired_processor 293,6715
delete_expired 357,9066
quota_processor 384,10005
manage_space 440,11945
transmit_status 464,12477
transmit_item 505,13973
handle_reserve 566,16071
handle_release_reserve 650,18658
check_data 705,20265
put_continuation 732,20820
check_put 775,22199
handle_put 793,22490
handle_get 850,24180
handle_get_key 879,25058
handle_get_replication 933,26820
handle_get_zero_anonymity 955,27513
remove_continuation 994,28751
check_remove 1035,29980
handle_remove 1053,30256
handle_drop 1081,31092
disk_utilization_change_cb 1102,31593
process_stat_in 1137,32604
load_plugin 1159,33166
unload_plugin 1196,34119
begin_service 1211,34510
add_key_to_bloomfilter 1229,34955
process_stat_done 1256,35602
stat_timeout 1313,36956
cleaning_task 1325,37146
client_connect_cb 1384,38347
client_disconnect_cb 1401,38732
run 1445,39690

src/service/datastore/test_datastore_api.c,1168
#define TIMEOUT 40,1247
#define ITERATIONS 42,1325
static struct GNUNET_DATASTORE_Handle *datastore;datastore47,1385
static struct GNUNET_TIME_Absolute now;49,1436
static int ok;54,1518
static const char *plugin_name;plugin_name59,1572
get_size 63,1620
get_data 70,1679
get_type 80,1780
get_priority 87,1830
get_anonymity 94,1884
get_expiration 101,1959
enum RunPhase113,2159
  RP_DONE 118,2230
  RP_PUT 123,2307
  RP_GET 124,2321
  RP_DEL 125,2335
  RP_DO_DEL 126,2349
  RP_DELVALIDATE 127,2366
  RP_RESERVE 128,2388
  RP_PUT_MULTIPLE 129,2406
  RP_PUT_MULTIPLE_NEXT 130,2429
  RP_GET_MULTIPLE 131,2457
  RP_GET_MULTIPLE_NEXT 132,2480
  RP_ERROR137,2569
struct CpsRunContext146,2767
  enum RunPhase phase;151,2834
  struct GNUNET_HashCode key;153,2858
  int i;154,2888
  int rid;155,2897
  void *data;data156,2908
  size_t size;157,2922
  uint64_t first_uid;159,2938
check_success 185,3647
get_reserved 208,4182
check_value 227,4649
delete_value 280,6303
check_nothing 306,7009
check_multiple 328,7594
run_continuation 370,8571
run_tests 557,15006
run 604,16146
duc_dummy 646,17273
test_plugin 657,17409
main 707,18714

src/service/datastore/datastore_api.c,2412
#define LOG(34,1192
#define DELAY_WARN_TIMEOUT 36,1269
#define INSANE_STATISTICS 41,1401
#define MAX_EXCESS_RESULTS 49,1661
struct StatusContext54,1742
  GNUNET_DATASTORE_ContinuationWithStatus cont;59,1820
  void *cont_cls;cont_cls64,1907
struct ResultContext71,1981
  GNUNET_DATASTORE_DatumProcessor proc;76,2055
  void *proc_cls;proc_cls81,2134
union QueueContext88,2200
  struct StatusContext sc;90,2221
  struct ResultContext rc;92,2249
struct GNUNET_DATASTORE_QueueEntry99,2321
  struct GNUNET_DATASTORE_QueueEntry *next;next104,2398
  struct GNUNET_DATASTORE_QueueEntry *prev;prev109,2483
  struct GNUNET_DATASTORE_Handle *h;h114,2575
  GNUNET_DATASTORE_ContinuationWithStatus cont;119,2682
  void *cont_cls;cont_cls124,2769
  union QueueContext qc;129,2832
  struct GNUNET_MQ_Envelope *env;env135,2942
  struct GNUNET_SCHEDULER_Task *delay_warn_task;delay_warn_task141,3072
  unsigned int priority;146,3162
  unsigned int max_queue;152,3288
  uint16_t response_type;157,3356
struct GNUNET_DATASTORE_Handle164,3431
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg169,3500
  struct GNUNET_MQ_Handle *mq;mq174,3612
  struct GNUNET_STATISTICS_Handle *stats;stats179,3684
  struct GNUNET_DATASTORE_QueueEntry *queue_head;queue_head184,3776
  struct GNUNET_DATASTORE_QueueEntry *queue_tail;queue_tail189,3876
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task194,3974
  struct GNUNET_TIME_Relative retry_time;200,4124
  unsigned int queue_size;205,4216
  unsigned int result_count;212,4411
  unsigned int skip_next_messages;217,4513
do_disconnect 237,4888
free_queue_entry 262,5428
delay_warning 284,5990
mq_error_handler 308,6788
GNUNET_DATASTORE_connect 371,8309
disconnect_after_drop 398,8947
disconnect_on_mq_error 416,9330
GNUNET_DATASTORE_disconnect 436,9827
make_queue_entry 533,12723
process_queue 615,14804
get_queue_head 658,15880
check_status 700,16652
handle_status 732,17252
check_data 776,18450
handle_data 797,18856
handle_data_end 846,20299
try_reconnect 886,21239
drop_status_cont 935,22835
GNUNET_DATASTORE_put 945,23058
GNUNET_DATASTORE_reserve 1031,26208
GNUNET_DATASTORE_release_reserve 1077,27641
GNUNET_DATASTORE_remove 1121,29107
GNUNET_DATASTORE_get_for_replication 1198,31776
GNUNET_DATASTORE_get_zero_anonymity 1238,33147
GNUNET_DATASTORE_get_key 1302,35653
GNUNET_DATASTORE_cancel 1373,37798

src/service/pt/test_gnunet_vpn.c,937
#define PORT 34,1157
#define TIMEOUT 36,1177
static int global_ret;42,1293
static struct GNUNET_VPN_Handle *vpn;vpn44,1317
static struct MHD_Daemon *mhd;mhd46,1356
static struct GNUNET_SCHEDULER_Task *mhd_task_id;mhd_task_id48,1388
static struct GNUNET_SCHEDULER_Task *curl_task_id;curl_task_id50,1439
static struct GNUNET_SCHEDULER_Task *timeout_task_id;timeout_task_id52,1491
static struct GNUNET_VPN_RedirectionRequest *rr;rr54,1546
static CURL *curl;curl56,1596
static CURLM *multi;multi58,1616
static char *url;url60,1638
static const char *dest_ip;dest_ip65,1708
static int dest_af;70,1779
static int src_af;75,1853
struct CBC78,1874
  char buf[buf80,1887
  size_t pos;81,1905
static struct CBC cbc;84,1923
copy_buffer 88,1962
mhd_ahc 101,2280
do_shutdown 136,3177
curl_main 177,3842
allocation_cb 258,6485
mhd_task 316,8257
do_timeout 325,8350
mhd_main 335,8487
run 367,9406
main 417,10612

src/service/pt/test_gns_vpn.c,1237
#define PORT 50,1962
#define TEST_DOMAIN 51,1980
#define TIMEOUT 53,2011
static int global_ret;58,2126
static struct GNUNET_NAMESTORE_Handle *namestore;namestore60,2150
static struct MHD_Daemon *mhd;mhd62,2201
static struct GNUNET_SCHEDULER_Task *mhd_task_id;mhd_task_id64,2233
static struct GNUNET_SCHEDULER_Task *curl_task_id;curl_task_id66,2284
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task68,2336
static struct GNUNET_IDENTITY_Handle *identity;identity70,2388
static struct GNUNET_NAMESTORE_QueueEntry *qe;qe72,2437
static CURL *curl;curl74,2485
static CURLM *multi;multi76,2505
static char *url;url78,2527
static struct GNUNET_PeerIdentity id;80,2546
static const char *dest_ip;dest_ip85,2636
static int dest_af;90,2707
static int src_af;95,2781
static int use_v6;97,2801
struct CBC100,2822
  char buf[buf102,2835
  size_t pos;103,2853
static struct CBC cbc;106,2871
copy_buffer 110,2910
mhd_ahc 126,3267
do_shutdown 160,4206
do_timeout 203,4936
curl_task 218,5108
curl_main 226,5187
start_curl 302,7438
commence_testing 353,9183
mhd_task 384,9896
mhd_main 393,9989
open_dev_null 439,11439
fork_and_exec 466,11927
identity_cb 555,14867
run 629,16978
main 797,21699

src/service/pt/gnunet-daemon-pt.c,2879
#define TIMEOUT 39,1350
#define MAX_DNS_SIZE 48,1680
#define MAX_OPEN_TUNNELS 53,1779
enum RequestGroup59,1875
  ANSWERS 64,1924
  AUTHORITY_RECORDS 69,1979
  ADDITIONAL_RECORDS 74,2045
  END 79,2112
struct ReplyContext86,2196
  struct GNUNET_DNS_RequestHandle *rh;rh91,2270
  struct GNUNET_DNSPARSER_Packet *dns;dns96,2362
  struct GNUNET_VPN_RedirectionRequest *rr;rr101,2460
  struct GNUNET_DNSPARSER_Record *rec;rec106,2578
  unsigned int offset;111,2694
  enum RequestGroup group;116,2764
struct CadetExit125,2953
  struct CadetExit *next;next130,3004
  struct CadetExit *prev;prev135,3063
  struct GNUNET_CADET_Channel *cadet_channel;cadet_channel141,3214
  struct GNUNET_TIME_Absolute expiration;146,3328
  struct RequestContext *receive_queue_head;receive_queue_head151,3436
  struct RequestContext *receive_queue_tail;receive_queue_tail156,3547
  struct GNUNET_PeerIdentity peer;161,3666
  unsigned int num_transmitted;166,3775
  unsigned int num_answered;171,3879
  /* unsigned */ int idle;176,3964
struct RequestContext183,4064
  struct RequestContext *next;next188,4129
  struct RequestContext *prev;prev193,4202
  struct CadetExit *exit;exit198,4290
  struct GNUNET_DNS_RequestHandle *rh;rh203,4375
  struct GNUNET_MQ_Envelope *env;env208,4479
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task213,4579
  uint16_t mlen;218,4699
  uint16_t dns_id;223,4792
static struct CadetExit *exit_head;exit_head232,4985
static struct CadetExit *exit_tail;exit_tail237,5061
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg242,5169
static struct GNUNET_VPN_Handle *vpn_handle;vpn_handle247,5257
static struct GNUNET_CADET_Handle *cadet_handle;cadet_handle252,5346
static struct GNUNET_STATISTICS_Handle *stats;stats257,5419
static struct GNUNET_DNS_Handle *dns_post_handle;dns_post_handle262,5527
static struct GNUNET_DNS_Handle *dns_pre_handle;dns_pre_handle267,5637
static struct GNUNET_DHT_Handle *dht;dht272,5724
static struct GNUNET_DHT_GetHandle *dht_get;dht_get277,5815
static int ipv4_pt;282,5894
static int ipv6_pt;287,5948
static int dns_channel;292,6011
static unsigned int dns_exit_available;299,6237
get_channel_weight 319,6721
choose_exit 354,8026
finish_request 404,9344
vpn_allocation_callback 461,11083
modify_address 514,12388
submit_request 555,13462
work_test 625,14866
dns_post_request_handler 661,15695
timeout_request 710,17072
dns_pre_request_handler 759,18808
struct DnsResponseMessage828,21017
  struct GNUNET_MessageHeader header;833,21128
  struct GNUNET_TUN_DnsHeader dns;838,21196
check_dns_response 854,21581
handle_dns_response 868,21879
abort_all_requests 909,23195
cleanup 932,23745
cadet_channel_end_cb 1001,25425
channel_idle_notify_cb 1038,26550
try_open_exit 1052,26836
handle_dht_result 1139,29940
run 1189,31640
main 1296,35129

src/service/seti/test_seti_api.c,747
static int ret;33,1095
static struct GNUNET_PeerIdentity local_id;35,1112
static struct GNUNET_HashCode app_id;37,1157
static struct GNUNET_SETI_Handle *set1;set139,1196
static struct GNUNET_SETI_Handle *set2;set241,1237
static struct GNUNET_SETI_ListenHandle *listen_handle;listen_handle43,1278
static const struct GNUNET_CONFIGURATION_Handle *config;config45,1334
static struct GNUNET_SCHEDULER_Task *tt;tt47,1392
static struct GNUNET_SETI_OperationHandle *oh1;oh149,1434
static struct GNUNET_SETI_OperationHandle *oh2;oh251,1483
result_cb_set1 55,1545
result_cb_set2 90,2261
listen_cb 128,3060
start 157,3901
init_set2 190,4865
init_set1 222,5704
do_shutdown 250,6355
timeout_fail 291,6963
run 310,7408
main 336,8125

src/service/seti/gnunet-service-seti.c,4780
#define INCOMING_CHANNEL_TIMEOUT 38,1290
enum IntersectionOperationPhase44,1415
  PHASE_INITIAL,49,1488
  PHASE_COUNT_SENT,55,1626
  PHASE_BF_EXCHANGE,62,1814
  PHASE_MUST_SEND_DONE,68,1990
  PHASE_DONE_RECEIVED,74,2146
  PHASE_FINISHED80,2264
struct ElementEntry109,2907
  struct GNUNET_SETI_Element element;115,3043
  struct GNUNET_HashCode element_hash;121,3208
  unsigned int generation_added;126,3308
  int remote;132,3456
struct ClientState146,3635
  struct Set *set;set151,3725
  struct Listener *listener;listener156,3819
  struct GNUNET_SERVICE_Client *client;client161,3881
  struct GNUNET_MQ_Handle *mq;mq166,3954
struct Operation173,4052
  struct GNUNET_PeerIdentity peer;179,4203
  struct GNUNET_HashCode my_xor;186,4397
  struct GNUNET_HashCode other_xor;193,4590
  struct Operation *next;next198,4703
  struct Operation *prev;prev203,4806
  struct GNUNET_CADET_Channel *channel;channel208,4871
  struct Listener *listener;listener213,4958
  struct GNUNET_MQ_Handle *mq;mq218,5036
  struct GNUNET_MessageHeader *context_msg;context_msg223,5115
  struct Set *set;set229,5269
  struct GNUNET_CONTAINER_BloomFilter *remote_bf;remote_bf234,5334
  struct GNUNET_CONTAINER_BloomFilter *local_bf;local_bf239,5427
  struct GNUNET_CONTAINER_MultiHashMap *my_elements;my_elements245,5598
  struct GNUNET_CONTAINER_MultiHashMapIterator *full_result_iter;full_result_iter250,5737
  char *bf_data;bf_data256,5924
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task262,6065
  uint32_t bf_data_offset;267,6169
  uint32_t my_element_count;273,6318
  uint32_t bf_data_size;278,6404
  uint32_t bf_bits_per_element;283,6471
  uint32_t salt;289,6632
  enum IntersectionOperationPhase phase;294,6699
  unsigned int generation_created;299,6812
  int client_done_sent;304,6906
  int channel_death_expected;311,7095
  uint32_t remote_element_count;316,7170
  uint32_t client_request_id;321,7281
  int return_intersection;326,7396
  uint32_t suggest_id;333,7622
struct SetContent342,7774
  struct GNUNET_CONTAINER_MultiHashMap *elements;elements347,7871
  unsigned int refcount;352,7976
  unsigned int latest_generation;357,8036
  int iterator_count;362,8129
struct Set369,8226
  struct Set *next;next374,8328
  struct Set *prev;prev379,8405
  struct ClientState *cs;cs385,8548
  struct SetContent *content;content391,8668
  uint32_t current_set_element_count;397,8796
  struct Operation *ops_head;ops_head402,8899
  struct Operation *ops_tail;ops_tail407,8994
  unsigned int current_generation;413,9164
struct Listener422,9309
  struct Listener *next;next427,9388
  struct Listener *prev;prev432,9475
  struct Operation *op_head;op_head439,9704
  struct Operation *op_tail;op_tail446,9937
  struct ClientState *cs;cs452,10056
  struct GNUNET_CADET_Port *open_port;open_port457,10141
  struct GNUNET_HashCode app_id;463,10314
static struct GNUNET_CADET_Handle *cadet;cadet472,10444
static struct GNUNET_STATISTICS_Handle *_GSS_statistics;_GSS_statistics477,10517
static struct Listener *listener_head;listener_head482,10630
static struct Listener *listener_tail;listener_tail487,10725
static unsigned int num_clients;492,10802
static int in_shutdown;498,10949
static uint32_t suggest_id;506,11203
send_client_removed_element 517,11447
_GSS_is_element_of_operation 563,12873
filtered_map_initialization 579,13333
iterator_bf_reduce 650,15916
iterator_bf_create 705,17807
_GSS_operation_destroy 739,18940
incoming_destroy 808,20813
send_client_done_and_destroy 838,21508
_GSS_operation_destroy2 867,22421
fail_intersection_operation 911,23451
send_bloomfilter 945,24486
finished_local_operations 1049,28359
send_p2p_done 1068,28834
send_remaining_elements 1093,29517
initialize_map_unfiltered 1169,31749
send_element_count 1201,32904
begin_bf_exchange 1223,33499
handle_intersection_p2p_element_info 1241,33976
process_bf 1274,34958
check_intersection_p2p_bf 1356,37576
handle_intersection_p2p_bf 1373,37888
filter_all 1473,40833
handle_intersection_p2p_done 1506,41850
get_incoming 1567,43864
client_connect_cb 1589,44431
destroy_elements_iterator 1612,44931
client_disconnect_cb 1631,45345
check_incoming_msg 1705,47601
handle_incoming_msg 1753,49157
handle_client_create_set 1806,51018
incoming_timeout_cb 1842,52104
channel_new_cb 1870,52959
channel_end_cb 1913,54565
channel_window_cb 1938,55367
handle_client_listen 1953,55730
handle_client_reject 2014,58087
check_client_set_add 2046,59084
handle_client_set_add 2062,59516
advance_generation 2126,61455
check_client_evaluate 2148,62043
handle_client_evaluate 2166,62563
handle_client_cancel 2274,66690
handle_client_accept 2329,68171
shutdown_task 2425,71388
run 2453,72023

src/service/seti/seti.h,1681
#define SETI_H27,958
struct GNUNET_SETI_CreateMessage39,1195
  struct GNUNET_MessageHeader header;44,1286
struct GNUNET_SETI_ListenMessage53,1507
  struct GNUNET_MessageHeader header;58,1598
  uint32_t operation GNUNET_PACKED;63,1713
  struct GNUNET_HashCode app_id;68,1782
struct GNUNET_SETI_AcceptMessage76,1940
  struct GNUNET_MessageHeader header;81,2031
  uint32_t accept_reject_id GNUNET_PACKED;86,2133
  uint32_t request_id GNUNET_PACKED;91,2228
  uint32_t return_intersection;97,2376
struct GNUNET_SETI_RejectMessage106,2534
  struct GNUNET_MessageHeader header;111,2625
  uint32_t accept_reject_id GNUNET_PACKED;116,2727
struct GNUNET_SETI_RequestMessage123,2834
  struct GNUNET_MessageHeader header;128,2928
  uint32_t accept_id GNUNET_PACKED;134,3055
  struct GNUNET_PeerIdentity peer_id;139,3142
struct GNUNET_SETI_EvaluateMessage151,3499
  struct GNUNET_MessageHeader header;156,3594
  uint32_t request_id GNUNET_PACKED;162,3751
  struct GNUNET_PeerIdentity target_peer;167,3842
  struct GNUNET_HashCode app_id;172,3917
  uint32_t return_intersection;178,4061
struct GNUNET_SETI_ResultMessage191,4425
  struct GNUNET_MessageHeader header;196,4516
  uint64_t current_size;201,4590
  uint32_t request_id GNUNET_PACKED;206,4658
  uint16_t result_status GNUNET_PACKED;212,4795
  uint16_t element_type GNUNET_PACKED;217,4906
struct GNUNET_SETI_ElementMessage226,5063
  struct GNUNET_MessageHeader header;231,5153
  uint16_t element_type GNUNET_PACKED;236,5247
  uint16_t reserved GNUNET_PACKED;241,5332
struct GNUNET_SETI_CancelMessage251,5490
  struct GNUNET_MessageHeader header;256,5581
  uint32_t request_id GNUNET_PACKED;261,5674

src/service/seti/seti_api.c,1913
#define LOG(33,1063
struct GNUNET_SETI_Handle39,1171
  struct GNUNET_MQ_Handle *mq;mq44,1245
  struct GNUNET_SETI_OperationHandle *ops_head;ops_head49,1332
  struct GNUNET_SETI_OperationHandle *ops_tail;ops_tail54,1436
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg59,1553
  int destroy_requested;66,1810
  int invalid;71,1901
  uint16_t iteration_id;77,2041
struct GNUNET_SETI_Request85,2137
  uint32_t accept_id;91,2265
  int accepted;97,2372
struct GNUNET_SETI_OperationHandle105,2498
  GNUNET_SETI_ResultIterator result_cb;111,2615
  void *result_cls;result_cls116,2699
  struct GNUNET_SETI_Handle *set;set122,2826
  struct GNUNET_MQ_Envelope *conclude_mqm;conclude_mqm128,2965
  uint32_t *request_id_addr;request_id_addr134,3151
  struct GNUNET_SETI_OperationHandle *prev;prev139,3233
  struct GNUNET_SETI_OperationHandle *next;next144,3330
  uint32_t request_id;149,3445
  int return_intersection;155,3574
struct GNUNET_SETI_ListenHandle162,3654
  struct GNUNET_MQ_Handle*mq;mq167,3735
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg174,3905
  GNUNET_SETI_ListenCallback listen_cb;180,4034
  void *listen_cls;listen_cls185,4118
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task190,4203
  struct GNUNET_HashCode app_id;195,4299
  struct GNUNET_TIME_Relative reconnect_backoff;200,4401
check_result 213,4626
handle_result 228,4917
set_operation_destroy 305,7287
GNUNET_SETI_operation_cancel 335,8125
handle_client_set_error 369,9037
GNUNET_SETI_create 399,9832
GNUNET_SETI_add_element 447,11422
GNUNET_SETI_destroy 488,12567
GNUNET_SETI_prepare 513,13244
check_request 570,14909
handle_request 595,15487
handle_client_listener_error 638,16949
listen_connect 661,17682
GNUNET_SETI_listen 702,19138
GNUNET_SETI_listen_cancel 734,19922
GNUNET_SETI_accept 754,20353
GNUNET_SETI_commit 810,22201
GNUNET_SETI_element_hash 849,23330

src/service/seti/gnunet-service-seti_protocol.h,885
#define SETI_PROTOCOL_H27,987
struct OperationRequestMessage35,1092
  struct GNUNET_MessageHeader header;40,1195
  uint32_t element_count GNUNET_PACKED;45,1286
  struct GNUNET_HashCode app_idX;50,1392
struct IntersectionElementInfoMessage61,1653
  struct GNUNET_MessageHeader header;66,1771
  uint32_t sender_element_count GNUNET_PACKED;71,1863
struct BFMessage78,1992
  struct GNUNET_MessageHeader header;83,2079
  uint32_t sender_element_count GNUNET_PACKED;88,2187
  struct GNUNET_HashCode element_xor_hash;94,2346
  uint32_t sender_mutator GNUNET_PACKED;99,2443
  uint32_t bloomfilter_total_length GNUNET_PACKED;104,2540
  uint32_t bits_per_element GNUNET_PACKED;109,2668
struct IntersectionDoneMessage123,2995
  struct GNUNET_MessageHeader header;128,3098
  uint32_t final_element_count GNUNET_PACKED;133,3196
  struct GNUNET_HashCode element_xor_hash;138,3318

src/service/vpn/vpn.h,947
#define VPN_H27,935
struct RedirectToIpRequestMessage38,1177
  struct GNUNET_MessageHeader header;43,1285
  uint32_t reserved GNUNET_PACKED;48,1354
  struct GNUNET_TIME_AbsoluteNBO expiration_time;53,1462
  int32_t result_af GNUNET_PACKED;58,1611
  int32_t addr_af GNUNET_PACKED;63,1742
  uint64_t request_id GNUNET_PACKED;69,1874
struct RedirectToServiceRequestMessage80,2158
  struct GNUNET_MessageHeader header;85,2276
  uint32_t reserved GNUNET_PACKED;90,2345
  struct GNUNET_TIME_AbsoluteNBO expiration_time;95,2453
  int32_t protocol GNUNET_PACKED;100,2567
  int32_t result_af GNUNET_PACKED;105,2700
  struct GNUNET_PeerIdentity target;110,2787
  struct GNUNET_HashCode service_descriptor;115,2886
  uint64_t request_id GNUNET_PACKED;121,3030
struct RedirectToIpResponseMessage129,3204
  struct GNUNET_MessageHeader header;134,3305
  int32_t result_af GNUNET_PACKED;140,3490
  uint64_t request_id GNUNET_PACKED;145,3589

src/service/vpn/gnunet-service-vpn.c,3728
#define MAX_MESSAGE_QUEUE_SIZE 49,1664
struct DestinationChannel67,2021
  struct DestinationChannel *next;next72,2081
  struct DestinationChannel *prev;prev77,2149
  struct DestinationEntry *destination;destination82,2272
  uint16_t destination_port;87,2379
struct DestinationEntry95,2540
  struct GNUNET_HashCode key;101,2680
  struct DestinationChannel *dt_head;dt_head106,2786
  struct DestinationChannel *dt_tail;dt_tail111,2900
  struct GNUNET_CONTAINER_HeapNode *heap_node;heap_node116,3002
  int is_service;122,3170
      struct GNUNET_HashCode service_descriptor;134,3385
      struct GNUNET_PeerIdentity target;139,3491
    } service_destination;140,3532
      int af;147,3649
        struct in_addr v4;157,3844
        struct in6_addr v6;162,3934
      } ip;163,3962
    } exit_destination;164,3974
  } details;165,3998
struct ChannelMessageQueueEntry172,4081
  struct ChannelMessageQueueEntry *next;next177,4162
  struct ChannelMessageQueueEntry *prev;prev182,4251
  size_t len;187,4337
  const void *msg;msg192,4427
struct ChannelState199,4502
  struct GNUNET_CADET_Channel *channel;channel205,4627
  struct GNUNET_REGEX_Search *search;search210,4725
  struct GNUNET_CONTAINER_HeapNode *heap_node;heap_node216,4883
  struct ChannelMessageQueueEntry *tmq_head;tmq_head221,5001
  struct ChannelMessageQueueEntry *tmq_tail;tmq_tail226,5117
  struct DestinationEntry destination;234,5356
  int af;239,5478
  int is_established;245,5616
  unsigned int tmq_length;250,5710
  uint8_t protocol;255,5794
    struct in_addr v4;265,5955
    struct in6_addr v6;270,6029
  } source_ip;271,6053
    struct in_addr v4;282,6277
    struct in6_addr v6;287,6351
  } destination_ip;288,6375
  uint16_t source_port;293,6477
  uint16_t destination_port;298,6588
static int global_ret;305,6660
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg310,6717
static struct GNUNET_CADET_Handle *cadet_handle;cadet_handle315,6812
static struct GNUNET_CONTAINER_MultiHashMap *destination_map;destination_map321,6978
static struct GNUNET_CONTAINER_Heap *destination_heap;destination_heap326,7109
static struct GNUNET_CONTAINER_MultiHashMap *channel_map;channel_map332,7306
static struct GNUNET_CONTAINER_Heap *channel_heap;channel_heap338,7478
static struct GNUNET_STATISTICS_Handle *stats;stats343,7553
static struct GNUNET_HELPER_Handle *helper_handle;helper_handle348,7670
static char *vpn_argv[vpn_argv353,7762
static unsigned long long ipv6prefix;358,7848
static unsigned long long max_destination_mappings;364,7982
static unsigned long long max_channel_mappings;370,8127
get_destination_key_from_ip 382,8459
get_channel_key_from_ips 416,9383
send_client_reply 468,10986
free_channel_state 509,11853
send_to_channel 566,13486
print_channel_destination 597,14433
channel_cleaner 629,15242
make_up_icmpv4_payload 652,15963
make_up_icmpv6_payload 678,16896
check_icmp_back 703,17783
handle_icmp_back 729,18307
check_udp_back 1079,30950
handle_udp_back 1105,31474
check_tcp_back 1229,36563
handle_tcp_back 1255,37127
create_channel 1363,41601
handle_regex_result 1403,43156
create_channel_to_destination 1455,44925
expire_channel 1551,48060
route_packet 1578,49023
message_token 2272,72078
allocate_v4_address 2387,75702
allocate_v6_address 2435,77141
free_destination_entry 2488,78598
expire_destination 2522,79573
allocate_response_ip 2549,80477
check_client_redirect_to_ip 2602,81554
handle_client_redirect_to_ip 2645,82442
handle_client_redirect_to_service 2723,85076
cleanup_destination 2802,87666
cleanup_channel 2820,88049
cleanup 2838,88485
client_connect_cb 2897,90004
client_disconnect_cb 2913,90364
run 2929,90705

src/service/vpn/vpn_api.c,1276
struct GNUNET_VPN_Handle34,1054
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg39,1120
  struct GNUNET_MQ_Handle *mq;mq44,1214
  struct GNUNET_VPN_RedirectionRequest *rr_head;rr_head49,1308
  struct GNUNET_VPN_RedirectionRequest *rr_tail;rr_tail54,1420
  struct GNUNET_SCHEDULER_Task *rt;rt59,1519
  struct GNUNET_TIME_Relative backoff;64,1620
  uint64_t request_id_gen;69,1735
struct GNUNET_VPN_RedirectionRequest76,1813
  struct GNUNET_VPN_RedirectionRequest *next;next81,1885
  struct GNUNET_VPN_RedirectionRequest *prev;prev86,1965
  struct GNUNET_VPN_Handle *vh;vh91,2056
  const void *addr;addr97,2216
  GNUNET_VPN_AllocationCallback cb;102,2303
  void *cb_cls;cb_cls107,2376
  struct GNUNET_PeerIdentity peer;112,2478
  struct GNUNET_HashCode serv;117,2576
  struct GNUNET_TIME_Absolute expiration_time;122,2681
  uint64_t request_id;127,2801
  int result_af;132,2881
  int addr_af;137,2965
  uint8_t protocol;142,3050
check_use_ip 164,3476
handle_use_ip 207,4226
send_request 238,4951
mq_error_handler 302,6777
connect_task 317,7057
reconnect 348,7928
GNUNET_VPN_cancel_request 375,8867
GNUNET_VPN_redirect_to_peer 388,9173
GNUNET_VPN_redirect_to_ip 439,11305
GNUNET_VPN_connect 490,12549
GNUNET_VPN_disconnect 512,12895

src/service/vpn/gnunet-helper-vpn.c,277
#define DEBUG 55,1618
#define MAX_SIZE 60,1713
struct in6_ifreq67,1860
  struct in6_addr ifr6_addr;69,1879
  uint32_t ifr6_prefixlen;70,1908
  unsigned int ifr6_ifindex;71,1935
init_tun 85,2208
set_address6 146,3361
set_address4 265,5837
run 385,8219
main 619,14412

src/service/fs/test_fs_search_persistence.c,643
#define FILESIZE 34,1125
#define TIMEOUT 39,1214
#define LIFETIME 44,1342
static struct GNUNET_TIME_Absolute start;47,1422
static struct GNUNET_FS_Handle *fs;fs49,1465
static struct GNUNET_FS_SearchContext *search;search51,1502
static struct GNUNET_FS_PublishContext *publish;publish53,1550
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg55,1600
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task57,1655
static int err;59,1707
abort_error 63,1737
abort_publish_task 83,2031
abort_search_task 99,2274
restart_fs_task 114,2492
consider_restart 130,2870
progress_cb 146,3187
run 263,6799
main 308,8382

src/service/fs/fs_tree.h,202
#define GNUNET_FS_TREE_H33,1135
typedef void (*GNUNET_FS_TreeBlockProcessor)GNUNET_FS_TreeBlockProcessor97,3049
typedef void (*GNUNET_FS_TreeProgressCallback)GNUNET_FS_TreeProgressCallback116,3849

src/service/fs/fs_download.c,1642
is_recursive_download 38,1153
compute_disk_offset 68,2330
GNUNET_FS_download_make_status_ 104,3427
struct ProcessResultClosure135,4625
  struct GNUNET_HashCode query;140,4686
  const void *data;data145,4763
  struct GNUNET_FS_DownloadContext *dc;dc150,4823
  struct GNUNET_TIME_Absolute last_transmission;155,4920
  size_t size;160,5012
  enum GNUNET_BLOCK_Type type;165,5059
  int do_store;170,5165
  uint32_t respect_offered;175,5248
  uint32_t num_transmissions;180,5331
encrypt_existing_match 213,6349
full_recursive_download 296,8950
check_completed 376,11414
try_match_block 432,13061
match_full_data 602,19004
propagate_up 634,19890
try_top_down_reconstruction 663,20577
retry_entry 747,23145
schedule_block_download 778,24088
#define GNUNET_FS_URI_CHK_PREFIX 837,25638
trigger_recursive_download 851,26154
GNUNET_FS_free_download_request_ 997,30689
process_result_with_request 1009,30958
check_put 1291,40348
handle_put 1306,40617
download_mq_error_handler 1340,41890
do_reconnect 1361,42348
try_reconnect 1397,43395
activate_fs_download 1427,44343
deactivate_fs_download 1448,44890
create_download_request 1484,46296
reconstruct_cont 1560,48831
get_next_block 1588,49501
reconstruct_cb 1615,50259
fh_reader 1767,55395
GNUNET_FS_download_start_task_ 1799,56104
GNUNET_FS_download_signal_suspend_ 1952,61471
create_download_context 2028,64032
GNUNET_FS_download_start 2099,66748
GNUNET_FS_download_start_from_search 2136,68122
GNUNET_FS_download_start_downloading_ 2183,69580
GNUNET_FS_download_suspend 2214,70519
GNUNET_FS_download_resume 2226,70707
GNUNET_FS_download_stop 2253,71529

src/service/fs/gnunet-service-fs_pr.h,1239
#define GNUNET_SERVICE_FS_PR_H27,955
enum GSF_PendingRequestOptions35,1079
  GSF_PRO_DEFAULTS 40,1163
  GSF_PRO_LOCAL_ONLY 45,1245
  GSF_PRO_FORWARD_ONLY 50,1333
  GSF_PRO_REQUEST_NEVER_EXPIRES 55,1426
  GSF_PRO_BLOOMFILTER_FULL_REFRESH 60,1548
  GSF_PRO_PRIORITY_UNLIMITED 65,1650
  GSF_PRO_LOCAL_REQUEST 70,1743
struct GSF_PendingRequestData81,2051
  struct GNUNET_HashCode query;86,2137
  const struct GNUNET_PeerIdentity *target;target92,2300
  struct GSF_PendingRequestPlanBijection *pr_head;pr_head97,2422
  struct GSF_PendingRequestPlanBijection *pr_tail;pr_tail102,2551
  struct GNUNET_TIME_Absolute ttl;107,2649
  struct GNUNET_TIME_Absolute start_time;112,2738
  uint32_t anonymity_level;117,2823
  uint32_t priority;122,2916
  uint32_t original_priority;127,3007
  uint32_t num_transmissions;135,3278
  uint32_t respect_offered;143,3558
  enum GSF_PendingRequestOptions options;148,3629
  enum GNUNET_BLOCK_Type type;153,3718
  unsigned int results_found;158,3824
  int has_started;164,3969
(*GSF_PendingRequestReplyHandler)GSF_PendingRequestReplyHandler187,4844
(*GSF_PendingRequestIterator)GSF_PendingRequestIterator319,9187
(*GSF_LocalLookupContinuation)GSF_LocalLookupContinuation376,10616

src/service/fs/fs_publish_ublock.h,118
#define FS_PUBLISH_UBLOCK_H29,1023
typedef void (*GNUNET_FS_UBlockContinuation)GNUNET_FS_UBlockContinuation68,2017

src/service/fs/gnunet-service-fs_push.c,1612
#define MAX_MIGRATION_QUEUE 37,1227
#define MIGRATION_LIST_SIZE 43,1380
#define MIN_MIGRATION_CONTENT_LIFETIME 52,1788
struct MigrationReadyBlock59,1999
  struct MigrationReadyBlock *next;next64,2075
  struct MigrationReadyBlock *prev;prev69,2159
  struct GNUNET_HashCode query;74,2234
  struct GNUNET_TIME_Absolute expiration;79,2313
  GNUNET_PEER_Id target_list[target_list85,2445
  size_t size;90,2533
  unsigned int used_targets;95,2599
  enum GNUNET_BLOCK_Type type;100,2665
struct MigrationReadyPeer107,2766
  struct MigrationReadyPeer *next;next112,2841
  struct MigrationReadyPeer *prev;prev117,2924
  struct GSF_ConnectedPeer *peer;peer122,2993
  struct GNUNET_MQ_Envelope *env;env127,3087
static struct MigrationReadyBlock *mig_head;mig_head134,3189
static struct MigrationReadyBlock *mig_tail;mig_tail139,3298
static struct MigrationReadyPeer *peer_head;peer_head144,3385
static struct MigrationReadyPeer *peer_tail;peer_tail149,3472
static struct GNUNET_DATASTORE_QueueEntry *mig_qe;mig_qe154,3575
static struct GNUNET_SCHEDULER_Task *mig_task;mig_task159,3685
static struct GNUNET_TIME_Relative min_migration_delay;165,3846
static unsigned int mig_size;170,3966
static int enabled;175,4032
static int value_found;180,4103
delete_migration_block 189,4218
transmit_content 218,4859
count_targets 274,6296
score_content 294,6679
find_content 329,7625
consider_gathering 402,9324
process_migration_content 453,11018
gather_migration_blocks 539,13884
GSF_push_start_ 567,14687
GSF_push_stop_ 603,15538
GSF_push_init_ 625,15990
GSF_push_done_ 654,16791

src/service/fs/test_fs_start_stop.c,48
progress_cb 33,1063
run 40,1164
main 54,1507

src/service/fs/fs_publish_ksk.c,708
struct GNUNET_FS_PublishKskContext42,1267
  struct GNUNET_FS_Uri *ksk_uri;ksk_uri47,1338
  struct GNUNET_FS_Uri *uri;uri52,1405
  struct GNUNET_FS_MetaData *meta;meta57,1469
  struct GNUNET_FS_Handle *h;h62,1541
  struct GNUNET_FS_PublishUblockContext *uc;uc67,1633
  struct GNUNET_DATASTORE_Handle *dsh;dsh72,1753
  struct GNUNET_SCHEDULER_Task *ksk_task;ksk_task77,1824
  GNUNET_FS_PublishContinuation cont;82,1918
  void *cont_cls;cont_cls87,1992
  struct GNUNET_FS_BlockOptions bo;92,2060
  enum GNUNET_FS_PublishOptions options;97,2130
  unsigned int i;102,2231
kb_put_cont 125,2713
publish_ksk_cont 144,3143
GNUNET_FS_publish_ksk 188,4623
GNUNET_FS_publish_ksk_cancel 231,5914

src/service/fs/test_fs_list_indexed.c,428
#define FILESIZE 38,1191
#define TIMEOUT 43,1293
#define LIFETIME 48,1421
static struct GNUNET_TIME_Absolute start;51,1501
static struct GNUNET_FS_Handle *fs;fs53,1544
static struct GNUNET_FS_PublishContext *publish;publish55,1581
static char *fn1;fn157,1631
static char *fn2;fn259,1650
static int err;61,1669
abort_publish_task 65,1699
list_indexed_task 79,1948
progress_cb 86,2054
run 177,5209
main 255,8299

src/service/fs/fs_namespace.c,1775
struct NamespaceUpdateNode41,1232
  char *id;id46,1304
  char *update;update51,1371
  struct GNUNET_FS_MetaData *md;md56,1430
  struct GNUNET_FS_Uri *uri;uri61,1517
  unsigned int nug;67,1643
  unsigned int tree_id;72,1729
struct GNUNET_FS_UpdateInformationGraph79,1815
  struct GNUNET_FS_Handle *h;h84,1908
  struct NamespaceUpdateNode **update_nodes;update_nodes89,2009
  struct GNUNET_CRYPTO_EcdsaPrivateKey ns;94,2103
  struct GNUNET_CONTAINER_MultiHashMap *update_map;update_map100,2259
  unsigned int update_node_count;105,2361
  unsigned int rc;110,2432
  unsigned int nug_gen;115,2503
get_update_information_directory 128,2798
free_update_information_graph 163,3708
write_update_information_graph 190,4397
read_update_information_graph 249,6177
struct GNUNET_FS_PublishSksContext344,8553
  struct GNUNET_FS_Uri *uri;uri349,8646
  struct NamespaceUpdateNode *nsn;nsn355,8792
  struct GNUNET_CRYPTO_EcdsaPrivateKey ns;360,8876
  struct GNUNET_DATASTORE_Handle *dsh;dsh365,8962
  struct GNUNET_FS_Handle *h;h370,9033
  GNUNET_FS_PublishContinuation cont;375,9115
  void *cont_cls;cont_cls380,9189
  struct GNUNET_FS_PublishUblockContext *uc;uc385,9266
sks_publish_cont 397,9541
GNUNET_FS_publish_sks 428,10417
GNUNET_FS_publish_sks_cancel 491,12586
struct ProcessUpdateClosure519,13192
  GNUNET_FS_IdentifierProcessor ip;524,13271
  void *ip_cls;ip_cls529,13343
process_update_node 544,13707
struct FindTreeClosure557,14000
  struct GNUNET_FS_UpdateInformationGraph *uig;uig562,14067
  struct NamespaceUpdateNode **tree_array;tree_array567,14162
  unsigned int tree_array_size;572,14244
  unsigned int nug;577,14324
  unsigned int id;582,14421
find_trees 607,15260
GNUNET_FS_namespace_list_updateable 667,17608

src/service/fs/test_fs.c,372
#define DEBUG_VERBOSE 31,1013
#define CHECK(33,1046
makeName 37,1182
static enum GNUNET_FSUI_EventType lastEvent;51,1573
static struct GNUNET_MetaData *search_meta;search_meta53,1619
static struct GNUNET_ECRS_URI *search_uri;search_uri55,1664
static struct GNUNET_FSUI_Context *ctx;ctx57,1708
eventCallback 60,1763
#define START_DAEMON 106,2713
main 109,2741

src/service/fs/test_fs_directory.c,243
#define ABORT(33,1067
struct PCLS36,1176
  struct GNUNET_FS_Uri **uri;uri38,1190
  struct GNUNET_FS_MetaData **md;md39,1220
  unsigned int pos;40,1254
  unsigned int max;41,1274
processor 45,1310
testDirectory 68,1865
main 166,5200

src/service/fs/test_fs_search_with_and.c,588
#define FILESIZE 34,1148
#define NUM_FILES 39,1211
#define TIMEOUT 45,1300
#define LIFETIME 50,1428
static struct GNUNET_TIME_Absolute start;53,1508
static struct GNUNET_FS_Handle *fs;fs55,1551
static struct GNUNET_FS_SearchContext *search;search57,1588
static struct GNUNET_FS_PublishContext *publish;publish59,1636
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task61,1686
static int err;63,1738
static int processed_files;65,1755
abort_publish_task 69,1797
abort_error 85,2040
abort_search_task 105,2334
progress_cb 116,2469
run 210,5474
main 262,7149

src/service/fs/test_fs_uri.c,101
testKeyword 32,1009
testLocation 77,1963
testNamespace 151,3914
testFile 232,5761
main 313,8231

src/service/fs/test_fs_publish.c,401
#define FILESIZE 34,1152
#define TIMEOUT 39,1254
#define LIFETIME 44,1382
static struct GNUNET_TIME_Absolute start;47,1462
static struct GNUNET_FS_Handle *fs;fs49,1505
static struct GNUNET_FS_PublishContext *publish;publish51,1542
static char *fn1;fn153,1592
static char *fn2;fn255,1611
static int err;57,1630
abort_publish_task 61,1660
progress_cb 75,1911
run 163,5059
main 241,8023

src/service/fs/gnunet-service-fs_cadet_client.c,1617
#define CLIENT_RETRY_TIMEOUT 44,1391
struct GSF_CadetRequest57,1621
  struct GSF_CadetRequest *next;next62,1669
  struct GSF_CadetRequest *prev;prev67,1725
  struct CadetHandle *mh;mh72,1821
  GSF_CadetReplyProcessor proc;77,1899
  void *proc_cls;proc_cls82,1969
  struct GNUNET_HashCode query;87,2042
  enum GNUNET_BLOCK_Type type;92,2120
  int was_transmitted;98,2299
struct CadetHandle105,2374
  struct GSF_CadetRequest *pending_head;pending_head110,2459
  struct GSF_CadetRequest *pending_tail;pending_tail115,2565
  struct GNUNET_CONTAINER_MultiHashMap *waiting_map;waiting_map121,2695
  struct GNUNET_CADET_Channel *channel;channel126,2793
  struct GNUNET_PeerIdentity target;131,2885
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task138,3078
  struct GNUNET_SCHEDULER_Task *reset_task;reset_task145,3288
struct GNUNET_CADET_Handle *cadet_handle;cadet_handle152,3394
struct GNUNET_CONTAINER_MultiPeerMap *cadet_map;cadet_map158,3537
move_to_pending 183,4125
check_reply 206,4785
reset_cadet_async 229,5206
struct HandleReplyClosure240,5439
  const void *data;data245,5499
  struct GNUNET_TIME_Absolute expiration;250,5568
  size_t data_size;255,5656
  enum GNUNET_BLOCK_Type type;260,5713
  int found;265,5792
process_reply 279,6122
free_waiting_entry 307,6854
handle_reply 324,7225
disconnect_cb 384,9209
window_change_cb 430,11083
reset_cadet 450,11608
cadet_timeout 491,13040
reset_cadet_task 513,13525
transmit_pending 528,13751
get_cadet 567,15133
GSF_cadet_query 630,17323
GSF_cadet_query_cancel 663,18208
GSF_cadet_release_clients 703,19500

src/service/fs/test_fs_search.c,524
#define FILESIZE 34,1090
#define TIMEOUT 39,1179
#define LIFETIME 44,1307
static struct GNUNET_TIME_Absolute start;47,1387
static struct GNUNET_FS_Handle *fs;fs49,1430
static struct GNUNET_FS_SearchContext *search;search51,1467
static struct GNUNET_FS_PublishContext *publish;publish53,1515
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task55,1565
static int err;57,1617
abort_publish_task 61,1647
abort_error 77,1890
abort_search_task 97,2184
progress_cb 108,2319
run 198,5217
main 242,6772

src/service/fs/fs_tree.c,923
struct GNUNET_FS_TreeEncoder35,1120
  struct GNUNET_FS_Handle *h;h40,1187
  void *cls;cls45,1262
  GNUNET_FS_TreeBlockProcessor proc;50,1331
  GNUNET_FS_TreeProgressCallback progress;55,1430
  GNUNET_FS_DataReader reader;60,1531
  GNUNET_SCHEDULER_TaskCallback cont;65,1630
  char *emsg;emsg70,1732
  struct GNUNET_FS_Uri *uri;uri75,1808
  uint64_t size;80,1874
  uint64_t publish_offset;85,1925
  unsigned int current_depth;90,2016
  unsigned int chk_tree_depth;95,2098
  struct ContentHashKey *chk_tree;chk_tree108,2540
  int in_next;114,2681
GNUNET_FS_compute_depth 125,2898
GNUNET_FS_tree_compute_tree_size 156,3648
GNUNET_FS_tree_compute_iblock_size 183,4484
GNUNET_FS_tree_calculate_block_size 211,5079
GNUNET_FS_tree_encoder_create 258,6693
compute_chk_offset 299,8174
GNUNET_FS_tree_encoder_next 320,8717
GNUNET_FS_tree_encoder_get_uri 413,11963
GNUNET_FS_tree_encoder_finish 432,12477

src/service/fs/gnunet-service-fs_pr.c,3221
#define DHT_GET_REPLICATION 40,1256
#define MAX_DATASTORE_QUEUE 47,1478
#define CONTENT_BANDWIDTH_VALUE 55,1762
#define MAX_RESULTS 60,1887
#define INSANE_STATISTICS 65,2000
#define CADET_RETRY_MAX 71,2182
struct GSF_PendingRequest77,2240
  struct GSF_PendingRequestData public_data;82,2314
  GSF_PendingRequestReplyHandler rh;87,2419
  void *rh_cls;rh_cls92,2492
  struct GNUNET_HashCode *replies_seen;replies_seen97,2577
  struct GNUNET_BLOCK_Group *bg;bg102,2689
  struct GNUNET_CONTAINER_HeapNode *hnode;hnode107,2804
  struct GNUNET_DATASTORE_QueueEntry *qe;qe112,2924
  struct GNUNET_DHT_GetHandle *gh;gh117,3040
  struct GSF_CadetRequest *cadet_request;cadet_request122,3151
  GSF_LocalLookupContinuation llc_cont;128,3293
  void *llc_cont_cls;llc_cont_cls133,3376
  enum GNUNET_BLOCK_ReplyEvaluationResult local_result;138,3472
  GNUNET_PEER_Id sender_pid;144,3666
  GNUNET_PEER_Id origin_pid;150,3827
  struct GNUNET_TIME_Absolute qe_start;155,3917
  struct GNUNET_SCHEDULER_Task *warn_task;warn_task160,4040
  bool have_first_uid;165,4129
  bool seen_null;170,4202
  uint64_t first_uid;176,4327
  size_t result_count;181,4381
  unsigned int cadet_retry_count;187,4512
  unsigned int replies_seen_count;192,4617
  unsigned int replies_seen_size;197,4706
static struct GNUNET_CONTAINER_MultiHashMap *pr_map;pr_map205,4854
static struct GNUNET_LOAD_Value *datastore_put_load;datastore_put_load211,4951
static int active_to_migration;217,5065
static struct GNUNET_CONTAINER_Heap *requests_by_expiration_heap;requests_by_expiration_heap228,5477
static unsigned long long max_pending_requests 236,5750
refresh_bloomfilter 250,6277
GSF_pending_request_create_ 278,7128
GSF_pending_request_get_data_ 410,12301
GSF_pending_request_is_compatible_ 426,12672
GSF_pending_request_update_ 439,13063
GSF_pending_request_get_message_ 489,14930
clean_request 573,17299
GSF_pending_request_cancel_ 641,19012
GSF_iterate_pending_requests_ 690,20243
struct ProcessReplyClosure702,20491
  const void *data;data707,20561
  struct GSF_ConnectedPeer *sender;sender712,20652
  struct GNUNET_TIME_Absolute expiration;717,20730
  size_t size;722,20804
  enum GNUNET_BLOCK_Type type;727,20856
  uint32_t priority;732,20942
  uint32_t anonymity_level;737,21020
  enum GNUNET_BLOCK_ReplyEvaluationResult eval;742,21096
  int request_found;747,21194
update_request_performance_data 759,21443
process_reply 779,22056
struct PutMigrationContext904,26618
  struct GNUNET_TIME_Absolute start;909,26694
  struct GNUNET_PeerIdentity origin;914,26765
  int requested;920,26901
put_migration_continuation 934,27227
test_put_load_too_high 1019,30214
handle_dht_reply 1056,31410
GSF_dht_lookup_ 1128,34162
cadet_reply_proc 1177,35825
GSF_cadet_lookup_ 1252,38296
warn_delay_task 1278,39053
odc_warn_delay_task 1299,39733
call_continuation 1316,40314
no_more_local_results 1362,41555
start_local_query 1395,42662
process_local_reply 1459,45455
GSF_pending_request_test_target_ 1647,52082
GSF_local_lookup_ 1669,52664
handle_p2p_put 1698,53616
GSF_pending_request_test_active_ 1840,58915
GSF_pending_request_init_ 1850,59075
GSF_pending_request_done_ 1875,59918

src/service/fs/test_fs_publish_persistence.c,643
#define FILESIZE 34,1134
#define TIMEOUT 39,1236
#define LIFETIME 44,1364
static struct GNUNET_TIME_Absolute start;47,1444
static struct GNUNET_FS_Handle *fs;fs49,1487
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg51,1524
static struct GNUNET_FS_PublishContext *publish;publish53,1579
static struct GNUNET_FS_PublishContext *publish;publish55,1629
static char *fn1;fn157,1679
static char *fn2;fn259,1698
static int err;61,1717
static struct GNUNET_SCHEDULER_Task *rtask;rtask63,1734
abort_publish_task 67,1792
restart_fs_task 92,2246
consider_restart 111,2689
progress_cb 128,3020
run 236,6714
main 312,9688

src/service/fs/gnunet-helper-fs-publish.c,793
struct ScanTreeNode37,1133
  struct ScanTreeNode *next;next42,1201
  struct ScanTreeNode *prev;prev47,1277
  struct ScanTreeNode *parent;parent52,1373
  struct ScanTreeNode *children_head;children_head58,1493
  struct ScanTreeNode *children_tail;children_tail64,1620
  char *filename;filename69,1703
  uint64_t file_size;75,1836
  int is_directory;80,1911
static struct EXTRACTOR_PluginList *plugins;plugins88,2021
static int output_stream;94,2133
add_to_md 116,2906
free_tree 164,4244
write_all 187,4850
write_message 218,5581
struct RecursionContext254,6728
  struct ScanTreeNode *parent;parent259,6799
  int stop;264,6893
scan_callback 278,7285
preprocess_file 309,8216
extract_files 375,10138
ignore_sigpipe 446,12039
make_dev_zero 473,12645
main 498,13235

src/service/fs/fs_getopt.c,131
getopt_set_keywords 46,1614
GNUNET_FS_GETOPT_KEYWORDS 129,3767
getopt_set_metadata 162,4828
GNUNET_FS_GETOPT_METADATA 254,7850

src/service/fs/test_fs_getopt.c,13
main 30,953

src/service/fs/gnunet-fs-profiler.c,390
static int ret;33,1036
static char *host_filename;host_filename38,1106
static unsigned int num_peers;43,1188
static struct GNUNET_TIME_Relative timeout;48,1268
static struct GNUNET_SCHEDULER_Task *terminate_taskid;terminate_taskid53,1367
shutdown_task 65,1701
process_stats 90,2421
terminate_task 114,2934
timeout_task 136,3430
test_master 156,3932
run 185,4930
main 204,5409

src/service/fs/test_fs_namespace_list_updateable.c,549
static struct GNUNET_FS_Handle *fs;fs32,1055
static int err;34,1092
static struct GNUNET_CRYPTO_EcdsaPrivateKey ns;36,1109
static struct GNUNET_FS_MetaData *meta;meta38,1158
static struct GNUNET_FS_Uri *uri_this;uri_this40,1199
static struct GNUNET_FS_Uri *uri_next;uri_next42,1239
static struct GNUNET_FS_BlockOptions bo;44,1279
progress_cb 48,1336
do_shutdown 55,1437
check_next 67,1654
check_this_next 79,1965
sks_cont_next 93,2383
check_this 102,2601
sks_cont_this 114,2910
testNamespace 126,3299
run 153,4347
main 164,4624

src/service/fs/gnunet-service-fs_indexing.h,44
#define GNUNET_SERVICE_FS_INDEXING_H27,974

src/service/fs/fs_misc.c,46
GNUNET_FS_meta_data_suggest_filename 39,1196

src/service/fs/gnunet-service-fs_cp.c,3791
#define RUNAVG_DELAY_N 41,1356
#define RESPECT_FLUSH_FREQ 46,1440
#define REPLY_TIMEOUT 52,1590
#define INSANE_STATISTICS 58,1807
struct GSF_PeerTransmitHandle64,1897
  struct GSF_PeerTransmitHandle *next;next69,1976
  struct GSF_PeerTransmitHandle *prev;prev74,2063
  struct GNUNET_TIME_Absolute transmission_request_start_time;79,2168
  struct GNUNET_MQ_Envelope *env;env84,2283
  struct GSF_ConnectedPeer *cp;cp89,2362
  int is_query;94,2468
  uint32_t priority;99,2528
struct GSF_DelayedHandle106,2604
  struct GSF_DelayedHandle *next;next111,2678
  struct GSF_DelayedHandle *prev;prev116,2760
  struct GSF_ConnectedPeer *cp;cp121,2847
  struct GNUNET_MQ_Envelope *env;env126,2939
  struct GNUNET_SCHEDULER_Task *delay_task;delay_task131,3011
  size_t msize;136,3094
struct PeerRequest143,3160
  struct GSF_PendingRequest *pr;pr148,3262
  struct GSF_ConnectedPeer *cp;cp153,3354
  struct GNUNET_SCHEDULER_Task *kill_task;kill_task158,3452
struct GSF_ConnectedPeer165,3529
  struct GSF_PeerPerformanceData ppd;170,3605
  struct GNUNET_TIME_Absolute last_migration_block;176,3730
  struct GNUNET_SCHEDULER_Task *mig_revive_task;mig_revive_task181,3849
  struct GSF_PeerTransmitHandle *pth_head;pth_head187,4050
  struct GSF_PeerTransmitHandle *pth_tail;pth_tail193,4245
  struct GSF_DelayedHandle *delayed_head;delayed_head199,4440
  struct GSF_DelayedHandle *delayed_tail;delayed_tail205,4634
  struct GNUNET_SCHEDULER_Task *rc_delay_task;rc_delay_task210,4758
  struct GNUNET_CONTAINER_MultiHashMap *request_map;request_map215,4898
  struct GNUNET_MQ_Handle *mq;mq221,5034
  uint64_t inc_preference;227,5176
  unsigned int delay_queue_size;232,5263
  uint32_t disk_respect;237,5352
  unsigned int last_p2p_replies_woff;243,5479
  unsigned int last_client_replies_woff;249,5622
  unsigned int last_request_times_off;254,5736
  struct GNUNET_PEERSTORE_IterateContext *respect_iterate_req;respect_iterate_req259,5856
static struct GNUNET_CONTAINER_MultiPeerMap *cp_map;cp_map266,5997
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore271,6091
static struct GNUNET_SCHEDULER_Task *fr_task;fr_task276,6196
GSF_update_peer_latency_ 286,6394
GSF_get_peer_performance_data_ 306,6953
schedule_transmission 328,7379
peer_transmit 347,7760
peer_respect_cb 390,8996
consider_peer_for_forwarding 430,10115
GSF_peer_connect_handler 456,10889
revive_migration 507,12822
GSF_peer_get_ 526,13255
handle_p2p_migration_stop 541,13579
free_pending_request 573,14628
cancel_pending_request 605,15609
peer_request_destroy 625,16051
transmit_delayed_now 645,16537
get_randomized_delay 668,17095
handle_p2p_reply 706,18555
change_peer_respect 825,22382
bound_priority 863,23151
#define N 866,23233
#undef N916,24708
bound_ttl 931,25030
struct TestExistClosure952,25384
  int32_t priority;957,25461
  int32_t ttl;962,25537
  enum GNUNET_BLOCK_Type type;967,25600
  int finished;972,25703
test_exist_cb 987,26069
handle_p2p_get 1033,27574
GSF_peer_transmit_ 1231,35275
GSF_peer_update_performance_ 1274,36590
GSF_peer_update_responder_client_ 1298,37399
GSF_peer_update_responder_peer_ 1314,37932
flush_respect 1336,38647
GSF_peer_disconnect_handler 1358,39345
struct IterationContext1434,41985
  GSF_ConnectedPeerIterator it;1439,42060
  void *it_cls;it_cls1444,42129
call_iterator 1457,42398
GSF_iterate_connected_peers_ 1472,42678
GSF_connected_peer_get_identity_ 1492,43147
GSF_connected_peer_get_identity2_ 1507,43565
GSF_block_peer_migration_ 1522,43882
GSF_connected_peer_change_preference_ 1570,45658
cron_flush_respect 1583,45943
GSF_connected_peer_init_ 1600,46510
GSF_connected_peer_done_ 1613,46869
clean_local_client 1635,47484
GSF_handle_local_client_disconnect_ 1657,48056

src/service/fs/fs_sharetree.c,1120
struct KeywordCounter38,1179
  struct KeywordCounter *prev;prev43,1249
  struct KeywordCounter *next;next48,1327
  const char *value;value53,1400
  unsigned int count;58,1473
struct MetaCounter65,1574
  struct MetaCounter *prev;prev70,1641
  struct MetaCounter *next;next75,1716
  const char *plugin_name;plugin_name80,1818
  const char *data_mime_type;data_mime_type85,1896
  const char *data;data90,1966
  size_t data_size;95,2031
  enum EXTRACTOR_MetaType type;100,2086
  enum EXTRACTOR_MetaFormat format;105,2155
  unsigned int count;111,2308
struct TrimContext119,2450
  struct GNUNET_CONTAINER_MultiHashMap *keywordcounter;keywordcounter126,2648
  struct GNUNET_CONTAINER_MultiHashMap *metacounter;metacounter133,2881
  struct GNUNET_FS_ShareTreeItem *pos;pos138,2992
  unsigned int move_threshold;143,3116
add_to_keyword_counter 156,3396
add_to_meta_counter 199,4945
remove_high_frequency_keywords 239,6206
migrate_and_drop_keywords 269,7060
migrate_and_drop_metadata 303,8152
share_tree_trim 337,9270
GNUNET_FS_share_tree_trim 417,12012
GNUNET_FS_share_tree_free 437,12564

src/service/fs/fs_api.h,11813
#define FS_API_H27,972
#define CHK_PER_INODE 44,1447
#define MAX_INLINE_SIZE 50,1558
#define GNUNET_FS_SYNC_PATH_MASTER_SEARCH 55,1647
#define GNUNET_FS_SYNC_PATH_CHILD_SEARCH 60,1771
#define GNUNET_FS_SYNC_PATH_MASTER_DOWNLOAD 66,1944
#define GNUNET_FS_SYNC_PATH_CHILD_DOWNLOAD 72,2098
#define GNUNET_FS_SYNC_PATH_MASTER_PUBLISH 77,2220
#define GNUNET_FS_SYNC_PATH_FILE_INFO 82,2343
#define GNUNET_FS_SYNC_PATH_MASTER_UNINDEX 87,2455
struct FileIdentifier94,2579
  uint64_t file_length;99,2678
  struct ContentHashKey chk;104,2763
struct Location112,2888
  struct FileIdentifier fi;117,2958
  struct GNUNET_PeerIdentity peer;122,3043
  struct GNUNET_TIME_Absolute expirationTime;127,3133
  struct GNUNET_CRYPTO_EddsaSignature contentSignature;133,3282
enum GNUNET_FS_UriType139,3368
  GNUNET_FS_URI_CHK,144,3442
  GNUNET_FS_URI_SKS,149,3519
  GNUNET_FS_URI_KSK,154,3600
  GNUNET_FS_URI_LOC159,3685
struct GNUNET_FS_Uri166,3768
  enum GNUNET_FS_UriType type;171,3825
      char **keywords;keywords186,4273
      unsigned int keywordCount;191,4354
    } ksk;192,4387
      struct GNUNET_CRYPTO_EcdsaPublicKey ns;199,4474
      char *identifier;identifier205,4625
    } sks;206,4649
    struct FileIdentifier chk;212,4764
    struct Location loc;218,4927
  } data;219,4952
struct GNUNET_FS_FileInformation227,5048
  struct GNUNET_FS_FileInformation *next;next232,5148
  struct GNUNET_FS_FileInformation *dir;dir238,5294
  struct GNUNET_FS_Handle *h;h243,5383
  void *client_info;client_info248,5460
  struct GNUNET_FS_MetaData *meta;meta253,5529
  struct GNUNET_FS_Uri *keywords;keywords258,5611
  struct GNUNET_FS_Uri *chk_uri;chk_uri264,5737
  struct GNUNET_FS_Uri *sks_uri;sks_uri270,5866
  struct GNUNET_FS_BlockOptions bo;275,5945
  struct GNUNET_TIME_Absolute start_time;280,6038
  char *serialization;serialization287,6223
  struct GNUNET_FS_TreeEncoder *te;te292,6305
  char *emsg;emsg297,6410
  char *filename;filename302,6500
      GNUNET_FS_DataReader reader;317,6741
      void *reader_cls;reader_cls322,6826
      struct GNUNET_HashCode file_id;329,7054
      uint64_t file_size;334,7151
      int do_index;339,7247
      int have_hash;345,7389
      int index_start_confirmed;351,7545
    } file;352,7578
      struct GNUNET_FS_FileInformation *entries;entries362,7723
      size_t dir_size;368,7895
      void *dir_data;dir_data374,8023
      uint64_t contents_completed;379,8151
      uint64_t contents_size;384,8278
    } dir;385,8308
  } data;386,8319
  int is_directory;391,8387
  int is_published;396,8459
enum GNUNET_FS_QueuePriority403,8521
  GNUNET_FS_QUEUE_PRIORITY_PROBE,408,8601
  GNUNET_FS_QUEUE_PRIORITY_NORMAL413,8671
struct GNUNET_FS_QueueEntry420,8745
  struct GNUNET_FS_QueueEntry *next;next425,8815
  struct GNUNET_FS_QueueEntry *prev;prev430,8893
  GNUNET_SCHEDULER_TaskCallback start;435,8990
  GNUNET_SCHEDULER_TaskCallback stop;440,9116
  void *cls;cls445,9200
  struct GNUNET_FS_Handle *h;h450,9261
  struct GNUNET_MQ_Handle *mq;mq455,9362
  struct GNUNET_TIME_Absolute queue_time;460,9447
  struct GNUNET_TIME_Absolute start_time;465,9538
  struct GNUNET_TIME_Relative run_time;471,9679
  unsigned int blocks;476,9783
  enum GNUNET_FS_QueuePriority priority;481,9856
  unsigned int start_times;486,9960
  int active;491,10044
struct GNUNET_FS_SearchResult498,10119
  struct GNUNET_FS_Handle *h;h503,10213
  struct GNUNET_FS_SearchResult *next;next508,10290
  struct GNUNET_FS_SearchResult *prev;prev513,10376
  struct GNUNET_FS_SearchContext *sc;sc519,10535
  struct GNUNET_FS_Uri *uri;uri524,10634
  struct GNUNET_FS_MetaData *meta;meta529,10713
  void *client_info;client_info534,10802
  struct GNUNET_FS_DownloadContext *probe_ctx;probe_ctx540,10951
  struct GNUNET_FS_DownloadContext *download;download546,11098
  struct GNUNET_FS_SearchContext *update_search;update_search552,11256
  char *serialization;serialization557,11378
  uint8_t *keyword_bitmap;keyword_bitmap562,11493
  struct GNUNET_HashCode key;567,11582
  struct GNUNET_SCHEDULER_Task *probe_cancel_task;probe_cancel_task574,11802
  struct GNUNET_TIME_Absolute probe_active_time;579,11913
  struct GNUNET_TIME_Relative remaining_probe_time;584,12046
  uint32_t anonymity;589,12176
  uint32_t mandatory_missing;596,12377
  uint32_t optional_support;602,12498
  uint32_t availability_success;607,12611
  uint32_t availability_trials;613,12744
typedef void (*SuspendSignalFunction)SuspendSignalFunction1011,24043
struct TopLevelActivity1017,24201
  struct TopLevelActivity *next;next1022,24274
  struct TopLevelActivity *prev;prev1027,24355
  SuspendSignalFunction ssf;1032,24460
  void *ssf_cls;ssf_cls1037,24560
struct GNUNET_FS_Handle1069,25216
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg1074,25281
  char *client_name;client_name1079,25368
  GNUNET_FS_ProgressCallback upcb;1084,25454
  void *upcb_cls;upcb_cls1089,25525
  struct TopLevelActivity *top_head;top_head1094,25598
  struct TopLevelActivity *top_tail;top_tail1099,25690
  struct GNUNET_FS_QueueEntry *running_head;running_head1104,25774
  struct GNUNET_FS_QueueEntry *running_tail;running_tail1109,25866
  struct GNUNET_FS_QueueEntry *pending_head;pending_head1114,25958
  struct GNUNET_FS_QueueEntry *pending_tail;pending_tail1119,26050
  struct GNUNET_FS_SearchResult *probes_head;probes_head1124,26136
  struct GNUNET_FS_SearchResult *probes_tail;probes_tail1129,26223
  struct GNUNET_SCHEDULER_Task *queue_job;queue_job1135,26390
  struct GNUNET_SCHEDULER_Task *probe_ping_task;probe_ping_task1141,26578
  struct GNUNET_TIME_Relative avg_block_latency;1147,26747
  unsigned int active_downloads;1152,26870
  unsigned int active_blocks;1157,26967
  enum GNUNET_FS_Flags flags;1162,27030
  unsigned int max_parallel_downloads;1167,27116
  unsigned int max_parallel_requests;1172,27210
struct GNUNET_FS_PublishContext1179,27310
  struct GNUNET_FS_Handle *h;h1184,27394
  struct TopLevelActivity *top;top1189,27510
  struct GNUNET_FS_FileInformation *fi;fi1194,27597
  struct GNUNET_CRYPTO_EcdsaPrivateKey *ns;ns1199,27722
  char *nid;nid1204,27850
  char *nuid;nuid1209,27948
  char *serialization;serialization1215,28087
  struct GNUNET_MQ_Handle *mq;mq1221,28240
  struct GNUNET_FS_FileInformation *fi_pos;fi_pos1226,28339
  struct GNUNET_CRYPTO_FileHashContext *fhc;fhc1231,28446
  struct GNUNET_DATASTORE_Handle *dsh;dsh1236,28546
  struct GNUNET_DATASTORE_QueueEntry *qre;qre1241,28646
  struct GNUNET_FS_PublishSksContext *sks_pc;sks_pc1247,28813
  struct GNUNET_FS_PublishKskContext *ksk_pc;ksk_pc1253,28983
  struct GNUNET_SCHEDULER_Task *upload_task;upload_task1259,29127
  uint64_t reserve_space;1264,29234
  uint32_t reserve_entries;1270,29347
  enum GNUNET_FS_PublishOptions options;1275,29417
  int rid;1281,29542
  int any_done;1287,29682
  int all_done;1292,29768
  int skip_next_fi_callback;1299,29993
enum UnindexState1306,30084
  UNINDEX_STATE_HASHING 1311,30155
  UNINDEX_STATE_DS_REMOVE 1317,30281
  UNINDEX_STATE_EXTRACT_KEYWORDS 1322,30361
  UNINDEX_STATE_DS_REMOVE_KBLOCKS 1327,30464
  UNINDEX_STATE_FS_NOTIFY 1333,30579
  UNINDEX_STATE_COMPLETE 1338,30640
  UNINDEX_STATE_ERROR 1343,30721
struct GNUNET_FS_UnindexContext1350,30811
  struct ContentHashKey chk;1356,30997
  struct GNUNET_FS_Handle *h;h1361,31063
  struct TopLevelActivity *top;top1366,31141
  struct GNUNET_FS_DirScanner *dscan;dscan1371,31244
  struct GNUNET_FS_Uri *ksk_uri;ksk_uri1376,31353
  uint32_t ksk_offset;1381,31435
  char *filename;filename1386,31517
  char *serialization;serialization1391,31624
  struct GNUNET_MQ_Handle *mq;mq1397,31754
  struct GNUNET_DATASTORE_Handle *dsh;dsh1403,31898
  void *client_info;client_info1408,31984
  struct GNUNET_FS_TreeEncoder *tc;tc1413,32056
  struct GNUNET_DISK_FileHandle *fh;fh1418,32140
  struct GNUNET_DATASTORE_QueueEntry *dqe;dqe1424,32270
  struct GNUNET_HashCode ukey;1429,32392
  struct GNUNET_HashCode uquery;1434,32479
  char *emsg;emsg1439,32562
  struct GNUNET_CRYPTO_FileHashContext *fhc;fhc1444,32627
  uint64_t file_size;1449,32716
  struct GNUNET_TIME_Absolute start_time;1454,32775
  struct GNUNET_HashCode file_id;1459,32880
  enum UnindexState state;1464,32960
struct SearchRequestEntry1471,33061
  struct GNUNET_HashCode uquery;1476,33155
  struct GNUNET_CRYPTO_EcdsaPublicKey dpub;1481,33246
  char *keyword;keyword1487,33387
  struct GNUNET_CONTAINER_MultiHashMap *results;results1497,33826
  int mandatory;1503,33954
struct GNUNET_FS_SearchContext1510,34020
  struct GNUNET_FS_Handle *h;h1515,34103
  struct TopLevelActivity *top;top1520,34219
  struct GNUNET_FS_Uri *uri;uri1525,34310
  struct GNUNET_FS_SearchResult *psearch_result;psearch_result1531,34459
  struct GNUNET_MQ_Handle *mq;mq1536,34556
  void *client_info;client_info1541,34637
  char *serialization;serialization1546,34725
  char *emsg;emsg1551,34817
  struct GNUNET_CONTAINER_MultiHashMap *master_result_map;master_result_map1559,35081
  struct SearchRequestEntry *requests;requests1565,35279
  struct GNUNET_TIME_Absolute start_time;1570,35355
  struct GNUNET_TIME_Relative reconnect_backoff;1575,35474
  struct GNUNET_SCHEDULER_Task *task;task1583,35765
  uint32_t anonymity;1588,35853
  uint32_t mandatory_count;1593,35937
  enum GNUNET_FS_SearchOptions options;1598,36007
enum BlockRequestState1607,36226
  BRS_INIT 1613,36374
  BRS_RECONSTRUCT_DOWN 1621,36618
  BRS_RECONSTRUCT_META_UP 1629,36874
  BRS_RECONSTRUCT_UP 1637,37146
  BRS_CHK_SET 1646,37477
  BRS_DOWNLOAD_DOWN 1655,37773
  BRS_DOWNLOAD_UP 1661,37923
  BRS_ERROR 1668,38144
struct DownloadRequest1675,38222
  struct DownloadRequest *parent;parent1680,38288
  struct DownloadRequest **children;children1685,38405
  struct ContentHashKey chk;1691,38584
  uint64_t offset;1698,38787
  unsigned int num_children;1703,38864
  unsigned int depth;1708,38970
  unsigned int chk_idx;1713,39063
  enum BlockRequestState state;1718,39123
struct GNUNET_FS_DownloadContext1743,39541
  struct GNUNET_FS_Handle *h;h1748,39612
  struct TopLevelActivity *top;top1753,39728
  struct GNUNET_MQ_Handle *mq;mq1758,39808
  struct GNUNET_FS_DownloadContext *parent;parent1764,39924
  struct GNUNET_FS_SearchResult *search;search1770,40082
  struct GNUNET_FS_DownloadContext *child_head;child_head1775,40174
  struct GNUNET_FS_DownloadContext *child_tail;child_tail1780,40273
  struct GNUNET_FS_DownloadContext *prev;prev1785,40387
  struct GNUNET_FS_DownloadContext *next;next1790,40491
  void *client_info;client_info1795,40580
  struct GNUNET_FS_Uri *uri;uri1800,40673
  struct GNUNET_FS_MetaData *meta;meta1805,40764
  char *emsg;emsg1810,40856
  char *serialization;serialization1816,40963
  char *filename;filename1822,41073
  char *temp_filename;temp_filename1829,41290
  struct GNUNET_FS_QueueEntry *job_queue;job_queue1834,41359
  struct GNUNET_FS_TreeEncoder *te;te1839,41461
  struct GNUNET_DISK_FileHandle *rfh;rfh1845,41598
  struct GNUNET_CONTAINER_MultiHashMap *active;active1851,41770
  struct DownloadRequest *top_request;top_request1856,41864
  struct GNUNET_PeerIdentity target;1862,42013
  struct GNUNET_SCHEDULER_Task *task;task1872,42394
  uint64_t offset;1878,42506
  uint64_t length;1884,42641
  uint64_t completed;1890,42766
  uint64_t old_file_size;1898,43047
  struct GNUNET_TIME_Absolute start_time;1903,43118
  struct GNUNET_TIME_Relative reconnect_backoff;1908,43237
  uint32_t anonymity;1913,43332
  unsigned int treedepth;1918,43400
  enum GNUNET_FS_DownloadOptions options;1923,43470
  int has_finished;1930,43731
  int issue_requests;1935,43832

src/service/fs/gnunet-service-fs_indexing.c,930
struct IndexInfo41,1334
  struct IndexInfo *next;next46,1400
  struct IndexInfo *prev;prev51,1474
  const char *filename;filename57,1608
  struct GNUNET_SERVER_TransmitContext *tc;tc63,1737
  struct GNUNET_CRYPTO_FileHashContext *fhc;fhc68,1832
  struct GNUNET_HashCode file_id;73,1929
static struct IndexInfo *indexed_files_head;indexed_files_head81,2072
static struct IndexInfo *indexed_files_tail;indexed_files_tail86,2167
static struct GNUNET_CONTAINER_MultiHashMap *ifm;ifm93,2399
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg98,2480
static struct GNUNET_DATASTORE_Handle *dsh;dsh104,2639
write_index_list 111,2758
read_index_list 159,4172
remove_cont 236,6207
GNUNET_FS_handle_on_demand_block 249,6505
GNUNET_FS_indexing_send_list 357,10263
GNUNET_FS_indexing_do_unindex 394,11189
GNUNET_FS_add_to_index 422,11891
GNUNET_FS_indexing_done 463,13048
GNUNET_FS_indexing_init 484,13525

src/service/fs/fs_search.c,1831
#define AVAILABILITY_TRIALS_MAX 37,1144
GNUNET_FS_search_make_status_ 49,1423
test_result_present 84,2559
notify_client_chk_result 105,3022
notify_client_chk_update 127,3713
struct GetResultContext150,4600
  const struct GNUNET_FS_Uri *uri;uri155,4670
  struct GNUNET_FS_SearchResult *sr;sr161,4802
get_result_present 176,5129
signal_probe_result 196,5566
probe_failure_handler 222,6535
probe_success_handler 246,7160
GNUNET_FS_search_probe_progress_ 281,8398
probe_ping_task_cb 368,10977
start_probe_ping_task 390,11518
GNUNET_FS_stop_probe_ping_task_ 410,12005
GNUNET_FS_search_start_probe_ 431,12468
GNUNET_FS_probe 489,14446
GNUNET_FS_search_stop_probe_ 516,15147
GNUNET_FS_probe_stop 540,15723
process_ksk_result 565,16379
process_sks_result 686,20424
decrypt_block_with_keyword 754,22880
process_kblock 797,24275
process_sblock 869,26295
check_result 934,28016
handle_result 949,28289
struct MessageBuilderContext1014,29867
  unsigned int put_cnt;1019,29954
  unsigned int skip_cnt;1024,30029
  struct GNUNET_HashCode *xoff;xoff1029,30097
  struct GNUNET_FS_SearchContext *sc;sc1034,30184
  unsigned int keyword_offset;1039,30296
build_result_set 1053,30627
find_result_set 1089,31702
schedule_transmit_search_request 1114,32466
search_mq_error_handler 1251,37417
do_reconnect 1272,37780
try_reconnect 1306,38663
search_start 1334,39535
update_sre_result_maps 1381,40999
GNUNET_FS_search_start_searching_ 1402,41729
search_result_freeze_probes 1462,43727
search_result_resume_probes 1494,44540
search_result_suspend 1516,45106
GNUNET_FS_search_signal_suspend_ 1555,46316
GNUNET_FS_search_start 1607,47864
GNUNET_FS_search_pause 1627,48394
GNUNET_FS_search_continue 1658,49201
search_result_stop 1682,49904
search_result_free 1737,51714
GNUNET_FS_search_stop 1766,52441

src/service/fs/test_gnunet_service_fs_migration.c,539
#define VERBOSE 30,1030
#define FILESIZE 35,1098
#define TIMEOUT 40,1198
#define MIGRATION_DELAY 45,1341
#define SEED 48,1484
static struct GNUNET_TESTBED_Peer *daemons[daemons50,1501
static int ok;52,1549
static struct GNUNET_TIME_Absolute start_time;54,1565
static struct GNUNET_TESTBED_Operation *op;op56,1613
struct DownloadContext59,1659
  char *fn;fn61,1684
  struct GNUNET_FS_Uri *uri;uri63,1697
do_stop 68,1743
do_download 102,2677
stop_source_peer 143,3712
do_wait 158,4112
do_publish 185,4837
main 207,5478

src/service/fs/fs_directory.c,727
#define GNUNET_DIRECTORY_MAGIC 44,1463
GNUNET_FS_meta_data_test_for_directory 55,1778
GNUNET_FS_meta_data_make_directory 81,2414
struct GetFullDataClosure104,3082
  void *data;data109,3155
  size_t size;114,3219
find_full_data 136,3962
GNUNET_FS_directory_list_contents 182,5668
struct BuilderEntry325,9525
  struct BuilderEntry *next;next330,9587
  size_t len;335,9656
struct GNUNET_FS_DirectoryBuilder341,9724
  struct GNUNET_FS_MetaData *meta;meta346,9813
  struct BuilderEntry *head;head351,9898
  unsigned int count;356,9981
GNUNET_FS_directory_builder_create 366,10128
GNUNET_FS_directory_builder_add 392,10886
do_align 488,13730
block_align 509,14307
GNUNET_FS_directory_builder_finish 578,15925

src/service/fs/test_fs_test_lib.c,357
#define VERBOSE 29,952
#define FILESIZE 34,1020
#define TIMEOUT 39,1122
#define NUM_DAEMONS 41,1201
#define SEED 43,1224
static struct GNUNET_TESTBED_Peer *the_peers[the_peers45,1241
static struct GNUNET_TIME_Absolute start_time;47,1301
static int ret;49,1349
do_stop 53,1379
do_download 80,1899
do_publish 105,2556
run 138,3541
main 166,4215

src/service/fs/gnunet-service-fs_pe.c,1986
#define INSANE_STATISTICS 35,1141
struct GSF_PendingRequestPlanBijection66,1987
  struct GSF_PendingRequestPlanBijection *next_PR;next_PR71,2075
  struct GSF_PendingRequestPlanBijection *prev_PR;prev_PR76,2174
  struct GSF_PendingRequestPlanBijection *next_PE;next_PE81,2273
  struct GSF_PendingRequestPlanBijection *prev_PE;prev_PE86,2372
  struct GSF_RequestPlan *rp;rp92,2538
  struct GSF_PendingRequest *pr;pr98,2686
struct GSF_RequestPlan108,3003
  struct GSF_RequestPlan *next;next113,3075
  struct GSF_RequestPlan *prev;prev118,3155
  struct GNUNET_CONTAINER_HeapNode *hn;hn123,3259
  struct PeerPlan *pp;pp128,3388
  struct GSF_PendingRequestPlanBijection *pe_head;pe_head135,3572
  struct GSF_PendingRequestPlanBijection *pe_tail;pe_tail140,3686
  struct GNUNET_TIME_Absolute earliest_transmission;145,3813
  struct GNUNET_TIME_Absolute last_transmission;150,3962
  uint64_t priority;155,4080
  unsigned int transmission_counter;160,4172
struct PeerPlan167,4255
  struct GNUNET_CONTAINER_Heap *priority_heap;priority_heap172,4381
  struct GNUNET_CONTAINER_Heap *delay_heap;delay_heap177,4536
  struct GNUNET_CONTAINER_MultiHashMap *plan_map;plan_map185,4820
  struct GSF_ConnectedPeer *cp;cp190,4921
  struct GNUNET_SCHEDULER_Task *task;task195,5008
  struct GNUNET_MQ_Envelope *env;env200,5113
static struct GNUNET_CONTAINER_MultiPeerMap *plans;plans207,5207
static unsigned long long total_delay;212,5347
static unsigned long long plan_count;217,5422
get_rp_key 233,5979
plan 246,6255
#define N 249,6318
#undef N335,10028
get_latest 346,10226
schedule_peer_transmission 379,11035
struct MergeContext473,14244
  struct GSF_PendingRequest *pr;pr478,14315
  int merged;483,14411
merge_pr 498,14738
GSF_plan_add_ 557,16568
GSF_plan_notify_peer_disconnect_ 637,19566
GSF_request_plan_reference_get_last_transmission_ 722,22741
GSF_plan_notify_request_done_ 754,23732
GSF_plan_init 796,25019
GSF_plan_done 807,25197

src/service/fs/gnunet-service-fs_put.c,694
#define MAX_DHT_PUT_FREQ 34,1102
#define DEFAULT_PUT_REPLICATION 40,1253
struct PutOperator46,1342
  struct GNUNET_DATASTORE_QueueEntry *dht_qe;dht_qe51,1425
  enum GNUNET_BLOCK_Type dht_put_type;56,1525
  struct GNUNET_DHT_PutHandle *dht_put;dht_put61,1607
  struct GNUNET_SCHEDULER_Task *dht_task;dht_task66,1711
  uint64_t zero_anonymity_count_estimate;72,1875
  uint64_t result_count;77,1980
  uint64_t next_uid;82,2072
static struct PutOperator operators[operators90,2206
schedule_next_put 111,2635
delay_dht_put_blocks 139,3400
delay_dht_put_task 154,3646
process_dht_put_content 179,4279
gather_dht_put_blocks 222,5790
GSF_put_init_ 244,6404
GSF_put_done_ 262,6670

src/service/fs/gnunet-service-fs_put.h,39
#define GNUNET_SERVICE_FS_PUT_H27,955

src/service/fs/test_fs_search_probes.c,524
#define FILESIZE 35,1098
#define TIMEOUT 40,1187
#define LIFETIME 45,1315
static struct GNUNET_TIME_Absolute start;48,1395
static struct GNUNET_FS_Handle *fs;fs50,1438
static struct GNUNET_FS_SearchContext *search;search52,1475
static struct GNUNET_FS_PublishContext *publish;publish54,1523
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task56,1573
static int err;58,1625
abort_error 62,1655
abort_publish_task 82,1949
abort_search_task 98,2192
progress_cb 107,2317
run 203,5425
main 248,7009

src/service/fs/test_fs_file_information.c,99
#define FILESIZE 42,1375
#define LIFETIME 47,1461
mycleaner 51,1552
run 60,1820
main 141,5033

src/service/fs/meta_data.c,1967
#define MAX_META_DATA 35,1183
#define LOG(38,1221
struct MetaItem45,1367
  struct MetaItem *next;next50,1432
  struct MetaItem *prev;prev55,1505
  char *plugin_name;plugin_name60,1579
  char *mime_type;mime_type65,1637
  char *data;data70,1696
  size_t data_size;75,1755
  enum EXTRACTOR_MetaType type;80,1816
  enum EXTRACTOR_MetaFormat format;85,1891
struct GNUNET_FS_MetaData91,2002
  struct MetaItem *items_head;items_head96,2091
  struct MetaItem *items_tail;items_tail101,2184
  char *sbuf;sbuf107,2340
  size_t sbuf_size;112,2425
  unsigned int item_count;117,2499
GNUNET_FS_meta_data_create 127,2651
meta_item_free 139,2809
invalidate_sbuf 155,3091
GNUNET_FS_meta_data_destroy 166,3252
GNUNET_FS_meta_data_clear 183,3570
GNUNET_FS_meta_data_test_equal 200,3914
GNUNET_FS_meta_data_insert 254,5683
merge_helper 343,8724
GNUNET_FS_meta_data_merge 356,9132
GNUNET_FS_meta_data_delete 364,9319
GNUNET_FS_meta_data_add_publication_date 391,10068
GNUNET_FS_meta_data_iterate 418,10899
GNUNET_FS_meta_data_get_by_type 438,11440
GNUNET_FS_meta_data_get_first_by_types 456,11937
GNUNET_FS_meta_data_get_thumbnail 490,12684
GNUNET_FS_meta_data_duplicate 527,13703
#define HEADER_COMPRESSED 547,14267
#define HEADER_VERSION_MASK 553,14365
struct MetaDataHeader559,14450
  uint32_t version;570,14787
  uint32_t entries;575,14856
  uint32_t size;580,14930
struct MetaDataEntry593,15192
  uint32_t type;598,15293
  uint32_t format;603,15392
  uint32_t data_size;608,15459
  uint32_t plugin_name_len;613,15571
  uint32_t mime_type_len;618,15687
GNUNET_FS_meta_data_serialize 637,16250
GNUNET_FS_meta_data_get_serialized_size 858,22919
GNUNET_FS_meta_data_deserialize 885,23596
GNUNET_FS_read_meta_data 1051,27706
GNUNET_FS_write_meta_data 1110,29283
read_spec_handler_meta_data 1166,30899
GNUNET_FS_read_spec_meta_data 1185,31515
write_spec_handler_meta_data 1211,32158
GNUNET_FS_write_spec_meta_data 1223,32535

src/service/fs/gnunet-service-fs_cadet_server.c,1211
#define IDLE_TIMEOUT 43,1389
struct WriteQueueItem49,1534
  struct WriteQueueItem *next;next54,1590
  struct WriteQueueItem *prev;prev59,1654
  size_t msize;64,1768
struct CadetClient71,1860
  struct CadetClient *next;next76,1902
  struct CadetClient *prev;prev81,1952
  struct GNUNET_CADET_Channel *channel;channel86,2025
  struct WriteQueueItem *wqi_head;wqi_head91,2104
  struct WriteQueueItem *wqi_tail;wqi_tail96,2178
  struct GNUNET_DATASTORE_QueueEntry *qe;qe101,2296
  struct GNUNET_SCHEDULER_Task *terminate_task;terminate_task106,2423
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task111,2543
  size_t reply_size;116,2650
static struct GNUNET_CADET_Port *cadet_port;cadet_port123,2722
static struct CadetClient *sc_head;sc_head128,2809
static struct CadetClient *sc_tail;sc_tail133,2887
static unsigned int sc_count;138,2985
static unsigned long long sc_count_max;143,3068
timeout_cadet_task 152,3238
refresh_timeout_task 173,3698
continue_writing 190,4195
handle_datastore_reply 226,5324
handle_request 334,9092
connect_cb 376,10644
disconnect_cb 420,11996
window_change_cb 471,13664
GSF_cadet_start_server 483,13910
GSF_cadet_stop_server 523,15417

src/service/fs/gnunet-service-fs_cadet.h,437
#define GNUNET_SERVICE_FS_CADET_H27,952
(*GSF_CadetReplyProcessor)GSF_CadetReplyProcessor45,1377
struct CadetQueryMessage123,3339
  struct GNUNET_MessageHeader header;128,3427
  uint32_t type GNUNET_PACKED;133,3520
  struct GNUNET_HashCode query;138,3616
struct CadetReplyMessage145,3694
  struct GNUNET_MessageHeader header;150,3782
  uint32_t type GNUNET_PACKED;155,3875
  struct GNUNET_TIME_AbsoluteNBO expiration;160,3955

src/service/fs/fs_publish_ublock.c,431
derive_ublock_encryption_key 46,1445
GNUNET_FS_ublock_decrypt_ 66,2242
struct GNUNET_FS_PublishUblockContext86,2881
  GNUNET_FS_UBlockContinuation cont;91,2966
  void *cont_cls;cont_cls96,3040
  struct GNUNET_DATASTORE_QueueEntry *qre;qre101,3115
  struct GNUNET_SCHEDULER_Task *task;task106,3217
ublock_put_cont 123,3891
run_cont 142,4284
GNUNET_FS_publish_ublock_ 153,4475
GNUNET_FS_publish_ublock_cancel_ 289,9044

src/service/fs/fs_file_information.c,546
GNUNET_FS_file_information_get_id 45,1410
GNUNET_FS_file_information_get_filename 60,1743
GNUNET_FS_file_information_set_filename 76,2150
GNUNET_FS_file_information_create_from_file 88,2452
GNUNET_FS_file_information_create_from_data 148,4491
GNUNET_FS_file_information_create_from_reader 177,5531
GNUNET_FS_file_information_is_directory 218,6662
GNUNET_FS_file_information_create_empty_directory 226,6820
GNUNET_FS_file_information_add 250,7461
GNUNET_FS_file_information_inspect 282,8502
GNUNET_FS_file_information_destroy 335,10092

src/service/fs/fs.h,2254
#define FS_H27,933
#define DBLOCK_SIZE 41,1197
#define HASHING_BLOCKSIZE 48,1444
struct ContentHashKey54,1520
  struct GNUNET_HashCode key;59,1612
  struct GNUNET_HashCode query;64,1710
struct RequestLocSignatureMessage75,1862
  struct GNUNET_MessageHeader header;80,1978
  uint32_t purpose GNUNET_PACKED;86,2127
  struct GNUNET_TIME_AbsoluteNBO expiration_time;91,2206
  struct ContentHashKey chk;96,2324
  uint64_t file_length;101,2411
struct ResponseLocSignatureMessage108,2506
  struct GNUNET_MessageHeader header;114,2633
  uint32_t purpose GNUNET_PACKED;120,2789
  struct GNUNET_TIME_AbsoluteNBO expiration_time;125,2892
  struct GNUNET_CRYPTO_EddsaSignature signature;130,2985
  struct GNUNET_PeerIdentity peer;135,3091
struct IndexStartMessage152,3744
  struct GNUNET_MessageHeader header;157,3846
  uint32_t reserved GNUNET_PACKED;162,3917
  uint64_t device GNUNET_PACKED;171,4271
  uint64_t inode GNUNET_PACKED;179,4536
  struct GNUNET_HashCode file_id;184,4632
struct IndexInfoMessage196,4896
  struct GNUNET_MessageHeader header;202,5007
  uint32_t reserved GNUNET_PACKED;207,5076
  struct GNUNET_HashCode file_id;212,5155
struct UnindexMessage227,5620
  struct GNUNET_MessageHeader header;232,5715
  uint32_t reserved GNUNET_PACKED;237,5784
  struct GNUNET_HashCode file_id;242,5876
#define SEARCH_MESSAGE_OPTION_NONE 249,5938
#define SEARCH_MESSAGE_OPTION_LOOPBACK_ONLY 254,6032
#define SEARCH_MESSAGE_OPTION_CONTINUED 262,6310
struct SearchMessage269,6460
  struct GNUNET_MessageHeader header;274,6559
  uint32_t options GNUNET_PACKED;285,6932
  uint32_t type GNUNET_PACKED;290,7028
  uint32_t anonymity_level GNUNET_PACKED;295,7114
  struct GNUNET_PeerIdentity target;307,7627
  struct GNUNET_HashCode query;313,7778
struct PutMessage329,8277
  struct GNUNET_MessageHeader header;334,8364
  uint32_t type GNUNET_PACKED;339,8478
  struct GNUNET_TIME_AbsoluteNBO expiration;344,8557
struct ClientPutMessage355,8912
  struct GNUNET_MessageHeader header;360,9005
  uint32_t type GNUNET_PACKED;365,9119
  struct GNUNET_TIME_AbsoluteNBO expiration;370,9198
  struct GNUNET_TIME_AbsoluteNBO last_transmission;376,9359
  uint32_t num_transmissions;382,9508
  uint32_t respect_offered;388,9639

src/service/fs/test_fs_meta_data.c,205
#define ABORT(34,1051
testMeta 40,1243
testMetaMore 152,5891
testMetaLink 186,6806
check 222,7928
test_bigmeta_rw 356,11557
test_fakemeta_rw 402,13003
test_fakebigmeta_rw 436,14074
main 467,15154

src/service/fs/gnunet-service-fs_push.h,40
#define GNUNET_SERVICE_FS_PUSH_H27,948

src/service/fs/gnunet-daemon-fsprofiler.c,1432
struct Pattern38,1229
  struct Pattern *next;next43,1278
  struct Pattern *prev;prev48,1335
  void *ctx;ctx53,1441
  void *sctx;sctx58,1546
  struct GNUNET_TIME_Absolute start_time;63,1608
  struct GNUNET_TIME_Relative delay;68,1722
  struct GNUNET_SCHEDULER_Task *task;task73,1804
  struct GNUNET_SCHEDULER_Task *stask;stask78,1897
  unsigned long long x;83,1963
  unsigned long long y;88,2014
static int global_ret;95,2080
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg100,2137
static struct GNUNET_STATISTICS_Handle *stats_handle;stats_handle105,2237
static struct GNUNET_FS_Handle *fs_handle;fs_handle110,2321
static unsigned long long my_peerid;115,2420
static unsigned long long anonymity_level;120,2494
static unsigned long long replication_level;125,2576
static char *publish_pattern;publish_pattern134,2913
static struct Pattern *publish_head;publish_head139,2992
static struct Pattern *publish_tail;publish_tail144,3078
static char *download_pattern;download_pattern154,3521
static struct Pattern *download_head;download_head159,3601
static struct Pattern *download_tail;download_tail164,3688
parse_pattern 177,3993
make_keywords 210,4765
make_file 230,5315
shutdown_task 273,6705
publish_stop_task 318,7780
download_stop_task 333,8046
search_stop_task 348,8326
progress_cb 373,9141
start_publish 517,13992
start_download 538,14523
run 562,15196
main 656,18590

src/service/fs/test_fs_unindex_persistence.c,557
#define FILESIZE 34,1129
#define TIMEOUT 39,1231
#define LIFETIME 44,1359
static struct GNUNET_TIME_Absolute start;47,1439
static struct GNUNET_FS_Handle *fs;fs49,1482
static struct GNUNET_FS_UnindexContext *unindex;unindex51,1519
static struct GNUNET_FS_PublishContext *publish;publish53,1569
static char *fn;fn55,1619
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg57,1637
abort_publish_task 61,1705
abort_unindex_task 69,1808
restart_fs_task 90,2133
consider_restart 106,2512
progress_cb 122,2829
run 247,7248
main 297,9044

src/service/fs/test_fs_namespace.c,722
static struct GNUNET_CRYPTO_EcdsaPublicKey nsid;32,1023
static struct GNUNET_FS_Uri *sks_expect_uri;sks_expect_uri34,1073
static struct GNUNET_FS_Uri *ksk_expect_uri;ksk_expect_uri36,1119
static struct GNUNET_FS_Handle *fs;fs38,1165
static struct GNUNET_FS_SearchContext *sks_search;sks_search40,1202
static struct GNUNET_FS_SearchContext *ksk_search;ksk_search42,1254
static struct GNUNET_SCHEDULER_Task *kill_task;kill_task44,1306
static int update_started;46,1355
static int err;48,1383
abort_ksk_search_task 52,1413
abort_sks_search_task 69,1703
do_timeout 85,1981
progress_cb 96,2170
publish_cont 168,4384
sks_cont 207,5426
adv_cont 239,6337
testNamespace 270,7259
run 299,8184
main 310,8461

src/service/fs/fs_publish.c,1019
GNUNET_FS_publish_make_status_ 48,1485
publish_cleanup 79,2572
ds_put_cont 117,3537
signal_publish_completion 165,5026
signal_publish_error 190,5802
finish_release_reserve 223,6878
publish_sblocks_cont 247,7607
publish_sblock 286,8523
publish_kblocks_cont 313,9457
block_reader 368,11189
encode_cont 418,12516
block_proc 482,14783
progress_proc 567,17797
publish_content 616,19545
check_index_start_failed 697,22275
handle_index_start_failed 720,22792
handle_index_start_ok 752,23655
index_mq_error_handler 776,24346
hash_for_index_cb 806,25137
publish_kblocks 934,29020
handle_signature_response 965,29892
loc_mq_error_handler 993,30809
create_loc_uri 1017,31388
GNUNET_FS_publish_main_ 1063,32905
fip_signal_start 1194,36773
suspend_operation 1267,38866
fip_signal_suspend 1320,40492
GNUNET_FS_publish_signal_suspend_ 1355,41514
finish_reserve 1383,42347
compute_contents_size 1416,43276
GNUNET_FS_publish_start 1443,44312
fip_signal_stop 1524,46968
GNUNET_FS_publish_stop 1571,48461

src/service/fs/perf_gnunet_service_fs_p2p_respect.c,1117
#define VERBOSE 50,1948
#define FILESIZE 55,2016
#define TIMEOUT 60,2118
#define NUM_DAEMONS 65,2260
#define SEED1 70,2324
#define SEED2 75,2384
static struct GNUNET_TESTBED_Peer *daemons[daemons77,2402
static int ok;79,2460
static struct GNUNET_TIME_Absolute start_time;81,2476
static const char *progname;progname83,2524
static struct GNUNET_FS_Uri *uri1;uri185,2554
static struct GNUNET_FS_Uri *uri2;uri287,2590
static char *fn1;fn189,2626
static char *fn2;fn291,2645
struct StatMaster96,2706
  struct GNUNET_STATISTICS_Handle *stat;stat98,2726
  struct GNUNET_TESTBED_Operation *op;op99,2767
  unsigned int daemon;100,2806
  unsigned int value;101,2829
struct StatValues104,2855
  const char *subsystem;subsystem106,2875
  const char *name;name107,2900
static struct StatValues stats[stats113,2960
cleanup 139,4009
print_stat 166,4615
get_done 191,5177
statistics_connect_adapter 212,5745
statistics_disconnect_adapter 228,6144
stat_run 239,6361
do_report 281,7460
do_downloads 326,9004
do_publish2 367,10435
do_publish1 403,11333
do_connect 438,12258
main 466,13016

src/service/fs/gnunet-service-fs_pe.h,38
#define GNUNET_SERVICE_FS_PE_H27,937

src/service/fs/fs_dirmetascan.c,747
struct GNUNET_FS_DirScanner39,1271
  struct GNUNET_HELPER_Handle *helper;helper44,1334
  char *filename_expanded;filename_expanded50,1518
  char *ex_arg;ex_arg55,1598
  GNUNET_FS_DirScannerProgressCallback progress_callback;61,1709
  void *progress_callback_cls;progress_callback_cls66,1818
  struct GNUNET_FS_ShareTreeItem *toplevel;toplevel73,2008
  struct GNUNET_FS_ShareTreeItem *pos;pos78,2106
  struct GNUNET_SCHEDULER_Task *stop_task;stop_task83,2196
  char *args[args88,2279
GNUNET_FS_directory_scan_abort 99,2444
GNUNET_FS_directory_scan_get_result 117,2906
advance 139,3435
expand_tree 181,4470
finish_scan 215,5539
process_helper_msgs 243,6289
helper_died_cb 424,11468
GNUNET_FS_directory_scan_start 450,12311

src/service/fs/fs_uri.c,2101
GNUNET_FS_uri_to_key 96,3597
GNUNET_FS_uri_ksk_to_string_fancy 148,4913
percent_decode_keyword 212,6421
#define GNUNET_FS_URI_KSK_PREFIX 262,7384
uri_ksk_parse 272,7662
#define GNUNET_FS_URI_SKS_PREFIX 356,9648
uri_sks_parse 366,9923
#define GNUNET_FS_URI_CHK_PREFIX 395,10838
uri_chk_parse 406,11113
struct LocUriAssembly458,12971
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;463,13056
  struct GNUNET_TIME_AbsoluteNBO exptime;468,13156
  struct FileIdentifier fi;473,13236
  struct GNUNET_PeerIdentity peer;478,13306
#define GNUNET_FS_URI_LOC_PREFIX 483,13372
#define SIGNATURE_ASCII_LENGTH 485,13451
uri_loc_parse 496,13735
GNUNET_FS_uri_parse 637,18380
GNUNET_FS_uri_destroy 677,19175
GNUNET_FS_uri_ksk_get_keyword_count 711,19855
GNUNET_FS_uri_ksk_get_keywords 720,20024
GNUNET_FS_uri_ksk_add_keyword 752,20909
GNUNET_FS_uri_ksk_remove_keyword 780,21670
GNUNET_FS_uri_loc_get_peer_identity 812,22596
GNUNET_FS_uri_loc_get_expiration 829,23029
GNUNET_FS_uri_loc_get_uri 843,23371
GNUNET_FS_uri_loc_create 869,24226
GNUNET_FS_uri_sks_create 908,25662
GNUNET_FS_uri_ksk_merge 931,26257
GNUNET_FS_uri_dup 987,27622
GNUNET_FS_uri_ksk_create 1049,29412
GNUNET_FS_uri_ksk_create_from_args 1144,31769
GNUNET_FS_uri_test_equal 1201,33106
GNUNET_FS_uri_test_sks 1271,34894
GNUNET_FS_uri_sks_get_namespace 1286,35218
GNUNET_FS_uri_sks_get_content_id 1306,35654
GNUNET_FS_uri_test_ksk 1324,35970
GNUNET_FS_uri_test_chk 1346,36401
GNUNET_FS_uri_chk_get_file_size 1360,36678
GNUNET_FS_uri_chk_get_file_hash 1385,37221
GNUNET_FS_uri_test_loc 1401,37507
insert_non_mandatory_keyword 1417,37900
find_duplicate 1438,38493
normalize_metadata 1453,38744
u8_strcount 1509,40350
get_keywords_from_parens 1540,41409
#define TOKENS 1631,43743
get_keywords_from_tokens 1648,44415
#undef TOKENS1692,45606
gather_uri_data 1713,46307
GNUNET_FS_uri_ksk_create_from_meta_data 1788,48889
needs_percent 1845,50622
uri_ksk_to_string 1859,50906
uri_sks_to_string 1929,52481
uri_chk_to_string 1960,53248
uri_loc_to_string 1991,54088
GNUNET_FS_uri_to_string 2034,55538

src/service/fs/fs_list_indexed.c,455
struct GNUNET_FS_GetIndexedContext38,1122
  struct GNUNET_MQ_Handle *mq;mq43,1206
  GNUNET_FS_IndexedFileProcessor iterator;48,1295
  void *iterator_cls;iterator_cls53,1381
  GNUNET_SCHEDULER_TaskCallback cont;58,1457
  void *cont_cls;cont_cls63,1534
handle_index_info_end 75,1796
check_index_info 95,2329
handle_index_info 119,2890
mq_error_handler 146,3611
GNUNET_FS_get_indexed_files 163,4094
GNUNET_FS_get_indexed_files_cancel 212,5662

src/service/fs/gnunet-service-fs.c,3170
#define FS_DHT_HT_SIZE 52,1698
#define COVER_AGE_FREQUENCY 60,1871
#define INSANE_STATISTICS 66,2046
struct ClientRequest73,2177
  struct ClientRequest *next;next78,2247
  struct ClientRequest *prev;prev83,2325
  struct GSF_PendingRequest *pr;pr88,2404
  struct GSF_LocalClient *lc;lc93,2492
  struct GNUNET_SCHEDULER_Task *kill_task;kill_task98,2579
struct ClientResponse106,2743
  struct ClientResponse *next;next111,2814
  struct ClientResponse *prev;prev116,2893
  struct GSF_LocalClient *lc;lc121,2986
  size_t msize;126,3067
struct IndexStartContext134,3176
  struct IndexStartContext *next;next139,3250
  struct IndexStartContext *prev;prev144,3332
  char *filename;filename149,3410
  struct GSF_LocalClient *lc;lc154,3495
  struct GNUNET_CRYPTO_FileHashContext *fhc;fhc159,3576
  struct GNUNET_HashCode file_id;164,3673
struct GSF_LocalClient171,3739
  struct GNUNET_SERVICE_Client *client;client176,3799
  struct GNUNET_MQ_Handle *mq;mq181,3884
  struct ClientRequest *cr_head;cr_head187,4009
  struct ClientRequest *cr_tail;cr_tail193,4136
  struct IndexStartContext *isc_head;isc_head198,4217
  struct IndexStartContext *isc_tail;isc_tail203,4303
  struct ClientResponse *res_head;res_head208,4393
  struct ClientResponse *res_tail;res_tail213,4480
struct GNUNET_DATASTORE_Handle *GSF_dsh;GSF_dsh222,4641
const struct GNUNET_CONFIGURATION_Handle *GSF_cfg;GSF_cfg227,4713
struct GNUNET_STATISTICS_Handle *GSF_stats;GSF_stats232,4809
struct GNUNET_DHT_Handle *GSF_dht;GSF_dht237,4892
struct GNUNET_LOAD_Value *GSF_rt_entry_lifetime;GSF_rt_entry_lifetime242,4997
struct GNUNET_TIME_Relative GSF_avg_latency 248,5172
double GSF_current_priorities;261,5749
unsigned int GSF_datastore_queue_size;266,5851
unsigned int GSF_cover_query_count;272,6006
unsigned int GSF_cover_content_count;278,6160
struct GNUNET_BLOCK_Context *GSF_block_ctx;GSF_block_ctx283,6229
struct GNUNET_CORE_Handle *GSF_core;GSF_core289,6372
int GSF_enable_randomized_delays;294,6480
struct GNUNET_PeerIdentity GSF_my_id;299,6549
static struct GNUNET_CONFIGURATION_Handle *block_cfg;block_cfg306,6708
static struct GNUNET_CRYPTO_EddsaPrivateKey pk;311,6832
static struct GNUNET_SCHEDULER_Task *cover_age_task;cover_age_task316,6946
static struct GNUNET_LOAD_Value *datastore_get_load;datastore_get_load321,7042
client_connect_cb 333,7300
client_request_destroy 352,7670
client_response_handler 390,9086
client_disconnect_cb 465,11670
age_cover_counters 505,12680
GSF_update_datastore_delay_ 523,13181
GSF_test_get_load_too_high_ 543,13815
check_p2p_put 565,14291
consider_request_for_forwarding 590,14813
GSF_consider_forwarding 623,15776
check_p2p_get 646,16483
start_p2p_processing 692,17691
check_client_start_search 746,19311
handle_client_start_search 772,19940
handle_client_loc_sign 881,24155
check_client_index_start 921,25513
signal_index_ok 950,26159
hash_for_index_val 976,26844
handle_client_index_start 1023,28181
handle_client_index_list_get 1087,30179
handle_client_unindex 1104,30550
shutdown_task 1132,31305
peer_init_handler 1180,32635
main_init 1199,33042
run 1295,36403

src/service/fs/test_fs_download_persistence.c,686
#define FILESIZE 34,1136
#define TIMEOUT 39,1238
#define LIFETIME 44,1366
static struct GNUNET_TIME_Absolute start;47,1446
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg49,1489
static struct GNUNET_FS_Handle *fs;fs51,1544
static struct GNUNET_FS_DownloadContext *download;download53,1581
static struct GNUNET_FS_PublishContext *publish;publish55,1633
static struct GNUNET_SCHEDULER_Task *timeout_kill;timeout_kill57,1683
static char *fn;fn59,1735
static int err;61,1753
timeout_kill_task 65,1783
abort_publish_task 84,2134
abort_download_task 95,2272
restart_fs_task 120,2843
consider_restart 137,3283
progress_cb 153,3600
run 296,8981
main 341,10529

src/service/fs/fs_api.c,2055
#define DEFAULT_MAX_PARALLEL_REQUESTS 37,1179
#define DEFAULT_MAX_PARALLEL_DOWNLOADS 42,1318
start_job 51,1505
stop_job 78,2320
process_job_queue 107,3322
GNUNET_FS_queue_ 321,10039
GNUNET_FS_dequeue_ 356,11080
GNUNET_FS_make_top 381,11759
GNUNET_FS_end_top 402,12218
struct FileInfo412,12440
  char *filename;filename417,12501
  struct GNUNET_DISK_FileHandle *fd;fd422,12590
GNUNET_FS_data_reader_file_ 447,13635
GNUNET_FS_make_file_reader_context_ 509,15142
GNUNET_FS_data_reader_copy_ 545,16415
get_serialization_file_name 575,17100
get_serialization_file_name_in_dir 615,18391
get_read_handle 655,19699
get_write_handle 678,20243
get_write_handle_in_dir 703,20849
GNUNET_FS_remove_sync_file_ 728,21424
remove_sync_file_in_dir 758,22135
GNUNET_FS_remove_sync_dir_ 787,22839
write_start_time 820,23875
read_start_time 845,24717
deserialize_fi_node 882,25843
deserialize_file_information 1143,33874
get_serialization_short_name 1186,35044
make_serialization_file_name 1220,35732
make_serialization_file_name_in_dir 1256,36583
copy_from_reader 1292,37460
GNUNET_FS_file_information_sync_ 1328,38254
find_file_position 1540,44690
fip_signal_resume 1572,45724
deserialize_publish_file 1612,47010
GNUNET_FS_publish_sync_ 1747,51016
GNUNET_FS_unindex_sync_ 1823,53342
write_download_request 1898,55817
read_download_request 1931,56912
get_download_sync_filename 2003,58907
GNUNET_FS_download_sync_ 2036,59997
GNUNET_FS_search_result_sync_ 2149,63378
GNUNET_FS_search_sync_ 2248,67068
deserialize_unindex_file 2312,69100
deserialize_search_result 2519,75129
signal_download_resume 2683,80192
signal_result_resume 2721,81197
free_result 2773,82783
free_search_context 2795,83281
deserialize_subdownload 2834,84654
free_download_context 2875,85778
deserialize_download 2909,86701
signal_search_resume 3020,90592
deserialize_search 3044,91385
deserialize_search_file 3130,94293
deserialize_download_file 3182,95693
deserialization_master 3224,96831
GNUNET_FS_start 3244,97353
GNUNET_FS_stop 3310,99344

src/service/fs/fs_unindex.c,704
unindex_reader 52,1620
GNUNET_FS_unindex_make_status_ 85,2447
unindex_progress 114,3431
signal_unindex_error 139,4169
process_cont 160,4796
unindex_process 194,5797
handle_unindex_response 235,6889
unindex_mq_error_handler 265,7777
unindex_finish 290,8369
unindex_directory_scan_cb 355,10472
GNUNET_FS_unindex_do_extract_keywords_ 407,12007
continue_after_remove 437,13189
process_kblock_for_unindex 477,14596
GNUNET_FS_unindex_do_remove_kblocks_ 581,17950
unindex_extract_keywords 634,19797
GNUNET_FS_unindex_do_remove_ 650,20126
GNUNET_FS_unindex_process_hash_ 695,21515
GNUNET_FS_unindex_signal_suspend_ 728,22337
GNUNET_FS_unindex_start 796,23945
GNUNET_FS_unindex_stop 838,25233

src/service/fs/test_fs_download.c,694
#define FILESIZE 36,1146
#define TIMEOUT 41,1248
#define LIFETIME 46,1377
static unsigned int anonymity_level;48,1456
static int indexed;50,1494
static struct GNUNET_TIME_Absolute start;52,1515
static struct GNUNET_FS_Handle *fs;fs54,1558
static struct GNUNET_FS_DownloadContext *download;download56,1595
static struct GNUNET_FS_PublishContext *publish;publish58,1647
static struct GNUNET_SCHEDULER_Task *timeout_kill;timeout_kill60,1697
static char *fn;fn62,1749
static char *fn1;fn164,1767
static int err;66,1786
timeout_kill_task 70,1816
abort_publish_task 89,2167
stop_fs_task 100,2305
abort_download_task 108,2384
progress_cb 129,2872
run 260,8164
main 338,11018

src/service/fs/gnunet-service-fs.h,746
#define GNUNET_SERVICE_FS_H27,958
#define TTL_DECREMENT 42,1382
#define DATASTORE_LOAD_AUTODECLINE 49,1559
#define GET_MESSAGE_BIT_QUERY_ONLY 55,1720
#define GET_MESSAGE_BIT_RETURN_TO 63,1930
#define GET_MESSAGE_BIT_TRANSMIT_TO 73,2356
struct GetMessage81,2486
  struct GNUNET_MessageHeader header;86,2573
  uint32_t type GNUNET_PACKED;91,2661
  uint32_t priority GNUNET_PACKED;96,2761
  int32_t ttl GNUNET_PACKED;101,2873
  uint32_t reserved GNUNET_PACKED;106,2941
  uint32_t hash_bitmap GNUNET_PACKED;115,3286
  struct GNUNET_HashCode query;121,3425
struct MigrationStopMessage133,3747
  struct GNUNET_MessageHeader header;139,3859
  uint32_t reserved GNUNET_PACKED;144,3928
  struct GNUNET_TIME_RelativeNBO duration;149,4013

src/service/fs/test_fs_unindex.c,438
#define FILESIZE 35,1112
#define TIMEOUT 40,1214
#define LIFETIME 45,1342
static struct GNUNET_TIME_Absolute start;48,1422
static struct GNUNET_FS_Handle *fs;fs50,1465
static struct GNUNET_FS_UnindexContext *unindex;unindex52,1502
static struct GNUNET_FS_PublishContext *publish;publish54,1552
static char *fn;fn56,1602
abort_publish_task 60,1633
abort_unindex_task 68,1736
progress_cb 79,1911
run 178,5666
main 227,7434

src/service/fs/gnunet-service-fs_cp.h,1066
#define GNUNET_SERVICE_FS_CP_H27,944
#define MAX_QUEUE_PER_PEER 45,1348
#define P2P_SUCCESS_LIST_SIZE 51,1490
#define CS2P_SUCCESS_LIST_SIZE 57,1637
struct GSF_PeerPerformanceData63,1717
  struct GSF_LocalClient *last_client_replies[last_client_replies69,1848
  GNUNET_PEER_Id last_p2p_replies[last_p2p_replies76,2062
  struct GNUNET_TIME_Relative avg_reply_delay;84,2373
  struct GNUNET_TIME_Relative migration_delay;91,2608
  struct GNUNET_TIME_Absolute migration_blocked_until;97,2757
  struct GNUNET_TIME_Absolute last_request_times[last_request_times106,3109
  struct GNUNET_LOAD_Value *transmission_delay;transmission_delay113,3356
  double avg_priority;119,3541
  GNUNET_PEER_Id pid;124,3622
  const struct GNUNET_PeerIdentity *peer;peer129,3693
  uint32_t respect;134,3782
  unsigned int pending_queries;139,3872
  unsigned int pending_replies;144,3974
(*GSF_ConnectedPeerIterator)GSF_ConnectedPeerIterator157,4232
(*GSF_GetMessageCallback)GSF_GetMessageCallback172,4793
(*GSF_PeerReserveCallback)GSF_PeerReserveCallback185,5144

src/service/fs/perf_gnunet_service_fs_p2p.c,919
#define VERBOSE 30,1039
#define FILESIZE 35,1107
#define TIMEOUT 40,1210
#define NUM_DAEMONS 42,1288
#define SEED 44,1311
static struct GNUNET_TESTBED_Peer *daemons[daemons46,1328
static int ok;48,1386
static struct GNUNET_TIME_Absolute start_time;50,1402
static const char *progname;progname52,1450
static struct GNUNET_TIME_Absolute start_time;54,1480
struct StatMaster60,1571
  struct GNUNET_STATISTICS_Handle *stat;stat62,1591
  struct GNUNET_TESTBED_Operation *op;op63,1632
  unsigned int daemon;64,1671
  unsigned int value;65,1694
struct StatValues68,1720
  const char *subsystem;subsystem70,1740
  const char *name;name71,1765
static struct StatValues stats[stats77,1825
print_stat 114,3313
get_done 143,3919
statistics_connect_adapter 164,4487
statistics_disconnect_adapter 180,4886
stat_run 191,5103
do_report 241,6377
do_download 290,7845
do_publish 324,8793
main 355,9675

src/service/fs/test_gnunet_service_fs_p2p.c,430
#define VERBOSE 29,1000
#define FILESIZE 34,1068
#define TIMEOUT 39,1158
#define NUM_DAEMONS 41,1237
#define SEED 43,1260
static const char *progname;progname45,1277
static unsigned int anonymity_level;47,1307
static struct GNUNET_TESTBED_Peer *daemons[daemons49,1345
static int ok;51,1403
static struct GNUNET_TIME_Absolute start_time;53,1419
do_stop 57,1480
do_download 97,2519
do_publish 121,3257
main 147,4037

src/service/datacache/test_datacache_quota.c,121
#define ASSERT(30,1073
static int ok;34,1258
static char *plugin_name;plugin_name39,1312
run 48,1624
main 155,4495

src/service/datacache/test_datacache.c,138
#define ASSERT(30,1049
static int ok;34,1234
static char *plugin_name;plugin_name39,1288
checkIt 43,1354
run 63,1701
main 168,4690

src/service/datacache/datacache.c,777
#define LOG(32,1084
#define LOG_STRERROR_FILE(34,1157
struct GNUNET_DATACACHE_Handle40,1312
  struct GNUNET_CONTAINER_BloomFilter *filter;filter45,1420
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg50,1504
  struct GNUNET_STATISTICS_Handle *stats;stats55,1613
  char *section;section60,1703
  struct GNUNET_DATACACHE_PluginFunctions *api;api66,1817
  char *short_name;short_name71,1926
  char *lib_name;lib_name76,2025
  char *bloom_name;bloom_name81,2093
  struct GNUNET_DATACACHE_PluginEnvironment env;86,2167
  unsigned long long utilization;91,2270
env_delete_notify 104,2542
GNUNET_DATACACHE_create 128,3295
GNUNET_DATACACHE_destroy 235,6831
GNUNET_DATACACHE_put 261,7635
GNUNET_DATACACHE_get 303,8806
GNUNET_DATACACHE_get_closest 338,9979

src/service/regex/regex_internal_dht.c,1664
#define LOG(34,1167
#define DHT_REPLICATION 39,1281
#define DHT_TTL 44,1347
#define DHT_OPT 49,1426
struct REGEX_INTERNAL_Announcement55,1552
  struct GNUNET_DHT_Handle *dht;dht60,1657
  const char *regex;regex65,1728
  struct REGEX_INTERNAL_Automaton *dfa;dfa70,1827
  const struct GNUNET_CRYPTO_EddsaPrivateKey *priv;priv75,1902
  struct GNUNET_STATISTICS_Handle *stats;stats80,2029
regex_iterator 95,2459
REGEX_INTERNAL_announce 198,6402
REGEX_INTERNAL_reannounce 219,7025
REGEX_INTERNAL_announce_cancel 238,7593
struct RegexSearchContext252,7921
  size_t position;258,8046
  struct REGEX_INTERNAL_Search *info;info263,8113
  unsigned int longest_match;269,8249
  struct GNUNET_HashCode hash;274,8336
struct Result281,8420
  size_t size;286,8478
  const void *data;data291,8532
struct REGEX_INTERNAL_Search299,8693
  struct GNUNET_DHT_Handle *dht;dht304,8792
  struct GNUNET_STATISTICS_Handle *stats;stats309,8900
  char *description;description314,9011
  struct GNUNET_CONTAINER_MultiHashMap *dht_get_handles;dht_get_handles319,9068
  struct GNUNET_CONTAINER_MultiHashMap *dht_get_results;dht_get_results325,9215
  struct RegexSearchContext **contexts;contexts330,9353
  unsigned int n_contexts;335,9458
  REGEX_INTERNAL_Found callback;340,9545
  void *callback_cls;callback_cls345,9641
dht_get_string_accept_handler 379,10607
regex_find_path 418,12182
dht_get_string_handler 461,14052
regex_result_iterator 515,16043
regex_edge_iterator 558,17404
regex_next_edge 607,18701
REGEX_INTERNAL_search 698,22044
regex_cancel_dht_get 772,24701
regex_free_result 794,25264
REGEX_INTERNAL_search_cancel 809,25547

src/service/regex/regex_test_lib.c,516
struct RegexCombineCtx35,1189
  struct RegexCombineCtx **children;children40,1271
  unsigned int size;45,1373
  char *s;s50,1419
c2i 65,1639
space 103,2277
debugctx 120,2501
new_regex_ctx 160,3357
move_children 175,3671
regex_combine 199,4216
get_prefix_length 273,5930
get_longest_prefix 303,6562
regex_add_multiple 333,7059
regex_split 395,8543
regex_add 444,9838
regex_ctx_destroy 513,11799
REGEX_TEST_combine 545,12699
REGEX_TEST_read_from_file 581,13582
REGEX_TEST_free_from_file 652,15344

src/service/regex/gnunet-daemon-regexprofiler.c,946
static int global_ret;40,1408
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg45,1465
static struct GNUNET_STATISTICS_Handle *stats_handle;stats_handle50,1565
static struct GNUNET_DHT_Handle *dht_handle;dht_handle55,1650
static struct REGEX_INTERNAL_Announcement *announce_handle;announce_handle60,1737
static struct GNUNET_SCHEDULER_Task *reannounce_task;reannounce_task65,1840
static struct GNUNET_TIME_Relative reannounce_period_max;70,1944
static unsigned long long max_path_compression;75,2068
static char *policy_filename;policy_filename81,2221
static char *regex_prefix;regex_prefix86,2314
static char *rx_with_pfx;rx_with_pfx91,2372
static unsigned int rounds 96,2444
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key101,2515
shutdown_task 110,2651
reannounce_regex 144,3406
announce_regex 194,5085
scan 223,5856
run 247,6327
main 372,10409
GNUNET_REGEX_memory_init 396,11157

src/service/regex/regex_internal.c,3510
#define REGEX_DEBUG_DFA 37,1262
struct REGEX_INTERNAL_StateSet_MDLL42,1338
  struct REGEX_INTERNAL_State *head;head47,1409
  struct REGEX_INTERNAL_State *tail;tail52,1480
  unsigned int len;57,1555
state_set_append 68,1712
nullstrcmp 86,2218
state_add_transition 107,2704
state_remove_transition 162,4325
state_compare 193,5130
state_get_edges 212,5612
state_set_compare 244,6313
state_set_clear 271,6859
automaton_fragment_clear 285,7129
automaton_destroy_state 305,7459
automaton_remove_state 335,8133
automaton_merge_states 375,9236
automaton_add_state 444,11276
automaton_state_traverse 467,12038
REGEX_INTERNAL_automaton_traverse 505,13082
struct StringBuffer547,14200
  char *sbuf;sbuf553,14316
  char *abuf;abuf558,14366
  size_t slen;563,14434
  unsigned int blen;568,14505
  int16_t null_flag;573,14603
  int16_t synced;584,15091
sb_nullstrcmp 597,15370
sb_strcmp 620,15953
sb_realloc 638,16421
sb_append 659,16816
sb_append_cstr 678,17280
sb_wrap 703,18122
sb_printf1 734,19047
sb_printf2 758,19828
sb_printf3 791,20994
sb_free 822,22003
sb_strdup 838,22282
sb_strdup_cstr 861,22761
needs_parentheses 888,23343
remove_parentheses 937,24491
has_epsilon 994,25685
remove_epsilon 1012,26268
sb_strncmp 1046,27107
sb_strncmp_cstr 1071,27734
sb_init 1087,28059
sb_strkcmp 1106,28546
number_states 1126,29126
#define PRIS(1138,29359
automaton_create_proofs_simplify 1158,30224
automaton_create_proofs 1562,42751
dfa_state_create 1728,47946
dfa_move 1798,49983
mark_states 1839,50830
dfa_remove_unreachable_states 1854,51153
dfa_remove_dead_states 1888,52129
dfa_merge_nondistinguishable_states 1931,52931
dfa_minimize 2051,56821
struct REGEX_INTERNAL_Strided_Context2075,57356
  const unsigned int stride;2080,57436
  struct REGEX_INTERNAL_Transition *transitions_head;transitions_head2086,57597
  struct REGEX_INTERNAL_Transition *transitions_tail;transitions_tail2091,57694
dfa_add_multi_strides_helper 2106,58211
dfa_add_multi_strides 2162,59790
REGEX_INTERNAL_dfa_add_multi_strides 2178,60253
dfa_compress_paths_helper 2226,62090
dfa_compress_paths 2305,64701
nfa_fragment_create 2375,66735
nfa_add_states 2410,67445
nfa_state_create 2449,68313
nfa_closure_set_create 2478,69091
nfa_add_concatenation 2551,71273
nfa_add_star_op 2587,72347
nfa_add_plus_op 2631,73481
nfa_add_question_op 2659,74081
nfa_add_alternation 2700,75190
nfa_add_label 2744,76479
REGEX_INTERNAL_context_init 2767,77037
REGEX_INTERNAL_construct_nfa 2790,77572
    int altcount;2805,77909
    int atomcount;2806,77927
construct_dfa_states 2984,81970
REGEX_INTERNAL_construct_dfa 3032,83452
REGEX_INTERNAL_automaton_destroy 3092,85122
evaluate_dfa 3123,85801
evaluate_nfa 3165,86712
REGEX_INTERNAL_eval 3219,88035
REGEX_INTERNAL_get_canonical_regex 3245,88478
REGEX_INTERNAL_get_transition_count 3262,88858
REGEX_INTERNAL_get_first_key 3289,89514
iterate_initial_edge 3319,90461
REGEX_INTERNAL_iterate_all_edges 3433,94225
struct temporal_state_store3477,95692
  int reachable;3479,95722
  char *proof;proof3480,95739
  int accepting;3481,95754
  int num_edges;3482,95771
  struct REGEX_BLOCK_Edge *edges;edges3483,95788
struct client_iterator3490,95913
  REGEX_INTERNAL_KeyIterator iterator;3492,95938
  void *iterator_cls;iterator_cls3493,95977
store_all_states 3509,96425
mark_as_reachable 3546,97592
reachability_iterator 3581,98391
iterate_reachables 3613,99227
REGEX_INTERNAL_iterate_reachable_edges 3635,99746

src/service/regex/regex_api_search.c,457
#define LOG(33,1131
struct GNUNET_REGEX_Search39,1259
  struct GNUNET_MQ_Handle *mq;mq44,1338
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg49,1406
  GNUNET_REGEX_Found callback;54,1504
  void *callback_cls;callback_cls59,1578
  char *string;string64,1660
check_search_response 86,2139
handle_search_response 110,2750
mq_error_handler 139,3472
search_reconnect 156,3794
GNUNET_REGEX_search 189,4796
GNUNET_REGEX_search_cancel 225,5707

src/service/regex/regex_internal_lib.h,156
#define REGEX_INTERNAL_LIB_H27,962
(*REGEX_INTERNAL_KeyIterator)REGEX_INTERNAL_KeyIterator122,3779
(*REGEX_INTERNAL_Found)REGEX_INTERNAL_Found222,7091

src/service/regex/regex_ipc.h,489
#define REGEX_IPC_H27,985
struct AnnounceMessage34,1097
  struct GNUNET_MessageHeader header;39,1182
  uint16_t compression;44,1283
  uint16_t reserved;49,1338
  struct GNUNET_TIME_RelativeNBO refresh_delay;54,1415
struct RegexSearchMessage63,1563
  struct GNUNET_MessageHeader header;68,1649
struct ResultMessage77,1777
  struct GNUNET_MessageHeader header;82,1858
  uint16_t get_path_length;87,1949
  uint16_t put_path_length;92,2030
  struct GNUNET_PeerIdentity id;97,2113

src/service/regex/test_regex_proofs.c,92
test_proof 43,1481
test_proofs_random 84,2621
test_proofs_static 109,3113
main 161,4345

src/service/regex/test_regex_integration.c,439
#define TOTAL_TIMEOUT 37,1282
#define BASE_TIMEOUT 43,1500
static struct GNUNET_REGEX_Announcement *a4;a446,1583
static struct GNUNET_REGEX_Search *s4;s448,1629
static struct GNUNET_REGEX_Announcement *a6;a650,1669
static struct GNUNET_REGEX_Search *s6;s652,1715
static int ok 54,1755
static struct GNUNET_SCHEDULER_Task *die_task;die_task56,1775
end 60,1836
end_badly 76,2095
found_cb 95,2598
run 122,3238
main 201,5703

src/service/regex/perf-regex.c,34
print_edge 45,1450
main 76,2248

src/service/regex/test_regex_api.c,329
#define TOTAL_TIMEOUT 34,1123
#define BASE_TIMEOUT 40,1341
static struct GNUNET_REGEX_Announcement *a;a43,1424
static struct GNUNET_REGEX_Search *s;s45,1469
static int ok 47,1508
static struct GNUNET_SCHEDULER_Task *die_task;die_task49,1528
end 53,1589
end_badly 65,1746
found_cb 88,2339
run 102,2708
main 122,3367

src/service/regex/test_regex_iterate_api.c,544
#define INITIAL_PADDING 35,1103
#define REGEX_INTERNAL_ITERATE_SAVE_DEBUG_GRAPH 40,1199
static unsigned int transition_counter;42,1258
struct IteratorContext44,1299
  int error;46,1324
  int should_save_graph;47,1337
  FILE *graph_filep;graph_filep48,1362
  unsigned int string_count;49,1383
  char *const *strings;strings50,1412
  unsigned int match_count;51,1436
struct RegexStringPair54,1468
  char *regex;regex56,1493
  unsigned int string_count;57,1508
  char *strings[strings58,1537
key_iterator 63,1575
main 117,3081

src/service/regex/gnunet-regex-profiler.c,3315
#define FIND_TIMEOUT 35,1187
struct DLLOperation41,1303
  struct GNUNET_TESTBED_Operation *op;op46,1371
  void *cls;cls51,1436
  struct DLLOperation *next;next56,1492
  struct DLLOperation *prev;prev61,1564
enum State68,1643
  STATE_INIT 73,1687
  STATE_SLAVES_STARTING,78,1739
  STATE_PEERS_CREATING,83,1797
  STATE_PEERS_STARTING,88,1854
  STATE_PEERS_LINKING,93,1910
  STATE_SEARCH_REGEX,98,1994
  STATE_PEERS_DESTROYING104,2137
struct RegexPeer111,2192
  unsigned int id;116,2237
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg121,2301
  struct GNUNET_TESTBED_Peer *peer_handle;peer_handle126,2394
  const char *search_str;search_str131,2477
  int search_str_matched;139,2762
  struct GNUNET_DHT_Handle *dht_handle;dht_handle144,2825
  struct REGEX_INTERNAL_Search *search_handle;search_handle149,2917
  struct GNUNET_TESTBED_Operation *op_handle;op_handle154,3016
  struct GNUNET_STATISTICS_Handle *stats_handle;stats_handle159,3107
  struct GNUNET_TIME_Absolute prof_start_time;164,3213
  struct GNUNET_SCHEDULER_Task *timeout;timeout169,3296
  struct GNUNET_TESTBED_Operation *daemon_op;daemon_op174,3368
static int in_shutdown;180,3482
static struct RegexPeer *peers;peers185,3595
static struct GNUNET_TESTBED_HostRegistrationHandle *reg_handle;reg_handle190,3664
static struct GNUNET_TESTBED_ControllerProc *mc_proc;mc_proc195,3781
static struct GNUNET_TESTBED_Controller *mc;mc200,3879
static struct GNUNET_CONFIGURATION_Handle *cfg;cfg205,3967
static struct GNUNET_SCHEDULER_Task *abort_task;abort_task210,4049
static struct GNUNET_SCHEDULER_Task *register_hosts_task;register_hosts_task215,4144
static uint64_t event_mask;220,4255
static struct GNUNET_TIME_Absolute prof_start_time;225,4333
static struct GNUNET_TIME_Relative prof_time;230,4431
static unsigned int num_peers;235,4535
static int result;240,4600
enum State state;245,4658
static char *policy_dir;policy_dir250,4726
static char *hosts_file;hosts_file255,4810
static char *strings_file;strings_file260,4882
static char **search_strings;search_strings265,4957
static long long unsigned int init_parallel_searches;270,5051
static unsigned int parallel_searches;275,5159
static unsigned int strings_found;280,5260
static unsigned int next_search;285,5352
static struct GNUNET_SCHEDULER_Task *search_timeout_task;search_timeout_task290,5429
static struct GNUNET_TIME_Relative search_timeout_time 295,5526
static struct GNUNET_DISK_FileHandle *data_file;data_file300,5633
static char *data_filename;data_filename305,5725
static char *regex_prefix;regex_prefix311,5876
static struct GNUNET_TIME_Relative reannounce_period_max;316,5959
do_shutdown 396,8182
do_abort 483,10429
stats_ca 510,11329
stats_da 525,11657
stats_iterator 547,12286
stats_cb 591,13485
stats_connect_cb 646,14937
do_collect_stats 682,15844
regex_found_handler 726,17216
search_timed_out 824,20319
find_timed_out 861,21455
find_string 881,21915
daemon_started 920,23194
do_announce 968,24704
announce_next_regex 992,25204
dht_connect_cb 1028,26332
dht_ca 1055,27211
dht_da 1066,27407
test_master 1100,28283
master_controller_cb 1156,29973
count_and_separate_strings 1191,30947
create_string_array 1234,32247
load_search_strings 1279,33408
run 1350,35307
main 1531,41948

src/service/regex/regex_api_announce.c,414
#define LOG(32,1118
struct GNUNET_REGEX_Announcement37,1254
  struct GNUNET_MQ_Handle *mq;mq42,1339
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg47,1407
  char *regex;regex52,1512
  struct GNUNET_TIME_Relative refresh_delay;57,1573
  uint16_t compression;62,1667
announce_mq_error_handler 83,2068
announce_reconnect 100,2408
GNUNET_REGEX_announce 139,3693
GNUNET_REGEX_announce_cancel 173,4552

src/service/regex/regex_test_lib.h,198
#define REGEX_INTERNAL_TEST_LIB_H29,1088
enum REGEX_TEST_GraphSavingOptions116,3681
  REGEX_TEST_GRAPH_DEFAULT 121,3764
  REGEX_TEST_GRAPH_VERBOSE 127,3935
  REGEX_TEST_GRAPH_COLORING 132,4050

src/service/regex/test_regex_eval_api.c,309
enum Match_Result32,1046
  match 34,1066
  nomatch 35,1079
struct Regex_String_Pair38,1097
  char *regex;regex40,1124
  int string_count;41,1139
  char *strings[strings42,1159
  enum Match_Result expected_results[expected_results43,1180
test_random 60,1705
test_automaton 201,6034
main 253,7667

src/service/regex/regex_test_graph.c,260
struct REGEX_TEST_Graph_Context34,1142
  FILE *filep;filep39,1239
  int verbose;45,1363
  int coloring;50,1454
scc_tarjan_strongconnect 66,1883
scc_tarjan 117,3143
REGEX_TEST_automaton_save_graph_step 154,3976
REGEX_TEST_automaton_save_graph 270,7164

src/service/regex/regex_test_random.c,114
get_random_literal 37,1183
REGEX_TEST_generate_random_regex 64,2085
REGEX_TEST_generate_random_string 155,4081

src/service/regex/regex_internal.h,2618
#define REGEX_INTERNAL_H26,952
#define ALLOWED_LITERALS 42,1227
struct REGEX_INTERNAL_Transition51,1550
  struct REGEX_INTERNAL_Transition *prev;prev56,1625
  struct REGEX_INTERNAL_Transition *next;next61,1708
  unsigned int id;66,1798
  char *label;label71,1910
  struct REGEX_INTERNAL_State *to_state;to_state76,1981
  struct REGEX_INTERNAL_State *from_state;from_state81,2082
struct REGEX_INTERNAL_StateSet94,2246
  struct REGEX_INTERNAL_State **states;states99,2313
  unsigned int off;104,2421
  unsigned int size;109,2489
struct REGEX_INTERNAL_State116,2574
  struct REGEX_INTERNAL_State *prev;prev121,2675
  struct REGEX_INTERNAL_State *next;next126,2784
  struct REGEX_INTERNAL_State *prev_SS;prev_SS131,2878
  struct REGEX_INTERNAL_State *next_SS;next_SS136,2975
  struct REGEX_INTERNAL_State *prev_ST;prev_ST141,3078
  struct REGEX_INTERNAL_State *next_ST;next_ST146,3181
  unsigned int id;151,3256
  unsigned int traversal_id;157,3403
  int accepting;162,3488
  int marked;169,3710
  int contained;175,3859
  unsigned int scc_id;182,4079
  int index;187,4144
  int lowlink;192,4199
  char *name;name198,4310
  struct GNUNET_HashCode hash;203,4361
  unsigned int dfs_id;211,4669
  char *proof;proof216,4732
  unsigned int transition_count;221,4820
  struct REGEX_INTERNAL_Transition *transitions_head;transitions_head226,4891
  struct REGEX_INTERNAL_Transition *transitions_tail;transitions_tail231,4983
  unsigned int incoming_transition_count;236,5119
  struct REGEX_INTERNAL_StateSet nfa_set;242,5283
enum REGEX_INTERNAL_AutomatonType249,5363
  NFA,251,5399
  DFA252,5406
struct REGEX_INTERNAL_Automaton259,5454
  struct REGEX_INTERNAL_Automaton *prev;prev264,5556
  struct REGEX_INTERNAL_Automaton *next;next269,5666
  struct REGEX_INTERNAL_State *start;start275,5873
  struct REGEX_INTERNAL_State *end;end280,5986
  unsigned int state_count;285,6075
  struct REGEX_INTERNAL_State *states_head;states_head290,6136
  struct REGEX_INTERNAL_State *states_tail;states_tail295,6212
  enum REGEX_INTERNAL_AutomatonType type;300,6297
  char *regex;regex305,6363
  char *canonical_regex;canonical_regex310,6441
  int is_multistrided;315,6547
(*REGEX_INTERNAL_traverse_check)REGEX_INTERNAL_traverse_check344,7411
(*REGEX_INTERNAL_traverse_action)REGEX_INTERNAL_traverse_action357,7809
struct REGEX_INTERNAL_Context413,9926
  unsigned int state_id;418,9992
  unsigned int transition_id;423,10057
  struct REGEX_INTERNAL_Automaton *stack_head;stack_head428,10156
  struct REGEX_INTERNAL_Automaton *stack_tail;stack_tail433,10272

src/service/regex/test_regex_graph_api.c,61
#define KEEP_FILES 32,1053
filecheck 42,1243
main 74,1919

src/service/regex/gnunet-service-regex.c,780
struct ClientEntry36,1140
  struct GNUNET_MQ_Handle *mq;mq41,1216
  struct GNUNET_SERVICE_Client *client;client46,1296
  struct REGEX_INTERNAL_Search *sh;sh51,1399
  struct REGEX_INTERNAL_Announcement *ah;ah56,1505
  struct GNUNET_TIME_Relative frequency;61,1602
  struct GNUNET_SCHEDULER_Task *refresh_task;refresh_task66,1685
static struct GNUNET_DHT_Handle *dht;dht73,1770
static struct GNUNET_STATISTICS_Handle *stats;stats78,1849
static struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key83,1935
cleanup_task 92,2071
reannounce 111,2476
check_announce 130,2932
handle_announce 153,3364
handle_search_result 197,4898
check_search 244,6420
handle_search 275,7011
run 308,7816
client_connect_cb 341,8668
client_disconnect_cb 362,9129

src/service/messenger/gnunet-service-messenger_message_handle.h,57
#define GNUNET_SERVICE_MESSENGER_MESSAGE_HANDLE_H27,961

src/service/messenger/messenger_api_handle.c,383
create_handle 32,1064
iterate_destroy_room 63,1857
destroy_handle 76,2085
set_handle_name 110,2784
get_handle_name 123,3027
set_handle_key 132,3151
get_handle_key 162,3821
get_handle_pubkey 174,4037
get_handle_contact_store 186,4261
get_handle_contact 195,4428
open_handle_room 220,5061
entry_handle_room_at 234,5365
close_handle_room 249,5774
get_handle_room 264,6204

src/service/messenger/gnunet-service-messenger_service.c,696
callback_shutdown_service 35,1118
create_service 49,1331
iterate_destroy_rooms 117,3675
destroy_service 128,3922
get_service_contact_store 175,4815
add_service_handle 184,4989
remove_service_handle 201,5320
get_service_peer_identity 215,5662
get_service_room 241,6334
struct HandleInitializationClosure250,6564
  struct GNUNET_MESSENGER_SrvHandle *handle;handle252,6601
  struct GNUNET_MESSENGER_SrvRoom *room;room253,6646
  const struct GNUNET_CRYPTO_PublicKey *pubkey;pubkey254,6687
find_member_session_in_room 258,6777
initialize_service_handle 291,7682
open_service_room 317,8475
entry_service_room 346,9389
close_service_room 385,10493
handle_service_message 440,12093

src/service/messenger/gnunet-service-messenger_member.c,1221
create_member 34,1090
iterate_destroy_session 61,1868
iterate_destroy_subscription 72,2161
destroy_member 83,2448
get_member_id 100,3026
callback_scan_for_sessions 109,3182
load_member 129,3595
iterate_load_next_session 179,4903
load_member_next_sessions 200,5455
iterate_save_session 216,5929
save_member 238,6526
sync_session_contact_from_next 279,7735
iterate_sync_session_contact 295,8133
sync_member_contacts 309,8456
get_member_session 319,8751
struct GNUNET_MESSENGER_ClosureSearchSession331,9103
  const struct GNUNET_MESSENGER_Message *message;message333,9150
  const struct GNUNET_HashCode *hash;hash334,9200
  struct GNUNET_MESSENGER_MemberSession *match;match336,9239
iterate_search_session 340,9329
try_member_session 357,9849
get_member_session_of 376,10357
add_member_session 401,11152
remove_member_session 425,11866
struct GNUNET_MESSENGER_ClosureIterateSessions444,12562
  GNUNET_MESSENGER_MemberIteratorCallback it;446,12611
  void *cls;cls447,12657
iterate_member_sessions_it 451,12712
iterate_member_sessions 464,13098
add_member_subscription 482,13639
remove_member_subscription 500,14287
get_member_subscription 518,15032
iterate_member_subscriptions 528,15329

src/service/messenger/messenger_api_contact.c,244
create_contact 29,1002
destroy_contact 48,1445
get_contact_name 60,1630
set_contact_name 69,1759
get_contact_key 82,2036
increase_contact_rc 91,2173
decrease_contact_rc 100,2318
get_contact_id 112,2512
get_context_from_member 121,2637

src/service/messenger/gnunet-service-messenger_message_send.h,55
#define GNUNET_SERVICE_MESSENGER_MESSAGE_SEND_H27,957

src/service/messenger/gnunet-service-messenger_operation.c,182
create_operation 31,1045
destroy_operation 49,1480
load_operation 64,1724
save_operation 135,3707
callback_operation 181,5077
start_operation 192,5276
stop_operation 223,5989

src/service/messenger/gnunet-service-messenger_list_messages.h,416
#define GNUNET_SERVICE_MESSENGER_LIST_MESSAGES_H27,959
struct GNUNET_MESSENGER_ListMessage31,1037
  struct GNUNET_MESSENGER_ListMessage *prev;prev33,1075
  struct GNUNET_MESSENGER_ListMessage *next;next34,1120
  struct GNUNET_HashCode hash;36,1166
struct GNUNET_MESSENGER_ListMessages39,1201
  struct GNUNET_MESSENGER_ListMessage *head;head41,1240
  struct GNUNET_MESSENGER_ListMessage *tail;tail42,1285

src/service/messenger/messenger_api_message_kind.c,243
create_message_join 31,1060
create_message_leave 48,1409
create_message_name 55,1527
create_message_key 72,1836
create_message_id 89,2182
create_message_request 109,2638
create_message_delete 134,3204
create_message_subscribe 155,3768

src/service/messenger/gnunet-service-messenger_message_state.h,163
#define GNUNET_SERVICE_MESSENGER_MESSAGE_STATE_H27,959
struct GNUNET_MESSENGER_MessageState33,1101
  struct GNUNET_MESSENGER_ListMessages last_messages;35,1140

src/service/messenger/gnunet-service-messenger_operation_store.h,230
#define GNUNET_SERVICE_MESSENGER_OPERATION_STORE_H27,963
struct GNUNET_MESSENGER_OperationStore34,1108
  struct GNUNET_MESSENGER_SrvRoom *room;room36,1149
  struct GNUNET_CONTAINER_MultiHashMap *operations;operations38,1191

src/service/messenger/gnunet-service-messenger_list_handles.c,144
init_list_handles 31,1012
clear_list_handles 41,1164
add_list_handle 60,1558
remove_list_handle 75,2023
find_list_handle_by_member 97,2556

src/service/messenger/messenger_api_util.h,47
#define GNUNET_SERVICE_MESSENGER_UTIL_H27,970

src/service/messenger/gnunet-service-messenger_member_session.c,1171
create_member_session 34,1142
check_member_session_completion 86,2453
iterate_copy_history 174,4945
switch_member_session 188,5357
destroy_member_session 265,7651
reset_member_session 288,8228
close_member_session 323,9085
is_member_session_closed 333,9297
is_member_session_completed 342,9468
get_member_session_start 352,9671
get_member_session_key 364,9915
get_member_session_id 373,10141
get_member_session_public_key 382,10332
get_member_session_context 392,10545
get_member_session_contact 402,10752
verify_member_session_as_sender 411,10920
check_member_session_history 444,12080
update_member_chain_history 460,12621
update_member_session_history 476,13315
clear_member_chain_history 505,14276
clear_member_session_history 517,14627
struct GNUNET_MESSENGER_MemberSessionHistoryEntry526,14863
  struct GNUNET_HashCode hash;528,14915
  unsigned char ownership;529,14946
load_member_session_history 533,14989
load_member_session 582,16454
get_cycle_safe_next_session 665,19133
load_member_session_next 685,19496
iterate_save_member_session_history_hentries 746,21290
save_member_session_history 761,21754
save_member_session 791,22579

src/service/messenger/gnunet-service-messenger_member_store.c,644
init_member_store 36,1159
iterate_destroy_members 47,1457
clear_member_store 58,1705
get_member_contact_store 72,2188
get_member_store_key 83,2447
callback_scan_for_members 93,2699
iterate_load_next_member_sessions 114,3139
iterate_sync_member_contacts 138,3774
load_member_store 153,4083
iterate_save_members 178,4979
save_member_store 203,5595
get_store_member 224,6283
get_store_member_of 234,6568
add_store_member 250,7045
struct GNUNET_MESSENGER_ClosureIterateMembers282,7972
  GNUNET_MESSENGER_MemberIteratorCallback it;284,8020
  void *cls;cls285,8066
iterate_store_members_it 289,8094
iterate_store_members 301,8431

src/service/messenger/gnunet-service-messenger_message_handle.c,315
handle_member_session_switch 31,1021
handle_message_join 45,1561
handle_message_leave 67,2337
handle_message_key 81,2837
handle_message_peer 91,3164
handle_message_id 111,3936
handle_message_miss 128,4453
handle_message_delete 152,5227
handle_message_connection 172,6005
handle_message_subscribe 189,6565

src/service/messenger/gnunet-service-messenger_sender_session.h,220
#define GNUNET_SERVICE_MESSENGER_SENDER_SESSION_H27,955
struct GNUNET_MESSENGER_SenderSession33,1090
    struct GNUNET_MESSENGER_MemberSession *member;member37,1142
    struct GNUNET_PeerIdentity *peer;peer38,1193

src/service/messenger/gnunet-service-messenger.c,705
struct GNUNET_MESSENGER_Client34,1132
  struct GNUNET_SERVICE_Client *client;client36,1165
  struct GNUNET_MESSENGER_SrvHandle *handle;handle37,1205
struct GNUNET_MESSENGER_Service *messenger;messenger40,1254
handle_create 43,1311
handle_destroy 55,1589
check_room_initial_key 67,1894
initialize_handle_via_key 93,2630
check_room_open 122,3666
handle_room_open 130,3816
check_room_entry 169,5190
handle_room_entry 177,5342
handle_room_close 219,6914
handle_room_sync 250,7964
check_send_message 275,8820
handle_send_message 321,10242
callback_found_message 350,11302
handle_get_message 421,13427
callback_client_connect 490,15587
callback_client_disconnect 505,16022
run 525,16504

src/service/messenger/gnunet-service-messenger_list_messages.c,207
init_list_messages 31,998
clear_list_messages 41,1156
add_to_list_messages 59,1519
copy_list_messages 74,2013
remove_from_list_messages 87,2376
load_list_messages 105,2875
save_list_messages 143,3791

src/service/messenger/messenger_api_util.c,248
callback_close_channel 32,1051
delayed_disconnect_channel 42,1203
generate_free_member_id 53,1575
get_anonymous_private_key 82,2324
get_anonymous_public_key 90,2529
convert_messenger_key_to_port 106,2821
convert_peer_identity_to_id 125,3357

src/service/messenger/messenger_api_contact_store.h,259
#define GNUNET_MESSENGER_API_CONTACT_STORE_H27,984
struct GNUNET_MESSENGER_ContactStore33,1094
  struct GNUNET_CONTAINER_MultiHashMap *anonymous;anonymous35,1133
  struct GNUNET_CONTAINER_MultiHashMap *contacts;contacts36,1184
  size_t counter;38,1235

src/service/messenger/testing_messenger_cmd_join_room.c,269
struct GNUNET_MESSENGER_JoinRoomState33,1139
  char *service_label;service_label35,1179
  char *room_key;room_key36,1202
  struct GNUNET_MESSENGER_Room *room;room38,1221
join_room_run 42,1275
join_room_cleanup 155,4608
GNUNET_MESSENGER_cmd_join_room 166,4815

src/service/messenger/messenger_api_contact_store.c,246
init_contact_store 33,1081
iterate_destroy_contacts 45,1386
clear_contact_store 56,1636
select_store_contact_map 73,2253
get_store_contact_raw 94,2864
get_store_contact 112,3422
update_store_contact 155,4686
remove_store_contact 195,6078

src/service/messenger/gnunet-service-messenger_tunnel.h,385
#define GNUNET_SERVICE_MESSENGER_TUNNEL_H27,945
struct GNUNET_MESSENGER_SrvTunnel35,1148
  struct GNUNET_MESSENGER_SrvRoom *room;room37,1184
  struct GNUNET_CADET_Channel *channel;channel38,1225
  GNUNET_PEER_Id peer;40,1266
  uint32_t messenger_version;42,1290
  struct GNUNET_HashCode *peer_message;peer_message44,1321
  struct GNUNET_MESSENGER_MessageState state;45,1361

src/service/messenger/messenger_api_message_control.c,230
create_message_control 38,1308
destroy_message_control 59,1846
enqueue_message_control 85,2445
handle_message_control 123,3869
task_message_control 141,4492
iterate_message_control 182,5707
process_message_control 199,6093

src/service/messenger/gnunet-service-messenger_operation.h,545
#define GNUNET_SERVICE_MESSENGER_OPERATION_H27,951
enum GNUNET_MESSENGER_OperationType33,1090
  GNUNET_MESSENGER_OP_REQUEST 35,1128
  GNUNET_MESSENGER_OP_DELETE 36,1163
  GNUNET_MESSENGER_OP_MERGE 37,1197
  GNUNET_MESSENGER_OP_UNKNOWN 39,1231
struct GNUNET_MESSENGER_Operation44,1310
  enum GNUNET_MESSENGER_OperationType type;46,1346
  struct GNUNET_HashCode hash;48,1391
  struct GNUNET_TIME_Absolute timestamp;49,1422
  struct GNUNET_MESSENGER_OperationStore *store;store51,1464
  struct GNUNET_SCHEDULER_Task *task;task52,1513

src/service/messenger/testing_messenger.h,1188
#define MESSENGER_TESTING_H28,933
enum GNUNET_MESSENGER_TestStageJoin30,962
  GNUNET_MESSENGER_STAGE_JOIN_NONE 32,1000
  GNUNET_MESSENGER_STAGE_JOIN_OPEN_ROOM 33,1042
  GNUNET_MESSENGER_STAGE_JOIN_ENTER_ROOM 34,1089
struct GNUNET_MESSENGER_TestStage37,1141
  unsigned int door_id;39,1177
  enum GNUNET_MESSENGER_TestStageJoin join;40,1201
struct GNUNET_MESSENGER_TestStageTopology52,1502
  unsigned int peer_amount;54,1546
  unsigned int stage_amount;55,1574
  struct GNUNET_MESSENGER_TestStage *peer_stages;peer_stages57,1604
struct GNUNET_MESSENGER_RoomState70,2087
  struct GNUNET_CONTAINER_MultiPeerMap *doors;doors72,2123
  unsigned int required_doors;74,2171
struct GNUNET_MESSENGER_StartServiceState85,2497
  char *peer_label;peer_label87,2541
  char *system_label;system_label88,2561
  struct GNUNET_MESSENGER_TestStageTopology *topology;topology90,2584
  struct GNUNET_TESTING_Interpreter *is;is92,2640
  const struct GNUNET_TESTING_System *tl_system;tl_system93,2681
  struct GNUNET_MESSENGER_Handle *msg;msg94,2730
  struct GNUNET_CONTAINER_MultiHashMap *rooms;rooms95,2769
  unsigned int peer_index;97,2817
  unsigned int stage_index;98,2844

src/service/messenger/messenger_api.c,2017
GNUNET_MESSENGER_name_of_kind 43,1400
handle_room_open 99,2812
handle_room_entry 123,3375
handle_room_close 148,4008
handle_room_sync 168,4523
handle_member_id 195,5212
check_recv_message 233,6207
handle_recv_message 271,7222
handle_miss_message 320,8748
send_open_room 355,9623
send_enter_room 386,10625
send_close_room 419,11754
send_sync_room 439,12336
iterate_reset_room 461,12977
callback_reconnect 489,13544
iterate_close_room 506,13995
callback_mq_error 520,14283
reconnect 543,14931
GNUNET_MESSENGER_connect 591,16413
GNUNET_MESSENGER_disconnect 627,17410
callback_leave_message_sent 645,17816
keep_subscription_alive 657,18029
handle_discourse_subscription 683,18747
send_message_to_room 767,21038
enqueue_message_to_room 824,22760
dequeue_message_from_room 845,23403
dequeue_messages_from_room 910,24955
GNUNET_MESSENGER_get_name 920,25132
iterate_send_name_to_room 930,25318
GNUNET_MESSENGER_set_name 955,25923
get_non_anonymous_key 968,26292
GNUNET_MESSENGER_get_key 978,26516
iterate_send_key_to_room 988,26727
GNUNET_MESSENGER_set_key 1005,27172
GNUNET_MESSENGER_open_room 1033,27891
GNUNET_MESSENGER_enter_room 1061,28618
GNUNET_MESSENGER_close_room 1090,29410
struct GNUNET_MESSENGER_RoomFind1104,29658
  const struct GNUNET_MESSENGER_Contact *contact;contact1106,29693
  GNUNET_MESSENGER_MemberCallback callback;1107,29743
  size_t counter;1108,29787
  void *cls;cls1109,29805
iterate_find_room 1113,29860
GNUNET_MESSENGER_find_rooms 1139,30560
GNUNET_MESSENGER_room_get_key 1160,31207
GNUNET_MESSENGER_get_sender 1170,31380
GNUNET_MESSENGER_get_recipient 1181,31646
GNUNET_MESSENGER_contact_get_name 1192,31894
GNUNET_MESSENGER_contact_get_key 1203,32128
GNUNET_MESSENGER_contact_get_id 1214,32352
send_message_to_room_with_key 1225,32551
GNUNET_MESSENGER_send_message 1280,34056
delete_message_in_room 1324,35165
GNUNET_MESSENGER_delete_message 1343,35715
GNUNET_MESSENGER_get_message 1355,36059
GNUNET_MESSENGER_iterate_members 1383,36879

src/service/messenger/gnunet-service-messenger_peer_store.c,887
struct GNUNET_MESSENGER_PeerStoreEntry33,1098
  struct GNUNET_PeerIdentity peer;35,1139
  enum GNUNET_GenericReturnValue active;36,1174
init_peer_store 40,1224
iterate_destroy_peers 51,1526
clear_peer_store 61,1747
load_peer_store 76,2136
iterate_save_peers 135,3662
save_peer_store 153,4152
struct GNUNET_MESSENGER_ClosureVerifyPeer181,5034
  const struct GNUNET_MESSENGER_Message *message;message183,5078
  const struct GNUNET_HashCode *hash;hash184,5128
  struct GNUNET_PeerIdentity *sender;sender185,5166
verify_store_peer 189,5246
add_peer_store_entry 210,5779
get_store_service_peer_identity 239,6557
get_store_peer_of 251,6813
struct GNUNET_MESSENGER_ClosureFindPeer329,8920
  const struct GNUNET_PeerIdentity *requested;requested331,8962
  struct GNUNET_MESSENGER_PeerStoreEntry *match;match332,9009
find_store_peer 336,9100
update_store_peer 355,9480

src/service/messenger/gnunet-service-messenger_message_recv.h,55
#define GNUNET_SERVICE_MESSENGER_MESSAGE_RECV_H27,957

src/service/messenger/test_messenger_plugin_cmd_simple_join.c,1260
#define LOG(40,1315
#define BASE_DIR 42,1370
#define TIMEOUT 44,1398
#define MAX_RECEIVED 46,1477
#define MESSAGE_SIZE 48,1504
static struct GNUNET_TESTING_Command block_script;50,1532
static struct GNUNET_TESTING_Command connect_peers;52,1584
static struct GNUNET_TESTING_Command local_prepared;54,1637
static struct GNUNET_TESTING_Command start_peer;56,1691
static struct GNUNET_TESTING_Command start_service;58,1741
static struct GNUNET_TESTING_Interpreter *is;is60,1794
struct TestState62,1841
  GNUNET_TESTING_cmd_helper_write_cb write_message;68,1929
  GNUNET_TESTING_cmd_helper_finish_cb finished_cb;73,2053
  char *testdir;testdir79,2179
  char *cfgname;cfgname85,2277
  struct GNUNET_TESTING_NetjailTopology *topology;topology90,2347
  struct GNUNET_MESSENGER_TestStageTopology *chat_topology;chat_topology92,2399
struct Sender95,2463
  unsigned long long num_received;100,2537
  struct GNUNET_TIME_Relative mean_time;105,2629
  struct GNUNET_TIME_Absolute time_first;110,2721
get_waiting_for_barriers 115,2803
handle_result 145,3698
child_completed_callback 164,4135
start_testcase 190,5410
libgnunet_test_messenger_plugin_cmd_simple_join_init 367,11396
libgnunet_test_messenger_plugin_cmd_simple_join_done 389,11936

src/service/messenger/messenger_api_queue_messages.h,556
#define GNUNET_MESSENGER_API_QUEUE_MESSAGES_H27,986
struct GNUNET_MESSENGER_QueueMessage31,1063
  struct GNUNET_MESSENGER_QueueMessage *prev;prev33,1102
  struct GNUNET_MESSENGER_QueueMessage *next;next34,1148
  struct GNUNET_CRYPTO_PrivateKey sender;36,1195
  struct GNUNET_MESSENGER_Message *message;message38,1238
  struct GNUNET_MESSENGER_Message *transcript;transcript39,1282
struct GNUNET_MESSENGER_QueueMessages42,1333
  struct GNUNET_MESSENGER_QueueMessage *head;head44,1373
  struct GNUNET_MESSENGER_QueueMessage *tail;tail45,1419

src/service/messenger/messenger_api_room.c,1574
create_room 40,1274
iterate_destroy_message 77,2330
iterate_destroy_link 91,2649
iterate_destroy_subscription 102,2901
destroy_room 120,3336
is_room_available 168,4548
get_room_handle 183,4842
get_room_sender_id 192,4984
set_room_sender_id 201,5108
get_room_message 226,5697
get_room_sender 243,6105
get_room_recipient 260,6510
callback_room_message 277,6896
handle_join_message 313,7860
handle_leave_message 345,9117
handle_name_message 365,9894
handle_key_message 392,10686
handle_id_message 414,11339
handle_miss_message 451,12946
handle_private_message 469,13465
handle_delete_message 510,14568
handle_transcript_message 559,16161
handle_message 641,18598
handle_room_message 686,19824
update_room_last_message 741,21285
struct GNUNET_MESSENGER_MemberCall750,21527
  struct GNUNET_MESSENGER_Room *room;room752,21564
  GNUNET_MESSENGER_MemberCallback callback;753,21602
  void *cls;cls754,21646
iterate_local_members 758,21701
iterate_room_members 770,22005
struct GNUNET_MESSENGER_MemberFind793,22622
  const struct GNUNET_MESSENGER_Contact *contact;contact795,22659
  enum GNUNET_GenericReturnValue result;796,22709
iterate_find_member 800,22792
find_room_member 818,23174
find_linked_hash 836,23618
link_room_message 854,23953
struct GNUNET_MESSENGER_RoomLinkDeletionInfo880,24782
  struct GNUNET_MESSENGER_Room *room;room882,24829
  struct GNUNET_TIME_Relative delay;883,24867
  GNUNET_MESSENGER_RoomLinkDeletion deletion;884,24904
clear_linked_hash 889,24993
delete_linked_hash 905,25348
link_room_deletion 934,26196

src/service/messenger/gnunet-service-messenger_peer_store.h,217
#define GNUNET_SERVICE_MESSENGER_PEER_STORE_H27,953
struct GNUNET_MESSENGER_PeerStore34,1097
  struct GNUNET_MESSENGER_Service *service;service36,1133
  struct GNUNET_CONTAINER_MultiShortmap *peers;peers37,1177

src/service/messenger/messenger_api_room.h,1595
#define GNUNET_MESSENGER_API_ROOM_H27,966
struct GNUNET_MESSENGER_RoomSubscription43,1354
  struct GNUNET_MESSENGER_Room *room;room45,1397
  struct GNUNET_MESSENGER_Message *message;message46,1435
  struct GNUNET_SCHEDULER_Task *task;task47,1479
struct GNUNET_MESSENGER_RoomMessageEntry50,1521
  struct GNUNET_MESSENGER_Contact *sender;sender52,1564
  struct GNUNET_MESSENGER_Contact *recipient;recipient53,1607
  struct GNUNET_MESSENGER_Message *message;message55,1654
  enum GNUNET_MESSENGER_MessageFlags flags;56,1698
  enum GNUNET_GenericReturnValue completed;57,1742
struct GNUNET_MESSENGER_Room60,1790
  struct GNUNET_MESSENGER_Handle *handle;handle62,1821
  struct GNUNET_HashCode key;63,1863
  struct GNUNET_HashCode last_message;65,1894
  enum GNUNET_GenericReturnValue opened;67,1934
  enum GNUNET_GenericReturnValue use_handle_name;68,1975
  enum GNUNET_GenericReturnValue wait_for_sync;69,2025
  struct GNUNET_ShortHashCode *sender_id;sender_id71,2074
  struct GNUNET_MESSENGER_ListTunnels entries;73,2117
  struct GNUNET_CONTAINER_MultiHashMap *messages;messages75,2165
  struct GNUNET_CONTAINER_MultiShortmap *members;members76,2215
  struct GNUNET_CONTAINER_MultiHashMap *links;links77,2265
  struct GNUNET_CONTAINER_MultiShortmap *subscriptions;subscriptions79,2313
  struct GNUNET_MESSENGER_QueueMessages queue;81,2370
  struct GNUNET_SCHEDULER_Task *queue_task;queue_task82,2417
  struct GNUNET_MESSENGER_MessageControl *control;control84,2462
typedef void (*GNUNET_MESSENGER_RoomLinkDeletion)GNUNET_MESSENGER_RoomLinkDeletion87,2517

src/service/messenger/messenger_api_message_kind.h,51
#define GNUNET_MESSENGER_API_MESSAGE_KIND_H27,994

src/service/messenger/gnunet-service-messenger_basement.h,51
#define GNUNET_SERVICE_MESSENGER_BASEMENT_H27,949

src/service/messenger/gnunet-service-messenger_room.c,2782
create_srv_room 46,1579
iterate_destroy_tunnels 86,2761
destroy_srv_room 103,3155
get_srv_room_peer_store 146,4234
get_srv_room_member_store 155,4396
get_srv_room_message_store 164,4563
get_srv_room_operation_store 173,4734
send_room_info 182,4907
callback_room_connect 195,5293
join_room 238,6546
join_room_locally 267,7493
open_srv_room 299,8492
close_srv_room 370,10815
enter_srv_room_at 388,11238
sign_srv_room_message_by_peer 432,12594
pack_srv_room_message 447,13097
struct GNUNET_MESSENGER_ClosureSendRoom478,14293
  struct GNUNET_MESSENGER_SrvRoom *room;room480,14335
  struct GNUNET_MESSENGER_SrvHandle *handle;handle481,14376
  struct GNUNET_MESSENGER_SrvTunnel *exclude;exclude482,14421
  struct GNUNET_MESSENGER_Message *message;message483,14467
  struct GNUNET_HashCode *hash;hash484,14511
  enum GNUNET_GenericReturnValue packed;485,14543
iterate_send_room_message 489,14626
send_srv_room_message 537,16107
forward_srv_room_message 604,18035
check_srv_room_peer_status 632,18846
merge_srv_room_last_messages 657,19431
callback_room_deletion 683,20001
callback_room_merge 697,20396
delete_srv_room_message 708,20656
get_srv_room_cadet 760,22264
get_srv_room_key 769,22415
get_srv_room_tunnel 778,22573
request_room_message_step 788,22847
request_srv_room_message 845,24691
callback_room_disconnect 864,25275
callback_verify_room_message 901,26502
idle_request_room_messages 943,27887
solve_srv_room_member_collisions 974,28684
rebuild_srv_room_basement_structure 1028,30597
get_srv_room_amount_of_tunnels 1088,32087
get_srv_room_connection_flags 1097,32265
handle_room_messages 1111,32561
update_room_message 1171,34269
struct GNUNET_MESSENGER_MemberSubscriptionIteration1235,36560
  const struct GNUNET_ShortHashCode *discourse;discourse1237,36614
  struct GNUNET_TIME_Absolute start;1238,36662
iterate_member_for_subscription 1242,36741
cleanup_srv_room_discourse_messages 1262,37369
struct GNUNET_MESSENGER_MemberSessionCompletion1285,38148
  struct GNUNET_MESSENGER_MemberSessionCompletion *prev;prev1287,38198
  struct GNUNET_MESSENGER_MemberSessionCompletion *next;next1288,38255
  struct GNUNET_MESSENGER_MemberSession *session;session1290,38313
struct GNUNET_MESSENGER_MemberUpdate1293,38367
  const struct GNUNET_MESSENGER_Message *message;message1295,38406
  const struct GNUNET_HashCode *hash;hash1296,38456
  struct GNUNET_MESSENGER_MemberSessionCompletion *head;head1298,38495
  struct GNUNET_MESSENGER_MemberSessionCompletion *tail;tail1299,38552
iterate_update_member_sessions 1303,38651
callback_room_handle_message 1332,39524
get_room_data_subdir 1444,42724
load_srv_room 1456,43040
save_srv_room 1492,44038
remove_srv_room 1529,45099
remove_room_member_session 1547,45503

src/service/messenger/messenger_api_contact.h,208
#define GNUNET_MESSENGER_API_CONTACT_H27,972
struct GNUNET_MESSENGER_Contact31,1042
  char *name;name33,1076
  size_t rc;34,1090
  size_t id;35,1103
  struct GNUNET_CRYPTO_PublicKey public_key;37,1117

src/service/messenger/messenger_api_list_tunnels.c,375
init_list_tunnels 29,996
clear_list_tunnels 39,1148
compare_list_tunnels 53,1460
add_to_list_tunnels 67,1822
find_list_tunnels 89,2685
find_list_tunnels_alternate 117,3285
verify_list_tunnels_flag_token 138,3789
update_to_list_tunnels 164,4477
contains_list_tunnels 192,5294
remove_from_list_tunnels 203,5600
load_list_tunnels 224,6115
save_list_tunnels 265,7135

src/service/messenger/gnunet-service-messenger_list_handles.h,430
#define GNUNET_SERVICE_MESSENGER_LIST_HANDLES_H27,957
struct GNUNET_MESSENGER_ListHandle33,1070
  struct GNUNET_MESSENGER_ListHandle *prev;prev35,1107
  struct GNUNET_MESSENGER_ListHandle *next;next36,1151
  struct GNUNET_MESSENGER_SrvHandle *handle;handle38,1196
struct GNUNET_MESSENGER_ListHandles41,1245
  struct GNUNET_MESSENGER_ListHandle *head;head43,1283
  struct GNUNET_MESSENGER_ListHandle *tail;tail44,1327

src/service/messenger/gnunet-service-messenger_operation_store.c,363
init_operation_store 33,1086
iterate_destroy_operations 44,1395
clear_operation_store 57,1647
callback_scan_for_operations 71,2123
load_operation_store 98,2859
iterate_save_operations 118,3461
save_operation_store 139,3885
get_store_operation_type 161,4616
use_store_operation 177,5013
cancel_store_operation 211,5961
callback_store_operation 243,6884

src/service/messenger/gnunet-service-messenger_message_store.c,1458
init_message_store 33,1057
iterate_destroy_entries 50,1590
iterate_destroy_messages 63,1869
iterate_destroy_links 76,2154
clear_message_store 89,2386
struct GNUNET_MESSENGER_MessageEntryStorage116,3372
  struct GNUNET_HashCode hash;118,3418
  struct GNUNET_MESSENGER_MessageEntry entry;119,3449
#define load_message_store_attribute_failed(122,3499
#define save_message_store_attribute_failed(126,3708
load_message_store_entries 131,3931
struct GNUNET_MESSENGER_MessageLinkStorage181,5560
  struct GNUNET_HashCode hash;183,5605
  struct GNUNET_MESSENGER_MessageLink link;184,5636
load_message_store_links 188,5696
load_message_store 240,7432
struct GNUNET_MESSENGER_ClosureMessageSave283,8752
  struct GNUNET_MESSENGER_MessageStore *store;store285,8797
  struct GNUNET_DISK_FileHandle *storage;storage287,8845
iterate_save_links 291,8929
iterate_save_entries 312,9610
iterate_save_messages 329,10162
save_message_store 372,11734
contains_store_message 463,14619
get_store_message 481,15247
get_store_message_link 561,17635
add_link 597,18698
put_store_message 627,19782
delete_store_message 644,20341
struct GNUNET_MESSENGER_CleanupDiscourseMessages700,21969
  struct GNUNET_MESSENGER_ListMessages *list;list702,22020
  struct GNUNET_ShortHashCode discourse;703,22066
  struct GNUNET_TIME_Absolute timestamp;704,22107
iterate_flag_for_cleanup_discourse_message 708,22190
cleanup_store_discourse_messages_before 733,22986

src/service/messenger/gnunet-service-messenger_message_state.c,219
init_message_state 29,968
clear_message_state 38,1118
get_message_state_chain_hash 47,1270
get_message_state_merge_hash 60,1639
update_message_state 72,1882
load_message_state 95,2726
save_message_state 109,3088

src/service/messenger/testing_messenger_cmd_start_service.c,158
on_message_cb 34,1109
start_service_run 74,2548
start_service_cleanup 114,3822
start_service_traits 125,4046
GNUNET_MESSENGER_cmd_start_service 145,4598

src/service/messenger/gnunet-service-messenger_handle.h,502
#define GNUNET_SERVICE_MESSENGER_HANDLE_H27,945
struct GNUNET_MESSENGER_SrvHandle34,1118
  struct GNUNET_MESSENGER_Service *service;service36,1154
  struct GNUNET_MQ_Handle *mq;mq37,1198
  struct GNUNET_CRYPTO_PublicKey *key;key39,1230
  struct GNUNET_CONTAINER_MultiHashMap *member_ids;member_ids41,1270
  struct GNUNET_CONTAINER_MultiHashMap *next_ids;next_ids42,1322
  struct GNUNET_CONTAINER_MultiHashMap *routing;routing43,1372
  struct GNUNET_SCHEDULER_Task *notify;notify45,1422

src/service/messenger/gnunet-service-messenger_subscription.h,399
#define GNUNET_SERVICE_MESSENGER_SUBSCRIPTION_H27,951
struct GNUNET_MESSENGER_Subscription34,1096
  struct GNUNET_MESSENGER_SrvRoom *room;room36,1135
  struct GNUNET_MESSENGER_Member *member;member37,1176
  struct GNUNET_SCHEDULER_Task *task;task38,1218
  struct GNUNET_ShortHashCode discourse;40,1257
  struct GNUNET_TIME_Absolute start;42,1299
  struct GNUNET_TIME_Absolute end;43,1336

src/service/messenger/gnunet-service-messenger_service.h,731
#define GNUNET_SERVICE_MESSENGER_SERVICE_H27,947
struct GNUNET_MESSENGER_Service40,1267
  const struct GNUNET_CONFIGURATION_Handle *config;config42,1301
  struct GNUNET_SERVICE_Handle *service;service43,1353
  struct GNUNET_SCHEDULER_Task *shutdown;shutdown45,1395
  struct GNUNET_PeerIdentity *peer;peer47,1438
  char *dir;dir48,1474
  enum GNUNET_GenericReturnValue auto_connecting;50,1488
  enum GNUNET_GenericReturnValue auto_routing;51,1538
  unsigned long long min_routers;52,1585
  struct GNUNET_CADET_Handle *cadet;cadet54,1620
  struct GNUNET_MESSENGER_ContactStore contact_store;56,1658
  struct GNUNET_MESSENGER_ListHandles handles;58,1713
  struct GNUNET_CONTAINER_MultiHashMap *rooms;rooms60,1761

src/service/messenger/gnunet-service-messenger_member_store.h,349
#define GNUNET_SERVICE_MESSENGER_MEMBER_STORE_H27,957
struct GNUNET_MESSENGER_MemberStore38,1181
  struct GNUNET_MESSENGER_SrvRoom *room;room40,1219
  struct GNUNET_CONTAINER_MultiShortmap *members;members42,1261
typedef enum GNUNET_GenericReturnValue (*GNUNET_MESSENGER_MemberIteratorCallback)GNUNET_MESSENGER_MemberIteratorCallback45,1315

src/service/messenger/gnunet-service-messenger_message_send.c,434
struct GNUNET_MESSENGER_MemberNotify36,1274
  struct GNUNET_MESSENGER_SrvRoom *room;room38,1313
  struct GNUNET_MESSENGER_SrvHandle *handle;handle39,1354
  struct GNUNET_MESSENGER_MemberSession *session;session40,1399
notify_about_members 44,1465
iterate_notify_about_members 103,3752
send_message_join 128,4573
send_message_key 170,5967
send_message_peer 180,6273
send_message_id 195,6772
send_message_request 206,7137

src/service/messenger/gnunet-service-messenger_handle.c,882
struct GNUNET_MESSENGER_NextMemberId35,1124
  struct GNUNET_ShortHashCode id;37,1163
  enum GNUNET_GenericReturnValue reset;38,1197
create_srv_handle 42,1276
iterate_close_rooms 64,1936
iterate_free_values 75,2238
destroy_srv_handle 85,2415
set_srv_handle_key 109,3180
get_srv_handle_key 128,3644
get_srv_handle_data_subdir 137,3773
create_handle_member_id 153,4279
get_srv_handle_member_id 184,5225
change_srv_handle_member_id 194,5506
open_srv_handle_room 234,6826
entry_srv_handle_room 256,7578
close_srv_handle_room 272,8155
is_srv_handle_routing 303,9085
sync_srv_handle_messages 313,9336
send_srv_handle_message 335,10055
get_next_member_session_context 377,11390
get_handle_member_session 388,11705
notify_srv_handle_message 423,12811
iterate_next_member_ids 531,16437
task_notify_srv_handle_member_id 559,17254
notify_srv_handle_member_id 571,17579

src/service/messenger/gnunet-service-messenger_basement.c,96
count_of_tunnels 29,960
should_connect_tunnel_to 44,1265
required_connection_between 56,1502

src/service/messenger/gnunet-service-messenger_member.h,477
#define GNUNET_SERVICE_MESSENGER_MEMBER_H27,945
struct GNUNET_MESSENGER_Member32,1091
  struct GNUNET_MESSENGER_MemberStore *store;store34,1124
  struct GNUNET_ShortHashCode id;35,1170
  struct GNUNET_CONTAINER_MultiHashMap *sessions;sessions37,1205
  struct GNUNET_CONTAINER_MultiShortmap *subscriptions;subscriptions38,1255
typedef enum GNUNET_GenericReturnValue (*GNUNET_MESSENGER_SubscriptionIteratorCallback)GNUNET_MESSENGER_SubscriptionIteratorCallback41,1315

src/service/messenger/messenger_api_queue_messages.c,120
init_queue_messages 32,1062
clear_queue_messages 42,1222
enqueue_to_messages 67,1733
dequeue_from_messages 118,3217

src/service/messenger/gnunet-service-messenger_message_kind.c,153
create_message_info 33,1074
create_message_peer 51,1428
create_message_miss 74,1909
create_message_merge 95,2345
create_message_connection 114,2793

src/service/messenger/messenger_api_message.c,1778
struct GNUNET_MESSENGER_MessageSignature32,1078
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;34,1121
  struct GNUNET_HashCode hash GNUNET_PACKED;35,1173
struct GNUNET_MESSENGER_ShortMessage38,1222
  enum GNUNET_MESSENGER_MessageKind kind;40,1261
  struct GNUNET_MESSENGER_MessageBody body;41,1303
create_message 45,1384
copy_message 90,2535
copy_message_header 158,4718
destroy_message_body 173,5123
cleanup_message 217,6209
destroy_message 226,6372
is_message_session_bound 237,6587
fold_short_message 253,7065
unfold_short_message 264,7426
#define member_size(276,7794
get_message_body_kind_size 279,7876
typedef uint32_t kind_t;355,10793
get_message_kind_size 358,10828
get_message_body_size 377,11370
get_message_size 424,12733
get_short_message_size 443,13231
calc_usual_padding 458,13715
#define max(476,14099
calc_padded_length 479,14149
#define min(505,14753
#define encode_step_ext(507,14787
#define encode_step(512,14981
#define encode_step_key(516,15110
#define encode_step_signature(526,15689
encode_message_body 537,16272
encode_message 674,21705
encode_short_message 704,22583
#define decode_step_ext(726,23128
#define decode_step(731,23322
#define decode_step_malloc(735,23451
#define decode_step_key(741,23742
decode_message_body 754,24431
decode_message 892,28932
decode_short_message 954,30603
hash_message 995,31567
sign_message 1011,31967
sign_message_by_peer 1038,32843
verify_message 1067,33937
verify_message_by_peer 1090,34668
encrypt_message 1114,35498
decrypt_message 1159,36939
transcribe_message 1207,38337
read_transcript_message 1245,39390
pack_message 1271,40102
is_peer_message 1323,41383
is_service_message 1342,41791
filter_message_sending 1400,43919
get_message_discourse 1458,46143

src/service/messenger/messenger_api_message.h,510
#define GNUNET_MESSENGER_API_MESSAGE_H27,984
#define GNUNET_MESSENGER_MAX_MESSAGE_SIZE 33,1093
#define GNUNET_MESSENGER_PADDING_MIN 36,1233
#define GNUNET_MESSENGER_PADDING_LEVEL0 37,1304
#define GNUNET_MESSENGER_PADDING_LEVEL1 38,1350
#define GNUNET_MESSENGER_PADDING_LEVEL2 39,1397
typedef void (*GNUNET_MESSENGER_SignFunction)GNUNET_MESSENGER_SignFunction281,9331
enum GNUNET_MESSENGER_PackMode289,9519
  GNUNET_MESSENGER_PACK_MODE_ENVELOPE 291,9552
  GNUNET_MESSENGER_PACK_MODE_UNKNOWN 292,9597

src/service/messenger/testing_messenger.c,310
GNUNET_MESSENGER_create_stage_skip 32,1001
GNUNET_MESSENGER_create_stage_open_room 42,1208
GNUNET_MESSENGER_create_stage_enter_room 52,1425
GNUNET_MESSENGER_create_topo 62,1676
GNUNET_MESSENGER_destroy_topo 85,2440
GNUNET_MESSENGER_create_room_state 95,2719
GNUNET_MESSENGER_destroy_room_state 108,3129

src/service/messenger/gnunet-service-messenger_message_recv.c,211
forward_about_members 33,1120
iterate_forward_members 68,2471
recv_message_info 88,3062
recv_message_peer 146,4839
recv_message_miss 168,5533
callback_found_message 184,6024
recv_message_request 213,6798

src/service/messenger/messenger-testing-cmds.h,202
#define MESSENGER_TESTING_CMDS_H27,942
#define GNUNET_MESSENGER_MAKE_DECL_SIMPLE_TRAIT(54,1887
#define GNUNET_MESSENGER_MAKE_IMPL_SIMPLE_TRAIT(68,2493
#define GNUNET_MESSENGER_SIMPLE_TRAITS(95,3917

src/service/messenger/gnunet-service-messenger.h,1213
#define GNUNET_SERVICE_MESSENGER_H27,931
struct GNUNET_MESSENGER_CreateMessage34,1048
  struct GNUNET_MessageHeader header;36,1088
struct GNUNET_MESSENGER_DestroyMessage42,1184
  struct GNUNET_MessageHeader header;44,1225
struct GNUNET_MESSENGER_RoomMessage50,1329
  struct GNUNET_MessageHeader header;52,1367
  struct GNUNET_PeerIdentity door;54,1406
  struct GNUNET_HashCode key;55,1441
  struct GNUNET_HashCode previous;56,1471
struct GNUNET_MESSENGER_MemberMessage62,1582
  struct GNUNET_MessageHeader header;64,1622
  struct GNUNET_HashCode key;66,1661
  struct GNUNET_ShortHashCode id;67,1691
  uint32_t reset;68,1725
struct GNUNET_MESSENGER_SendMessage74,1796
  struct GNUNET_MessageHeader header;76,1834
  struct GNUNET_HashCode key;78,1873
struct GNUNET_MESSENGER_GetMessage84,1959
  struct GNUNET_MessageHeader header;86,1996
  struct GNUNET_HashCode key;88,2035
  struct GNUNET_HashCode hash;89,2065
struct GNUNET_MESSENGER_RecvMessage95,2152
  struct GNUNET_MessageHeader header;97,2190
  struct GNUNET_HashCode key;99,2229
  struct GNUNET_HashCode sender;100,2259
  struct GNUNET_HashCode context;101,2292
  struct GNUNET_HashCode hash;102,2326
  uint32_t flags;103,2357

src/service/messenger/test_messenger_anonymous.c,444
#define TOTAL_TIMEOUT 34,1112
#define BASE_TIMEOUT 40,1329
static int status 42,1411
static struct GNUNET_SCHEDULER_Task *die_task die_task44,1435
static struct GNUNET_SCHEDULER_Task *op_task op_task45,1489
static struct GNUNET_SCHEDULER_Task *it_task it_task46,1542
struct GNUNET_MESSENGER_Handle *messenger messenger48,1596
end 51,1659
end_badly 78,1986
end_operation 88,2107
on_iteration 111,2558
run 159,3414
main 182,4046

src/service/messenger/messenger_api_list_tunnels.h,506
#define GNUNET_MESSENGER_API_LIST_TUNNELS_H27,994
struct GNUNET_MESSENGER_ListTunnel32,1107
  struct GNUNET_MESSENGER_ListTunnel *prev;prev34,1144
  struct GNUNET_MESSENGER_ListTunnel *next;next35,1188
  GNUNET_PEER_Id peer;37,1233
  struct GNUNET_HashCode *hash;hash38,1256
  struct GNUNET_MESSENGER_MessageConnection connection;40,1289
struct GNUNET_MESSENGER_ListTunnels43,1349
  struct GNUNET_MESSENGER_ListTunnel *head;head45,1387
  struct GNUNET_MESSENGER_ListTunnel *tail;tail46,1431

src/service/messenger/gnunet-service-messenger_room.h,1080
#define GNUNET_SERVICE_MESSENGER_ROOM_H27,941
#define GNUNET_MESSENGER_IDLE_DELAY 44,1516
#define GNUNET_MESSENGER_REQUEST_DELAY 47,1636
#define GNUNET_MESSENGER_MERGE_DELAY 50,1759
struct GNUNET_MESSENGER_SrvRoom56,1956
  struct GNUNET_MESSENGER_Service *service;service58,1990
  struct GNUNET_MESSENGER_SrvHandle *host;host59,2034
  struct GNUNET_CADET_Port *port;port60,2077
  struct GNUNET_HashCode key;62,2112
  struct GNUNET_CONTAINER_MultiPeerMap *tunnels;tunnels64,2143
  struct GNUNET_MESSENGER_PeerStore peer_store;66,2193
  struct GNUNET_MESSENGER_MemberStore member_store;67,2241
  struct GNUNET_MESSENGER_MessageStore message_store;68,2293
  struct GNUNET_MESSENGER_OperationStore operation_store;69,2347
  struct GNUNET_MESSENGER_ListTunnels basement;71,2406
  struct GNUNET_MESSENGER_MessageState state;72,2454
  struct GNUNET_HashCode *peer_message;peer_message74,2501
  struct GNUNET_MESSENGER_ListMessages handling;76,2542
  struct GNUNET_SCHEDULER_Task *idle;idle77,2591
typedef void (GNUNET_MESSENGER_MessageRequestCallback)306,10660

src/service/messenger/messenger_api_message_control.h,980
#define GNUNET_MESSENGER_API_MESSAGE_CONTROL_H27,994
struct GNUNET_MESSENGER_MessageControlQueue36,1211
  struct GNUNET_MESSENGER_MessageControl *control;control38,1257
  struct GNUNET_HashCode sender;40,1309
  struct GNUNET_HashCode context;41,1342
  struct GNUNET_HashCode hash;42,1376
  struct GNUNET_MESSENGER_Message *message;message44,1408
  enum GNUNET_MESSENGER_MessageFlags flags;45,1452
  struct GNUNET_SCHEDULER_Task *task;task46,1496
  struct GNUNET_MESSENGER_MessageControlQueue *prev;prev48,1535
  struct GNUNET_MESSENGER_MessageControlQueue *next;next49,1588
struct GNUNET_MESSENGER_MessageControl54,1676
  struct GNUNET_MESSENGER_Room *room;room56,1717
  struct GNUNET_CONTAINER_MultiShortmap *peer_messages;peer_messages58,1756
  struct GNUNET_CONTAINER_MultiShortmap *member_messages;member_messages59,1812
  struct GNUNET_MESSENGER_MessageControlQueue *head;head61,1871
  struct GNUNET_MESSENGER_MessageControlQueue *tail;tail62,1924

src/service/messenger/test_messenger.c,568
#define TOTAL_TIMEOUT 34,1102
#define BASE_TIMEOUT 40,1319
#define TESTER_NAME 42,1401
static int status 44,1431
static struct GNUNET_SCHEDULER_Task *die_task die_task46,1455
static struct GNUNET_SCHEDULER_Task *op_task op_task47,1509
static struct GNUNET_SCHEDULER_Task *it_task it_task48,1562
struct GNUNET_MESSENGER_Handle *messenger messenger50,1616
static struct GNUNET_CRYPTO_PrivateKey identity;52,1667
end 55,1729
end_badly 83,2103
end_operation 93,2224
static int identity_counter 109,2535
on_iteration 118,2709
run 182,4252
main 210,5031

src/service/messenger/gnunet-service-messenger_tunnel.c,713
create_tunnel 37,1268
destroy_tunnel 61,1798
bind_tunnel 80,2152
callback_tunnel_disconnect 97,2516
check_tunnel_message 118,3099
update_tunnel_last_message 166,4612
handle_tunnel_message 189,5352
connect_tunnel 255,7296
disconnect_tunnel 286,8471
is_tunnel_connected 300,8707
struct GNUNET_MESSENGER_MessageSent308,8863
  struct GNUNET_MESSENGER_SrvTunnel *tunnel;tunnel310,8901
  struct GNUNET_HashCode hash;311,8946
callback_tunnel_sent 315,8993
send_tunnel_envelope 327,9194
send_tunnel_message 348,9868
forward_tunnel_message 377,10578
get_tunnel_peer_message 401,11347
get_tunnel_peer_identity 410,11490
get_tunnel_messenger_version 420,11711
update_tunnel_messenger_version 429,11890

src/service/messenger/testing_messenger_cmd_stop_service.c,219
struct GNUNET_MESSENGER_StopServiceState32,1064
  char *service_label;service_label34,1107
cleanup_rooms_cb 38,1172
stop_service_run 49,1415
stop_service_cleanup 72,2161
GNUNET_MESSENGER_cmd_stop_service 82,2343

src/service/messenger/gnunet-service-messenger_subscription.c,233
create_subscription 33,1104
destroy_subscription 60,1948
get_subscription_discourse 71,2202
has_subscription_of_timestamp 79,2394
update_subscription 92,2788
task_subscription_exit 110,3329
update_subscription_timing 135,3941

src/service/messenger/gnunet-service-messenger_message_kind.h,55
#define GNUNET_SERVICE_MESSENGER_MESSAGE_KIND_H27,957

src/service/messenger/gnunet-service-messenger_member_session.h,703
#define GNUNET_SERVICE_MESSENGER_MEMBER_SESSION_H27,961
struct GNUNET_MESSENGER_MemberSession37,1205
  struct GNUNET_MESSENGER_Member *member;member39,1245
  struct GNUNET_CRYPTO_PublicKey public_key;41,1288
  struct GNUNET_HashCode context;42,1333
  struct GNUNET_MESSENGER_Contact *contact;contact44,1368
  struct GNUNET_CONTAINER_MultiHashMap *history;history46,1413
  struct GNUNET_MESSENGER_ListMessages messages;47,1462
  struct GNUNET_MESSENGER_MemberSession *prev;prev49,1512
  struct GNUNET_MESSENGER_MemberSession *next;next50,1559
  struct GNUNET_TIME_Absolute start;52,1607
  enum GNUNET_GenericReturnValue closed;54,1645
  enum GNUNET_GenericReturnValue completed;55,1686

src/service/messenger/messenger_api_handle.h,661
#define GNUNET_MESSENGER_API_HANDLE_H27,970
struct GNUNET_MESSENGER_Handle35,1120
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1153
  struct GNUNET_MQ_Handle *mq;mq39,1203
  GNUNET_MESSENGER_MessageCallback msg_callback;41,1235
  void *msg_cls;msg_cls42,1284
  char *name;name44,1302
  struct GNUNET_CRYPTO_PrivateKey *key;key45,1316
  struct GNUNET_CRYPTO_PublicKey *pubkey;pubkey46,1356
  struct GNUNET_TIME_Relative reconnect_time;48,1399
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task49,1445
  struct GNUNET_MESSENGER_ContactStore contact_store;51,1494
  struct GNUNET_CONTAINER_MultiHashMap *rooms;rooms53,1549

src/service/messenger/gnunet-service-messenger_message_store.h,802
#define GNUNET_SERVICE_MESSENGER_MESSAGE_STORE_H27,959
struct GNUNET_MESSENGER_MessageEntry31,1039
  off_t offset;33,1078
  uint16_t length;34,1094
struct GNUNET_MESSENGER_MessageLink39,1151
  uint8_t multiple;41,1189
  struct GNUNET_HashCode first;43,1210
  struct GNUNET_HashCode second;44,1242
struct GNUNET_MESSENGER_MessageStore47,1279
  struct GNUNET_DISK_FileHandle *storage_messages;storage_messages49,1318
  struct GNUNET_CONTAINER_MultiHashMap *entries;entries51,1370
  struct GNUNET_CONTAINER_MultiHashMap *messages;messages52,1419
  struct GNUNET_CONTAINER_MultiHashMap *links;links53,1469
  struct GNUNET_CONTAINER_MultiHashMap *discourses;discourses54,1516
  enum GNUNET_GenericReturnValue rewrite_entries;56,1569
  enum GNUNET_GenericReturnValue write_links;57,1619

src/service/statistics/statistics_api.c,2595
#define SET_TRANSMIT_TIMEOUT 38,1281
#define LOG(41,1378
enum ActionType46,1485
  ACTION_GET,51,1533
  ACTION_SET,56,1578
  ACTION_UPDATE,61,1626
  ACTION_WATCH66,1676
struct GNUNET_STATISTICS_WatchEntry73,1750
  char *subsystem;subsystem78,1855
  char *name;name83,1938
  GNUNET_STATISTICS_Iterator proc;88,1987
  void *proc_cls;proc_cls93,2060
struct GNUNET_STATISTICS_GetHandle100,2137
  struct GNUNET_STATISTICS_GetHandle *next;next105,2221
  struct GNUNET_STATISTICS_GetHandle *prev;prev110,2313
  struct GNUNET_STATISTICS_Handle *sh;sh115,2399
  char *subsystem;subsystem120,2507
  char *name;name125,2591
  GNUNET_STATISTICS_Callback cont;130,2669
  GNUNET_STATISTICS_Iterator proc;135,2763
  void *cls;cls140,2849
  struct GNUNET_TIME_Absolute timeout;145,2905
  uint64_t value;150,2980
  int make_persistent;155,3045
  int aborted;160,3143
  enum ActionType type;165,3245
  uint16_t msize;170,3337
struct GNUNET_STATISTICS_Handle177,3395
  char *subsystem;subsystem182,3469
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg187,3528
  struct GNUNET_MQ_Handle *mq;mq192,3625
  struct GNUNET_STATISTICS_GetHandle *action_head;action_head198,3754
  struct GNUNET_STATISTICS_GetHandle *action_tail;action_tail203,3877
  struct GNUNET_STATISTICS_GetHandle *current;current210,4080
  struct GNUNET_STATISTICS_WatchEntry **watches;watches215,4169
  struct GNUNET_SCHEDULER_Task *backoff_task;backoff_task220,4289
  struct GNUNET_SCHEDULER_Task *destroy_task;destroy_task225,4385
  struct GNUNET_TIME_Relative backoff;230,4478
  uint64_t peak_heap_size;235,4585
  uint64_t peak_rss;240,4688
  unsigned int watches_size;245,4757
  int do_destroy;251,4880
  int receiving;256,4961
update_memory_statistics 265,5111
schedule_watch_request 337,6607
free_action_item 375,7639
do_disconnect 389,7895
check_statistics_value 422,8570
handle_statistics_value 453,9401
handle_statistics_watch_value 498,10888
mq_error_handler 534,11914
do_destroy 562,12492
handle_disconnect_confirm 584,13063
handle_statistics_end 615,13975
try_connect 650,14748
reconnect_task 715,16900
reconnect_later 730,17131
transmit_get 771,18426
transmit_watch 806,19515
transmit_set 845,20777
GNUNET_STATISTICS_create 889,22322
GNUNET_STATISTICS_destroy 916,23070
schedule_action 1001,25515
GNUNET_STATISTICS_get 1065,27133
GNUNET_STATISTICS_get_cancel 1106,28393
GNUNET_STATISTICS_watch 1136,29220
GNUNET_STATISTICS_watch_cancel 1171,30342
add_setter_action 1214,31537
GNUNET_STATISTICS_set 1307,33930
GNUNET_STATISTICS_update 1324,34370

src/service/statistics/test_statistics_api_watch_zero_value.c,341
static int ok;28,1044
static int ok2;30,1060
static struct GNUNET_STATISTICS_Handle *h;h32,1077
static struct GNUNET_STATISTICS_Handle *h2;h234,1121
static struct GNUNET_SCHEDULER_Task *shutdown_task;shutdown_task36,1166
force_shutdown 40,1232
normal_shutdown 50,1450
watch_1 58,1584
watch_2 94,2357
run 132,3218
main 157,4056

src/service/statistics/test_statistics_api_watch.c,316
static int ok;30,1043
static struct GNUNET_STATISTICS_Handle *h;h32,1059
static struct GNUNET_STATISTICS_Handle *h2;h234,1103
static struct GNUNET_SCHEDULER_Task *shutdown_task;shutdown_task36,1148
force_shutdown 40,1214
normal_shutdown 50,1432
watch_1 58,1566
watch_2 77,1949
run 96,2333
main 119,3204

src/service/statistics/statistics.h,839
#define STATISTICS_H26,895
struct GNUNET_STATISTICS_ReplyMessage40,1160
  struct GNUNET_MessageHeader header;45,1261
  uint32_t uid GNUNET_PACKED;53,1509
  uint64_t value GNUNET_PACKED;58,1568
#define GNUNET_STATISTICS_PERSIST_BIT 65,1749
#define GNUNET_STATISTICS_SETFLAG_ABSOLUTE 70,1868
#define GNUNET_STATISTICS_SETFLAG_RELATIVE 75,1967
#define GNUNET_STATISTICS_SETFLAG_PERSISTENT 83,2245
struct GNUNET_STATISTICS_SetMessage91,2422
  struct GNUNET_MessageHeader header;96,2519
  uint32_t flags GNUNET_PACKED;102,2680
  uint64_t value GNUNET_PACKED;108,2844
struct GNUNET_STATISTICS_WatchValueMessage115,2940
  struct GNUNET_MessageHeader header;120,3052
  uint32_t flags GNUNET_PACKED;126,3213
  uint32_t wid GNUNET_PACKED;134,3417
  uint32_t reserved GNUNET_PACKED;139,3486
  uint64_t value GNUNET_PACKED;145,3653

src/service/statistics/gnunet-service-statistics.c,1925
struct WatchEntry36,1147
  struct WatchEntry *next;next41,1225
  struct WatchEntry *prev;prev46,1311
  struct ClientEntry *ce;ce51,1394
  uint64_t last_value;56,1501
  uint32_t wid;61,1602
  int last_value_set;67,1726
struct StatsEntry81,1920
  struct StatsEntry *next;next86,1980
  struct StatsEntry *prev;prev91,2048
  struct SubsystemEntry *subsystem;subsystem96,2126
  const char *name;name102,2263
  struct WatchEntry *we_head;we_head107,2360
  struct WatchEntry *we_tail;we_tail112,2467
  uint64_t value;117,2526
  uint32_t uid;122,2573
  int persistent;127,2633
  int set;133,2747
struct SubsystemEntry141,2864
  struct SubsystemEntry *next;next146,2935
  struct SubsystemEntry *prev;prev151,3014
  struct StatsEntry *stat_head;stat_head156,3111
  struct StatsEntry *stat_tail;stat_tail161,3209
  const char *service;service167,3357
struct ClientEntry174,3410
  struct GNUNET_SERVICE_Client *client;client179,3477
  struct GNUNET_MQ_Handle *mq;mq184,3564
  struct SubsystemEntry *subsystem;subsystem189,3669
  uint32_t max_wid;194,3768
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg201,3823
static struct SubsystemEntry *sub_head;sub_head206,3947
static struct SubsystemEntry *sub_tail;sub_tail211,4057
static unsigned int client_count;216,4138
static struct GNUNET_NotificationContext *nc;nc221,4210
static uint32_t uidgen;226,4308
static int in_shutdown;231,4408
save 238,4494
transmit 329,7458
client_connect_cb 366,8807
check_get 389,9306
handle_get 416,9994
notify_change 465,11505
find_subsystem_entry 503,12608
find_stat_entry 544,13670
check_set 563,14069
handle_set 590,14737
check_watch 706,18282
handle_watch 733,18972
handle_disconnect 801,21081
do_shutdown 817,21477
shutdown_task 854,22239
client_disconnect_cb 871,22565
inject_message 915,23717
load 937,24313
run 1001,26064
GNUNET_STATISTICS_memory_init 1048,27458

src/service/statistics/test_statistics_api.c,263
static struct GNUNET_STATISTICS_Handle *h;h30,1021
static struct GNUNET_STATISTICS_GetHandle *g;g32,1065
do_shutdown 36,1125
check_1 49,1290
check_2 69,1826
check_3 89,2362
next_fin 109,2900
next 122,3075
run 136,3442
run_more 163,4280
main 181,4856

src/service/statistics/test_statistics_api_loop.c,134
#define ROUNDS 28,983
static struct GNUNET_STATISTICS_Handle *h;h30,1013
check_1 34,1069
next 48,1404
run 60,1571
main 85,2261

src/service/nat-auto/gnunet-service-nat-auto.c,1410
#define AUTOCONFIG_TIMEOUT 48,1475
struct ClientHandle55,1640
  struct ClientHandle *next;next60,1694
  struct ClientHandle *prev;prev65,1756
  struct GNUNET_SERVICE_Client *client;client70,1855
  struct GNUNET_MQ_Handle *mq;mq75,1962
struct AutoconfigContext82,2051
  struct AutoconfigContext *prev;prev87,2110
  struct AutoconfigContext *next;next92,2177
  struct ClientHandle *ch;ch97,2262
  struct GNUNET_CONFIGURATION_Handle *c;c102,2338
  struct GNUNET_CONFIGURATION_Handle *orig;orig107,2435
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task112,2532
  int enable_upnpc;119,2741
  enum GNUNET_NAT_StatusCode status_code;124,2816
  enum GNUNET_NAT_Type type;129,2910
static struct ClientHandle *ch_head;ch_head136,2975
static struct ClientHandle *ch_tail;ch_tail141,3044
static struct AutoconfigContext *ac_head;ac_head146,3134
static struct AutoconfigContext *ac_tail;ac_tail151,3229
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg156,3320
static struct GNUNET_STATISTICS_Handle *stats;stats161,3420
check_autoconfig_request 173,3707
terminate_ac_activities 187,4046
conclude_autoconfig_request 204,4393
check_autoconfig_finished 253,5856
update_enable_upnpc_option 268,6192
handle_autoconfig_request 301,7034
shutdown_task 367,9009
run 396,9563
client_connect_cb 417,10149
client_disconnect_cb 441,10730
GNUNET_ARM_memory_init 478,11661

src/service/nat-auto/nat_auto_api_test.c,1464
#define LOG(31,1150
#define NAT_SERVER_TIMEOUT 33,1222
struct NatActivity39,1370
  struct NatActivity *next;next44,1438
  struct NatActivity *prev;prev49,1514
  struct GNUNET_NETWORK_Handle *sock;sock54,1595
  struct GNUNET_NAT_AUTO_Test *h;h59,1681
  struct GNUNET_SCHEDULER_Task *rtask;rtask64,1776
struct ClientActivity71,1892
  struct ClientActivity *next;next76,1963
  struct ClientActivity *prev;prev81,2042
  struct GNUNET_MQ_Handle *mq;mq86,2126
  struct GNUNET_NAT_AUTO_Test *h;h91,2203
struct GNUNET_NAT_AUTO_Test98,2275
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg103,2341
  GNUNET_NAT_TestCallback report;108,2445
  void *report_cls;report_cls113,2520
  struct GNUNET_NAT_Handle *nat;nat118,2589
  struct GNUNET_NETWORK_Handle *lsock;lsock123,2673
  struct NatActivity *na_head;na_head128,2762
  struct NatActivity *na_tail;na_tail133,2843
  struct ClientActivity *ca_head;ca_head138,2927
  struct ClientActivity *ca_tail;ca_tail143,3014
  struct GNUNET_SCHEDULER_Task *ltask;ltask148,3114
  struct GNUNET_SCHEDULER_Task *ttask;ttask153,3212
  char *section_name;section_name158,3301
  int proto;163,3369
  uint16_t data;168,3448
  enum GNUNET_NAT_StatusCode status;173,3537
reversal_cb 186,3854
do_udp_read 212,4504
do_read 247,5574
do_accept 284,6579
mq_error_handler 321,7756
addr_cb 345,8526
do_fail 405,10302
GNUNET_NAT_AUTO_test_start 426,10942
GNUNET_NAT_AUTO_test_stop 558,15443

src/service/nat-auto/nat-auto.h,507
#define NAT_AUTO_H28,967
struct GNUNET_NAT_AUTO_TestMessage38,1141
  struct GNUNET_MessageHeader header;43,1242
  uint32_t dst_ipv4;48,1321
  uint16_t dport;53,1404
  uint16_t data;58,1504
  int32_t is_tcp;63,1580
struct GNUNET_NAT_AUTO_AutoconfigRequestMessage70,1657
  struct GNUNET_MessageHeader header;75,1783
struct GNUNET_NAT_AUTO_AutoconfigResultMessage84,1951
  struct GNUNET_MessageHeader header;89,2075
  int32_t status_code GNUNET_PACKED;94,2171
  int32_t type GNUNET_PACKED;99,2260

src/service/nat-auto/gnunet-service-nat-auto_legacy.c,1866
#define LOG(33,1076
#define TIMEOUT 39,1211
#define NAT_SERVER_TIMEOUT 41,1289
enum AutoPhase47,1430
  AUTO_INIT 52,1485
  AUTO_EXTERNAL_IP,57,1542
  AUTO_STUN,62,1602
  AUTO_LOCAL_IP,67,1655
  AUTO_NAT_PUNCHED,72,1715
  AUTO_UPNPC,77,1778
  AUTO_ICMP_SERVER,82,1837
  AUTO_ICMP_CLIENT,87,1902
  AUTO_DONE92,1964
struct GNUNET_NAT_AutoHandle99,2034
  struct GNUNET_NAT_Test *tst;tst104,2113
  GNUNET_NAT_AutoResultCallback fin_cb;109,2190
  void *fin_cb_cls;fin_cb_cls114,2271
  struct GNUNET_NAT_ExternalHandle *eh;eh119,2374
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg124,2490
  struct GNUNET_CONFIGURATION_Handle *initial_cfg;initial_cfg129,2606
  struct GNUNET_SCHEDULER_Task *task;task134,2708
  struct GNUNET_MQ_Handle *mq;mq139,2804
  enum AutoPhase phase;144,2879
  enum GNUNET_NAT_Type type;149,2942
  int have_v6;154,3006
  int upnp_set_external_address;159,3082
  int connected_back;164,3174
  char *stun_ip;stun_ip169,3239
  unsigned int stun_port;171,3257
  int internal_ip_is_public;176,3345
  enum GNUNET_NAT_StatusCode ret;181,3442
static struct GNUNET_NETWORK_Handle *lsock4;lsock4188,3534
static struct GNUNET_SCHEDULER_Task *ltask4;ltask4193,3619
static unsigned long long port 198,3731
static char *stun_server stun_server200,3771
static unsigned int stun_port 202,3817
process_stun_reply 215,4011
stop_stun 232,4434
do_udp_read 258,4876
bind_v4 320,6412
request_callback 351,7090
result_callback 373,7661
reversal_test 399,8464
set_external_ipv4 421,9057
test_external_ip 469,10411
test_stun 487,10844
process_if 551,12912
test_local_ip 622,14978
mq_error_handler 643,15627
test_nat_punched 661,15930
test_upnpc 714,17352
test_icmp_server 742,18196
test_icmp_client 813,20075
next_phase 867,21567
GNUNET_NAT_autoconfig_start 1035,26856
GNUNET_NAT_autoconfig_cancel 1065,27706

src/service/nat-auto/gnunet-nat-auto_legacy.c,1428
#define LOG(31,1096
#define NAT_SERVER_TIMEOUT 33,1163
struct NatActivity39,1311
  struct NatActivity *next;next44,1379
  struct NatActivity *prev;prev49,1455
  struct GNUNET_NETWORK_Handle *sock;sock54,1536
  struct GNUNET_NAT_Test *h;h59,1622
  struct GNUNET_SCHEDULER_Task *rtask;rtask64,1712
struct ClientActivity71,1828
  struct ClientActivity *next;next76,1899
  struct ClientActivity *prev;prev81,1978
  struct GNUNET_MQ_Handle *mq;mq86,2062
  struct GNUNET_NAT_Test *h;h91,2139
struct GNUNET_NAT_Test98,2206
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg103,2267
  GNUNET_NAT_TestCallback report;108,2371
  void *report_cls;report_cls113,2446
  struct GNUNET_NAT_Handle *nat;nat118,2515
  struct GNUNET_NETWORK_Handle *lsock;lsock123,2599
  struct NatActivity *na_head;na_head128,2688
  struct NatActivity *na_tail;na_tail133,2769
  struct ClientActivity *ca_head;ca_head138,2853
  struct ClientActivity *ca_tail;ca_tail143,2940
  struct GNUNET_SCHEDULER_Task *ltask;ltask148,3040
  struct GNUNET_SCHEDULER_Task *ttask;ttask153,3138
  int is_tcp;158,3228
  uint16_t data;163,3308
  uint16_t adv_port;168,3378
  enum GNUNET_NAT_StatusCode status;173,3471
reversal_cb 186,3788
do_udp_read 212,4428
do_read 247,5493
do_accept 284,6488
mq_error_handler 321,7660
addr_cb 342,8257
do_timeout 400,9963
GNUNET_NAT_test_start 428,10888
GNUNET_NAT_test_stop 554,15090

src/service/nat-auto/nat_auto_api.c,438
struct GNUNET_NAT_AUTO_AutoHandle37,1116
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg42,1191
  struct GNUNET_MQ_Handle *mq;mq47,1312
  GNUNET_NAT_AUTO_AutoResultCallback arc;52,1421
  void *arc_cls;arc_cls57,1501
GNUNET_NAT_AUTO_status2string 68,1708
check_auto_result 144,4006
handle_auto_result 158,4291
ah_error_handler 202,5497
GNUNET_NAT_AUTO_autoconfig_start 225,6116
GNUNET_NAT_AUTO_autoconfig_cancel 285,7877

src/service/nat/gnunet-service-nat.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2202
struct ClientAddress76,2348
  struct sockaddr_storage ss;81,2424
  struct GNUNET_NAT_MiniHandle *mh;mh88,2608
struct LocalAddressList95,2701
  struct LocalAddressList *next;next100,2767
  struct LocalAddressList *prev;prev105,2834
  struct HelperContext *hc;hc111,3002
  struct sockaddr_storage addr;117,3156
  int af;122,3267
  int old;129,3441
  enum GNUNET_NAT_AddressClass ac;134,3500
struct ClientHandle141,3609
  struct ClientHandle *next;next146,3663
  struct ClientHandle *prev;prev151,3725
  struct GNUNET_SERVICE_Client *client;client156,3824
  struct GNUNET_MQ_Handle *mq;mq161,3931
  struct ClientAddress *caddrs;caddrs166,4020
  char *hole_external;hole_external176,4401
  char *section_name;section_name181,4501
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4601
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4746
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4856
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4982
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5101
  uint16_t ext_dns_port;212,5203
  enum GNUNET_NAT_RegisterFlags flags;217,5280
  int natted_address;222,5391
  uint16_t num_caddrs;228,5518
  uint8_t proto;233,5610
struct StunExternalIP240,5700
  struct StunExternalIP *next;next245,5756
  struct StunExternalIP *prev;prev250,5820
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5920
  struct sockaddr_in external_addr;261,6045
  struct sockaddr_storage stun_server_addr;268,6240
  size_t stun_server_addr_len;273,6347
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6445
static struct GNUNET_TIME_Relative dyndns_frequency;285,6593
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6695
static struct GNUNET_STATISTICS_Handle *stats;stats295,6795
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6914
static struct ClientHandle *ch_head;ch_head305,6994
static struct ClientHandle *ch_tail;ch_tail310,7063
static struct LocalAddressList *lal_head;lal_head315,7144
static struct LocalAddressList *lal_tail;lal_tail320,7230
static struct StunExternalIP *se_head;se_head325,7299
static struct StunExternalIP *se_tail;se_tail330,7365
int enable_upnp;336,7551
int enable_ipscan;342,7726
free_lal 350,7849
destroy_lal 373,8425
check_register 391,8764
match_ipv4 453,10068
match_ipv6 479,10707
is_nat_v4 523,11766
is_nat_v6 542,12295
struct IfcProcContext554,12550
  struct LocalAddressList *lal_head;lal_head559,12623
  struct LocalAddressList *lal_tail;lal_tail564,12710
ifc_proc 582,13386
notify_client 660,15402
check_notify_client 696,16478
notify_clients 824,21066
notify_client_external_ipv4_change 845,21579
reversal_callback 924,23896
run_scan 981,25469
upnp_addr_change_cb 1094,29006
process_external_ip 1204,32026
dyndns_lookup 1307,34936
lookup_hole_external 1340,36100
handle_register 1452,39509
check_stun 1592,43356
notify_clients_stun_change 1620,43988
stun_ip_timeout 1658,45026
handle_stun 1680,45531
check_request_connection_reversal 1793,49356
handle_request_connection_reversal 1819,50028
check_add_global_address 1874,51777
handle_add_global_address 1904,52444
shutdown_task 1936,53201
run 1972,53917
client_connect_cb 2034,56051
client_disconnect_cb 2058,56632
GNUNET_NATM_memory_init 2141,59064

src/service/nat/gnunet-service-nat_externalip.h,115
#define GNUNET_SERVICE_NAT_EXTERNALIP_H37,1460
(*GN_NotifyExternalIPv4Change)GN_NotifyExternalIPv4Change60,1949

src/service/nat/gnunet-service-nat_BASE_118323.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2202
struct ClientAddress76,2348
  struct sockaddr_storage ss;81,2424
  struct GNUNET_NAT_MiniHandle *mh;mh88,2608
struct LocalAddressList95,2701
  struct LocalAddressList *next;next100,2767
  struct LocalAddressList *prev;prev105,2834
  struct HelperContext *hc;hc111,3002
  struct sockaddr_storage addr;117,3156
  int af;122,3267
  int old;129,3441
  enum GNUNET_NAT_AddressClass ac;134,3500
struct ClientHandle141,3609
  struct ClientHandle *next;next146,3663
  struct ClientHandle *prev;prev151,3725
  struct GNUNET_SERVICE_Client *client;client156,3824
  struct GNUNET_MQ_Handle *mq;mq161,3931
  struct ClientAddress *caddrs;caddrs166,4020
  char *hole_external;hole_external176,4401
  char *section_name;section_name181,4501
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4601
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4746
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4856
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4982
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5101
  uint16_t ext_dns_port;212,5203
  enum GNUNET_NAT_RegisterFlags flags;217,5280
  int natted_address;222,5391
  uint16_t num_caddrs;228,5518
  uint8_t proto;233,5610
struct StunExternalIP240,5700
  struct StunExternalIP *next;next245,5756
  struct StunExternalIP *prev;prev250,5820
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5920
  struct sockaddr_in external_addr;261,6045
  struct sockaddr_storage stun_server_addr;268,6240
  size_t stun_server_addr_len;273,6347
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6445
static struct GNUNET_TIME_Relative dyndns_frequency;285,6593
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6695
static struct GNUNET_STATISTICS_Handle *stats;stats295,6795
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6914
static struct ClientHandle *ch_head;ch_head305,6994
static struct ClientHandle *ch_tail;ch_tail310,7063
static struct LocalAddressList *lal_head;lal_head315,7144
static struct LocalAddressList *lal_tail;lal_tail320,7230
static struct StunExternalIP *se_head;se_head325,7299
static struct StunExternalIP *se_tail;se_tail330,7365
int enable_upnp;336,7551
int enable_ipscan;342,7726
free_lal 350,7849
destroy_lal 373,8425
check_register 391,8764
match_ipv4 453,10068
match_ipv6 479,10707
is_nat_v4 523,11766
is_nat_v6 542,12295
struct IfcProcContext554,12550
  struct LocalAddressList *lal_head;lal_head559,12623
  struct LocalAddressList *lal_tail;lal_tail564,12710
ifc_proc 582,13386
notify_client 660,15402
check_notify_client 696,16478
notify_clients 824,21066
notify_client_external_ipv4_change 845,21579
reversal_callback 924,23896
run_scan 981,25469
upnp_addr_change_cb 1094,29006
process_external_ip 1204,32026
dyndns_lookup 1307,34936
lookup_hole_external 1340,36100
handle_register 1452,39509
check_stun 1592,43356
notify_clients_stun_change 1620,43988
stun_ip_timeout 1658,45026
handle_stun 1680,45531
check_request_connection_reversal 1793,49356
handle_request_connection_reversal 1819,50028
check_add_global_address(1875,51853
handle_add_global_address(1923,53059
shutdown_task 1998,55046
run 2034,55762
client_connect_cb 2096,57896
client_disconnect_cb 2120,58477
GNUNET_NATM_memory_init 2203,60909

src/service/nat/gnunet-service-nat_BACKUP_118323.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2208
struct ClientAddress76,2360
  struct sockaddr_storage ss;81,2436
  struct GNUNET_NAT_MiniHandle *mh;mh88,2620
struct LocalAddressList95,2713
  struct LocalAddressList *next;next100,2779
  struct LocalAddressList *prev;prev105,2846
  struct HelperContext *hc;hc111,3014
  struct sockaddr_storage addr;117,3168
  int af;122,3279
  int old;129,3453
  enum GNUNET_NAT_AddressClass ac;134,3512
struct ClientHandle141,3621
  struct ClientHandle *next;next146,3675
  struct ClientHandle *prev;prev151,3737
  struct GNUNET_SERVICE_Client *client;client156,3836
  struct GNUNET_MQ_Handle *mq;mq161,3943
  struct ClientAddress *caddrs;caddrs166,4032
  char *hole_external;hole_external176,4413
  char *section_name;section_name181,4513
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4613
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4758
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4868
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4994
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5113
  uint16_t ext_dns_port;212,5215
  enum GNUNET_NAT_RegisterFlags flags;217,5292
  int natted_address;222,5403
  uint16_t num_caddrs;228,5530
  uint8_t proto;233,5622
struct StunExternalIP240,5712
  struct StunExternalIP *next;next245,5768
  struct StunExternalIP *prev;prev250,5832
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5932
  struct sockaddr_in external_addr;261,6057
  struct sockaddr_storage stun_server_addr;268,6252
  size_t stun_server_addr_len;273,6359
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6457
static struct GNUNET_TIME_Relative dyndns_frequency;285,6605
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6707
static struct GNUNET_STATISTICS_Handle *stats;stats295,6807
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6926
static struct ClientHandle *ch_head;ch_head305,7006
static struct ClientHandle *ch_tail;ch_tail310,7075
static struct LocalAddressList *lal_head;lal_head315,7156
static struct LocalAddressList *lal_tail;lal_tail320,7242
static struct StunExternalIP *se_head;se_head325,7311
static struct StunExternalIP *se_tail;se_tail330,7377
int enable_upnp;336,7563
int enable_ipscan;342,7738
free_lal 350,7861
destroy_lal 373,8437
check_register 391,8776
match_ipv4 453,10080
match_ipv6 479,10719
is_nat_v4 523,11778
is_nat_v6 542,12307
struct IfcProcContext554,12562
  struct LocalAddressList *lal_head;lal_head559,12635
  struct LocalAddressList *lal_tail;lal_tail564,12722
ifc_proc 582,13398
notify_client 660,15414
check_notify_client 696,16490
notify_clients 824,21078
notify_client_external_ipv4_change 845,21591
reversal_callback 924,23908
run_scan 981,25481
upnp_addr_change_cb 1094,29018
process_external_ip 1204,32038
dyndns_lookup 1307,34948
lookup_hole_external 1340,36112
handle_register 1452,39521
check_stun 1592,43368
notify_clients_stun_change 1620,44000
stun_ip_timeout 1658,45038
handle_stun 1680,45543
check_request_connection_reversal 1793,49368
handle_request_connection_reversal 1819,50040
check_add_global_address 1874,51789
handle_add_global_address 1915,52842
shutdown_task 2003,55141
run 2039,55857
client_connect_cb 2101,57991
client_disconnect_cb 2125,58572
GNUNET_NATM_memory_init 2208,61004

src/service/nat/test_nat_test.c,225
#define TIMEOUT 32,1062
static int ret 35,1141
static struct GNUNET_NAT_Test *tst;tst37,1162
static struct GNUNET_SCHEDULER_Task *tsk;tsk39,1199
report_result 43,1255
failed_timeout 62,1675
run 77,1910
main 92,2429

src/service/nat/gnunet-service-nat_externalip.c,912
#define EXTERN_IP_RETRY_TIMEOUT 57,2000
#define EXTERN_IP_RETRY_FAILURE 64,2213
#define EXTERN_IP_RETRY_SUCCESS 71,2412
struct GN_ExternalIPMonitor78,2567
  struct GN_ExternalIPMonitor *next;next83,2627
  struct GN_ExternalIPMonitor *prev;prev88,2695
  GN_NotifyExternalIPv4Change cb;93,2818
  void *cb_cls;cb_cls98,2889
static struct GN_ExternalIPMonitor *mon_head;mon_head105,2952
static struct GN_ExternalIPMonitor *mon_tail;mon_tail110,3041
static struct GNUNET_SCHEDULER_Task *probe_external_ip_task;probe_external_ip_task116,3205
static struct GNUNET_NAT_ExternalHandle *probe_external_ip_op;probe_external_ip_op121,3324
static struct in_addr mini_external_ipv4;127,3478
notify_monitors_external_ipv4_change 138,3720
handle_external_ip 170,4522
run_external_ip 221,6176
GN_nat_status_changed 245,6845
GN_external_ipv4_monitor_start 282,7716
GN_external_ipv4_monitor_stop 307,8267

src/service/nat/nat_api.c,1261
struct AddrEntry38,1138
  struct AddrEntry *next;next43,1179
  struct AddrEntry *prev;prev48,1228
  void *app_ctx;app_ctx54,1354
  enum GNUNET_NAT_AddressClass ac;59,1419
  socklen_t addrlen;64,1501
struct GNUNET_NAT_Handle71,1575
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg76,1641
  struct GNUNET_MQ_Handle *mq;mq81,1762
  struct GNUNET_MessageHeader *reg;reg86,1837
  struct AddrEntry *ae_head;ae_head91,1912
  struct AddrEntry *ae_tail;ae_tail96,1980
  GNUNET_NAT_AddressCallback address_callback;101,2071
  GNUNET_NAT_ReversalCallback reversal_callback;106,2201
  void *callback_cls;callback_cls111,2303
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task116,2387
  struct GNUNET_TIME_Relative reconnect_delay;121,2490
reconnect 140,2772
check_connection_reversal_request 174,3656
handle_connection_reversal_request 194,4064
check_address_change_notification 214,4561
handle_address_change_notification 257,5458
mq_error_handler 314,7143
do_connect 329,7390
GNUNET_NAT_register 366,8350
GNUNET_NAT_add_global_address 459,10809
test_stun_packet 496,12016
GNUNET_NAT_stun_handle_packet 600,15401
GNUNET_NAT_test_address 642,16927
GNUNET_NAT_request_reversal 674,17935
GNUNET_NAT_unregister 702,18927

src/service/nat/nat_api_stun.c,541
#define LOG(46,1609
#define TIMEOUT 48,1677
struct GNUNET_NAT_STUN_Handle56,1953
  struct GNUNET_RESOLVER_RequestHandle *dns_active;dns_active61,2042
  struct GNUNET_NETWORK_Handle *sock;sock66,2140
  char *stun_server;stun_server71,2216
  GNUNET_NAT_TestCallback cb;76,2292
  void *cb_cls;cb_cls81,2359
  int dns_success;86,2434
  uint16_t stun_port;91,2481
encode_message 103,2716
generate_request_id 118,3119
stun_dns_callback 135,3611
GNUNET_NAT_stun_make_request 211,5784
GNUNET_NAT_stun_make_request_cancel 247,6847

src/service/nat/gnunet-service-nat_REMOTE_118323.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2202
struct ClientAddress76,2348
  struct sockaddr_storage ss;81,2424
  struct GNUNET_NAT_MiniHandle *mh;mh88,2608
struct LocalAddressList95,2701
  struct LocalAddressList *next;next100,2767
  struct LocalAddressList *prev;prev105,2834
  struct HelperContext *hc;hc111,3002
  struct sockaddr_storage addr;117,3156
  int af;122,3267
  int old;129,3441
  enum GNUNET_NAT_AddressClass ac;134,3500
struct ClientHandle141,3609
  struct ClientHandle *next;next146,3663
  struct ClientHandle *prev;prev151,3725
  struct GNUNET_SERVICE_Client *client;client156,3824
  struct GNUNET_MQ_Handle *mq;mq161,3931
  struct ClientAddress *caddrs;caddrs166,4020
  char *hole_external;hole_external176,4401
  char *section_name;section_name181,4501
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4601
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4746
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4856
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4982
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5101
  uint16_t ext_dns_port;212,5203
  enum GNUNET_NAT_RegisterFlags flags;217,5280
  int natted_address;222,5391
  uint16_t num_caddrs;228,5518
  uint8_t proto;233,5610
struct StunExternalIP240,5700
  struct StunExternalIP *next;next245,5756
  struct StunExternalIP *prev;prev250,5820
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5920
  struct sockaddr_in external_addr;261,6045
  struct sockaddr_storage stun_server_addr;268,6240
  size_t stun_server_addr_len;273,6347
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6445
static struct GNUNET_TIME_Relative dyndns_frequency;285,6593
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6695
static struct GNUNET_STATISTICS_Handle *stats;stats295,6795
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6914
static struct ClientHandle *ch_head;ch_head305,6994
static struct ClientHandle *ch_tail;ch_tail310,7063
static struct LocalAddressList *lal_head;lal_head315,7144
static struct LocalAddressList *lal_tail;lal_tail320,7230
static struct StunExternalIP *se_head;se_head325,7299
static struct StunExternalIP *se_tail;se_tail330,7365
int enable_upnp;336,7551
int enable_ipscan;342,7726
free_lal 350,7849
destroy_lal 373,8425
check_register 391,8764
match_ipv4 453,10068
match_ipv6 479,10707
is_nat_v4 523,11766
is_nat_v6 542,12295
struct IfcProcContext554,12550
  struct LocalAddressList *lal_head;lal_head559,12623
  struct LocalAddressList *lal_tail;lal_tail564,12710
ifc_proc 582,13386
notify_client 660,15402
check_notify_client 696,16478
notify_clients 824,21066
notify_client_external_ipv4_change 845,21579
reversal_callback 924,23896
run_scan 981,25469
upnp_addr_change_cb 1094,29006
process_external_ip 1204,32026
dyndns_lookup 1307,34936
lookup_hole_external 1340,36100
handle_register 1452,39509
check_stun 1592,43356
notify_clients_stun_change 1620,43988
stun_ip_timeout 1658,45026
handle_stun 1680,45531
check_request_connection_reversal 1793,49356
handle_request_connection_reversal 1819,50028
check_add_global_address(1875,51853
handle_add_global_address(1923,53060
shutdown_task 1998,55018
run 2034,55734
client_connect_cb 2096,57868
client_disconnect_cb 2120,58449
GNUNET_NATM_memory_init 2203,60881

src/service/nat/gnunet-service-nat.h,36
#define GNUNET_SERVICE_NAT_H27,937

src/service/nat/test_stun.c,492
#define LOG(38,1124
#define TIMEOUT 43,1253
static unsigned long port 49,1397
static int ret 51,1432
static const char *stun_server stun_server53,1453
static int stun_port 55,1506
static struct GNUNET_NETWORK_Handle *lsock4;lsock460,1589
static struct GNUNET_SCHEDULER_Task *ltask4;ltask465,1674
static struct GNUNET_NAT_STUN_Handle *rh;rh70,1760
print_answer 74,1816
stop 87,2097
do_udp_read 116,2580
bind_v4 164,3925
request_callback 202,4784
run 233,5469
main 260,6221

src/service/nat/test_nat.c,202
#define TIMEOUT 46,1569
addr_callback 54,1766
stop 70,2197
struct addr_cls80,2378
  struct sockaddr *addr;addr82,2396
  socklen_t addrlen;83,2421
process_if 99,2854
run 125,3441
main 162,4607

src/service/nat/gnunet-service-nat_stun.c,137
#define LOG(43,1569
struct StunState50,1734
  uint16_t attr;52,1753
stun_get_mapped 68,2201
GNUNET_NAT_stun_handle_packet_ 125,3795

src/service/nat/gnunet-service-nat_helper.h,51
(*GN_ReversalCallback)GN_ReversalCallback45,1301

src/service/nat/gnunet-service-nat_mini.c,1402
#define LOG(32,1101
#define MAP_TIMEOUT 37,1226
#define UNMAP_TIMEOUT 42,1366
#define MAP_REFRESH_FREQ 48,1514
struct GNUNET_NAT_ExternalHandle57,1765
  GNUNET_NAT_IPCallback cb;62,1851
  void *cb_cls;cb_cls67,1916
  struct GNUNET_SCHEDULER_Task *task;task72,1961
  struct GNUNET_OS_Process *eip;eip77,2050
  struct GNUNET_DISK_PipeHandle *opipe;opipe82,2141
  const struct GNUNET_DISK_FileHandle *r;r87,2224
  size_t off;92,2326
  char buf[buf97,2419
  enum GNUNET_NAT_StatusCode ret;102,2503
read_external_ipv4 113,2726
signal_external_ip_error 159,4056
GNUNET_NAT_mini_get_external_ipv4_ 177,4488
GNUNET_NAT_mini_get_external_ipv4_cancel_ 232,6424
struct GNUNET_NAT_MiniHandle260,7035
  GNUNET_NAT_MiniAddressCallback ac;265,7120
  void *ac_cls;ac_cls270,7194
  struct GNUNET_OS_CommandHandle *map_cmd;map_cmd275,7261
  struct GNUNET_OS_CommandHandle *refresh_cmd;refresh_cmd280,7367
  struct GNUNET_OS_CommandHandle *unmap_cmd;unmap_cmd285,7468
  struct sockaddr_in current_addr;290,7578
  struct GNUNET_SCHEDULER_Task *refresh_task;refresh_task296,7727
  int is_tcp;301,7818
  int did_map;306,7890
  int found;311,7968
  uint16_t port;316,8026
run_upnpc_r 345,8515
process_refresh_output 379,9555
do_refresh 475,12464
process_map_output 523,13857
GNUNET_NAT_mini_map_start 593,15963
process_unmap_output 626,16940
GNUNET_NAT_mini_map_stop 643,17290

src/service/nat/gnunet-helper-nat-server.c,1283
#define _GNU_SOURCE50,2046
#define ICMP_TIME_EXCEEDED 71,2510
#define GNUNET_memcpy(83,2897
#define VERBOSE 90,3154
#define PACKET_ID 95,3240
#define DUMMY_IP 100,3309
#define NAT_TRAV_PORT 105,3364
#define ICMP_SEND_FREQUENCY_MS 110,3463
struct ip_header115,3523
  uint8_t vers_ihl;120,3610
  uint8_t tos;125,3664
  uint16_t pkt_len;130,3710
  uint16_t id;135,3763
  uint16_t flags_frag_offset;140,3839
  uint8_t ttl;145,3900
  uint8_t proto;150,3942
  uint16_t checksum;155,3993
  uint32_t src_ip;160,4047
  uint32_t dst_ip;165,4104
struct icmp_ttl_exceeded_header171,4161
  uint8_t type;173,4195
  uint8_t code;175,4212
  uint16_t checksum;177,4229
  uint32_t unused;179,4251
struct icmp_echo_header184,4312
  uint8_t type;186,4338
  uint8_t code;188,4355
  uint16_t checksum;190,4372
  uint32_t reserved;192,4394
struct udp_header199,4456
  uint16_t src_port;201,4476
  uint16_t dst_port;203,4498
  uint16_t length;205,4520
  uint16_t crc;207,4540
static int icmpsock;213,4617
static int rawsock;218,4691
static int udpsock;223,4763
static struct in_addr dummy;228,4819
calc_checksum 239,5041
send_icmp_echo 259,5398
send_udp 332,7233
process_icmp_response 370,7960
setup_raw_socket 481,10673
make_udp_socket 520,11424
main 557,12211

src/service/nat/test_nat_mini.c,112
#define TIMEOUT 38,1329
addr_callback 45,1525
stop 70,2103
#define PORT 79,2279
run 85,2356
main 105,2930

src/service/nat/nat.h,1367
#define NAT_H28,963
struct GNUNET_NAT_TestMessage38,1132
  struct GNUNET_MessageHeader header;43,1228
  uint32_t dst_ipv4;48,1307
  uint16_t dport;53,1390
  uint16_t data;58,1490
  int32_t is_tcp;63,1566
enum GNUNET_NAT_RegisterFlags71,1684
  GNUNET_NAT_RF_NONE 76,1778
  GNUNET_NAT_RF_ADDRESSES 82,1903
  GNUNET_NAT_RF_REVERSAL 87,1991
struct GNUNET_NAT_RegisterMessage94,2093
  struct GNUNET_MessageHeader header;99,2197
  uint8_t flags;104,2289
  uint8_t proto;109,2375
  uint16_t str_len GNUNET_PACKED;115,2510
  uint16_t num_addrs GNUNET_PACKED;122,2760
struct GNUNET_NAT_HandleStunMessage134,3015
  struct GNUNET_MessageHeader header;139,3124
  uint16_t sender_addr_size;144,3225
  uint16_t payload_size;149,3317
struct GNUNET_NAT_RequestConnectionReversalMessage160,3543
  struct GNUNET_MessageHeader header;165,3683
  uint16_t local_addr_size;170,3783
  uint16_t remote_addr_size;175,3874
struct GNUNET_NAT_ConnectionReversalRequestedMessage186,4123
  struct GNUNET_MessageHeader header;191,4267
struct GNUNET_NAT_AddressChangeNotificationMessage201,4443
  struct GNUNET_MessageHeader header;206,4570
  int32_t add_remove GNUNET_PACKED;211,4694
  uint32_t addr_class GNUNET_PACKED;216,4811
struct GNUNET_NAT_AddGlobalAddressMessage224,4952
  struct GNUNET_MessageHeader header;229,5074
  unsigned int address_length;234,5182

src/service/nat/gnunet-service-nat_mini.h,169
#define GNUNET_SERVICE_NAT_MINI_H27,997
(*GNUNET_NAT_IPCallback)GNUNET_NAT_IPCallback38,1267
(*GNUNET_NAT_MiniAddressCallback)GNUNET_NAT_MiniAddressCallback89,2745

src/service/nat/gnunet-service-nat_LOCAL_118323.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2208
struct ClientAddress76,2360
  struct sockaddr_storage ss;81,2436
  struct GNUNET_NAT_MiniHandle *mh;mh88,2620
struct LocalAddressList95,2713
  struct LocalAddressList *next;next100,2779
  struct LocalAddressList *prev;prev105,2846
  struct HelperContext *hc;hc111,3014
  struct sockaddr_storage addr;117,3168
  int af;122,3279
  int old;129,3453
  enum GNUNET_NAT_AddressClass ac;134,3512
struct ClientHandle141,3621
  struct ClientHandle *next;next146,3675
  struct ClientHandle *prev;prev151,3737
  struct GNUNET_SERVICE_Client *client;client156,3836
  struct GNUNET_MQ_Handle *mq;mq161,3943
  struct ClientAddress *caddrs;caddrs166,4032
  char *hole_external;hole_external176,4413
  char *section_name;section_name181,4513
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4613
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4758
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4868
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4994
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5113
  uint16_t ext_dns_port;212,5215
  enum GNUNET_NAT_RegisterFlags flags;217,5292
  int natted_address;222,5403
  uint16_t num_caddrs;228,5530
  uint8_t proto;233,5622
struct StunExternalIP240,5712
  struct StunExternalIP *next;next245,5768
  struct StunExternalIP *prev;prev250,5832
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5932
  struct sockaddr_in external_addr;261,6057
  struct sockaddr_storage stun_server_addr;268,6252
  size_t stun_server_addr_len;273,6359
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6457
static struct GNUNET_TIME_Relative dyndns_frequency;285,6605
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6707
static struct GNUNET_STATISTICS_Handle *stats;stats295,6807
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6926
static struct ClientHandle *ch_head;ch_head305,7006
static struct ClientHandle *ch_tail;ch_tail310,7075
static struct LocalAddressList *lal_head;lal_head315,7156
static struct LocalAddressList *lal_tail;lal_tail320,7242
static struct StunExternalIP *se_head;se_head325,7311
static struct StunExternalIP *se_tail;se_tail330,7377
int enable_upnp;336,7563
int enable_ipscan;342,7738
free_lal 350,7861
destroy_lal 373,8437
check_register 391,8776
match_ipv4 453,10080
match_ipv6 479,10719
is_nat_v4 523,11778
is_nat_v6 542,12307
struct IfcProcContext554,12562
  struct LocalAddressList *lal_head;lal_head559,12635
  struct LocalAddressList *lal_tail;lal_tail564,12722
ifc_proc 582,13398
notify_client 660,15414
check_notify_client 696,16490
notify_clients 824,21078
notify_client_external_ipv4_change 845,21591
reversal_callback 924,23908
run_scan 981,25481
upnp_addr_change_cb 1094,29018
process_external_ip 1204,32038
dyndns_lookup 1307,34948
lookup_hole_external 1340,36112
handle_register 1452,39521
check_stun 1592,43368
notify_clients_stun_change 1620,44000
stun_ip_timeout 1658,45038
handle_stun 1680,45543
check_request_connection_reversal 1793,49368
handle_request_connection_reversal 1819,50040
check_add_global_address 1874,51789
handle_add_global_address 1904,52456
shutdown_task 1936,53213
run 1972,53929
client_connect_cb 2034,56063
client_disconnect_cb 2058,56644
GNUNET_NATM_memory_init 2141,59076

src/service/nat/gnunet-service-nat_stun.h,42
#define GNUNET_SERVICE_NAT_STUN_H39,1528

src/service/nat/gnunet-helper-nat-client.c,1099
#define _GNU_SOURCE49,1964
#define ICMP_TIME_EXCEEDED 67,2364
#define GNUNET_memcpy(79,2751
#define DUMMY_IP 86,3008
#define NAT_TRAV_PORT 88,3039
#define PACKET_ID 93,3135
struct ip_header98,3182
  uint8_t vers_ihl;103,3269
  uint8_t tos;108,3323
  uint16_t pkt_len;113,3369
  uint16_t id;118,3422
  uint16_t flags_frag_offset;123,3498
  uint8_t ttl;128,3559
  uint8_t proto;133,3601
  uint16_t checksum;138,3652
  uint32_t src_ip;143,3706
  uint32_t dst_ip;148,3763
struct icmp_ttl_exceeded_header154,3820
  uint8_t type;156,3854
  uint8_t code;158,3871
  uint16_t checksum;160,3888
  uint32_t unused;162,3910
struct icmp_echo_header167,3971
  uint8_t type;169,3997
  uint8_t code;171,4014
  uint16_t checksum;173,4031
  uint32_t reserved;175,4053
struct udp_header181,4114
  uint16_t src_port;183,4134
  uint16_t dst_port;185,4156
  uint16_t length;187,4178
  uint16_t crc;189,4198
static int rawsock;195,4274
static struct in_addr dummy;200,4369
static uint16_t port;205,4429
calc_checksum 216,4644
send_icmp_udp 237,5013
send_icmp 349,8391
main 457,11787

src/service/nat/nat_stun.h,1920
#define STUN_IGNORE 31,1049
#define STUN_ACCEPT 32,1085
#define STUN_MAGIC_COOKIE 34,1122
  uint32_t id[id38,1183
} GNUNET_PACKED stun_trans_id;39,1201
struct stun_header42,1234
  uint16_t msgtype;44,1255
  uint16_t msglen;45,1275
  uint32_t magic;46,1294
  stun_trans_id id;47,1312
} GNUNET_PACKED;48,1332
struct stun_attr51,1351
  uint16_t attr;53,1370
  uint16_t len;54,1387
} GNUNET_PACKED;55,1403
struct stun_addr61,1498
  uint8_t unused;63,1517
  uint8_t family;68,1588
  uint16_t port;73,1637
  uint32_t addr;78,1719
} GNUNET_PACKED;79,1736
enum StunClasses85,1787
  INVALID_CLASS 87,1806
  STUN_REQUEST 88,1827
  STUN_INDICATION 89,1852
  STUN_RESPONSE 90,1880
  STUN_ERROR_RESPONSE 91,1906
enum StunMethods94,1941
  INVALID_METHOD 96,1960
  STUN_BINDING 97,1982
  STUN_SHARED_SECRET 98,2007
  STUN_ALLOCATE 99,2038
  STUN_REFRESH 100,2064
  STUN_SEND 101,2089
  STUN_DATA 102,2111
  STUN_CREATE_PERMISSION 103,2133
  STUN_CHANNEL_BIND 104,2168
enum StunAttributes112,2321
  STUN_MAPPED_ADDRESS 114,2343
  STUN_RESPONSE_ADDRESS 115,2375
  STUN_CHANGE_ADDRESS 116,2409
  STUN_SOURCE_ADDRESS 117,2441
  STUN_CHANGED_ADDRESS 118,2473
  STUN_USERNAME 119,2506
  STUN_PASSWORD 120,2532
  STUN_MESSAGE_INTEGRITY 121,2558
  STUN_ERROR_CODE 122,2593
  STUN_UNKNOWN_ATTRIBUTES 123,2621
  STUN_REFLECTED_FROM 124,2657
  STUN_REALM 125,2689
  STUN_NONCE 126,2712
  STUN_XOR_MAPPED_ADDRESS 127,2735
  STUN_MS_VERSION 128,2771
  STUN_MS_XOR_MAPPED_ADDRESS 129,2799
  STUN_SOFTWARE 130,2838
  STUN_ALTERNATE_SERVER 131,2864
  STUN_FINGERPRINT 132,2898
decode_class 143,3072
decode_method 157,3393
stun_msg2str 173,3815
    enum StunClasses value;177,3866
    const char *name;name178,3894
    enum StunMethods value;188,4147
    const char *name;name189,4175
stun_attr2str 231,5139
    enum StunAttributes value;235,5207
    const char *name;name236,5238

src/service/nat/gnunet-service-nat_REMOTE_118179.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2202
struct ClientAddress76,2348
  struct sockaddr_storage ss;81,2424
  struct GNUNET_NAT_MiniHandle *mh;mh88,2608
struct LocalAddressList95,2701
  struct LocalAddressList *next;next100,2767
  struct LocalAddressList *prev;prev105,2834
  struct HelperContext *hc;hc111,3002
  struct sockaddr_storage addr;117,3156
  int af;122,3267
  int old;129,3441
  enum GNUNET_NAT_AddressClass ac;134,3500
struct ClientHandle141,3609
  struct ClientHandle *next;next146,3663
  struct ClientHandle *prev;prev151,3725
  struct GNUNET_SERVICE_Client *client;client156,3824
  struct GNUNET_MQ_Handle *mq;mq161,3931
  struct ClientAddress *caddrs;caddrs166,4020
  char *hole_external;hole_external176,4401
  char *section_name;section_name181,4501
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4601
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4746
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4856
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4982
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5101
  uint16_t ext_dns_port;212,5203
  enum GNUNET_NAT_RegisterFlags flags;217,5280
  int natted_address;222,5391
  uint16_t num_caddrs;228,5518
  uint8_t proto;233,5610
struct StunExternalIP240,5700
  struct StunExternalIP *next;next245,5756
  struct StunExternalIP *prev;prev250,5820
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5920
  struct sockaddr_in external_addr;261,6045
  struct sockaddr_storage stun_server_addr;268,6240
  size_t stun_server_addr_len;273,6347
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6445
static struct GNUNET_TIME_Relative dyndns_frequency;285,6593
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6695
static struct GNUNET_STATISTICS_Handle *stats;stats295,6795
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6914
static struct ClientHandle *ch_head;ch_head305,6994
static struct ClientHandle *ch_tail;ch_tail310,7063
static struct LocalAddressList *lal_head;lal_head315,7144
static struct LocalAddressList *lal_tail;lal_tail320,7230
static struct StunExternalIP *se_head;se_head325,7299
static struct StunExternalIP *se_tail;se_tail330,7365
int enable_upnp;336,7551
int enable_ipscan;342,7726
free_lal 350,7849
destroy_lal 373,8425
check_register 391,8764
match_ipv4 453,10068
match_ipv6 479,10707
is_nat_v4 523,11766
is_nat_v6 542,12295
struct IfcProcContext554,12550
  struct LocalAddressList *lal_head;lal_head559,12623
  struct LocalAddressList *lal_tail;lal_tail564,12710
ifc_proc 582,13386
notify_client 660,15402
check_notify_client 696,16478
notify_clients 824,21066
notify_client_external_ipv4_change 845,21579
reversal_callback 924,23896
run_scan 981,25469
upnp_addr_change_cb 1094,29006
process_external_ip 1204,32026
dyndns_lookup 1307,34936
lookup_hole_external 1340,36100
handle_register 1452,39509
check_stun 1592,43356
notify_clients_stun_change 1620,43988
stun_ip_timeout 1658,45026
handle_stun 1680,45531
check_request_connection_reversal 1793,49356
handle_request_connection_reversal 1819,50028
check_add_global_address(1875,51853
handle_add_global_address(1923,53060
shutdown_task 1998,55018
run 2034,55734
client_connect_cb 2096,57868
client_disconnect_cb 2120,58449
GNUNET_NATM_memory_init 2203,60881

src/service/nat/gnunet-service-nat_LOCAL_118179.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2208
struct ClientAddress76,2360
  struct sockaddr_storage ss;81,2436
  struct GNUNET_NAT_MiniHandle *mh;mh88,2620
struct LocalAddressList95,2713
  struct LocalAddressList *next;next100,2779
  struct LocalAddressList *prev;prev105,2846
  struct HelperContext *hc;hc111,3014
  struct sockaddr_storage addr;117,3168
  int af;122,3279
  int old;129,3453
  enum GNUNET_NAT_AddressClass ac;134,3512
struct ClientHandle141,3621
  struct ClientHandle *next;next146,3675
  struct ClientHandle *prev;prev151,3737
  struct GNUNET_SERVICE_Client *client;client156,3836
  struct GNUNET_MQ_Handle *mq;mq161,3943
  struct ClientAddress *caddrs;caddrs166,4032
  char *hole_external;hole_external176,4413
  char *section_name;section_name181,4513
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4613
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4758
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4868
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4994
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5113
  uint16_t ext_dns_port;212,5215
  enum GNUNET_NAT_RegisterFlags flags;217,5292
  int natted_address;222,5403
  uint16_t num_caddrs;228,5530
  uint8_t proto;233,5622
struct StunExternalIP240,5712
  struct StunExternalIP *next;next245,5768
  struct StunExternalIP *prev;prev250,5832
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5932
  struct sockaddr_in external_addr;261,6057
  struct sockaddr_storage stun_server_addr;268,6252
  size_t stun_server_addr_len;273,6359
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6457
static struct GNUNET_TIME_Relative dyndns_frequency;285,6605
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6707
static struct GNUNET_STATISTICS_Handle *stats;stats295,6807
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6926
static struct ClientHandle *ch_head;ch_head305,7006
static struct ClientHandle *ch_tail;ch_tail310,7075
static struct LocalAddressList *lal_head;lal_head315,7156
static struct LocalAddressList *lal_tail;lal_tail320,7242
static struct StunExternalIP *se_head;se_head325,7311
static struct StunExternalIP *se_tail;se_tail330,7377
int enable_upnp;336,7563
int enable_ipscan;342,7738
free_lal 350,7861
destroy_lal 373,8437
check_register 391,8776
match_ipv4 453,10080
match_ipv6 479,10719
is_nat_v4 523,11778
is_nat_v6 542,12307
struct IfcProcContext554,12562
  struct LocalAddressList *lal_head;lal_head559,12635
  struct LocalAddressList *lal_tail;lal_tail564,12722
ifc_proc 582,13398
notify_client 660,15414
check_notify_client 696,16490
notify_clients 824,21078
notify_client_external_ipv4_change 845,21591
reversal_callback 924,23908
run_scan 981,25481
upnp_addr_change_cb 1094,29018
process_external_ip 1204,32038
dyndns_lookup 1307,34948
lookup_hole_external 1340,36112
handle_register 1452,39521
check_stun 1592,43368
notify_clients_stun_change 1620,44000
stun_ip_timeout 1658,45038
handle_stun 1680,45543
check_request_connection_reversal 1793,49368
handle_request_connection_reversal 1819,50040
check_add_global_address 1874,51789
handle_add_global_address 1904,52456
shutdown_task 1936,53213
run 1972,53929
client_connect_cb 2034,56063
client_disconnect_cb 2058,56644
GNUNET_NATM_memory_init 2141,59076

src/service/nat/gnunet-service-nat_BASE_118179.c,3473
#define SCAN_FREQ 58,1855
#define AUTOCONFIG_TIMEOUT 63,2015
#define DYNDNS_FREQUENCY 69,2202
struct ClientAddress76,2348
  struct sockaddr_storage ss;81,2424
  struct GNUNET_NAT_MiniHandle *mh;mh88,2608
struct LocalAddressList95,2701
  struct LocalAddressList *next;next100,2767
  struct LocalAddressList *prev;prev105,2834
  struct HelperContext *hc;hc111,3002
  struct sockaddr_storage addr;117,3156
  int af;122,3267
  int old;129,3441
  enum GNUNET_NAT_AddressClass ac;134,3500
struct ClientHandle141,3609
  struct ClientHandle *next;next146,3663
  struct ClientHandle *prev;prev151,3725
  struct GNUNET_SERVICE_Client *client;client156,3824
  struct GNUNET_MQ_Handle *mq;mq161,3931
  struct ClientAddress *caddrs;caddrs166,4020
  char *hole_external;hole_external176,4401
  char *section_name;section_name181,4501
  struct GNUNET_SCHEDULER_Task *ext_dns_task;ext_dns_task186,4601
  struct GNUNET_RESOLVER_RequestHandle *ext_dns;ext_dns192,4746
  struct GN_ExternalIPMonitor *external_monitor;external_monitor197,4856
  struct LocalAddressList *ext_addr_head;ext_addr_head202,4982
  struct LocalAddressList *ext_addr_tail;ext_addr_tail207,5101
  uint16_t ext_dns_port;212,5203
  enum GNUNET_NAT_RegisterFlags flags;217,5280
  int natted_address;222,5391
  uint16_t num_caddrs;228,5518
  uint8_t proto;233,5610
struct StunExternalIP240,5700
  struct StunExternalIP *next;next245,5756
  struct StunExternalIP *prev;prev250,5820
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task255,5920
  struct sockaddr_in external_addr;261,6045
  struct sockaddr_storage stun_server_addr;268,6240
  size_t stun_server_addr_len;273,6347
static struct GNUNET_TIME_Relative stun_stale_timeout;280,6445
static struct GNUNET_TIME_Relative dyndns_frequency;285,6593
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg290,6695
static struct GNUNET_STATISTICS_Handle *stats;stats295,6795
static struct GNUNET_SCHEDULER_Task *scan_task;scan_task300,6914
static struct ClientHandle *ch_head;ch_head305,6994
static struct ClientHandle *ch_tail;ch_tail310,7063
static struct LocalAddressList *lal_head;lal_head315,7144
static struct LocalAddressList *lal_tail;lal_tail320,7230
static struct StunExternalIP *se_head;se_head325,7299
static struct StunExternalIP *se_tail;se_tail330,7365
int enable_upnp;336,7551
int enable_ipscan;342,7726
free_lal 350,7849
destroy_lal 373,8425
check_register 391,8764
match_ipv4 453,10068
match_ipv6 479,10707
is_nat_v4 523,11766
is_nat_v6 542,12295
struct IfcProcContext554,12550
  struct LocalAddressList *lal_head;lal_head559,12623
  struct LocalAddressList *lal_tail;lal_tail564,12710
ifc_proc 582,13386
notify_client 660,15402
check_notify_client 696,16478
notify_clients 824,21066
notify_client_external_ipv4_change 845,21579
reversal_callback 924,23896
run_scan 981,25469
upnp_addr_change_cb 1094,29006
process_external_ip 1204,32026
dyndns_lookup 1307,34936
lookup_hole_external 1340,36100
handle_register 1452,39509
check_stun 1592,43356
notify_clients_stun_change 1620,43988
stun_ip_timeout 1658,45026
handle_stun 1680,45531
check_request_connection_reversal 1793,49356
handle_request_connection_reversal 1819,50028
check_add_global_address(1875,51853
handle_add_global_address(1923,53059
shutdown_task 1998,55046
run 2034,55762
client_connect_cb 2096,57896
client_disconnect_cb 2120,58477
GNUNET_NATM_memory_init 2203,60909

src/service/nat/gnunet-service-nat_helper.c,743
struct HelperContext35,1117
  struct in_addr internal_address;40,1195
  GN_ReversalCallback cb;45,1299
  void *cb_cls;cb_cls50,1362
  struct GNUNET_TIME_Relative server_retry_delay;55,1467
  struct GNUNET_SCHEDULER_Task *server_read_task;server_read_task60,1590
  struct GNUNET_OS_Process *server_proc;server_proc65,1711
  struct GNUNET_DISK_PipeHandle *server_stdout;server_stdout70,1830
  const struct GNUNET_DISK_FileHandle *server_stdout_handle;server_stdout_handle75,1970
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg80,2084
try_again 100,2429
nat_server_read 118,3054
restart_nat_server 205,5675
GN_start_gnunet_nat_server_ 269,7942
GN_stop_gnunet_nat_server_ 298,8607
GN_request_connection_reversal 339,9826

src/service/reclaim/did_helper.h,92
#define GNUNET_DID_METHOD_PREFIX 27,895
#define MAX_DID_SPECIFIC_IDENTIFIER_LENGTH 28,939

src/service/reclaim/reclaim_credential.h,659
#define RECLAIM_CREDENTIAL_H27,941
struct Credential34,1047
  uint32_t credential_type;39,1100
  uint32_t credential_flag;44,1162
  struct GNUNET_RECLAIM_Identifier credential_id;49,1222
  uint16_t nl_reserved;54,1311
  uint16_t name_len;59,1365
  uint16_t dl_reserved;64,1425
  uint16_t data_size;69,1477
struct Presentation78,1595
  uint32_t presentation_type;83,1652
  uint32_t presentation_flag;88,1718
  struct GNUNET_RECLAIM_Identifier credential_id;93,1780
  uint16_t reserved_nl GNUNET_PACKED;98,1869
  uint16_t name_len GNUNET_PACKED;103,1937
  uint16_t reserved_ds GNUNET_PACKED;108,2011
  uint16_t data_size GNUNET_PACKED;113,2077

src/service/reclaim/gnunet-service-reclaim_tickets.c,4543
#define DEFAULT_TICKET_REFRESH_INTERVAL 39,1206
struct TicketReference51,1423
  struct TicketReference *next;next56,1469
  struct TicketReference *prev;prev61,1523
  struct GNUNET_RECLAIM_AttributeList *attrs;attrs66,1584
  struct GNUNET_RECLAIM_Ticket ticket;71,1656
struct RECLAIM_TICKETS_ConsumeHandle78,1741
  struct GNUNET_RECLAIM_Ticket ticket;83,1804
  struct GNUNET_GNS_LookupWithTldRequest *lookup_request;lookup_request88,1875
  struct ParallelLookup *parallel_lookups_head;parallel_lookups_head93,1962
  struct ParallelLookup *parallel_lookups_tail;parallel_lookups_tail98,2039
  struct GNUNET_SCHEDULER_Task *kill_task;kill_task103,2115
  struct GNUNET_RECLAIM_AttributeList *attrs;attrs108,2187
  struct GNUNET_RECLAIM_PresentationList *presentations;presentations113,2265
  struct GNUNET_TIME_Absolute lookup_start_time;118,2352
  RECLAIM_TICKETS_ConsumeCallback cb;123,2428
  void *cb_cls;cb_cls128,2501
  char rp_uri[rp_uri135,2687
struct ParallelLookup142,2793
  struct ParallelLookup *next;next145,2829
  struct ParallelLookup *prev;prev148,2873
  struct GNUNET_GNS_LookupRequest *lookup_request;lookup_request151,2929
  struct RECLAIM_TICKETS_ConsumeHandle *handle;handle154,3014
  struct GNUNET_TIME_Absolute lookup_start_time;159,3092
  char *label;label162,3171
struct TicketIssueHandle169,3230
  struct GNUNET_RECLAIM_AttributeList *attrs;attrs174,3294
  struct GNUNET_RECLAIM_PresentationList *presentations;presentations179,3379
  struct GNUNET_CRYPTO_PrivateKey identity;184,3465
  struct GNUNET_RECLAIM_Ticket ticket;189,3543
  struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe194,3611
  struct GNUNET_NAMESTORE_ZoneIterator *ns_it;ns_it199,3693
  RECLAIM_TICKETS_TicketResult cb;204,3767
  void *cb_cls;cb_cls209,3833
  char rp_uri[rp_uri216,4019
  struct GNUNET_RECLAIM_Identifier rnd;221,4119
struct RECLAIM_TICKETS_Iterator228,4191
  struct GNUNET_NAMESTORE_ZoneIterator *ns_it;ns_it233,4264
  RECLAIM_TICKETS_TicketIter cb;238,4343
  void *cb_cls;cb_cls243,4403
struct RevokedAttributeEntry247,4424
  struct RevokedAttributeEntry *next;next252,4476
  struct RevokedAttributeEntry *prev;prev257,4536
  struct GNUNET_RECLAIM_Identifier old_id;262,4616
  struct GNUNET_RECLAIM_Identifier new_id;267,4701
struct RECLAIM_TICKETS_RevokeHandle274,4793
  struct GNUNET_CRYPTO_PrivateKey identity;279,4859
  RECLAIM_TICKETS_RevokeCallback cb;284,4930
  void *cb_cls;cb_cls289,4998
  struct GNUNET_RECLAIM_Ticket ticket;294,5048
  struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe299,5116
  struct GNUNET_NAMESTORE_ZoneIterator *ns_it;ns_it304,5198
  struct RevokedAttributeEntry *attrs_head;attrs_head309,5282
  struct RevokedAttributeEntry *attrs_tail;attrs_tail314,5363
  struct RevokedAttributeEntry *move_attr;move_attr319,5451
  unsigned int ticket_attrs;324,5543
  struct TicketRecordsEntry *tickets_to_update_head;tickets_to_update_head329,5608
  struct TicketRecordsEntry *tickets_to_update_tail;tickets_to_update_tail334,5697
static struct GNUNET_TIME_Relative ticket_refresh_interval;341,5793
static struct GNUNET_NAMESTORE_Handle *nsh;nsh345,5878
static struct GNUNET_GNS_Handle *gns;gns349,5941
static struct GNUNET_STATISTICS_Handle *stats;stats353,6020
cleanup_rvk 362,6159
ticket_processed 410,7380
process_tickets 425,7686
rvk_ticket_update_finished 485,9696
rvk_ticket_update 505,10171
rvk_ns_iter_err 553,11664
rvk_ns_err 569,11943
move_attrs_cont 597,12520
del_attr_finished 612,12865
move_attr_finished 641,13621
rvk_move_attr_cb 681,14979
move_attrs 777,18810
remove_ticket_cont 822,20501
revoke_attrs_cb 860,21441
rvk_attrs_err_cb 902,22772
RECLAIM_TICKETS_revoke 923,23256
RECLAIM_TICKETS_revoke_cancel 959,24379
cleanup_cth 976,24684
process_parallel_lookup_result 1004,25525
abort_parallel_lookups 1063,27657
lookup_authz_cb 1086,28272
RECLAIM_TICKETS_consume 1216,32586
RECLAIM_TICKETS_consume_cancel 1249,33656
cleanup_issue_handle 1265,33945
store_ticket_issue_cont 1282,34330
issue_ticket 1312,35071
filter_tickets_error_cb 1475,40898
filter_tickets_cb 1502,41509
filter_tickets_finished_cb 1656,46909
RECLAIM_TICKETS_issue 1677,47435
cleanup_iter 1716,48766
collect_tickets_cb 1736,49321
collect_tickets_finished_cb 1770,50343
collect_tickets_error_cb 1786,50625
RECLAIM_TICKETS_iteration_next 1802,50886
RECLAIM_TICKETS_iteration_stop 1814,51105
RECLAIM_TICKETS_iteration_start 1830,51503
RECLAIM_TICKETS_init 1860,52380
RECLAIM_TICKETS_deinit 1902,53690

src/service/reclaim/did_helper.c,314
#define STR_INDIR(34,1095
#define STR(35,1119
DID_pkey_to_did 45,1311
DID_identity_to_did 67,1792
DID_did_to_pkey 79,2056
GNUNET_DID_key_convert_multibase_base64_to_gnunet 101,2715
DID_key_convert_gnunet_to_multibase_base64 110,2878
DID_pkey_to_did_document 138,3665
DID_identity_to_did_document 197,5176

src/service/reclaim/reclaim_attribute.c,1027
struct Plugin35,1067
  char *library_name;library_name40,1119
  struct GNUNET_RECLAIM_AttributePluginFunctions *api;api45,1170
static struct Plugin **attr_plugins;attr_plugins52,1249
static unsigned int num_plugins;58,1317
static int initialized;64,1375
add_plugin 75,1550
init 94,2038
RECLAIM_ATTRIBUTE_fini 110,2480
GNUNET_RECLAIM_attribute_typename_to_number 145,3288
GNUNET_RECLAIM_attribute_number_to_typename 170,3810
GNUNET_RECLAIM_attribute_string_to_value 199,4478
GNUNET_RECLAIM_attribute_value_to_string 231,5463
GNUNET_RECLAIM_attribute_new 254,6110
GNUNET_RECLAIM_attribute_list_add 286,7150
GNUNET_RECLAIM_attribute_list_serialize_get_size 313,7895
GNUNET_RECLAIM_attribute_list_serialize 329,8273
GNUNET_RECLAIM_attribute_list_deserialize 358,9040
GNUNET_RECLAIM_attribute_list_dup 393,10078
GNUNET_RECLAIM_attribute_list_destroy 425,11211
GNUNET_RECLAIM_attribute_serialize_get_size 450,11750
GNUNET_RECLAIM_attribute_serialize 465,12089
GNUNET_RECLAIM_attribute_deserialize 504,13281

src/service/reclaim/reclaim_attribute.h,452
#define RECLAIM_ATTRIBUTE_H27,938
struct Attribute36,1061
  uint32_t attribute_type GNUNET_PACKED;41,1112
  uint32_t attribute_flag GNUNET_PACKED;46,1186
  struct GNUNET_RECLAIM_Identifier attribute_id;51,1258
  struct GNUNET_RECLAIM_Identifier credential_id;56,1339
  uint16_t reserved_nl GNUNET_PACKED;61,1428
  uint16_t name_len GNUNET_PACKED;66,1496
  uint16_t reserved_ds GNUNET_PACKED;71,1570
  uint16_t data_size GNUNET_PACKED;76,1636

src/service/reclaim/did_core.c,624
struct DID_resolve_return32,1064
  DID_resolve_callback *cb;cb34,1092
  void *cls;cls35,1120
struct DID_action_return38,1137
  DID_action_callback *cb;cb40,1164
  void *cls;cls41,1191
DID_resolve_gns_lookup_cb 58,1646
DID_resolve 89,2505
DID_create_did_store_cb 126,3591
struct DID_create_namestore_lookup_closure146,4084
  const char *did_document;did_document148,4129
  struct GNUNET_TIME_Relative expire_time;149,4157
  struct GNUNET_NAMESTORE_Handle *namestore_handle;namestore_handle150,4200
  struct DID_action_return *ret;ret151,4252
DID_create_namestore_lookup_cb 155,4301
DID_create 226,6846

src/service/reclaim/gnunet-service-reclaim.c,6481
static struct GNUNET_NAMESTORE_Handle *nsh;nsh38,1165
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task43,1234
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg48,1316
struct TicketIteration58,1456
  struct TicketIteration *next;next63,1502
  struct TicketIteration *prev;prev68,1556
  struct IdpClient *client;client73,1648
  uint32_t r_id;78,1760
  struct RECLAIM_TICKETS_Iterator *iter;iter83,1815
struct Iterator90,1906
  struct Iterator *next;next95,1965
  struct Iterator *prev;prev100,2036
  struct IdpClient *client;client105,2125
  struct GNUNET_CRYPTO_PrivateKey identity;110,2210
  struct GNUNET_NAMESTORE_ZoneIterator *ns_it;ns_it115,2291
  uint32_t request_id;120,2427
  void *ctx;ctx125,2476
struct IdpClient132,2519
  struct IdpClient *prev;prev137,2559
  struct IdpClient *next;next142,2607
  struct GNUNET_SERVICE_Client *client;client147,2662
  struct GNUNET_MQ_Handle *mq;mq152,2764
  struct Iterator *attr_iter_head;attr_iter_head159,2910
  struct Iterator *attr_iter_tail;attr_iter_tail166,3060
  struct Iterator *cred_iter_head;cred_iter_head173,3211
  struct Iterator *cred_iter_tail;cred_iter_tail180,3362
  struct TicketIteration *ticket_iter_head;ticket_iter_head185,3451
  struct TicketIteration *ticket_iter_tail;ticket_iter_tail190,3549
  struct TicketRevocationOperation *revoke_op_head;revoke_op_head195,3648
  struct TicketRevocationOperation *revoke_op_tail;revoke_op_tail200,3755
  struct TicketIssueOperation *issue_op_head;issue_op_head205,3857
  struct TicketIssueOperation *issue_op_tail;issue_op_tail210,3953
  struct ConsumeTicketOperation *consume_op_head;consume_op_head215,4051
  struct ConsumeTicketOperation *consume_op_tail;consume_op_tail220,4153
  struct AttributeStoreHandle *store_op_head;store_op_head225,4256
  struct AttributeStoreHandle *store_op_tail;store_op_tail230,4355
  struct AttributeDeleteHandle *delete_op_head;delete_op_head234,4454
  struct AttributeDeleteHandle *delete_op_tail;delete_op_tail239,4556
struct AttributeDeleteHandle246,4658
  struct AttributeDeleteHandle *next;next251,4710
  struct AttributeDeleteHandle *prev;prev256,4770
  struct IdpClient *client;client261,4844
  struct GNUNET_CRYPTO_PrivateKey identity;266,4899
  struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe272,4973
  struct GNUNET_NAMESTORE_ZoneIterator *ns_it;ns_it277,5045
  struct GNUNET_RECLAIM_Attribute *claim;claim282,5134
  struct GNUNET_RECLAIM_Credential *credential;credential287,5219
  struct TicketRecordsEntry *tickets_to_update_head;tickets_to_update_head292,5303
  struct TicketRecordsEntry *tickets_to_update_tail;tickets_to_update_tail297,5392
  struct GNUNET_RECLAIM_AttributeList *existing_attributes;existing_attributes302,5483
  struct GNUNET_RECLAIM_CredentialList *existing_credentials;existing_credentials307,5582
  char *label;label312,5678
  uint32_t r_id;317,5722
struct AttributeStoreHandle324,5790
  struct AttributeStoreHandle *next;next329,5841
  struct AttributeStoreHandle *prev;prev334,5900
  struct IdpClient *client;client339,5973
  struct GNUNET_CRYPTO_PrivateKey identity;344,6028
  struct GNUNET_CRYPTO_PublicKey identity_pkey;349,6106
  struct GNUNET_NAMESTORE_QueueEntry *ns_qe;ns_qe354,6183
  struct GNUNET_RECLAIM_Attribute *claim;claim359,6269
  struct GNUNET_RECLAIM_Credential *credential;credential364,6351
  struct GNUNET_TIME_Relative exp;369,6451
  uint32_t r_id;374,6515
struct ConsumeTicketOperation381,6582
  struct ConsumeTicketOperation *next;next386,6635
  struct ConsumeTicketOperation *prev;prev391,6696
  struct IdpClient *client;client396,6771
  uint32_t r_id;401,6828
  struct RECLAIM_TICKETS_ConsumeHandle *ch;ch406,6885
struct TicketRevocationOperation413,6978
  struct TicketRevocationOperation *prev;prev418,7034
  struct TicketRevocationOperation *next;next423,7098
  struct IdpClient *client;client428,7176
  struct RECLAIM_TICKETS_RevokeHandle *rh;rh433,7240
  uint32_t r_id;438,7312
struct TicketIssueOperation445,7375
  struct TicketIssueOperation *prev;prev450,7426
  struct TicketIssueOperation *next;next455,7485
  struct IdpClient *client;client460,7558
  uint32_t r_id;465,7615
static struct IdpClient *client_list_head client_list_head472,7660
static struct IdpClient *client_list_tail client_list_tail477,7734
cleanup_adh 486,7883
cleanup_as_handle 525,8991
cleanup_client 543,9339
cleanup 614,11324
do_shutdown 632,11617
send_ticket_result 648,11986
issue_ticket_result_cb 701,13613
check_issue_ticket_message 736,14731
handle_issue_ticket_message 764,15336
revoke_result_cb 827,17344
check_revoke_ticket_message 855,18146
handle_revoke_ticket_message 881,18658
consume_result_cb 926,20094
check_consume_ticket_message 984,22200
handle_consume_ticket_message 1009,22733
attr_store_cont 1047,23864
attr_store_task 1083,24874
check_attribute_store_message 1127,26412
handle_attribute_store_message 1149,26834
cred_store_cont 1201,28439
cred_error 1237,29479
cred_add_cb 1258,29974
cred_store_task 1298,31358
check_credential_store_message 1328,32406
handle_credential_store_message 1350,32825
send_delete_response 1400,34360
consistency_iter 1428,35283
ticket_updated 1504,37960
update_tickets 1521,38416
offending_attr_delete_cont 1628,42037
purge_attributes 1652,42637
consistency_iter_fin 1714,44669
consistency_iter_err 1728,44937
start_consistency_update 1747,45353
attr_delete_cont 1773,46303
check_attribute_delete_message 1799,46907
handle_attribute_delete_message 1821,47320
cred_delete_cont 1880,49318
check_credential_delete_message 1906,49926
handle_credential_delete_message 1928,50342
attr_iter_finished 1989,52383
attr_iter_error 2014,53094
attr_iter_cb 2033,53496
check_iteration_start 2077,55060
handle_iteration_start 2103,55526
handle_iteration_stop 2152,57261
handle_iteration_next 2185,58082
cred_iter_finished 2220,58932
cred_iter_error 2245,59652
cred_iter_cb 2264,60044
check_credential_iteration_start 2308,61618
handle_credential_iteration_start 2334,62096
handle_credential_iteration_stop 2385,63921
handle_credential_iteration_next 2420,64832
ticket_iter_cb 2450,65665
check_ticket_iteration_start 2495,66953
handle_ticket_iteration_start 2521,67421
handle_ticket_iteration_stop 2565,68761
handle_ticket_iteration_next 2601,69706
run 2633,70499
client_disconnect_cb 2666,71273
client_connect_cb 2689,71906

src/service/reclaim/did.h,78
#define RECLAIM_DID_H22,801
#define GNUNET_RECLAIM_DID_METHOD_PREFIX 24,824

src/service/reclaim/did_core.h,153
#define DID_DOCUMENT_LABEL 37,1201
#define DID_DOCUMENT_DEFAULT_EXPIRATION_TIME 38,1235
  DID_resolve_callback 50,1767
  DID_action_callback 61,2135

src/service/reclaim/reclaim_api.c,4925
#define LOG(33,1064
struct GNUNET_RECLAIM_Operation39,1193
  struct GNUNET_RECLAIM_Handle *h;h44,1257
  struct GNUNET_RECLAIM_Operation *next;next49,1339
  struct GNUNET_RECLAIM_Operation *prev;prev54,1427
  const struct GNUNET_MessageHeader *msg;msg60,1560
  GNUNET_RECLAIM_ContinuationWithStatus as_cb;65,1670
  GNUNET_RECLAIM_AttributeResult ar_cb;70,1761
  GNUNET_RECLAIM_AttributeTicketResult atr_cb;75,1845
  GNUNET_RECLAIM_CredentialResult at_cb;80,1937
  GNUNET_RECLAIM_ContinuationWithStatus rvk_cb;85,2023
  GNUNET_RECLAIM_TicketCallback tr_cb;90,2112
  GNUNET_RECLAIM_IssueTicketCallback ti_cb;95,2198
  struct GNUNET_MQ_Envelope *env;env100,2308
  uint32_t r_id;105,2371
  void *cls;cls110,2436
struct GNUNET_RECLAIM_TicketIterator117,2504
  struct GNUNET_RECLAIM_TicketIterator *next;next122,2575
  struct GNUNET_RECLAIM_TicketIterator *prev;prev127,2654
  struct GNUNET_RECLAIM_Handle *h;h132,2749
  GNUNET_SCHEDULER_TaskCallback finish_cb;137,2834
  void *finish_cb_cls;finish_cb_cls142,2921
  GNUNET_RECLAIM_TicketCallback tr_cb;147,3004
  void *cls;cls152,3083
  GNUNET_SCHEDULER_TaskCallback error_cb;157,3142
  void *error_cb_cls;error_cb_cls162,3227
  struct GNUNET_MQ_Envelope *env;env168,3337
  uint32_t r_id;173,3440
struct GNUNET_RECLAIM_AttributeIterator180,3515
  struct GNUNET_RECLAIM_AttributeIterator *next;next185,3589
  struct GNUNET_RECLAIM_AttributeIterator *prev;prev190,3671
  struct GNUNET_RECLAIM_Handle *h;h195,3773
  GNUNET_SCHEDULER_TaskCallback finish_cb;200,3858
  void *finish_cb_cls;finish_cb_cls205,3945
  GNUNET_RECLAIM_AttributeResult proc;210,4028
  void *proc_cls;proc_cls215,4106
  GNUNET_SCHEDULER_TaskCallback error_cb;220,4170
  void *error_cb_cls;error_cb_cls225,4255
  struct GNUNET_MQ_Envelope *env;env231,4365
  struct GNUNET_CRYPTO_PrivateKey identity;236,4442
  uint32_t r_id;241,4555
struct GNUNET_RECLAIM_CredentialIterator247,4630
  struct GNUNET_RECLAIM_CredentialIterator *next;next252,4705
  struct GNUNET_RECLAIM_CredentialIterator *prev;prev257,4788
  struct GNUNET_RECLAIM_Handle *h;h262,4891
  GNUNET_SCHEDULER_TaskCallback finish_cb;267,4976
  void *finish_cb_cls;finish_cb_cls272,5063
  GNUNET_RECLAIM_CredentialResult proc;277,5146
  void *proc_cls;proc_cls282,5225
  GNUNET_SCHEDULER_TaskCallback error_cb;287,5289
  void *error_cb_cls;error_cb_cls292,5374
  struct GNUNET_MQ_Envelope *env;env298,5484
  struct GNUNET_CRYPTO_PrivateKey identity;303,5561
  uint32_t r_id;308,5674
struct GNUNET_RECLAIM_Handle315,5730
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg320,5800
  struct GNUNET_CLIENT_Connection *client;client325,5890
  void *cb_cls;cb_cls330,5969
  struct GNUNET_RECLAIM_Operation *op_head;op_head335,6030
  struct GNUNET_RECLAIM_Operation *op_tail;op_tail340,6119
  struct GNUNET_RECLAIM_AttributeIterator *it_head;it_head345,6207
  struct GNUNET_RECLAIM_AttributeIterator *it_tail;it_tail350,6303
  struct GNUNET_RECLAIM_CredentialIterator *ait_head;ait_head355,6399
  struct GNUNET_RECLAIM_CredentialIterator *ait_tail;ait_tail360,6497
  struct GNUNET_RECLAIM_TicketIterator *ticket_it_head;ticket_it_head365,6595
  struct GNUNET_RECLAIM_TicketIterator *ticket_it_tail;ticket_it_tail370,6695
  struct GNUNET_CLIENT_TransmitHandle *th;th375,6827
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task380,6941
  struct GNUNET_TIME_Relative reconnect_backoff;385,7036
  struct GNUNET_MQ_Handle *mq;mq390,7141
  uint32_t r_id_gen;395,7250
  int in_receive;400,7337
reconnect_task 419,7574
force_reconnect 434,7808
free_it 453,8258
free_ait 470,8564
free_op 487,8886
mq_error_handler 506,9360
handle_success_response 522,9660
check_consume_ticket_result 562,10651
handle_consume_ticket_result 591,11304
check_attribute_result 689,14266
handle_attribute_result 715,14804
check_credential_result 800,16994
handle_credential_result 826,17540
check_ticket_result 917,19779
handle_ticket_result 945,20390
handle_revoke_ticket_result 1033,22585
reconnect 1069,23374
GNUNET_RECLAIM_connect 1118,25277
GNUNET_RECLAIM_cancel 1135,25556
GNUNET_RECLAIM_disconnect 1150,25815
GNUNET_RECLAIM_attribute_store 1169,26199
GNUNET_RECLAIM_attribute_delete 1213,27591
GNUNET_RECLAIM_credential_store 1254,28877
GNUNET_RECLAIM_credential_delete 1298,30293
GNUNET_RECLAIM_get_attributes_start 1339,31593
GNUNET_RECLAIM_get_attributes_next 1384,32899
GNUNET_RECLAIM_get_attributes_stop 1398,33262
GNUNET_RECLAIM_get_credentials_start 1416,33716
GNUNET_RECLAIM_get_credentials_next 1462,35047
GNUNET_RECLAIM_get_credentials_stop 1477,35454
GNUNET_RECLAIM_ticket_issue 1497,35966
GNUNET_RECLAIM_ticket_consume 1546,37456
GNUNET_RECLAIM_ticket_iteration_start 1586,38589
GNUNET_RECLAIM_ticket_iteration_next 1639,40107
GNUNET_RECLAIM_ticket_iteration_stop 1659,40669
GNUNET_RECLAIM_ticket_revoke 1690,41612

src/service/reclaim/test_did_helper.c,705
static const char test_skey_bytes[test_skey_bytes35,1120
static const char *test_did test_did43,1442
static const char *test_multibase_key test_multibase_key46,1545
static const char *test_did_document_format_str test_did_document_format_str49,1639
static struct GNUNET_CRYPTO_PrivateKey test_skey;61,2052
static struct GNUNET_CRYPTO_PublicKey test_pkey;62,2102
static struct json_t *test_did_document;test_did_document63,2151
static char *test_did_document_str;test_did_document_str64,2192
test_GNUNET_DID_pkey_to_did 67,2234
test_GNUNET_DID_did_to_pkey 76,2419
test_GNUNET_DID_key_convert_gnunet_to_multibase_base64 91,2814
test_GNUNET_DID_pkey_to_did_document 101,3079
main 112,3429

src/service/reclaim/did_misc.c,57
DID_ego_to_did 34,1022
DID_public_key_from_did 53,1493

src/service/reclaim/reclaim.h,4098
#define RECLAIM_H29,972
struct AttributeStoreMessage40,1132
  struct GNUNET_MessageHeader header;45,1228
  uint64_t exp GNUNET_PACKED;50,1325
  uint32_t id GNUNET_PACKED;55,1430
  uint16_t attr_len GNUNET_PACKED;60,1505
  uint16_t key_len GNUNET_PACKED;65,1588
struct AttributeDeleteMessage76,1763
  struct GNUNET_MessageHeader header;81,1860
  uint32_t id GNUNET_PACKED;86,1973
  uint16_t attr_len GNUNET_PACKED;91,2048
  uint16_t key_len GNUNET_PACKED;96,2131
struct SuccessResultMessage105,2267
  struct GNUNET_MessageHeader header;110,2329
  uint32_t id GNUNET_PACKED;115,2442
  int32_t op_result GNUNET_PACKED;120,2538
struct AttributeResultMessage126,2624
  struct GNUNET_MessageHeader header;131,2688
  uint32_t id GNUNET_PACKED;136,2801
  uint16_t reserved GNUNET_PACKED;141,2869
  uint16_t attr_len GNUNET_PACKED;146,2958
  uint16_t credential_len GNUNET_PACKED;151,3048
  uint16_t pkey_len GNUNET_PACKED;156,3136
struct CredentialResultMessage168,3322
  struct GNUNET_MessageHeader header;173,3387
  uint32_t id GNUNET_PACKED;178,3500
  uint16_t credential_len GNUNET_PACKED;183,3583
  uint16_t key_len GNUNET_PACKED;188,3671
struct AttributeIterationStartMessage201,3869
  struct GNUNET_MessageHeader header;206,3934
  uint32_t id GNUNET_PACKED;211,4047
  uint16_t reserved GNUNET_PACKED;216,4115
  uint16_t key_len GNUNET_PACKED;221,4198
struct AttributeIterationNextMessage232,4362
  struct GNUNET_MessageHeader header;237,4485
  uint32_t id GNUNET_PACKED;242,4598
struct CredentialIterationStartMessage249,4695
  struct GNUNET_MessageHeader header;254,4761
  uint32_t id GNUNET_PACKED;259,4874
  uint16_t reserved GNUNET_PACKED;264,4942
  uint16_t key_len GNUNET_PACKED;269,5025
struct CredentialIterationNextMessage280,5190
  struct GNUNET_MessageHeader header;285,5314
  uint32_t id GNUNET_PACKED;290,5427
struct CredentialIterationStopMessage297,5522
  struct GNUNET_MessageHeader header;302,5646
  uint32_t id GNUNET_PACKED;307,5759
struct AttributeIterationStopMessage314,5853
  struct GNUNET_MessageHeader header;319,5976
  uint32_t id GNUNET_PACKED;324,6089
struct TicketIterationStartMessage330,6181
  struct GNUNET_MessageHeader header;335,6243
  uint32_t id GNUNET_PACKED;340,6356
  uint16_t reserved GNUNET_PACKED;345,6424
  uint16_t key_len GNUNET_PACKED;350,6507
struct TicketIterationNextMessage361,6668
  struct GNUNET_MessageHeader header;366,6785
  uint32_t id GNUNET_PACKED;371,6898
struct TicketIterationStopMessage378,6989
  struct GNUNET_MessageHeader header;383,7106
  uint32_t id GNUNET_PACKED;388,7219
struct IssueTicketMessage395,7285
  struct GNUNET_MessageHeader header;400,7385
  uint32_t id GNUNET_PACKED;405,7498
  uint16_t reserved GNUNET_PACKED;410,7566
  uint16_t attr_len GNUNET_PACKED;415,7655
  uint16_t key_len GNUNET_PACKED;420,7747
  uint16_t rp_uri_len GNUNET_PACKED;425,7835
struct RevokeTicketMessage437,8030
  struct GNUNET_MessageHeader header;442,8132
  uint32_t id GNUNET_PACKED;447,8245
  uint16_t key_len GNUNET_PACKED;452,8322
  uint16_t tkt_len GNUNET_PACKED;457,8399
struct RevokeTicketResultMessage469,8602
  struct GNUNET_MessageHeader header;474,8717
  uint32_t id GNUNET_PACKED;479,8830
  uint32_t success GNUNET_PACKED;484,8895
struct TicketResultMessage491,8967
  struct GNUNET_MessageHeader header;496,9069
  uint32_t id GNUNET_PACKED;501,9182
  uint16_t tkt_len GNUNET_PACKED;506,9243
  uint16_t rp_uri_len GNUNET_PACKED;511,9309
  uint16_t presentations_len GNUNET_PACKED;516,9400
struct ConsumeTicketMessage528,9625
  struct GNUNET_MessageHeader header;533,9729
  uint32_t id GNUNET_PACKED;538,9842
  uint16_t tkt_len GNUNET_PACKED;543,9914
  uint16_t rp_uri_len GNUNET_PACKED;548,9980
struct ConsumeTicketResultMessage559,10154
  struct GNUNET_MessageHeader header;564,10222
  uint32_t id GNUNET_PACKED;569,10335
  uint32_t result GNUNET_PACKED;574,10389
  uint16_t reserved GNUNET_PACKED;579,10461
  uint16_t attrs_len GNUNET_PACKED;584,10550
  uint16_t presentations_len;589,10632
  uint16_t key_len GNUNET_PACKED;594,10718

src/service/reclaim/reclaim_credential.c,2073
struct Plugin34,1048
  char *library_name;library_name39,1100
  struct GNUNET_RECLAIM_CredentialPluginFunctions *api;api44,1151
static struct Plugin **credential_plugins;credential_plugins51,1231
static unsigned int num_plugins;57,1305
static int initialized;63,1363
add_plugin 74,1538
init 93,2034
RECLAIM_CREDENTIAL_fini 110,2478
GNUNET_RECLAIM_credential_typename_to_number 144,3316
GNUNET_RECLAIM_credential_number_to_typename 169,3915
GNUNET_RECLAIM_credential_string_to_value 198,4591
GNUNET_RECLAIM_credential_value_to_string 230,5588
GNUNET_RECLAIM_credential_new 253,6245
GNUNET_RECLAIM_credential_list_serialize_get_size 287,7260
GNUNET_RECLAIM_credential_list_serialize 304,7717
GNUNET_RECLAIM_credential_list_deserialize 326,8275
GNUNET_RECLAIM_credential_list_dup 368,9564
GNUNET_RECLAIM_credential_list_destroy 395,10560
GNUNET_RECLAIM_credential_serialize_get_size 420,11133
GNUNET_RECLAIM_credential_serialize 429,11344
GNUNET_RECLAIM_credential_deserialize 468,12570
GNUNET_RECLAIM_credential_get_attributes 509,13825
GNUNET_RECLAIM_credential_get_issuer 529,14320
GNUNET_RECLAIM_credential_get_expiration 549,14766
GNUNET_RECLAIM_presentation_typename_to_number 576,15541
GNUNET_RECLAIM_presentation_number_to_typename 595,15971
GNUNET_RECLAIM_presentation_string_to_value 624,16653
GNUNET_RECLAIM_presentation_value_to_string 656,17672
GNUNET_RECLAIM_presentation_new 679,18345
GNUNET_RECLAIM_presentation_list_serialize_get_size 704,18990
GNUNET_RECLAIM_presentation_list_serialize 720,19401
GNUNET_RECLAIM_presentation_list_deserialize 749,20201
GNUNET_RECLAIM_presentation_list_dup 791,21488
GNUNET_RECLAIM_presentation_list_destroy 817,22480
GNUNET_RECLAIM_presentation_serialize_get_size 842,23073
GNUNET_RECLAIM_presentation_serialize 850,23257
GNUNET_RECLAIM_presentation_deserialize 877,24054
GNUNET_RECLAIM_presentation_get_attributes 909,25029
GNUNET_RECLAIM_presentation_get_issuer 930,25583
GNUNET_RECLAIM_presentation_get_expiration 951,26084
GNUNET_RECLAIM_credential_get_presentation 983,27127

src/service/reclaim/test_reclaim_attribute.c,11
main 6,86

src/service/reclaim/gnunet-service-reclaim_tickets.h,633
#define GNUNET_SERVICE_RECLAIM_TICKETS_H29,941
struct TicketRecordsEntry66,1575
  struct TicketRecordsEntry *next;next71,1624
  struct TicketRecordsEntry *prev;prev76,1681
  unsigned int rd_count;81,1747
  char *data;data86,1795
  size_t data_size;91,1837
  char *label;label96,1881
typedef void (*RECLAIM_TICKETS_TicketIter)RECLAIM_TICKETS_TicketIter107,2053
typedef void (*RECLAIM_TICKETS_TicketResult)RECLAIM_TICKETS_TicketResult123,2521
typedef void (*RECLAIM_TICKETS_ConsumeCallback)RECLAIM_TICKETS_ConsumeCallback141,3038
typedef void (*RECLAIM_TICKETS_RevokeCallback)RECLAIM_TICKETS_RevokeCallback156,3409

src/service/reclaim/test_w3c_ed25519_2020.c,133
static char test_privkey[test_privkey32,1047
static char *targetPublicKeyMultibase targetPublicKeyMultibase39,1283
main 42,1379

src/service/cadet/cadet_api_list_tunnels.c,537
struct GNUNET_CADET_ListTunnels37,1168
  GNUNET_CADET_TunnelsCB tunnels_cb;42,1236
  void *tunnels_cb_cls;tunnels_cb_cls47,1332
  struct GNUNET_MQ_Handle *mq;mq52,1414
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg57,1485
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task62,1571
  struct GNUNET_TIME_Relative backoff;67,1669
handle_get_tunnels 78,1894
handle_get_tunnels_end 101,2517
error_handler 130,3101
reconnect 151,3720
GNUNET_CADET_list_tunnels 194,5223
GNUNET_CADET_list_tunnels_cancel 226,5932

src/service/cadet/gnunet-service-cadet.c,2349
#define LOG(52,1924
struct CadetClient58,2053
  struct CadetClient *next;next63,2108
  struct CadetClient *prev;prev68,2171
  struct GNUNET_CONTAINER_MultiHashMap32 *channels;channels74,2313
  struct GNUNET_MQ_Handle *mq;mq79,2421
  struct GNUNET_SERVICE_Client *client;client84,2485
  struct GNUNET_CONTAINER_MultiHashMap *ports;ports90,2641
  struct GNUNET_CADET_ClientChannelNumber next_ccn;96,2802
  unsigned int id;101,2947
const struct GNUNET_CONFIGURATION_Handle *cfg;cfg114,3337
struct GNUNET_STATISTICS_Handle *stats;stats119,3430
struct GNUNET_TRANSPORT_ApplicationHandle *transport;transport124,3511
struct GNUNET_PeerIdentity my_full_id;129,3596
struct GNUNET_CRYPTO_EddsaPrivateKey *my_private_key;my_private_key134,3664
int shutting_down;139,3792
static struct CadetClient *clients_head;clients_head144,3855
static struct CadetClient *clients_tail;clients_tail149,3940
static unsigned int next_client_id;154,4024
struct GNUNET_CONTAINER_MultiHashMap *open_ports;open_ports160,4168
struct GNUNET_CONTAINER_MultiHashMap *loose_channels;loose_channels167,4385
struct GNUNET_CONTAINER_MultiPeerMap *peers;peers172,4496
struct GNUNET_CONTAINER_MultiShortmap *connections;connections178,4662
unsigned long long ratchet_messages;183,4794
struct GNUNET_TIME_Relative ratchet_time;188,4900
struct GNUNET_TIME_Relative keepalive_period;193,5020
unsigned long long drop_percent;198,5149
GSC_send_to_client 208,5309
GSC_2s 223,5593
lookup_channel 243,5976
client_get_next_ccn 258,6382
GSC_bind 292,7384
destroy_tunnels_now 339,8994
destroy_paths_now 363,9598
shutdown_rest 378,9885
shutdown_task 432,11172
bind_loose_channel 453,11684
handle_port_open 481,12482
handle_port_close 532,14265
handle_channel_create 577,15637
handle_channel_destroy 639,17636
check_local_data 684,19124
handle_local_data 738,20853
handle_local_ack 789,22339
get_all_peers_iterator 825,23361
handle_get_peers 854,24223
path_info_iterator 882,25032
handle_show_path 935,26787
get_all_tunnels_iterator 966,27669
handle_info_tunnels 1000,28669
handle_drop_message 1024,29335
client_connect_cb 1049,29953
GSC_handle_remote_channel_destroy 1083,30904
GSC_drop_loose_channel 1104,31687
channel_destroy_iterator 1123,32339
client_release_ports 1156,33325
client_disconnect_cb 1189,34380
run 1235,35775

src/service/cadet/gnunet-service-cadet_connection.h,541
#define GNUNET_SERVICE_CADET_CONNECTION_H31,1184
(*GCC_ReadyCallback)GCC_ReadyCallback47,1636
struct CadetConnectionCreatePS191,5970
  struct GNUNET_CRYPTO_EccSignaturePurpose purpose;197,6085
  struct GNUNET_TIME_AbsoluteNBO monotonic_time;211,6706
struct CadetConnectionMetrics218,6809
  struct GNUNET_TIME_Relative aged_latency;224,6975
  struct GNUNET_TIME_Absolute age;230,7149
  struct GNUNET_TIME_Absolute last_use;236,7296
  unsigned long long num_acked_transmissions;242,7439
  unsigned long long num_successes;251,7788

src/service/cadet/test_cadet_local_mq.c,792
#define TEST_MESSAGE_TYPE 33,1092
#define TEST_PORT_ID 34,1120
struct GNUNET_CADET_TestMsg39,1179
  struct GNUNET_MessageHeader header;46,1303
  uint64_t payload;51,1373
struct GNUNET_TESTING_Peer *me;me54,1397
static struct GNUNET_CADET_Handle *cadet_peer_1;cadet_peer_156,1430
static struct GNUNET_CADET_Handle *cadet_peer_2;cadet_peer_258,1480
static struct GNUNET_CADET_Channel *ch;ch60,1530
static int result 62,1571
static int got_data 64,1603
static struct GNUNET_SCHEDULER_Task *abort_task;abort_task66,1637
static struct GNUNET_SCHEDULER_Task *connect_task;connect_task68,1687
do_shutdown 84,1900
do_abort 124,2744
connected 148,3501
disconnected 172,4216
handle_data_received 190,4608
message_sent 212,5140
do_connect 225,5339
run 270,6906
main 324,9016

src/service/cadet/gnunet-service-cadet_channel.c,3775
#define LOG(44,1705
#define CADET_INITIAL_RETRANSMIT_TIME 49,1844
#define TIMEOUT_CLOSED_PORT 56,2052
#define MIN_RTT_DELAY 62,2214
#define MAX_OUT_OF_ORDER_DISTANCE 75,2786
enum CadetChannelState81,2874
  CADET_CHANNEL_NEW,86,2972
  CADET_CHANNEL_LOOSE,92,3096
  CADET_CHANNEL_OPEN_SENT,97,3194
  CADET_CHANNEL_READY102,3285
struct CadetReliableMessage111,3447
  struct CadetReliableMessage *next;next116,3525
  struct CadetReliableMessage *prev;prev121,3611
  struct CadetChannel *ch;ch126,3700
  struct CadetTunnelQueueEntry *qe;qe133,3896
  struct GNUNET_CADET_ChannelAppDataMessage *data_message;data_message138,3986
  struct GNUNET_TIME_Absolute next_retry;144,4167
  struct GNUNET_TIME_Relative retry_delay;150,4317
  struct GNUNET_TIME_Absolute first_transmission_time;156,4481
  struct GNUNET_CADET_ConnectionTunnelIdentifier connection_taken;162,4685
  int num_transmissions;169,4975
struct CadetOutOfOrderMessage176,5061
  struct CadetOutOfOrderMessage *next;next181,5141
  struct CadetOutOfOrderMessage *prev;prev186,5229
  struct ChannelMessageIdentifier mid;192,5383
  struct GNUNET_MQ_Envelope *env;env197,5498
struct CadetChannelClient206,5741
  struct CadetClient *c;c214,6015
  struct CadetOutOfOrderMessage *head_recv;head_recv219,6133
  struct CadetOutOfOrderMessage *tail_recv;tail_recv224,6267
  struct GNUNET_CADET_ClientChannelNumber ccn;231,6474
  unsigned int num_recv;236,6588
  int client_ready;241,6663
struct CadetChannel248,6773
  struct CadetTunnel *t;t253,6839
  struct CadetChannelClient *owner;owner259,6991
  struct CadetChannelClient *dest;dest265,7159
  struct CadetTunnelQueueEntry *last_control_qe;last_control_qe273,7448
  struct CadetReliableMessage *head_sent;head_sent278,7563
  struct CadetReliableMessage *tail_sent;tail_sent283,7671
  struct GNUNET_SCHEDULER_Task *retry_control_task;retry_control_task288,7779
  struct GNUNET_SCHEDULER_Task *retry_data_task;retry_data_task293,7897
  struct GNUNET_TIME_Absolute timestamp;298,7995
  struct GNUNET_HashCode port;303,8087
  struct GNUNET_HashCode h_port;308,8200
  struct GNUNET_TIME_Relative retry_time;313,8284
  uint64_t mid_futures;318,8400
  struct ChannelMessageIdentifier mid_recv;323,8482
  struct ChannelMessageIdentifier mid_send;328,8582
  unsigned int pending_messages;333,8700
  unsigned int max_pending_messages;339,8844
  struct GNUNET_CADET_ChannelTunnelNumber ctn;344,8946
  enum CadetChannelState state;349,9026
  unsigned int skip_ack_series;355,9161
  int nobuffer;360,9255
  int reliable;365,9313
  int out_of_order;370,9375
  int is_loopback;375,9484
  int destroy;382,9664
  uint16_t type GNUNET_PACKED;387,9742
GCCH_assign_type_to_drop 392,9783
GCCH_is_type_to_drop 407,10142
GCCH_2s 429,10529
GCCH_hash_port 461,11570
GCCH_get_id 485,12264
free_channel_client 497,12437
channel_destroy 518,12839
channel_open_sent_cb 590,14422
send_channel_open 613,15100
GCCH_tunnel_up 648,16414
GCCH_channel_local_new 659,16719
timeout_closed_cb 731,18925
GCCH_channel_incoming_new 745,19259
send_ack_cb 803,21169
send_channel_data_ack 819,21589
send_open_ack 849,22552
GCCH_handle_duplicate_open 879,23496
send_ack_to_client 912,24404
GCCH_bind 940,25241
signal_remote_destroy_cb 1003,27286
GCCH_channel_local_destroy 1025,27841
GCCH_handle_channel_open_ack 1097,29875
is_before 1163,31749
GCCH_handle_channel_plaintext_data 1189,32281
retry_transmission 1461,42149
handle_matching_ack 1487,43004
GCCH_handle_channel_plaintext_data_ack 1529,44356
GCCH_handle_remote_destroy 1611,46998
cmp_crm_by_next_retry 1651,48175
data_sent_cb 1672,48853
GCCH_handle_local_data 1760,51828
GCCH_handle_local_ack 1861,54918
#define LOG2(1953,57825
GCCH_debug 1964,58009

src/service/cadet/gnunet-service-cadet_dht.c,658
#define STARTUP_DELAY 43,1526
#define CHANGE_DELAY 51,1835
#define LOG(55,1932
struct GCD_search_handle58,2008
  struct GNUNET_DHT_GetHandle *dhtget;dhtget63,2068
static struct GNUNET_DHT_Handle *dht_handle;dht_handle70,2142
static struct GNUNET_TIME_Relative id_announce_time;75,2235
static unsigned long long dht_replication_level;80,2380
static struct GNUNET_SCHEDULER_Task *announce_id_task;announce_id_task85,2494
static struct GNUNET_TIME_Relative announce_delay;90,2593
dht_get_id_handler 111,3329
announce_id 151,4581
GCD_hello_update 225,7191
GCD_init 238,7490
GCD_shutdown 278,8897
GCD_search 294,9164
GCD_search_stop 330,10414

src/service/cadet/desirability_table.c,13
main 12,234

src/service/cadet/cadet_api_list_peers.c,521
struct GNUNET_CADET_PeersLister37,1166
  GNUNET_CADET_PeersCB peers_cb;42,1234
  void *peers_cb_cls;peers_cb_cls47,1323
  struct GNUNET_MQ_Handle *mq;mq52,1403
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg57,1474
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task62,1560
  struct GNUNET_TIME_Relative backoff;67,1658
handle_get_peers 78,1881
handle_get_peers_end 100,2489
error_handler 129,3061
reconnect 150,3680
GNUNET_CADET_list_peers 193,5183
GNUNET_CADET_list_peers_cancel 225,5881

src/service/cadet/gnunet-service-cadet_tunnels.c,6357
#define LOG(45,1627
#define MAX_UNVERIFIED_ATTEMPTS 52,1841
#define IDLE_DESTROY_DELAY 57,1943
#define INITIAL_KX_RETRY_DELAY 64,2179
#define MAX_SKIPPED_KEYS 70,2357
#define MAX_KEY_GAP 76,2536
struct CadetTunnelSkippedKey82,2650
  struct CadetTunnelSkippedKey *next;next87,2708
  struct CadetTunnelSkippedKey *prev;prev92,2774
  struct GNUNET_TIME_Absolute timestamp;97,2870
  struct GNUNET_CRYPTO_SymmetricSessionKey HK;102,2941
  struct GNUNET_CRYPTO_SymmetricSessionKey MK;107,3019
  unsigned int Kn;112,3111
struct CadetTunnelAxolotl119,3213
  struct CadetTunnelSkippedKey *skipped_head;skipped_head126,3462
  struct CadetTunnelSkippedKey *skipped_tail;skipped_tail131,3560
  struct GNUNET_CRYPTO_SymmetricSessionKey RK;136,3675
  struct GNUNET_CRYPTO_SymmetricSessionKey HKs;141,3789
  struct GNUNET_CRYPTO_SymmetricSessionKey HKr;146,3905
  struct GNUNET_CRYPTO_SymmetricSessionKey NHKs;153,4148
  struct GNUNET_CRYPTO_SymmetricSessionKey NHKr;160,4364
  struct GNUNET_CRYPTO_SymmetricSessionKey CKs;166,4531
  struct GNUNET_CRYPTO_SymmetricSessionKey CKr;174,4823
  struct GNUNET_CRYPTO_EcdhePrivateKey kx_0;179,4922
  struct GNUNET_CRYPTO_EcdhePrivateKey DHRs;184,5039
  struct GNUNET_CRYPTO_EcdhePublicKey DHRr;189,5164
  struct GNUNET_CRYPTO_EcdhePublicKey last_ephemeral;195,5312
  struct GNUNET_TIME_Absolute ratchet_expiration;201,5494
  unsigned int skipped;206,5621
  uint32_t Ns;211,5736
  uint32_t Nr;216,5842
  uint32_t PNs;221,5936
  int ratchet_flag;226,6039
  int ratchet_allowed;238,6492
  unsigned int ratchet_counter;252,6945
struct CadetTunnelQueueEntry259,7068
  struct CadetTunnelQueueEntry *next;next264,7140
  struct CadetTunnelQueueEntry *prev;prev269,7220
  struct CadetTunnel *t;t274,7309
  GCT_SendContinuation cont;279,7407
  void *cont_cls;cont_cls284,7475
  struct GNUNET_MQ_Envelope *env;env289,7548
  struct GNUNET_CADET_ConnectionTunnelIdentifier *cid;cid295,7703
struct CadetTunnel302,7838
  struct CadetPeer *destination;destination307,7903
  struct GNUNET_CRYPTO_EcdhePublicKey peers_ephemeral_key;313,8047
  struct GNUNET_CRYPTO_SymmetricSessionKey e_key;318,8190
  struct GNUNET_CRYPTO_SymmetricSessionKey d_key;323,8326
  struct CadetTunnelAxolotl ax;328,8408
  struct CadetTunnelAxolotl *unverified_ax;unverified_ax337,8743
  struct GNUNET_SCHEDULER_Task *destroy_task;destroy_task342,8868
  struct GNUNET_SCHEDULER_Task *maintain_connections_task;maintain_connections_task347,8982
  struct GNUNET_SCHEDULER_Task *send_task;send_task352,9107
  struct GNUNET_SCHEDULER_Task *kx_task;kx_task357,9188
  struct GNUNET_MessageStreamTokenizer *mst;mst362,9281
  struct GNUNET_MQ_Handle *mq;mq367,9410
  struct CadetTConnection *connection_ready_head;connection_ready_head372,9538
  struct CadetTConnection *connection_ready_tail;connection_ready_tail377,9685
  struct CadetTConnection *connection_busy_head;connection_busy_head382,9839
  struct CadetTConnection *connection_busy_tail;connection_busy_tail387,9992
  struct GNUNET_CONTAINER_MultiHashMap32 *channels;channels393,10168
  struct GNUNET_CADET_ChannelTunnelNumber next_ctn;398,10294
  struct CadetTunnelQueueEntry *tq_head;tq_head403,10421
  struct CadetTunnelQueueEntry *tq_tail;tq_tail408,10537
  struct CadetTConnection *current_ct;current_ct415,10811
  struct GNUNET_TIME_Relative kx_retry_delay;420,10911
  struct GNUNET_TIME_Absolute next_kx_attempt;425,11003
  unsigned int num_ready_connections;430,11127
  unsigned int num_busy_connections;435,11241
  unsigned int unverified_attempts;442,11471
  unsigned int tq_len;447,11566
  enum CadetTunnelEState estate;452,11639
  int kx_auth_requested;457,11741
GCT_alice_or_betty 468,11975
mark_connection_unready 491,12487
GCT_2s 517,13222
estate2s 539,13647
GCT_get_destination 573,14471
GCT_count_channels 580,14559
lookup_channel 594,14849
GCT_count_any_connections 603,15090
get_ready_connection 617,15453
GCT_get_estate 635,15793
new_ephemeral 662,16415
t_hmac 680,16845
t_ax_hmac_hash 717,17926
t_hmac_derive_key 745,18742
t_ax_encrypt 773,19597
t_ax_decrypt 858,22219
t_h_encrypt 896,23387
t_h_decrypt 924,24395
delete_skipped_key 952,25424
try_old_ax_keys 974,26129
store_skipped_key 1064,29043
store_ax_keys 1100,30073
t_ax_decrypt_and_validate 1150,31425
notify_tunnel_up_cb 1265,34829
GCT_change_estate 1284,35233
send_kx 1325,36410
send_kx_auth 1396,38935
cleanup_ax 1475,41605
update_ax_by_kx 1500,42503
retry_kx 1609,45677
GCT_handle_kx 1696,47743
check_ee 1833,51996
check_ed 1859,52873
test_crypto_bug 1885,53762
GCT_handle_kx_auth 1906,54251
get_next_free_ctn 2048,58796
#define HIGH_BIT 2050,58840
GCT_add_channel 2087,59851
GCT_connection_lost 2146,61557
destroy_t_connection 2175,62237
destroy_tunnel 2193,62590
GCT_remove_channel 2254,64088
destroy_remaining_channels 2287,65093
GCT_destroy_tunnel_now 2305,65464
try_send_normal_payload 2330,66169
connection_ready_cb 2376,67528
trigger_transmissions 2491,70948
struct EvaluationSummary2511,71447
  unsigned int min_length;2516,71561
  unsigned int max_length;2521,71667
  GNUNET_CONTAINER_HeapCostType min_desire;2526,71788
  GNUNET_CONTAINER_HeapCostType max_desire;2531,71917
  struct CadetPeerPath *path;path2536,72048
  struct CadetTConnection *worst;worst2542,72225
  double worst_score;2547,72338
  int duplicate;2552,72443
evaluate_connection 2564,72710
consider_path_cb 2665,75733
maintain_connections_cb 2771,79516
GCT_consider_path 2821,81196
handle_plaintext_keepalive 2843,81742
check_plaintext_data 2866,82376
handle_plaintext_data 2881,82794
handle_plaintext_data_ack 2916,83969
handle_plaintext_channel_open 2949,85038
GCT_send_channel_destroy 2997,86659
handle_plaintext_channel_open_ack 3026,87486
handle_plaintext_channel_destroy 3064,88711
handle_decrypted 3102,89896
decrypted_error_cb 3122,90323
GCT_create_tunnel 3137,90648
GCT_add_inbound_connection 3190,92982
GCT_handle_encrypted 3238,94495
GCT_send 3413,100324
GCT_send_cancel 3491,102683
GCT_iterate_connections 3511,103122
struct ChanIterCls3539,103662
  GCT_ChannelIterator iter;3544,103718
  void *iter_cls;iter_cls3549,103785
iterate_channels_cb 3562,103998
GCT_iterate_channels 3583,104409
debug_channel 3606,105007
#define LOG2(3618,105223
GCT_debug 3629,105490

src/service/cadet/gnunet-service-cadet_peer.h,175
#define GNUNET_SERVICE_CADET_PEER_H28,989
(*GCP_PathIterator)GCP_PathIterator132,3553
(*GCP_MessageQueueNotificationCallback)GCP_MessageQueueNotificationCallback329,9043

src/service/cadet/cadet_protocol.h,3689
#define CADET_PROTOCOL_H_29,967
#define DEBUG_KX 34,1043
struct GNUNET_CADET_ConnectionCreateMessage69,1913
  struct GNUNET_MessageHeader header;77,2159
  uint32_t options GNUNET_PACKED;85,2422
  int has_monotime;91,2580
  struct GNUNET_TIME_AbsoluteNBO monotime;97,2743
  struct GNUNET_CRYPTO_EddsaSignature monotime_sig;103,2905
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;108,2996
struct GNUNET_CADET_ConnectionCreateAckMessage121,3285
  struct GNUNET_MessageHeader header;126,3406
  uint32_t reserved GNUNET_PACKED;131,3477
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;136,3552
struct GNUNET_CADET_ConnectionBrokenMessage143,3670
  struct GNUNET_MessageHeader header;148,3785
  uint32_t reserved GNUNET_PACKED;153,3856
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;158,3931
  struct GNUNET_PeerIdentity peer1;163,4022
  struct GNUNET_PeerIdentity peer2;168,4095
struct GNUNET_CADET_ConnectionDestroyMessage175,4180
  struct GNUNET_MessageHeader header;180,4296
  uint32_t reserved GNUNET_PACKED;185,4367
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;190,4442
struct CadetEncryptedMessageIdentifier205,5053
  uint32_t pid GNUNET_PACKED;211,5206
enum GNUNET_CADET_KX_Flags218,5289
  GNUNET_CADET_KX_FLAG_NONE 223,5378
  GNUNET_CADET_KX_FLAG_FORCE_REPLY 228,5472
struct GNUNET_CADET_TunnelKeyExchangeMessage235,5568
  struct GNUNET_MessageHeader header;242,5793
  uint32_t flags GNUNET_PACKED;248,5928
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;253,6000
  struct GNUNET_CRYPTO_EcdhePublicKey ephemeral_key;260,6208
  struct GNUNET_CRYPTO_EcdhePrivateKey ephemeral_key_XXX;268,6428
  struct GNUNET_CRYPTO_EddsaPrivateKey private_key_XXX;275,6668
  struct GNUNET_CRYPTO_EcdhePublicKey ratchet_key;283,6918
struct GNUNET_CADET_TunnelKeyExchangeAuthMessage291,7112
  struct GNUNET_CADET_TunnelKeyExchangeMessage kx;296,7214
  struct GNUNET_CRYPTO_EcdhePublicKey r_ephemeral_key_XXX;304,7432
  struct GNUNET_HashCode auth;311,7640
struct GNUNET_CADET_AxHeader319,7806
  uint32_t Ns GNUNET_PACKED;324,7908
  uint32_t PNs GNUNET_PACKED;329,8010
  struct GNUNET_CRYPTO_EcdhePublicKey DHRs;334,8079
struct GNUNET_CADET_TunnelEncryptedMessage341,8198
  struct GNUNET_MessageHeader header;346,8310
  uint32_t reserved GNUNET_PACKED;351,8391
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;356,8466
  struct GNUNET_ShortHashCode hmac;363,8698
  struct GNUNET_CADET_AxHeader ax_header;369,8856
struct GNUNET_CADET_ChannelOpenMessage385,9233
  struct GNUNET_MessageHeader header;390,9337
  uint32_t opt GNUNET_PACKED;395,9410
  struct GNUNET_HashCode h_port;400,9497
  struct GNUNET_CADET_ChannelTunnelNumber ctn;405,9585
struct GNUNET_CADET_ChannelOpenAckMessage413,9745
  struct GNUNET_MessageHeader header;418,9856
  uint32_t reserved GNUNET_PACKED;423,9927
  struct GNUNET_CADET_ChannelTunnelNumber ctn;428,9998
  struct GNUNET_HashCode port;434,10161
struct GNUNET_CADET_ChannelDestroyMessage442,10292
  struct GNUNET_MessageHeader header;447,10402
  uint32_t reserved GNUNET_PACKED;452,10473
  struct GNUNET_CADET_ChannelTunnelNumber ctn;457,10544
struct ChannelMessageIdentifier464,10669
  uint32_t mid GNUNET_PACKED;469,10769
struct GNUNET_CADET_ChannelAppDataMessage476,10847
  struct GNUNET_MessageHeader header;481,10959
  struct ChannelMessageIdentifier mid;486,11049
  struct GNUNET_CADET_ChannelTunnelNumber ctn;491,11124
struct GNUNET_CADET_ChannelDataAckMessage502,11261
  struct GNUNET_MessageHeader header;507,11376
  struct GNUNET_CADET_ChannelTunnelNumber ctn;512,11450
  uint64_t futures GNUNET_PACKED;521,11654
  struct ChannelMessageIdentifier mid;526,11732

src/service/cadet/gnunet-service-cadet_paths.h,44
#define GNUNET_SERVICE_CADET_PATHS_H28,995

src/service/cadet/gnunet-service-cadet_peer.c,2800
#define LOG(49,1750
#define IDLE_PEER_TIMEOUT 55,1890
#define IDLE_PATH_TIMEOUT 61,2065
#define MAX_OOO_QUEUE_SIZE 67,2218
struct GCP_MessageQueueManager73,2353
  struct GCP_MessageQueueManager *next;next78,2418
  struct GCP_MessageQueueManager *prev;prev83,2491
  GCP_MessageQueueNotificationCallback cb;88,2601
  void *cb_cls;cb_cls93,2681
  struct CadetPeer *cp;cp98,2737
  struct GNUNET_MQ_Envelope *env;env103,2845
struct CadetPeer110,2952
  struct GNUNET_PeerIdentity pid;115,3003
  struct GNUNET_TIME_Absolute last_connection_create;120,3111
  struct CadetPeerPathEntry **path_heads;path_heads126,3288
  struct CadetPeerPathEntry **path_tails;path_tails132,3452
  struct GCP_MessageQueueManager *mqm_head;mqm_head137,3559
  struct GCP_MessageQueueManager *mqm_tail;mqm_tail142,3668
  struct GCP_MessageQueueManager *mqm_ready_ptr;mqm_ready_ptr147,3777
  struct GNUNET_CONTAINER_Heap *path_heap;path_heap153,3942
  struct GCD_search_handle *search_h;search_h158,4056
  struct GNUNET_SCHEDULER_Task *heap_cleanup_task;heap_cleanup_task163,4158
  struct GNUNET_SCHEDULER_Task *destroy_task;destroy_task168,4255
  struct CadetTunnel *t;t173,4348
  struct GNUNET_CONTAINER_MultiShortmap *connections;connections178,4446
  struct GNUNET_MQ_Handle *core_mq;core_mq183,4549
  struct GNUNET_MessageHeader *hello;hello188,4630
  struct GNUNET_TRANSPORT_OfferHelloHandle *hello_offer;hello_offer193,4736
  struct GNUNET_TRANSPORT_ApplicationSuggestHandle *ash;ash198,4837
  unsigned int queue_n;203,4961
  unsigned int num_paths;208,5080
  unsigned int off_sum;214,5266
  unsigned int mqm_ready_counter;223,5594
  unsigned int path_dll_length;229,5751
GCP_2s 234,5801
GCP_get_desirability_of_path 256,6212
destroy_peer 307,7873
consider_peer_activate 369,9705
drop_paths 446,11803
consider_peer_destroy 464,12168
GCP_set_mq 513,13741
should_I_drop 577,15195
mqm_execute 604,15760
send_next_ready 678,17806
mqm_send_done 700,18311
GCP_send 719,18744
destroy_iterator_cb 755,19679
GCP_destroy_all_peers 777,20144
GCP_drop_owned_paths 794,20557
GCP_path_entry_add 817,21119
GCP_path_entry_remove 877,22897
path_heap_cleanup 913,23949
GCP_attach_path 943,25025
GCP_detach_path 1017,27402
GCP_add_connection 1037,27889
GCP_remove_connection 1065,28775
GCP_get 1094,29889
GCP_get_id 1130,31017
GCP_iterate_all 1143,31185
GCP_count_paths 1159,31563
GCP_iterate_paths 1174,31872
GCP_iterate_indirect_paths 1226,33175
GCP_iterate_paths_at 1254,33829
GCP_get_tunnel 1292,34712
GCP_set_hello 1307,34977
GCP_drop_tunnel 1365,36660
GCP_has_core_connection 1385,37081
GCP_request_mq 1400,37452
GCP_request_mq_cancel 1431,38205
GCP_send_ooo 1477,39484
GCP_check_and_update_monotime 1509,40451
GCP_check_monotime_sig 1532,41124

src/service/cadet/gnunet-service-cadet_dht.h,43
#define GNUNET_SERVICE_CADET_DHT_H30,1088

src/service/cadet/gnunet-service-cadet_paths.c,866
#define LOG(33,1143
struct CadetPeerPath39,1285
  struct CadetPeerPathEntry **entries;entries45,1416
  struct GNUNET_CONTAINER_HeapNode *hn;hn51,1596
  GNUNET_CONTAINER_HeapCostType desirability;57,1731
  unsigned int entries_length;62,1827
recalculate_path_desirability 72,1977
GCPP_get_desirability 101,3034
GCPP_get_connection 118,3532
GCPP_add_connection 140,4103
GCPP_del_connection 168,4832
attach_path 196,5641
GCPP_release 243,7081
GCPP_update_score 282,8164
struct CheckMatchContext313,8809
  struct CadetPeerPath *match;match318,8885
  struct CadetPeer **cpath;cpath323,8960
  unsigned int cpath_length;328,9038
check_match 343,9444
extend_path 391,10922
GCPP_try_path_from_dht 471,13237
GCPP_get_path_from_route 598,17141
GCPP_get_length 692,20331
GCPP_find_peer 706,20592
GCPP_get_peer_at_offset 720,20904
GCPP_2s 735,21255

src/service/cadet/cadet_api_drop_message.c,35
GNUNET_CADET_drop_message 37,1155

src/service/cadet/cadet_api.c,1836
#define LOG(33,1119
struct GNUNET_CADET_Handle38,1233
  struct GNUNET_MQ_Handle *mq;mq43,1294
  struct GNUNET_CONTAINER_MultiHashMap *ports;ports48,1355
  struct GNUNET_CONTAINER_MultiHashMap32 *channels;channels53,1435
  struct GNUNET_CADET_ClientChannelNumber next_ccn;58,1570
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg63,1699
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task68,1796
  struct GNUNET_TIME_Relative reconnect_time;73,1917
struct GNUNET_CADET_Port79,2003
  struct GNUNET_HashCode id;84,2061
  struct GNUNET_CADET_Handle *cadet;cadet89,2158
  void *cls;cls94,2237
  GNUNET_CADET_ConnectEventHandler connects;99,2311
  void *connects_cls;connects_cls104,2400
  GNUNET_CADET_WindowSizeEventHandler window_changes;109,2468
  GNUNET_CADET_DisconnectEventHandler disconnects;114,2594
  struct GNUNET_MQ_MessageHandler *handlers;handlers119,2703
find_port 131,2958
find_channel 146,3376
create_channel 162,3904
destroy_channel 203,5069
open_port_cb 251,6319
reconnect_cbk 273,6859
notify_window_size 290,7247
cadet_mq_send_now 305,7590
cadet_mq_send_impl 347,8660
cadet_mq_destroy_impl 396,10144
cadet_mq_error_handler 414,10591
cadet_mq_cancel_impl 444,11364
handle_channel_created 467,11919
handle_channel_destroy 535,14113
check_local_data 566,14977
handle_local_data 588,15448
handle_local_ack 626,16514
destroy_channel_cb 670,17772
handle_mq_error 693,18423
reconnect 714,19008
destroy_port_cb 751,20403
GNUNET_CADET_disconnect 774,21111
GNUNET_CADET_close_port 801,21947
GNUNET_CADET_channel_destroy 830,22728
GNUNET_CADET_channel_get_info 850,23327
GNUNET_CADET_receive_done 872,23824
GNUNET_CADET_connect 894,24397
return_agpl 922,25130
GNUNET_CADET_open_port 954,26288
GNUNET_CADET_channel_create 1015,28560
GNUNET_CADET_get_mq 1066,30478

src/service/cadet/gnunet-service-cadet.h,766
#define GNUNET_SERVICE_CADET_H28,979
struct CadetPeerPathEntry66,1824
  struct CadetPeerPathEntry *next;next71,1928
  struct CadetPeerPathEntry *prev;prev76,2040
  struct CadetPeer *peer;peer81,2130
  struct CadetPeerPath *path;path86,2202
  struct CadetConnection *cc;cc91,2296
  int score;100,2631
struct CadetTConnection106,2719
  struct CadetTConnection *next;next111,2775
  struct CadetTConnection *prev;prev116,2839
  struct CadetConnection *cc;cc121,2909
  struct CadetTunnel *t;t126,2992
  struct GNUNET_TIME_Absolute created;131,3083
  uint32_t throughput;136,3197
  int is_ready;141,3290
struct OpenPort148,3347
  struct CadetClient *c;c153,3411
  struct GNUNET_HashCode port;158,3467
  struct GNUNET_HashCode h_port;163,3575

src/service/cadet/gnunet-service-cadet_core.c,2280
#define LOG(42,1450
struct Rung55,1846
  struct Rung *next;next60,1934
  struct Rung *prev;prev65,2030
  struct RouteDirection *rd_head;rd_head70,2145
  struct RouteDirection *rd_tail;rd_tail75,2273
  unsigned int num_routes;80,2372
  unsigned int rung_off;86,2493
struct RouteDirection93,2581
  struct RouteDirection *prev;prev98,2683
  struct RouteDirection *next;next103,2793
  struct Rung *rung;rung108,2907
  struct GNUNET_MQ_Envelope *env_head;env_head113,3013
  struct GNUNET_MQ_Envelope *env_tail;env_tail118,3137
  struct CadetPeer *hop;hop123,3207
  struct CadetRoute *my_route;my_route128,3283
  struct GCP_MessageQueueManager *mqm;mqm133,3366
  int is_ready;138,3467
struct CadetRoute142,3488
  struct RouteDirection next;147,3571
  struct RouteDirection prev;152,3669
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;157,3776
  struct GNUNET_TIME_Absolute last_use;162,3881
  struct GNUNET_CONTAINER_HeapNode *hn;hn167,3982
static struct GNUNET_CORE_Handle *core;core174,4066
static struct GNUNET_CONTAINER_MultiShortmap *routes;routes179,4164
static struct GNUNET_CONTAINER_Heap *route_heap;route_heap184,4275
static struct Rung rung_zero;189,4381
static struct Rung *rung_head rung_head195,4528
static struct Rung *rung_tail rung_tail200,4612
static unsigned long long max_routes;205,4728
static unsigned long long max_buffers;210,4835
static unsigned long long cur_buffers;215,4945
static struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task220,5020
get_route 228,5212
lower_rung 241,5523
discard_buffer 269,6286
discard_all_from_rung_tail 283,6649
route_message 314,7598
check_connection_create 464,12904
destroy_direction 484,13358
destroy_route 511,13979
send_broken 543,15136
timeout_cb 579,16247
dir_ready_cb 621,17799
dir_init 658,18817
send_broken_without_mqm 682,19513
handle_connection_create 706,20152
handle_connection_create_ack 916,27659
handle_connection_broken 960,28944
handle_connection_destroy 1010,30423
handle_tunnel_kx 1061,31930
handle_tunnel_kx_auth 1106,33173
check_tunnel_encrypted 1148,34281
handle_tunnel_encrypted 1162,34604
core_init_cb 1203,35949
core_connect_cb 1221,36312
core_disconnect_cb 1243,36807
GCO_init 1262,37187
GCO_shutdown 1317,39934

src/service/cadet/gnunet-service-cadet_hello.c,348
#define LOG(37,1368
static struct GNUNET_MessageHeader *mine;mine42,1483
static struct GNUNET_PEERSTORE_Handle *peerstore;peerstore47,1570
static struct GNUNET_PEERSTORE_Monitor *peerstore_notify;peerstore_notify53,1751
got_hello 65,2023
error_cb 108,3311
sync_cb 116,3441
GCH_init 129,3662
GCH_shutdown 152,4389
GCH_get_mine 178,4806

src/service/cadet/gnunet-service-cadet_channel.h,47
#define GNUNET_SERVICE_CADET_CHANNEL_H28,1001

src/service/cadet/cadet_api_get_channel.c,612
struct GNUNET_CADET_ChannelMonitor37,1167
  GNUNET_CADET_ChannelCB channel_cb;42,1239
  void *channel_cb_cls;channel_cb_cls47,1335
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg52,1399
  struct GNUNET_MQ_Handle *mq;mq57,1506
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task62,1574
  struct GNUNET_TIME_Relative backoff;67,1672
  struct GNUNET_PeerIdentity peer;72,1761
check_channel_info 85,2036
handle_channel_info 101,2321
handle_channel_info_end 122,2821
error_handler 149,3405
reconnect 170,4030
GNUNET_CADET_get_channel 213,5516
GNUNET_CADET_get_channel_cancel 247,6323

src/service/cadet/cadet_api_get_path.c,573
struct GNUNET_CADET_GetPath37,1158
  GNUNET_CADET_PathCB path_cb;42,1222
  void *path_cb_cls;path_cb_cls47,1295
  struct GNUNET_MQ_Handle *mq;mq52,1374
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg57,1445
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task62,1531
  struct GNUNET_TIME_Relative backoff;67,1629
  struct GNUNET_PeerIdentity id;72,1718
check_get_path 85,1991
handle_get_path 114,2579
handle_get_path_end 137,3212
error_handler 165,3772
reconnect 186,4383
GNUNET_CADET_get_path 220,5520
GNUNET_CADET_get_path_cancel 254,6230

src/service/cadet/gnunet-service-cadet_tunnels.h,519
#define GNUNET_SERVICE_CADET_TUNNELS_H28,997
#define DESIRED_CONNECTIONS_PER_TUNNEL 37,1167
enum CadetTunnelEState43,1267
  CADET_TUNNEL_KEY_UNINITIALIZED,49,1418
  CADET_TUNNEL_KEY_AX_SENT,54,1521
  CADET_TUNNEL_KEY_AX_RECV,59,1617
  CADET_TUNNEL_KEY_AX_SENT_AND_RECV,64,1722
  CADET_TUNNEL_KEY_AX_AUTH_SENT,75,2110
  CADET_TUNNEL_KEY_OK80,2205
(*GCT_SendContinuation)GCT_SendContinuation218,5611
(*GCT_ConnectionIterator)GCT_ConnectionIterator282,7296
(*GCT_ChannelIterator)GCT_ChannelIterator306,7820

src/service/cadet/gnunet-service-cadet_connection.c,2005
#define LOG(39,1381
#define INITIAL_CONNECTION_CREATE_RETRY_DELAY 46,1597
enum CadetConnectionState53,1766
  CADET_CONNECTION_NEW,58,1880
  CADET_CONNECTION_SENDING_CREATE,63,1989
  CADET_CONNECTION_SENT,68,2091
  CADET_CONNECTION_CREATE_RECEIVED,74,2225
  CADET_CONNECTION_READY79,2325
struct CadetConnection85,2404
  struct GNUNET_CADET_ConnectionTunnelIdentifier cid;90,2468
  struct CadetPeer *destination;destination95,2579
  struct CadetTConnection *ct;ct100,2669
  struct CadetPeerPath *path;path105,2756
  struct GNUNET_MQ_Envelope *env;env110,2855
  struct GCP_MessageQueueManager *mq_man;mq_man115,2973
  struct GNUNET_SCHEDULER_Task *task;task120,3066
  struct CadetTunnelQueueEntry *keepalive_qe;keepalive_qe125,3158
  GCC_ReadyCallback ready_cb;130,3270
  void *ready_cb_cls;ready_cb_cls135,3343
  struct GNUNET_TIME_Relative retry_delay;140,3446
  struct GNUNET_TIME_Absolute create_at;145,3542
  struct GNUNET_TIME_Absolute create_ack_at;150,3640
  struct CadetConnectionMetrics metrics;155,3744
  enum CadetConnectionState state;160,3828
  unsigned int latency_datapoints;165,3944
  unsigned int off;170,4038
  int mqm_ready;175,4126
GCC_lookup 186,4306
update_state 202,4764
GCC_destroy 244,6003
GCC_destroy_without_core 284,7138
GCC_destroy_without_tunnel 303,7519
GCC_get_ct 329,8234
GCC_get_metrics 342,8447
keepalive_done 367,9010
send_keepalive 386,9521
GCC_ack_expected 421,10552
GCC_ack_observed 441,11131
GCC_latency_observed 453,11376
GCC_handle_connection_create_ack 480,12229
GCC_handle_kx 510,13110
GCC_handle_kx_auth 538,13999
GCC_handle_encrypted 566,14925
set_monotime_sig 589,15666
send_create 610,16316
send_create_ack 661,18174
GCC_handle_duplicate_create 695,19309
manage_first_hop_mq 734,20729
connection_create 813,23204
GCC_create_inbound 870,25284
GCC_create 932,27085
GCC_transmit 964,28203
GCC_get_path 990,28881
GCC_get_id 1004,29159
GCC_2s 1016,29316
#define LOG2(1040,29867
GCC_debug 1051,30056

src/service/cadet/cadet.h,3517
#define CADET_H_27,882
#define CADET_TIMING_START 39,1050
#define CADET_TIMING_END 43,1185
#define CADET_TIMING_START51,1660
#define CADET_TIMING_END52,1687
#define GNUNET_CADET_LOCAL_CHANNEL_ID_CLI 70,2207
#define HIGH_PID 75,2280
#define LOW_PID 80,2327
#define PID_OVERFLOW(89,2585
struct GNUNET_CADET_ClientChannelNumber100,2994
  uint32_t channel_of_client GNUNET_PACKED;109,3314
struct GNUNET_CADET_Channel115,3401
  struct GNUNET_PeerIdentity peer;121,3475
  struct GNUNET_CADET_Handle *cadet;cadet126,3572
  struct GNUNET_CADET_Port *incoming_port;incoming_port131,3656
  void *ctx;ctx137,3842
  struct GNUNET_MQ_Handle *mq;mq142,3932
  struct GNUNET_SCHEDULER_Task *mq_cont;mq_cont147,4020
  struct GNUNET_MQ_Envelope *pending_env;pending_env154,4232
  GNUNET_CADET_WindowSizeEventHandler window_changes;159,4315
  GNUNET_CADET_DisconnectEventHandler disconnects;164,4407
  struct GNUNET_CADET_ClientChannelNumber ccn;169,4560
  unsigned int allow_send;174,4692
struct GNUNET_CADET_PortMessage180,4787
  struct GNUNET_MessageHeader header;188,4998
  struct GNUNET_HashCode port GNUNET_PACKED;193,5074
struct GNUNET_CADET_LocalChannelCreateMessage200,5176
  struct GNUNET_MessageHeader header;207,5365
  struct GNUNET_CADET_ClientChannelNumber ccn;212,5464
  struct GNUNET_PeerIdentity peer;217,5544
  struct GNUNET_HashCode port;222,5618
  uint32_t opt GNUNET_PACKED;227,5676
struct GNUNET_CADET_LocalChannelDestroyMessage234,5768
  struct GNUNET_MessageHeader header;239,5889
  struct GNUNET_CADET_ClientChannelNumber ccn;244,5988
struct GNUNET_CADET_LocalData251,6083
  struct GNUNET_MessageHeader header;256,6176
  struct GNUNET_CADET_ClientChannelNumber ccn;261,6250
  uint32_t pp GNUNET_PACKED;267,6408
struct GNUNET_CADET_LocalAck279,6576
  struct GNUNET_MessageHeader header;284,6667
  struct GNUNET_CADET_ClientChannelNumber ccn;289,6768
struct GNUNET_CADET_LocalInfo298,6928
  struct GNUNET_MessageHeader header;304,7079
  struct GNUNET_CADET_ClientChannelNumber ccn;309,7180
  struct GNUNET_PeerIdentity peer;314,7303
struct GNUNET_CADET_RequestDropCadetMessage320,7424
  struct GNUNET_MessageHeader header;326,7540
  uint16_t type;331,7657
  struct GNUNET_CADET_ClientChannelNumber ccn;336,7741
struct GNUNET_CADET_RequestPathInfoMessage343,7864
  struct GNUNET_MessageHeader header;348,7983
  uint32_t resered GNUNET_PACKED;353,8052
  struct GNUNET_PeerIdentity peer;358,8162
struct GNUNET_CADET_ChannelInfoMessage365,8273
  struct GNUNET_MessageHeader header;370,8384
  struct GNUNET_PeerIdentity root;375,8460
  struct GNUNET_PeerIdentity dest;380,8540
struct GNUNET_CADET_RequestChannelInfoMessage389,8673
  struct GNUNET_MessageHeader header;394,8799
  struct GNUNET_PeerIdentity target;399,8878
struct GNUNET_CADET_LocalInfoPath406,9005
  struct GNUNET_MessageHeader header;411,9108
  uint32_t off GNUNET_PACKED;416,9203
struct GNUNET_CADET_LocalInfoPeers423,9317
  struct GNUNET_MessageHeader header;428,9421
  uint16_t paths GNUNET_PACKED;433,9494
  int16_t tunnel GNUNET_PACKED;438,9582
  uint32_t best_path_length GNUNET_PACKED;443,9653
  struct GNUNET_PeerIdentity destination;448,9750
struct GNUNET_CADET_LocalInfoTunnel457,9915
  struct GNUNET_MessageHeader header;463,10075
  uint32_t channels GNUNET_PACKED;468,10151
  struct GNUNET_PeerIdentity destination;473,10261
  uint32_t connections GNUNET_PACKED;478,10344
  uint16_t estate GNUNET_PACKED;483,10418
  uint16_t cstate GNUNET_PACKED;488,10487

src/service/cadet/cadet_api_helper.c,16
GC_u2h 44,1465

src/service/cadet/gnunet-service-cadet_hello.h,45
#define GNUNET_SERVICE_CADET_HELLO_H31,1085

src/service/cadet/gnunet-service-cadet_core.h,44
#define GNUNET_SERVICE_CADET_CORE_H31,1087

src/service/core/test_core_quota_compliance.c,2238
#define SYMMETRIC 35,1241
#define ASYMMETRIC_SEND_LIMITED 36,1261
#define ASYMMETRIC_RECV_LIMITED 37,1295
#define TOTAL_MSGS 44,1510
#define TIMEOUT 49,1609
#define FAST_TIMEOUT 54,1764
#define MTYPE 57,1902
#define MESSAGESIZE 58,1922
#define MEASUREMENT_LENGTH 59,1953
static unsigned long long total_bytes_sent;62,2049
static unsigned long long total_bytes_recv;63,2093
static struct GNUNET_TIME_Absolute start_time;65,2138
static struct GNUNET_SCHEDULER_Task *err_task;err_task67,2186
static struct GNUNET_SCHEDULER_Task *measure_task;measure_task69,2234
struct PeerContext72,2287
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg74,2308
  struct GNUNET_CORE_Handle *ch;ch75,2351
  struct GNUNET_MQ_Handle *mq;mq76,2384
  struct GNUNET_TRANSPORT_OfferHelloHandle *oh;oh77,2415
  struct GNUNET_PeerIdentity id;78,2463
  struct GNUNET_MessageHeader *hello;hello79,2496
  struct GNUNET_STATISTICS_Handle *stats;stats80,2534
  struct GNUNET_TRANSPORT_HelloGetHandle *ghh;ghh81,2576
  struct GNUNET_ATS_ConnectivityHandle *ats;ats82,2623
  struct GNUNET_ATS_ConnectivitySuggestHandle *ats_sh;ats_sh83,2668
  int connect_status;84,2723
  struct GNUNET_OS_Process *arm_proc;arm_proc85,2745
static struct PeerContext p1;88,2787
static struct PeerContext p2;89,2817
static unsigned long long current_quota_p1_in;91,2848
static unsigned long long current_quota_p1_out;92,2895
static unsigned long long current_quota_p2_in;93,2943
static unsigned long long current_quota_p2_out;94,2990
static int ok;96,3039
static int test;97,3054
static int32_t tr_n;98,3071
static int running;100,3093
#define OKPP 104,3127
#define OKPP 108,3337
struct TestMessage111,3381
  struct GNUNET_MessageHeader header;113,3402
  uint32_t num GNUNET_PACKED;114,3440
  uint8_t pad[pad115,3470
terminate_peer 120,3515
shutdown_task 161,4238
terminate_task_error 179,4528
print_stat 200,5096
measurement_stop 221,5615
do_transmit 351,10048
connect_notify 375,10602
disconnect_notify 414,11825
handle_test 438,12454
init_notify 468,13181
offer_hello_done 516,14697
process_hello 525,14792
setup_peer 566,16253
run 599,17435
stop_arm 674,20243
check 694,20875
cleanup_directory 721,21423
main 756,22277

src/service/core/test_core_api.c,1052
#define MTYPE 33,1148
struct PeerContext35,1169
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1190
  struct GNUNET_CORE_Handle *ch;ch38,1233
  struct GNUNET_PeerIdentity id;39,1266
  struct GNUNET_TRANSPORT_OfferHelloHandle *oh;oh40,1299
  struct GNUNET_TRANSPORT_HelloGetHandle *ghh;ghh41,1347
  struct GNUNET_ATS_ConnectivityHandle *ats;ats42,1394
  struct GNUNET_ATS_ConnectivitySuggestHandle *ats_sh;ats_sh43,1439
  struct GNUNET_MessageHeader *hello;hello44,1494
  int connect_status;45,1532
  struct GNUNET_OS_Process *arm_proc;arm_proc46,1554
static struct PeerContext p1;49,1596
static struct PeerContext p2;51,1627
static struct GNUNET_SCHEDULER_Task *err_task;err_task53,1658
static int ok;55,1706
#define OKPP 57,1722
offer_hello_done 70,2182
process_hello 79,2277
terminate_peer 96,2788
terminate_task 127,3324
terminate_task_error 137,3454
connect_notify 148,3653
disconnect_notify 183,4744
handle_test 199,5157
init_notify 214,5549
setup_peer 248,6500
run 276,7640
stop_arm 303,8475
main 319,9009

src/service/core/test_core_api_reliability.c,1455
#define TOTAL_MSGS 39,1405
#define TIMEOUT 44,1502
#define MTYPE 46,1581
static unsigned long long total_bytes;49,1603
static struct GNUNET_TIME_Absolute start_time;51,1643
static struct GNUNET_SCHEDULER_Task *err_task;err_task53,1691
struct PeerContext56,1740
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg58,1761
  struct GNUNET_CORE_Handle *ch;ch59,1804
  struct GNUNET_MQ_Handle *mq;mq60,1837
  struct GNUNET_PeerIdentity id;61,1868
  struct GNUNET_TRANSPORT_OfferHelloHandle *oh;oh62,1901
  struct GNUNET_MessageHeader *hello;hello63,1949
  struct GNUNET_TRANSPORT_HelloGetHandle *ghh;ghh64,1987
  struct GNUNET_ATS_ConnectivityHandle *ats;ats65,2034
  struct GNUNET_ATS_ConnectivitySuggestHandle *ats_sh;ats_sh66,2079
  int connect_status;67,2134
  struct GNUNET_OS_Process *arm_proc;arm_proc68,2156
static struct PeerContext p1;71,2198
static struct PeerContext p2;73,2229
static int ok;75,2260
static int32_t tr_n;77,2276
#define OKPP 80,2299
struct TestMessage84,2504
  struct GNUNET_MessageHeader header;86,2525
  uint32_t num GNUNET_PACKED;87,2563
get_size 92,2618
terminate_peer 104,2835
terminate_task_error 135,3371
do_shutdown 145,3504
send_message 170,4052
connect_notify 204,4943
disconnect_notify 239,5972
check_test 258,6439
handle_test 266,6560
init_notify 325,8080
offer_hello_done 370,9497
process_hello 379,9592
setup_peer 414,10977
run 444,12042
stop_arm 481,13203
main 500,13822

src/service/core/core_api_monitor_peers.c,377
struct GNUNET_CORE_MonitorHandle35,1089
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg40,1160
  struct GNUNET_MQ_Handle *mq;mq45,1258
  GNUNET_CORE_MonitorCallback peer_cb;50,1338
  void *peer_cb_cls;peer_cb_cls55,1419
handle_mq_error 78,1958
handle_receive_info 94,2284
reconnect 112,2763
GNUNET_CORE_monitor_start 158,4503
GNUNET_CORE_monitor_stop 185,5077

src/service/core/test_core_api_start_only.c,716
#define TIMEOUT 31,1126
#define MTYPE 33,1145
struct PeerContext35,1166
  struct GNUNET_CONFIGURATION_Handle *cfg;cfg37,1187
  struct GNUNET_CORE_Handle *ch;ch38,1230
  struct GNUNET_PeerIdentity id;39,1263
  struct GNUNET_OS_Process *arm_proc;arm_proc40,1296
static struct PeerContext p1;43,1338
static struct PeerContext p2;45,1369
static struct GNUNET_SCHEDULER_Task *timeout_task_id;timeout_task_id47,1400
static int ok;49,1455
connect_notify 53,1486
disconnect_notify 62,1647
static struct GNUNET_MQ_MessageHandler handlers[handlers69,1781
shutdown_task 75,1879
init_notify 86,2033
setup_peer 113,2688
timeout_task 136,3417
run 156,3699
stop_arm 181,4510
check 203,5230
main 239,6028

src/service/core/gnunet-service-core_sessions.h,46
#define GNUNET_SERVICE_CORE_SESSIONS_H27,999

src/service/core/gnunet-service-core_typemap.h,46
#define GNUNET_SERVICE_CORE_TYPEMAP_H27,1000

src/service/core/gnunet-service-core_kx.c,3161
#define DEBUG_KX 39,1324
#define INITIAL_SET_KEY_RETRY_FREQUENCY 44,1411
#define MIN_PING_FREQUENCY 50,1578
#define REKEY_FREQUENCY 56,1704
#define REKEY_TOLERANCE 62,1840
#define MAX_MESSAGE_AGE 72,2262
struct EncryptedMessage81,2455
  struct GNUNET_MessageHeader header;86,2559
  uint32_t iv_seed GNUNET_PACKED;91,2652
  struct GNUNET_HashCode hmac;100,2987
  uint32_t sequence_number GNUNET_PACKED;106,3137
  uint32_t reserved GNUNET_PACKED;111,3220
  struct GNUNET_TIME_AbsoluteNBO timestamp;117,3388
#define ENCRYPTED_HEADER_SIZE 126,3565
struct GSC_KeyExchangeInfo133,3732
  struct GSC_KeyExchangeInfo *next;next138,3783
  struct GSC_KeyExchangeInfo *prev;prev143,3842
  const struct GNUNET_PeerIdentity *peer;peer148,3918
  struct GNUNET_MQ_Handle *mq;mq153,4025
  struct GNUNET_MessageStreamTokenizer *mst;mst158,4128
  struct PingMessage ping;163,4235
  struct GNUNET_CRYPTO_EcdhePublicKey other_ephemeral_key;168,4324
  struct GNUNET_CRYPTO_SymmetricSessionKey encrypt_key;174,4506
  struct GNUNET_CRYPTO_SymmetricSessionKey decrypt_key;180,4690
  struct GNUNET_TIME_Absolute foreign_key_expires;185,4825
  struct GNUNET_TIME_Absolute timeout;190,4952
  struct GNUNET_TIME_Absolute last_notify_timeout;195,5067
  struct GNUNET_TIME_Relative set_key_retry_frequency;200,5199
  struct GNUNET_SCHEDULER_Task *retry_set_key_task;retry_set_key_task205,5328
  struct GNUNET_SCHEDULER_Task *keep_alive_task;keep_alive_task210,5444
  uint32_t last_packets_bitmap;217,5690
  uint32_t last_sequence_number_received;222,5799
  uint32_t last_sequence_number_sent;227,5892
  uint32_t ping_challenge;232,6000
  int has_excess_bandwidth;237,6102
  enum GNUNET_CORE_KxState status;242,6179
static struct GNUNET_TRANSPORT_CoreHandle *transport;transport249,6249
static struct GNUNET_CRYPTO_EddsaPrivateKey my_private_key;254,6332
static struct GNUNET_CRYPTO_EcdhePrivateKey my_ephemeral_key;259,6431
static struct EphemeralKeyMessage current_ekm;264,6549
static struct GSC_KeyExchangeInfo *kx_head;kx_head269,6618
static struct GSC_KeyExchangeInfo *kx_tail;kx_tail274,6684
static struct GNUNET_SCHEDULER_Task *rekey_task;rekey_task280,6827
static struct GNUNET_NotificationContext *nc;nc285,6939
calculate_seed 294,7101
monitor_notify_all 310,7516
derive_auth_key 332,8144
derive_iv 369,9298
derive_pong_iv 408,10581
derive_aes_key 450,12061
do_encrypt 494,13481
do_decrypt 541,15142
set_key_retry_task 601,16906
setup_fresh_ping 619,17327
deliver_message 655,18470
handle_transport_notify_connect 706,20103
handle_transport_notify_disconnect 764,22105
send_ping 802,23207
derive_session_keys 821,23679
handle_ephemeral_key 851,24586
handle_ping 1067,31849
send_keep_alive 1159,35156
update_timeout 1203,36562
handle_pong 1233,37470
send_key 1385,42437
GSC_KX_encrypt_and_transmit 1423,43587
check_encrypted 1496,46238
handle_encrypted 1517,46705
sign_ephemeral_key 1721,53929
do_rekey 1765,55709
GSC_KX_init 1805,56727
GSC_KX_done 1865,58772
GSC_NEIGHBOURS_get_queue_length 1898,59422
GSC_NEIGHBOURS_check_excess_bandwidth 1905,59551
GSC_KX_handle_client_monitor_peers 1920,59976

src/service/core/core_api.c,1527
#define LOG(32,1086
struct PeerRecord38,1206
  struct GNUNET_CORE_Handle *h;h43,1270
  struct GNUNET_MQ_Handle *mq;mq48,1348
  struct GNUNET_MQ_Envelope *env;env54,1490
  void *client_cls;client_cls60,1631
  struct GNUNET_PeerIdentity peer;65,1695
  uint16_t smr_id_gen;70,1795
struct GNUNET_CORE_Handle77,1875
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg82,1947
  void *cls;cls87,2049
  GNUNET_CORE_StartupCallback init;92,2142
  GNUNET_CORE_ConnectEventHandler connects;97,2262
  GNUNET_CORE_DisconnectEventHandler disconnects;102,2393
  struct GNUNET_MQ_MessageHandler *handlers;handlers107,2512
  struct GNUNET_MQ_Handle *mq;mq112,2627
  struct GNUNET_CONTAINER_MultiPeerMap *peers;peers118,2751
  struct GNUNET_PeerIdentity me;123,2839
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task128,2921
  struct GNUNET_TIME_Relative retry_backoff;133,3042
  unsigned int hcnt;138,3146
  int have_init;143,3207
reconnect_task 163,3537
disconnect_and_free_peer_entry 183,4004
reconnect_later 214,4794
handle_mq_error 240,5538
core_mq_send_impl 258,5949
core_mq_destroy_impl 320,7833
core_mq_cancel_impl 337,8227
core_mq_error_handler 357,8670
connect_peer 375,9061
handle_init_reply 413,10324
handle_connect_notify 460,11546
handle_disconnect_notify 493,12373
check_notify_inbound 527,13267
handle_notify_inbound 557,13974
handle_send_ready 587,14812
reconnect 629,15879
GNUNET_CORE_connect 691,18438
GNUNET_CORE_disconnect 729,19569
GNUNET_CORE_get_mq 760,20486

src/service/core/core.h,2118
#define CORE_H27,932
#define DEBUG_CORE 35,1042
#define GNUNET_CORE_OPTION_NOTHING 43,1321
#define GNUNET_CORE_OPTION_SEND_STATUS_CHANGE 48,1411
#define GNUNET_CORE_OPTION_SEND_FULL_INBOUND 53,1514
#define GNUNET_CORE_OPTION_SEND_HDR_INBOUND 59,1646
#define GNUNET_CORE_OPTION_SEND_FULL_OUTBOUND 64,1749
#define GNUNET_CORE_OPTION_SEND_HDR_OUTBOUND 70,1884
struct InitMessage81,2170
  struct GNUNET_MessageHeader header;86,2257
  uint32_t options GNUNET_PACKED;91,2354
struct InitReplyMessage99,2509
  struct GNUNET_MessageHeader header;104,2606
  uint32_t reserved GNUNET_PACKED;109,2675
  struct GNUNET_PeerIdentity my_identity;114,2758
struct ConnectNotifyMessage122,2898
  struct GNUNET_MessageHeader header;127,3003
  uint32_t reserved GNUNET_PACKED;132,3072
  struct GNUNET_PeerIdentity peer;137,3158
struct DisconnectNotifyMessage145,3294
  struct GNUNET_MessageHeader header;150,3406
  uint32_t reserved GNUNET_PACKED;155,3475
  struct GNUNET_PeerIdentity peer;160,3561
struct NotifyTrafficMessage173,4073
  struct GNUNET_MessageHeader header;179,4229
  struct GNUNET_PeerIdentity peer;184,4321
struct SendMessageRequest194,4546
  struct GNUNET_MessageHeader header;199,4647
  uint32_t priority GNUNET_PACKED;204,4734
  struct GNUNET_TIME_AbsoluteNBO deadline;210,4867
  struct GNUNET_PeerIdentity peer;215,4961
  uint32_t reserved GNUNET_PACKED;220,5027
  uint16_t size GNUNET_PACKED;225,5106
  uint16_t smr_id GNUNET_PACKED;230,5203
struct SendMessageReady239,5399
  struct GNUNET_MessageHeader header;244,5496
  uint16_t size GNUNET_PACKED;252,5756
  uint16_t smr_id GNUNET_PACKED;257,5830
  struct GNUNET_PeerIdentity peer;262,5914
struct SendMessage270,6095
  struct GNUNET_MessageHeader header;275,6181
  uint32_t priority GNUNET_PACKED;281,6329
  struct GNUNET_TIME_AbsoluteNBO deadline;287,6462
  struct GNUNET_PeerIdentity peer;292,6558
struct MonitorNotifyMessage300,6704
  struct GNUNET_MessageHeader header;305,6809
  uint32_t state GNUNET_PACKED;310,6919
  struct GNUNET_PeerIdentity peer;315,6991
  struct GNUNET_TIME_AbsoluteNBO timeout;320,7107

src/service/core/gnunet-service-core.c,1614
#define SOFT_MAX_QUEUE 41,1425
#define HARD_MAX_QUEUE 48,1644
struct GSC_Client54,1746
  struct GSC_Client *next;next59,1818
  struct GSC_Client *prev;prev64,1898
  struct GNUNET_SERVICE_Client *client;client69,1986
  struct GNUNET_MQ_Handle *mq;mq74,2080
  uint16_t *types;types81,2271
  struct GNUNET_CONTAINER_MultiPeerMap *requests;requests87,2439
  struct GNUNET_CONTAINER_MultiPeerMap *connectmap;connectmap92,2575
  uint32_t options;98,2728
  int got_init;104,2855
  unsigned int tcnt;110,2998
struct GNUNET_PeerIdentity GSC_my_identity;117,3049
const struct GNUNET_CONFIGURATION_Handle *GSC_cfg;GSC_cfg122,3124
struct GNUNET_STATISTICS_Handle *GSC_stats;GSC_stats127,3212
static uint32_t all_client_options;132,3300
static struct GSC_Client *client_head;client_head137,3384
static struct GSC_Client *client_tail;client_tail142,3471
type_match 153,3721
check_client_init 175,4329
handle_client_init 188,4588
GSC_CLIENTS_reject_request 240,6466
GSC_CLIENTS_solicit_request 262,7141
handle_client_send_request 307,8680
struct TokenizerContext384,11365
  struct GSC_ClientActiveRequest *car;car389,11447
  enum GNUNET_MQ_PriorityPreferences priority;394,11535
tokenized_cb 411,12100
check_client_send 474,14660
handle_client_send 487,14895
destroy_active_client_request 551,17440
client_connect_cb 577,18144
client_disconnect_cb 600,18712
GSC_CLIENTS_notify_client_about_neighbour 644,20161
GSC_CLIENTS_notify_clients_about_neighbour 725,22997
GSC_CLIENTS_deliver_message 752,23848
shutdown_task 863,28130
handle_client_monitor_peers 892,28884
run 910,29272

src/service/core/gnunet-service-core_kx.h,41
#define GNUNET_SERVICE_CORE_KX_H27,1004

src/service/core/gnunet-service-core_typemap.c,637
struct GSC_TypeMap38,1243
static struct GSC_TypeMap my_type_map;46,1372
static uint8_t map_counters[map_counters51,1479
static struct GNUNET_HashCode my_tm_hash;57,1613
static int hash_current;62,1722
rehash_typemap 69,1814
GSC_TYPEMAP_hash 82,1985
GSC_TYPEMAP_check_hash 95,2319
GSC_TYPEMAP_compute_type_map_message 114,2756
GSC_TYPEMAP_get_from_message 158,4045
broadcast_my_type_map 211,5482
GSC_TYPEMAP_add 232,6003
GSC_TYPEMAP_remove 256,6479
GSC_TYPEMAP_test_match 287,7133
GSC_TYPEMAP_extend 311,7782
GSC_TYPEMAP_create 332,8272
GSC_TYPEMAP_destroy 344,8412
GSC_TYPEMAP_init 354,8533
GSC_TYPEMAP_done 364,8625

src/service/core/test_core_api_send_to_self.c,313
static int ret;37,1184
static struct GNUNET_SCHEDULER_Task *die_task;die_task42,1240
static struct GNUNET_PeerIdentity myself;47,1322
static struct GNUNET_CORE_Handle *core;core52,1395
cleanup 59,1521
do_timeout 80,1876
handle_test 90,2043
init 99,2185
connect_cb 117,2602
run 149,3404
main 184,4463

src/service/core/gnunet-service-core.h,523
#define GNUNET_SERVICE_CORE_H27,956
struct GSC_ClientActiveRequest46,1355
  struct GSC_ClientActiveRequest *next;next52,1490
  struct GSC_ClientActiveRequest *prev;prev58,1633
  struct GSC_Client *client_handle;client_handle63,1713
  struct GNUNET_PeerIdentity target;68,1810
  struct GNUNET_TIME_Absolute received_time;73,1909
  struct GNUNET_TIME_Absolute deadline;78,2032
  enum GNUNET_MQ_PriorityPreferences priority;83,2121
  int was_solicited;88,2223
  uint16_t msize;93,2309
  uint16_t smr_id;98,2380

src/service/core/gnunet-service-core_sessions.c,2084
#define MAX_ENCRYPTED_MESSAGE_QUEUE_SIZE 39,1287
struct SessionMessageEntry46,1439
  struct SessionMessageEntry *next;next51,1527
  struct SessionMessageEntry *prev;prev56,1623
  enum GNUNET_MQ_PriorityPreferences priority;61,1708
  int is_typemap;66,1827
  int is_typemap_confirm;71,1930
  struct GNUNET_TIME_Absolute deadline;78,2136
  size_t size;85,2344
struct Session92,2398
  const struct GNUNET_PeerIdentity *peer;peer97,2460
  struct GSC_KeyExchangeInfo *kx;kx102,2554
  struct GSC_ClientActiveRequest *active_client_request_head;active_client_request_head108,2680
  struct GSC_ClientActiveRequest *active_client_request_tail;active_client_request_tail114,2834
  struct SessionMessageEntry *sme_head;sme_head119,2961
  struct SessionMessageEntry *sme_tail;sme_tail124,3066
  struct GSC_TypeMap *tmap;tmap129,3156
  struct GNUNET_SCHEDULER_Task *cork_task;cork_task134,3249
  struct GNUNET_SCHEDULER_Task *typemap_task;typemap_task139,3341
  struct GNUNET_TIME_Relative typemap_delay;145,3498
  int first_typemap;152,3728
struct TypeMapConfirmationMessage161,3847
  struct GNUNET_MessageHeader header;166,3961
  uint32_t reserved GNUNET_PACKED;171,4040
  struct GNUNET_HashCode tm_hash;176,4148
static struct GNUNET_CONTAINER_MultiPeerMap *sessions;sessions185,4269
find_session 196,4518
GSC_SESSIONS_end 211,4820
transmit_typemap_task 268,6648
start_typemap_task 300,7728
GSC_SESSIONS_create 318,8303
GSC_SESSIONS_reinit 353,9489
GSC_SESSIONS_confirm_typemap 376,10018
notify_client_about_session 433,11802
GSC_SESSIONS_notify_client_about_sessions 454,12406
GSC_SESSIONS_queue_request 483,13346
GSC_SESSIONS_dequeue_request 518,14445
solicit_messages 546,15319
pop_cork_task 593,16712
try_transmission 610,17079
do_restart_typemap_message 785,23327
GSC_SESSIONS_broadcast_typemap 826,24556
GSC_SESSIONS_solicit 844,25126
GSC_SESSIONS_transmit 859,25440
GSC_SESSIONS_set_typemap 900,26806
GSC_SESSIONS_add_to_typemap 961,28790
GSC_SESSIONS_init 984,29466
free_session_helper 1000,29818
GSC_SESSIONS_done 1015,30083

src/service/core/test_core_plugin_cmd_just_run.c,1100
#define LOG(38,1267
#define BASE_DIR 40,1322
#define TIMEOUT 42,1350
#define MAX_RECEIVED 44,1429
#define MESSAGE_SIZE 46,1456
static struct GNUNET_TESTING_Command block_script;48,1484
static struct GNUNET_TESTING_Command connect_peers;50,1536
static struct GNUNET_TESTING_Command local_prepared;52,1589
static struct GNUNET_TESTING_Command start_peer;54,1643
static struct GNUNET_TESTING_Interpreter *is;is56,1693
struct TestState58,1740
  GNUNET_TESTING_cmd_helper_write_cb write_message;64,1828
  GNUNET_TESTING_cmd_helper_finish_cb finished_cb;69,1952
  char *testdir;testdir75,2078
  char *cfgname;cfgname81,2176
  struct GNUNET_TESTING_NetjailTopology *topology;topology86,2246
struct Sender89,2301
  unsigned long long num_received;94,2375
  struct GNUNET_TIME_Relative mean_time;99,2467
  struct GNUNET_TIME_Absolute time_first;104,2559
get_waiting_for_barriers 109,2641
handle_result 139,3536
child_completed_callback 157,3920
start_testcase 183,5195
libgnunet_test_core_plugin_cmd_just_run_init 358,10762
libgnunet_test_core_plugin_cmd_just_run_done 380,11287

src/service/core/testing_core_cmd_connecting_peers.c,151
#define LOG(36,1170
connect_peers_run 44,1302
connect_peers_cleanup 180,6121
connect_peers_traits 194,6369
GNUNET_CORE_cmd_connect_peers 212,6939

src/service/gns/gns.h,471
#define GNS_H26,940
struct LookupMessage36,1083
  struct GNUNET_MessageHeader header;41,1170
  uint32_t id GNUNET_PACKED;46,1283
  int16_t options GNUNET_PACKED;52,1423
  uint16_t recursion_depth_limit GNUNET_PACKED;59,1589
  int32_t type GNUNET_PACKED;64,1685
  uint32_t key_len GNUNET_PACKED;69,1756
struct LookupResultMessage79,1973
  struct GNUNET_MessageHeader header;84,2073
  uint32_t id GNUNET_PACKED;89,2186
  uint32_t rd_count GNUNET_PACKED;96,2371

src/service/gns/gnunet-service-gns.h,36
#define GNUNET_SERVICE_GNS_H27,970

src/service/gns/test_gns_proxy.c,1066
#define MAX_PEM_SIZE 36,1163
#define TEST_DOMAIN 38,1197
#define TIMEOUT 40,1229
static int global_ret;45,1344
static struct MHD_Daemon *mhd;mhd48,1369
static struct GNUNET_SCHEDULER_Task *mhd_task_id;mhd_task_id50,1401
static struct GNUNET_SCHEDULER_Task *curl_task_id;curl_task_id52,1452
static CURL *curl;curl54,1504
static CURLM *multi;multi56,1524
static char *url;url58,1546
static struct GNUNET_OS_Process *proxy_proc;proxy_proc60,1565
static char*cafile_opt;cafile_opt62,1611
static char*cafile_srv;cafile_srv64,1636
static uint16_t port;66,1661
static gnutls_x509_crt_t proxy_cert;68,1684
static gnutls_x509_privkey_t proxy_key;70,1722
struct CBC72,1763
  char buf[buf74,1776
  size_t pos;75,1794
static struct CBC cbc;78,1812
load_file 88,1990
load_key_from_file 124,2756
load_cert_from_file 155,3559
copy_buffer 180,4251
mhd_ahc 193,4574
do_shutdown 231,5559
curl_task 270,6241
curl_main 278,6320
start_curl 353,8541
commence_testing 396,10195
mhd_task 413,10491
mhd_main 422,10584
run 469,12074
main 529,13955

src/service/gns/gns_api.h,454
#define GNS_API_H27,973
struct GNUNET_GNS_Handle35,1068
  const struct GNUNET_CONFIGURATION_Handle *cfg;cfg40,1134
  struct GNUNET_MQ_Handle *mq;mq45,1239
  struct GNUNET_GNS_LookupRequest *lookup_head;lookup_head50,1335
  struct GNUNET_GNS_LookupRequest *lookup_tail;lookup_tail55,1448
  struct GNUNET_SCHEDULER_Task *reconnect_task;reconnect_task60,1529
  struct GNUNET_TIME_Relative reconnect_backoff;65,1642
  uint32_t r_id_gen;70,1769

src/service/gns/gnunet-bcd.c,1188
struct StaticResource33,1058
  struct GNUNET_DISK_FileHandle *handle;handle38,1123
  uint64_t size;43,1209
  struct MHD_Response *response;response48,1287
struct ParameterMap51,1324
  char *name;name56,1403
  char *definition;definition61,1477
static struct MHD_Daemon *httpd httpd67,1567
static struct GNUNET_SCHEDULER_Task *httpd_task httpd_task72,1651
static struct StaticResource *index_simple index_simple77,1756
static struct StaticResource *index_full index_full82,1854
static struct StaticResource *key_error key_error87,1939
static struct StaticResource *notfound_error notfound_error92,2010
static struct StaticResource *internal_error internal_error97,2113
static struct StaticResource *forbidden_error forbidden_error102,2192
static char *tex_file_simple tex_file_simple107,2309
static char *tex_file_full tex_file_full112,2407
static char *tex_file_png tex_file_png117,2502
static int continue_100 122,2622
static const struct ParameterMap pmap[pmap127,2728
static uint16_t port 147,3143
do_shutdown 155,3265
run_httpd 221,4913
do_httpd 267,6337
create_response 288,6913
open_static_resource 512,14232
run 561,15342
main 653,18181

src/service/gns/w32resolver.h,438
#define W32RESOLVER_H26,891
#define GNUNET_MESSAGE_TYPE_W32RESOLVER_REQUEST 35,1030
#define GNUNET_MESSAGE_TYPE_W32RESOLVER_RESPONSE 40,1130
struct GNUNET_W32RESOLVER_GetMessage53,1580
  struct GNUNET_MessageHeader header;58,1683
  uint32_t af GNUNET_PACKED;60,1722
  uint32_t sc_data1 GNUNET_PACKED;62,1752
  uint16_t sc_data2 GNUNET_PACKED;63,1787
  uint16_t sc_data3 GNUNET_PACKED;64,1822
  uint8_t sc_data4[sc_data465,1857

src/service/gns/gnunet-dns2gns.c,1783
#define TIMEOUT 34,1093
#define VPN_TIMEOUT 39,1184
struct VpnContext47,1327
  struct Request *request;request52,1408
  struct GNUNET_VPN_RedirectionRequest *vpn_request;vpn_request57,1504
  unsigned int rd_count;62,1619
  char *rd_data;rd_data67,1682
  ssize_t rd_data_size;72,1748
struct Request79,1811
  struct GNUNET_NETWORK_Handle *lsock;lsock84,1882
  const void *addr;addr89,1967
  struct GNUNET_DNSPARSER_Packet *packet;packet95,2093
  struct GNUNET_GNS_LookupWithTldRequest *lookup;lookup100,2177
  struct GNUNET_DNSSTUB_RequestSocket *dns_lookup;dns_lookup105,2268
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task111,2404
  struct VpnContext *vpn_ctx;vpn_ctx116,2491
  char *udp_msg;udp_msg121,2569
  size_t addr_len;126,2632
  size_t udp_msg_size;131,2700
  uint16_t original_request_id;136,2769
static in_addr_t address;143,2840
static struct in6_addr address6;148,2906
struct GNUNET_GNS_Handle *gns;gns154,2976
static struct GNUNET_VPN_Handle *vpn_handle;vpn_handle159,3049
struct GNUNET_DNSSTUB_Context *dns_stub;dns_stub164,3120
static struct GNUNET_NETWORK_Handle *listen_socket4;listen_socket4169,3197
static struct GNUNET_NETWORK_Handle *listen_socket6;listen_socket6174,3286
static struct GNUNET_SCHEDULER_Task *t4;t4179,3373
static struct GNUNET_SCHEDULER_Task *t6;t6184,3448
static char *dns_ip;dns_ip189,3518
static unsigned long long listen_port 194,3599
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg199,3677
do_shutdown 208,3825
shuffle_answers 256,4646
send_response 282,5402
do_timeout 324,6593
dns_result_processor 354,7347
vpn_allocation_cb 401,8901
result_processor 469,10821
handle_request 640,17525
read_dns4 716,20287
read_dns6 769,21738
run 825,23325
main 991,28474

src/service/gns/gnunet-service-gns_interceptor.h,40
#define GNUNET_GNS_INTERCEPTOR_H26,962

src/service/gns/gnunet-gns-proxy.c,6412
#define GNUNET_GNS_PROXY_PORT 51,1548
#define MAX_HTTP_URI_LENGTH 57,1658
#define MAX_DANES 63,1789
#define IO_BUFFERSIZE 69,1949
#define SOCKS_BUFFERSIZE 76,2140
#define HTTP_PORT 81,2213
#define HTTPS_PORT 86,2262
#define MAX_PEM_SIZE 91,2341
#define MHD_CACHE_TIMEOUT 96,2442
#define HTTP_HANDSHAKE_TIMEOUT 103,2664
#define LOG_CURL_EASY(114,2917
#define SOCKS_VERSION_5 128,3272
#define SOCKS_AUTH_NONE 133,3350
enum Socks5Commands139,3409
  SOCKS5_CMD_TCP_STREAM 144,3473
  SOCKS5_CMD_TCP_PORT 149,3548
  SOCKS5_CMD_UDP_PORT 154,3621
enum Socks5AddressType161,3688
  SOCKS5_AT_IPV4 166,3744
  SOCKS5_AT_DOMAINNAME 171,3798
  SOCKS5_AT_IPV6 176,3858
enum Socks5StatusCode183,3928
  SOCKS5_STATUS_REQUEST_GRANTED 185,3952
  SOCKS5_STATUS_GENERAL_FAILURE 186,3989
  SOCKS5_STATUS_CONNECTION_NOT_ALLOWED_BY_RULE 187,4026
  SOCKS5_STATUS_NETWORK_UNREACHABLE 188,4078
  SOCKS5_STATUS_HOST_UNREACHABLE 189,4119
  SOCKS5_STATUS_CONNECTION_REFUSED_BY_HOST 190,4157
  SOCKS5_STATUS_TTL_EXPIRED 191,4205
  SOCKS5_STATUS_COMMAND_NOT_SUPPORTED 192,4238
  SOCKS5_STATUS_ADDRESS_TYPE_NOT_SUPPORTED 193,4281
struct Socks5ClientHelloMessage200,4377
  uint8_t version;205,4456
  uint8_t num_auth_methods;210,4550
struct Socks5ServerHelloMessage219,4700
  uint8_t version;224,4779
  uint8_t auth_method;230,4920
struct Socks5ClientRequestMessage237,5000
  uint8_t version;242,5081
  uint8_t command;247,5172
  uint8_t resvd;252,5232
  uint8_t addr_type;257,5310
struct Socks5ServerResponseMessage270,5611
  uint8_t version;275,5693
  uint8_t reply;280,5770
  uint8_t reserved;285,5818
  uint8_t addr_type;290,5899
struct ProxyCA305,6256
  gnutls_x509_crt_t cert;310,6306
  gnutls_x509_privkey_t key;315,6366
struct ProxyGNSCertificate322,6442
  char cert[cert327,6511
  char key[key332,6579
struct MhdHttpList339,6656
  struct MhdHttpList *prev;prev344,6709
  struct MhdHttpList *next;next349,6770
  char *domain;domain354,6867
  struct MHD_Daemon *daemon;daemon359,6919
  struct ProxyGNSCertificate *proxy_cert;proxy_cert364,6998
  struct GNUNET_SCHEDULER_Task *httpd_task;httpd_task369,7070
  int is_ssl;374,7155
enum SocksPhase384,7280
  SOCKS5_INIT,389,7354
  SOCKS5_REQUEST,394,7429
  SOCKS5_RESOLVING,399,7509
  SOCKS5_DATA_TRANSFER,404,7571
  SOCKS5_WRITE_THEN_CLEANUP,409,7661
  SOCKS5_SOCKET_WITH_MHD,414,7764
  SOCKS5_SOCKET_UPLOAD_STARTED,419,7854
  SOCKS5_SOCKET_UPLOAD_DONE,424,7951
  SOCKS5_SOCKET_DOWNLOAD_STARTED,429,8059
  SOCKS5_SOCKET_DOWNLOAD_DONE434,8161
struct HttpResponseHeader441,8221
  struct HttpResponseHeader *next;next446,8270
  struct HttpResponseHeader *prev;prev451,8327
  char *type;type456,8392
  char *value;value461,8437
struct Socks5Request467,8498
  struct Socks5Request *next;next472,8543
  struct Socks5Request *prev;prev477,8596
  struct GNUNET_NETWORK_Handle *sock;sock482,8662
  struct GNUNET_GNS_LookupWithTldRequest *gns_lookup;gns_lookup487,8772
  struct GNUNET_SCHEDULER_Task *rtask;rtask492,8868
  struct GNUNET_SCHEDULER_Task *wtask;wtask497,8950
  struct GNUNET_SCHEDULER_Task *timeout_task;timeout_task502,9020
  char rbuf[rbuf507,9096
  char wbuf[wbuf512,9158
  char io_buf[io_buf517,9280
  struct MhdHttpList *hd;hd522,9384
  struct MHD_Connection *con;con527,9461
  struct MHD_Response *response;response532,9547
  char *domain;domain537,9649
  char *leho;leho542,9740
  char *dane_data[dane_data547,9813
  char *url;url552,9882
  CURL *curl;curl557,9928
  struct curl_slist *headers;headers562,10003
  struct curl_slist *hosts;hosts567,10089
  unsigned int response_code;572,10187
  int dane_data_len[dane_data_len577,10268
  unsigned int num_danes;583,10388
  size_t rbuf_len;588,10471
  size_t wbuf_len;593,10548
  size_t io_len;598,10627
  struct sockaddr_storage destination_address;603,10720
  enum SocksPhase state;608,10801
  uint16_t port;613,10870
  struct HttpResponseHeader *header_head;header_head618,10927
  struct HttpResponseHeader *header_tail;header_tail623,11009
  int ssl_checked;628,11094
  int is_gns;633,11166
  int is_tls;638,11234
  int suspended;643,11297
  int curl_paused;648,11362
static in_addr_t address;657,11488
static struct in6_addr address6;662,11554
static uint16_t port 667,11647
static char *cafile_opt;cafile_opt672,11747
static struct GNUNET_NETWORK_Handle *lsock4;lsock4677,11824
static struct GNUNET_NETWORK_Handle *lsock6;lsock6682,11921
static struct GNUNET_SCHEDULER_Task *ltask4;ltask4687,12006
static struct GNUNET_SCHEDULER_Task *ltask6;ltask6692,12091
static struct GNUNET_SCHEDULER_Task *curl_download_task;curl_download_task697,12189
static CURLM *curl_multi;curl_multi702,12280
static struct GNUNET_GNS_Handle *gns_handle;gns_handle707,12344
static int disable_v6;712,12415
static struct MhdHttpList *mhd_httpd_head;mhd_httpd_head717,12477
static struct MhdHttpList *mhd_httpd_tail;mhd_httpd_tail722,12559
static struct MhdHttpList *httpd;httpd728,12746
static struct Socks5Request *s5r_head;s5r_head733,12822
static struct Socks5Request *s5r_tail;s5r_tail738,12903
static struct ProxyCA proxy_ca;743,12994
static struct MHD_Response *curl_failure_response;curl_failure_response748,13075
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg753,13157
cleanup_s5r 774,13526
mhd_content_cb 861,15761
check_ssl_certificate 957,18711
curl_check_hdr 1125,24439
create_mhd_response_from_s5r 1330,30735
curl_download_cb 1413,33745
curl_upload_cb 1492,36404
curl_download_prepare 1571,38496
curl_task_download 1650,40745
con_val_iter 1782,44599
create_response 1832,46373
mhd_completed_cb 2277,60520
mhd_connection_cb 2339,62401
mhd_log_callback 2408,64254
kill_httpd 2446,65091
kill_httpd_task 2471,65651
schedule_httpd 2497,66197
do_httpd 2570,67947
run_mhd_now 2586,68197
load_file 2603,68576
load_key_from_file 2639,69342
load_cert_from_file 2670,70145
generate_gns_certificate 2701,71027
mhd_error_log_callback 2783,74060
lookup_ssl_httpd 2798,74383
timeout_s5r_handshake 2860,76633
setup_data_transfer 2878,77071
do_write 2942,78713
signal_socks_failure 3007,80117
signal_socks_success 3034,81070
handle_gns_result 3066,82094
clear_from_s5r_rbuf 3205,85951
do_s5r_read 3222,86311
do_accept 3434,93474
do_shutdown 3486,95137
bind_v4 3552,96539
bind_v6 3590,97398
run 3631,98367
main 3860,105314

src/service/gns/gnunet-gns-import.c,772
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg35,1143
static struct GNUNET_IDENTITY_Handle *sh;sh40,1237
struct GNUNET_NAMESTORE_ZoneIterator *list_it;list_it45,1321
static struct GNUNET_NAMESTORE_Handle *ns;ns50,1405
static char *master_zone_pkey;master_zone_pkey55,1500
static struct GNUNET_CRYPTO_EcdsaPrivateKey master_pk;60,1583
static char *private_zone_pkey;private_zone_pkey65,1691
static char *pin_zone_pkey pin_zone_pkey70,1772
static int found_private_rec 76,1918
static int found_pin_rec 81,2015
static int ret;86,2076
run_process_and_wait 90,2105
check_pkey 167,3932
zone_iterator 205,5123
zone_iteration_error 222,5637
zone_iteration_finished 261,6851
get_ego 299,8410
shutdown_task 350,9934
run 383,10585
main 476,14210

src/service/gns/nss/nss_gns_query.h,365
#define NSS_GNS_QUERY_H21,821
#define MAX_ENTRIES 29,948
  uint32_t address;33,989
} ipv4_address_t;34,1009
  uint8_t address[address39,1046
} ipv6_address_t;40,1069
struct userdata43,1089
  int count;45,1107
  int data_len;46,1120
    ipv4_address_t ipv4[ipv449,1191
    ipv6_address_t ipv6[ipv650,1229
    char *name[name51,1267
  } data;52,1296

src/service/gns/nss/nss_gns_query.c,66
#define TIMEOUT 33,1059
kwait 36,1093
gns_resolve_name 58,1502

src/service/gns/nss/nss_gns.c,128
#define ALIGN(39,1140
_nss_gns_gethostbyname2_r 58,1630
_nss_gns_gethostbyname_r 201,4837
_nss_gns_gethostbyaddr_r 233,5906

src/service/gns/gnunet-service-gns_resolver.c,4737
#define DHT_LOOKUP_TIMEOUT 59,1683
#define DNS_LOOKUP_TIMEOUT 65,1823
#define DHT_GNS_REPLICATION_LEVEL 71,1952
struct Gns2DnsPending86,2239
  struct Gns2DnsPending *next;next91,2295
  struct Gns2DnsPending *prev;prev96,2359
  struct AuthorityChain *ac;ac101,2444
  struct GNS_ResolverHandle *rh;rh108,2626
  struct GNUNET_RESOLVER_RequestHandle *dns_rh;dns_rh113,2726
  unsigned int num_results;118,2821
struct AuthorityChain133,3097
  struct AuthorityChain *prev;prev138,3153
  struct AuthorityChain *next;next143,3217
  struct GNS_ResolverHandle *rh;rh148,3318
  char *label;label153,3411
  int gns_authority;159,3548
    struct GNUNET_CRYPTO_PublicKey gns_authority;169,3709
      char name[name178,3968
      struct Gns2DnsPending *gp_head;gp_head184,4137
      struct Gns2DnsPending *gp_tail;gp_tail190,4297
      struct GNUNET_DNSSTUB_Context *dns_handle;dns_handle195,4438
      int found;201,4646
      int launched;206,4740
    } dns_authority;207,4760
  } authority_info;208,4781
struct DnsResult215,4843
  struct DnsResult *next;next220,4892
  struct DnsResult *prev;prev225,4949
  const void *data;data230,5057
  uint64_t expiration_time;236,5206
  size_t data_size;241,5280
  uint32_t record_type;246,5346
struct GNS_ResolverHandle254,5501
  struct GNS_ResolverHandle *next;next259,5550
  struct GNS_ResolverHandle *prev;prev264,5607
  struct GNUNET_CRYPTO_PublicKey authority_zone;269,5706
  GNS_ResultProcessor proc;274,5811
  void *proc_cls;proc_cls279,5883
  struct GNUNET_DHT_GetHandle *get_handle;get_handle284,5988
  struct GNUNET_DNSSTUB_RequestSocket *dns_request;dns_request290,6100
  struct GNUNET_RESOLVER_RequestHandle *std_resolve;std_resolve295,6230
  struct GNUNET_NAMECACHE_QueueEntry *namecache_qe;namecache_qe300,6331
  struct GNUNET_REVOCATION_Query *rev_check;rev_check305,6427
  struct GNUNET_CONTAINER_HeapNode *dht_heap_node;dht_heap_node311,6580
  struct AuthorityChain *ac_head;ac_head316,6682
  struct AuthorityChain *ac_tail;ac_tail321,6767
  struct GNUNET_SCHEDULER_Task *task_id;task_id326,6872
  char *name;name331,6951
  char *leho;leho337,7095
  struct DnsResult *dns_result_head;dns_result_head342,7159
  struct DnsResult *dns_result_tail;dns_result_tail347,7246
  size_t name_resolution_pos;352,7351
  enum GNUNET_GNS_LocalOptions options;357,7414
  int protocol;363,7582
  int service;369,7724
  char *prefix;prefix374,7822
  int record_type;380,7890
  unsigned int loop_limiter;387,8116
  unsigned int loop_threshold;392,8215
  uint16_t original_dns_id;397,8312
struct CacheOps404,8393
  struct CacheOps *next;next409,8448
  struct CacheOps *prev;prev414,8511
  struct GNUNET_NAMECACHE_QueueEntry *namecache_qe_cache;namecache_qe_cache419,8586
static struct GNUNET_NAMECACHE_Handle *namecache_handle;namecache_handle426,8696
static struct GNUNET_DHT_Handle *dht_handle;dht_handle431,8792
static struct GNUNET_CONTAINER_Heap *dht_lookup_heap;dht_lookup_heap436,8888
static unsigned long long max_allowed_background_queries;441,9000
static struct GNS_ResolverHandle *rlh_head;rlh_head446,9099
static struct GNS_ResolverHandle *rlh_tail;rlh_tail451,9184
static struct CacheOps *co_head;co_head456,9260
static struct CacheOps *co_tail;co_tail461,9325
static int disable_cache;466,9384
static const struct GNUNET_CONFIGURATION_Handle *cfg;cfg471,9444
is_canonical 490,10047
translate_dot_plus 521,10739
GNS_resolver_lookup_cancel_ 549,11502
fail_resolution 564,11760
timeout_resolution 581,12149
resolver_getprotobyname 596,12394
resolver_getservbyname 614,12746
resolver_lookup_get_next_label 644,14099
transmit_lookup_dns_result 777,18305
add_dns_result 835,19912
handle_dns_result 866,20823
dns_result_parser 938,22586
recursive_dns_resolution 1218,31645
handle_gns_redirect_result 1289,33970
handle_gns_cname_result 1424,38090
continue_with_gns2dns 1479,39530
handle_gns2dns_result 1516,40852
handle_gns2dns_ip 1618,43913
recursive_redirect_resolution 1678,45524
recursive_cname_resolution 1693,45910
recursive_pkey_resolution 1724,46673
recursive_gns2dns_resolution 1767,48224
handle_gns_resolution_result 1975,54546
namecache_cache_continuation 2512,73191
handle_dht_response 2549,74490
start_dht_request 2642,77717
handle_gns_namecache_resolution_result 2680,79235
handle_namecache_block_response 2703,79942
recursive_gns_resolution_namecache 2790,83077
handle_revocation_result 2826,84204
recursive_gns_resolution_revocation 2851,84814
recursive_resolution 2867,85398
start_resolver_lookup 2888,85878
GNS_resolver_lookup 2969,88382
GNS_resolver_lookup_cancel 3006,89523
GNS_resolver_init 3121,92719
GNS_resolver_done 3145,93494

src/service/gns/gnunet-service-gns_resolver.h,81
#define GNS_RESOLVER_H26,936
(*GNS_ResultProcessor)GNS_ResultProcessor69,1916

src/service/gns/gnunet_w32nsp_lib.h,33
#define GNUNET_W32NSP_LIB_H2,35

src/service/gns/gnunet-service-gns_interceptor.c,661
#define MAX_RECURSION 38,1241
struct InterceptLookupHandle45,1329
  struct InterceptLookupHandle *next;next50,1401
  struct InterceptLookupHandle *prev;prev55,1481
  struct GNUNET_DNS_RequestHandle *request_handle;request_handle60,1568
  struct GNUNET_DNSPARSER_Packet *packet;packet65,1668
  struct GNS_ResolverHandle *lookup;lookup70,1761
static struct GNUNET_DNS_Handle *dns_handle;dns_handle77,1852
static struct InterceptLookupHandle *ilh_head;ilh_head82,1926
static struct InterceptLookupHandle *ilh_tail;ilh_tail87,2002
reply_to_dns 98,2279
handle_dns_request 327,10277
GNS_interceptor_init 386,12251
GNS_interceptor_done 408,12865

src/service/gns/gns_api.c,727
#define LOG(36,1153
#define DEFAULT_LIMIT 42,1318
struct GNUNET_GNS_LookupRequest47,1383
  struct GNUNET_GNS_LookupRequest *next;next52,1438
  struct GNUNET_GNS_LookupRequest *prev;prev57,1501
  struct GNUNET_GNS_Handle *gns_handle;gns_handle62,1574
  GNUNET_GNS_LookupResultProcessor lookup_proc;67,1667
  void *proc_cls;proc_cls72,1756
  struct GNUNET_MQ_Envelope *env;env77,1840
  uint32_t r_id;82,1903
reconnect_task 101,2140
force_reconnect 116,2369
mq_error_handler 138,3070
check_result 157,3492
handle_result 185,4260
reconnect 232,5739
GNUNET_GNS_connect 267,6818
GNUNET_GNS_disconnect 289,7230
GNUNET_GNS_lookup_cancel 313,7737
GNUNET_GNS_lookup_limited 343,8648
GNUNET_GNS_lookup 421,11252

src/service/gns/gnunet-gns-benchmark.c,1478
#define DEF_REQUEST_DELAY 34,1133
#define DEF_TIMEOUT 40,1310
enum RequestCategory49,1584
  RC_SHARED 51,1607
  RC_PRIVATE 52,1624
  RC_MAX 56,1704
struct Request65,1894
  struct Request *next;next70,1963
  struct Request *prev;prev75,2040
  struct GNUNET_GNS_LookupWithTldRequest *lr;lr80,2135
  const char *hostname;hostname87,2345
  struct GNUNET_TIME_Absolute op_start_time;93,2486
  struct GNUNET_TIME_Relative latency;98,2592
  enum RequestCategory cat;103,2674
static struct GNUNET_GNS_Handle *gns;gns110,2730
static unsigned int lookups[lookups115,2833
static unsigned int replies[replies120,2921
static unsigned int failures[failures125,3009
static struct GNUNET_TIME_Relative latency_sum[latency_sum131,3129
static struct Request *act_head;act_head136,3232
static struct Request *act_tail;act_tail141,3312
static struct Request *succ_head;succ_head146,3406
static struct Request *succ_tail;succ_tail151,3501
static struct Request *todo_head;todo_head156,3593
static struct Request *todo_tail;todo_tail161,3685
static struct GNUNET_SCHEDULER_Task *t;t166,3742
static struct GNUNET_TIME_Relative request_delay;171,3818
static struct GNUNET_TIME_Relative timeout;176,3902
static unsigned int active_cnt;181,4006
static int g2d;186,4089
free_request 194,4213
process_result 211,4612
process_queue 246,5536
compare_req 320,7910
do_shutdown 340,8327
queue 445,11381
process_stdin 480,12165
run 543,13774
main 573,14390

src/service/gns/gns_tld_api.c,807
#define LOG(38,1255
struct GNUNET_GNS_LookupWithTldRequest44,1369
  struct GNUNET_GNS_Handle *gns_handle;gns_handle49,1441
  GNUNET_GNS_LookupResultProcessor2 lookup_proc;54,1534
  char *name;name59,1631
  void *lookup_proc_cls;lookup_proc_cls64,1686
  struct GNUNET_GNS_LookupRequest *lr;lr69,1752
  struct GNUNET_IDENTITY_EgoSuffixLookup *id_co;id_co74,1850
  char *longest_match;longest_match80,1999
  struct GNUNET_IDENTITY_Ego *longest_match_ego;longest_match_ego85,2079
  uint32_t type;90,2174
  enum GNUNET_GNS_LocalOptions options;95,2225
get_tld 107,2470
eat_tld 127,2815
process_lookup_result 150,3361
lookup_with_public_key 169,3868
identity_zone_cb 192,4664
GNUNET_GNS_parse_ztld 228,5760
GNUNET_GNS_lookup_with_tld 240,6065
GNUNET_GNS_lookup_with_tld_cancel 331,8894

src/service/gns/gnunet-service-gns.c,1348
struct ClientLookupHandle48,1449
  struct ClientLookupHandle *next;next53,1518
  struct ClientLookupHandle *prev;prev58,1595
  struct GnsClient *gc;gc63,1662
  struct GNS_ResolverHandle *lookup;lookup68,1734
  uint32_t request_id;73,1800
struct GnsClient80,1882
  struct GNUNET_SERVICE_Client *client;client85,1929
  struct GNUNET_MQ_Handle *mq;mq90,1994
  struct ClientLookupHandle *clh_head;clh_head95,2060
  struct ClientLookupHandle *clh_tail;clh_tail100,2134
struct GNS_TopLevelDomain108,2307
  struct GNS_TopLevelDomain *next;next114,2433
  struct GNS_TopLevelDomain *prev;prev120,2567
  struct GNUNET_CRYPTO_PublicKey pkey;125,2659
  char *tld;tld130,2769
static struct GNUNET_DHT_Handle *dht_handle;dht_handle137,2820
static struct GNUNET_NAMECACHE_Handle *namecache_handle;namecache_handle142,2913
static int v6_enabled;147,3015
static int v4_enabled;152,3083
static struct GNUNET_STATISTICS_Handle *statistics;statistics157,3151
static struct GNS_TopLevelDomain *tld_head;tld_head162,3256
static struct GNS_TopLevelDomain *tld_tail;tld_tail167,3353
GNS_find_tld 178,3601
GNS_get_tld 210,4361
shutdown_task 230,4645
client_disconnect_cb 274,5595
client_connect_cb 307,6444
send_lookup_response 332,7021
check_lookup 393,9028
handle_lookup 418,9500
read_service_conf 496,12163
run 538,13305

contrib/test_gnunet_prefix.c,14
main 31,1015

contrib/gana/gns-protocol-numbers/gnu_name_system_protocols.h,299
#define GNUNET_GNS_PROTOCOLS_H21,832
struct GNUNET_GNS_Protocol39,1211
  const char *name;name41,1240
  uint16_t number;43,1261
struct GNUNET_GNS_Protocol GNUNET_GNS_Protocols[GNUNET_GNS_Protocols46,1284
GNUNET_GNS_protocol_name_to_number 62,1490
GNUNET_GNS_protocol_number_to_name 76,1754

contrib/gana/gnunet-dht-block-types/gnunet_dht_block_types.h,742
#define GNUNET_DHT_BLOCK_TYPES_H21,834
enum GNUNET_BLOCK_Type42,1291
  GNUNET_BLOCK_TYPE_ANY 49,1361
  GNUNET_BLOCK_TYPE_FS_DBLOCK 55,1444
  GNUNET_BLOCK_TYPE_FS_IBLOCK 61,1527
  GNUNET_BLOCK_TYPE_FS_ONDEMAND 67,1698
  GNUNET_BLOCK_TYPE_LEGACY_HELLO 73,1811
  GNUNET_BLOCK_TYPE_TEST 79,1887
  GNUNET_BLOCK_TYPE_FS_UBLOCK 85,2004
  GNUNET_BLOCK_TYPE_DNS 91,2109
  GNUNET_BLOCK_TYPE_GNS_NAMERECORD 97,2193
  GNUNET_BLOCK_TYPE_REVOCATION 103,2316
  GNUNET_BLOCK_TYPE_DHT_HELLO 109,2429
  GNUNET_BLOCK_TYPE_REGEX 115,2519
  GNUNET_BLOCK_TYPE_REGEX_ACCEPT 121,2615
  GNUNET_BLOCK_TYPE_SET_TEST 127,2780
  GNUNET_BLOCK_TYPE_CONSENSUS_ELEMENT 133,2928
  GNUNET_BLOCK_TYPE_SETI_TEST 139,3101
  GNUNET_BLOCK_TYPE_SETU_TEST 145,3259

contrib/gana/gns-service-port-numbers/gnu_name_system_service_ports.h,321
#define GNUNET_GNS_SERVICE_PORTS_H21,836
struct GNUNET_GNS_ServicePort39,1219
  const char *name;name41,1251
  uint16_t port;43,1272
struct GNUNET_GNS_ServicePort GNUNET_GNS_ServicePorts[GNUNET_GNS_ServicePorts46,1293
GNUNET_GNS_service_port_name_to_number 70,1726
GNUNET_GNS_service_port_number_to_name 84,2001

contrib/gana/gnunet-signatures/gnunet_signatures.h,2024
#define GNUNET_SIGNATURES_H21,829
#define GNUNET_SIGNATURE_PURPOSE_TEST 52,1509
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_PONG_OWN 58,1648
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DISCONNECT 64,1797
#define GNUNET_SIGNATURE_PURPOSE_GNS_REVOCATION 70,1896
#define GNUNET_SIGNATURE_PURPOSE_NAMESPACE_ADVERTISEMENT 76,2047
#define GNUNET_SIGNATURE_PURPOSE_PEER_PLACEMENT 82,2237
#define GNUNET_SIGNATURE_PURPOSE_DHT_HOP 88,2387
#define GNUNET_SIGNATURE_PURPOSE_HELLO 94,2505
#define GNUNET_SIGNATURE_PURPOSE_DNS_RECORD 100,2618
#define GNUNET_SIGNATURE_PURPOSE_CHAT_MESSAGE 106,2726
#define GNUNET_SIGNATURE_PURPOSE_CHAT_RECEIPT 112,2861
#define GNUNET_SIGNATURE_PURPOSE_NSE_SEND 118,2982
#define GNUNET_SIGNATURE_PURPOSE_GNS_RECORD_SIGN 124,3071
#define GNUNET_SIGNATURE_PURPOSE_SET_ECC_KEY 130,3183
#define GNUNET_SIGNATURE_PURPOSE_FS_UBLOCK 136,3298
#define GNUNET_SIGNATURE_PURPOSE_REGEX_ACCEPT 142,3450
#define GNUNET_SIGNATURE_PURPOSE_CONVERSATION_RING 148,3568
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DKG1 154,3719
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DKG2 160,3872
#define GNUNET_SIGNATURE_PURPOSE_SECRETSHARING_DECRYPTION 166,4005
#define GNUNET_SIGNATURE_PURPOSE_RECLAIM_CODE_SIGN 172,4118
#define GNUNET_SIGNATURE_PURPOSE_DELEGATE 178,4229
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_ADDRESS 184,4397
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_EPHEMERAL 190,4596
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_HANDSHAKE 196,4734
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_REKEY 202,4875
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_UDP_HANDSHAKE 208,5016
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_UDP_BROADCAST 214,5149
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_CHALLENGE 220,5402
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DV_HOP 226,5545
#define GNUNET_SIGNATURE_PURPOSE_TRANSPORT_DV_INITIATOR 232,5692
#define GNUNET_SIGNATURE_PURPOSE_CADET_CONNECTION_INITIATOR 238,5833
#define GNUNET_SIGNATURE_PURPOSE_COMMUNICATOR_TCP_HANDSHAKE_ACK 244,6006

contrib/gana/gnunet-error-codes/gnunet_error_codes.c,438
#define MHD_HTTP_UNINITIALIZED 28,976
struct ErrorCodeAndHint33,1067
  enum GNUNET_ErrorCode ec;38,1126
  const char *hint;hint43,1182
  unsigned int http_code;48,1242
static const struct ErrorCodeAndHint code_hint_pairs[code_hint_pairs55,1330
static const unsigned int code_hint_pairs_length 196,4788
GNUNET_ErrorCode_get_hint 201,4859
GNUNET_ErrorCode_get_http_status 227,5344
GNUNET_ErrorCode_get_http_status_safe 253,5832

contrib/gana/gnunet-error-codes/gnunet_error_codes.h,1039
#define GNUNET_ERROR_CODES_H27,996
enum GNUNET_ErrorCode42,1172
  GNUNET_EC_NONE 50,1306
  GNUNET_EC_UNKNOWN 57,1459
  GNUNET_EC_SERVICE_COMMUNICATION_FAILED 64,1619
  GNUNET_EC_IDENTITY_NOT_FOUND 71,1770
  GNUNET_EC_IDENTITY_NAME_CONFLICT 78,1938
  GNUNET_EC_IDENTITY_INVALID 85,2119
  GNUNET_EC_NAMESTORE_UNKNOWN 92,2280
  GNUNET_EC_NAMESTORE_ITERATION_FAILED 99,2441
  GNUNET_EC_NAMESTORE_ZONE_NOT_FOUND 106,2592
  GNUNET_EC_NAMESTORE_RECORD_NOT_FOUND 113,2743
  GNUNET_EC_NAMESTORE_RECORD_DELETE_FAILED 120,2913
  GNUNET_EC_NAMESTORE_ZONE_EMPTY 127,3087
  GNUNET_EC_NAMESTORE_LOOKUP_ERROR 134,3253
  GNUNET_EC_NAMESTORE_NO_RECORDS_GIVEN 141,3404
  GNUNET_EC_NAMESTORE_RECORD_DATA_INVALID 148,3562
  GNUNET_EC_NAMESTORE_NO_LABEL_GIVEN 155,3718
  GNUNET_EC_NAMESTORE_NO_RESULTS 162,3869
  GNUNET_EC_NAMESTORE_RECORD_EXISTS 169,4020
  GNUNET_EC_NAMESTORE_RECORD_TOO_BIG 176,4199
  GNUNET_EC_NAMESTORE_BACKEND_FAILED 183,4388
  GNUNET_EC_NAMESTORE_STORE_FAILED 190,4568
  GNUNET_EC_NAMESTORE_LABEL_INVALID 197,4729

contrib/gana/http-status-codes/http-status-codes.h,2499
#define GNU_LIBMICROHTTPD_HTTP_STATUS_CODES_H21,880
enum MHD_HTTP_StatusCode 40,1478
  MHD_HTTP_CONTINUE 46,1558
  MHD_HTTP_SWITCHING_PROTOCOLS 52,1649
  MHD_HTTP_PROCESSING 58,1727
  MHD_HTTP_EARLY_HINTS 64,1797
  MHD_HTTP_OK 70,1874
  MHD_HTTP_CREATED 76,1947
  MHD_HTTP_ACCEPTED 82,2026
  MHD_HTTP_NON_AUTHORITATIVE_INFORMATION 88,2127
  MHD_HTTP_NO_CONTENT 94,2230
  MHD_HTTP_RESET_CONTENT 100,2317
  MHD_HTTP_PARTIAL_CONTENT 106,2407
  MHD_HTTP_MULTI_STATUS 112,2483
  MHD_HTTP_ALREADY_REPORTED 118,2560
  MHD_HTTP_IM_USED 124,2632
  MHD_HTTP_MULTIPLE_CHOICES 130,2719
  MHD_HTTP_MOVED_PERMANENTLY 136,2816
  MHD_HTTP_FOUND 142,2902
  MHD_HTTP_SEE_OTHER 148,2980
  MHD_HTTP_NOT_MODIFIED 154,3063
  MHD_HTTP_USE_PROXY 160,3148
  MHD_HTTP_SWITCH_PROXY 166,3244
  MHD_HTTP_TEMPORARY_REDIRECT 172,3338
  MHD_HTTP_PERMANENT_REDIRECT 178,3423
  MHD_HTTP_BAD_REQUEST 184,3516
  MHD_HTTP_UNAUTHORIZED 190,3601
  MHD_HTTP_PAYMENT_REQUIRED 196,3693
  MHD_HTTP_FORBIDDEN 202,3782
  MHD_HTTP_NOT_FOUND 208,3864
  MHD_HTTP_METHOD_NOT_ALLOWED 214,3955
  MHD_HTTP_NOT_ACCEPTABLE 220,4051
  MHD_HTTP_PROXY_AUTHENTICATION_REQUIRED 226,4156
  MHD_HTTP_REQUEST_TIMEOUT 232,4264
  MHD_HTTP_CONFLICT 238,4351
  MHD_HTTP_GONE 244,4427
  MHD_HTTP_LENGTH_REQUIRED 250,4511
  MHD_HTTP_PRECONDITION_FAILED 256,4629
  MHD_HTTP_CONTENT_TOO_LARGE 262,4731
  MHD_HTTP_URI_TOO_LONG 268,4825
  MHD_HTTP_UNSUPPORTED_MEDIA_TYPE 274,4944
  MHD_HTTP_RANGE_NOT_SATISFIABLE 280,5049
  MHD_HTTP_EXPECTATION_FAILED 286,5153
  MHD_HTTP_MISDIRECTED_REQUEST 292,5254
  MHD_HTTP_UNPROCESSABLE_CONTENT 298,5359
  MHD_HTTP_LOCKED 304,5435
  MHD_HTTP_FAILED_DEPENDENCY 310,5507
  MHD_HTTP_TOO_EARLY 316,5582
  MHD_HTTP_UPGRADE_REQUIRED 322,5672
  MHD_HTTP_PRECONDITION_REQUIRED 328,5758
  MHD_HTTP_TOO_MANY_REQUESTS 334,5845
  MHD_HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE 340,5942
  MHD_HTTP_UNAVAILABLE_FOR_LEGAL_REASONS 346,6051
  MHD_HTTP_INTERNAL_SERVER_ERROR 352,6165
  MHD_HTTP_NOT_IMPLEMENTED 358,6265
  MHD_HTTP_BAD_GATEWAY 364,6355
  MHD_HTTP_SERVICE_UNAVAILABLE 370,6449
  MHD_HTTP_GATEWAY_TIMEOUT 376,6547
  MHD_HTTP_HTTP_VERSION_NOT_SUPPORTED 382,6652
  MHD_HTTP_VARIANT_ALSO_NEGOTIATES 388,6750
  MHD_HTTP_INSUFFICIENT_STORAGE 394,6842
  MHD_HTTP_LOOP_DETECTED 400,6924
  MHD_HTTP_NOT_EXTENDED 406,6998
  MHD_HTTP_NETWORK_AUTHENTICATION_REQUIRED 412,7090
  MHD_HTTP_RETRY_WITH 418,7189
  MHD_HTTP_BANDWIDTH_LIMIT_EXCEEDED 424,7281
  MHD_HTTP_UNINITIALIZED 430,7418

contrib/gana/gnu-name-system-record-types/gnu_name_system_record_types.h,1406
#define GNU_NAME_SYSTEM_RECORD_TYPES_H21,840
#define GNUNET_GNSRECORD_TYPE_PKEY 43,1265
#define GNUNET_GNSRECORD_TYPE_NICK 49,1337
#define GNUNET_GNSRECORD_TYPE_LEHO 55,1411
#define GNUNET_GNSRECORD_TYPE_VPN 61,1480
#define GNUNET_GNSRECORD_TYPE_GNS2DNS 67,1551
#define GNUNET_GNSRECORD_TYPE_BOX 73,1619
#define GNUNET_GNSRECORD_TYPE_PLACE 79,1699
#define GNUNET_GNSRECORD_TYPE_PHONE 85,1780
#define GNUNET_GNSRECORD_TYPE_RECLAIM_ATTRIBUTE 91,1854
#define GNUNET_GNSRECORD_TYPE_RECLAIM_TICKET 97,1944
#define GNUNET_GNSRECORD_TYPE_SBOX 103,2020
#define GNUNET_GNSRECORD_TYPE_DELEGATE 109,2091
#define GNUNET_GNSRECORD_TYPE_ATTRIBUTE 115,2173
#define GNUNET_GNSRECORD_TYPE_RECLAIM_ATTRIBUTE_REF 121,2252
#define GNUNET_GNSRECORD_TYPE_REDIRECT 127,2342
#define GNUNET_GNSRECORD_TYPE_RECLAIM_OIDC_CLIENT 133,2431
#define GNUNET_GNSRECORD_TYPE_RECLAIM_OIDC_REDIRECT 139,2542
#define GNUNET_GNSRECORD_TYPE_RECLAIM_CREDENTIAL 145,2666
#define GNUNET_GNSRECORD_TYPE_RECLAIM_PRESENTATION 151,2782
#define GNUNET_GNSRECORD_TYPE_EDKEY 157,2880
#define GNUNET_GNSRECORD_TYPE_ERIS_READ_CAPABILITY 163,3003
#define GNUNET_GNSRECORD_TYPE_MESSENGER_ROOM_ENTRY 169,3123
#define GNUNET_GNSRECORD_TYPE_TOMBSTONE 175,3259
#define GNUNET_GNSRECORD_TYPE_MESSENGER_ROOM_DETAILS 181,3370
#define GNUNET_GNSRECORD_TYPE_DID_DOCUMENT 187,3477
#define GNUNET_GNSRECORD_TYPE_GNS_REGISTRAR_METADATA 193,3586

gnunet_private_config.h,5989
#define _GNU_SOURCE 4,169
#define DOCUMENTATION_ONLY 10,320
#define ENABLED_POISONING 13,396
#define ENABLE_HEAP_STATISTICS 19,565
#define ENABLE_MALICIOUS 22,660
#define ENABLE_NLS 26,788
#define ENABLE_NSE_HISTOGRAM 29,869
#define GNUNET_DEFAULT_INTERFACE 41,1202
#define GNUNET_EXPERIMENTAL 44,1291
#define GNUNET_EXTRA_LOGGING 47,1396
#define GNUNET_LOGREAD 50,1485
#define HAVE_ARGZ_H 53,1567
#define HAVE_ARPA_INET_H 56,1651
#define HAVE_ATOLL 59,1731
#define HAVE_AWK 62,1791
#define HAVE_BYTESWAP_H 68,1983
#define HAVE_CHOWN 79,2381
#define HAVE_CTYPE_H 82,2460
#define HAVE_DCGETTEXT 86,2568
#define HAVE_DECL_CURLINFO_TLS_SSL_PTR 90,2693
#define HAVE_DECL_GCRY_MPI_SET_OPAQUE_COPY 94,2838
#define HAVE_DECL_STRUCT_IN6_IFREQ 98,2979
#define HAVE_DIRENT_H 102,3100
#define HAVE_DLFCN_H 105,3182
#define HAVE_ENDIAN_H 108,3264
#define HAVE_ERRNO_H 111,3346
#define HAVE_EXECINFO_H 114,3430
#define HAVE_EXPLICIT_BZERO 117,3506
#define HAVE_FCNTL_H 123,3686
#define HAVE_FORK 126,3761
#define HAVE_FREEIFADDRS 129,3840
#define HAVE_FSEEKO 132,3944
#define HAVE_GETADDRINFO_A 135,4015
#define HAVE_GETHOSTBYNAME2 138,4106
#define HAVE_GETIFADDRS 141,4194
#define HAVE_GETLOADAVG 144,4278
#define HAVE_GETRESGID 153,4539
#define HAVE_GETRLIMIT 156,4621
#define HAVE_GETRUSAGE 159,4703
#define HAVE_GETTEXT 162,4808
#define HAVE_GNUTLS 165,4873
#define HAVE_GNUTLS_ABSTRACT_H 168,4963
#define HAVE_GNUTLS_DANE 171,5042
#define HAVE_GNUTLS_DANE_H 174,5133
#define HAVE_ICONV 177,5223
#define HAVE_IDN2_H 180,5301
#define HAVE_IFADDRS_H 192,5647
#define HAVE_INITGROUPS 195,5730
#define HAVE_INTTYPES_H 198,5817
#define HAVE_JANSSON 201,5875
#define HAVE_JANSSON_H 204,5958
#define HAVE_JOSE 207,6015
#define HAVE_LANGINFO_H 213,6188
#define HAVE_LIBBLUETOOTH 219,6318
#define HAVE_LIBCURL 222,6404
#define HAVE_LIBEXTRACTOR 225,6459
#define HAVE_LIBIDN2 231,6597
#define HAVE_LIBINTL_H 237,6766
#define HAVE_LIBM 246,7017
#define HAVE_LIMITS_H 261,7450
#define HAVE_LOCALE_H 264,7533
#define HAVE_LTDL 267,7589
#define HAVE_LTDL_H 270,7666
#define HAVE_MALLINFO2 276,7837
#define HAVE_MALLOC_H 279,7921
#define HAVE_MALLOC_USABLE_SIZE 291,8306
#define HAVE_MATH_H 294,8397
#define HAVE_MEMCHR 297,8461
#define HAVE_MEMORY_H 300,8542
#define HAVE_MHD 306,8686
#define HAVE_MREMAP 309,8759
#define HAVE_NETDB_H 315,8943
#define HAVE_NETINET_IN_H 318,9029
#define HAVE_NSS_H 330,9409
#define HAVE_OGG 333,9462
#define HAVE_OPUS 339,9601
#define HAVE_PABC 345,9745
#define HAVE_PERL 351,9897
#define HAVE_PNG 354,9959
#define HAVE_POSTGRESQL 360,10102
#define HAVE_PULSE 363,10160
#define HAVE_QUICHE 369,10311
#define HAVE_RANDOM 375,10473
#define HAVE_SETRESUID 378,10552
#define HAVE_SETRLIMIT 381,10634
#define HAVE_SIGNAL_H 384,10718
#define HAVE_SODIUM 396,11056
#define HAVE_SODIUM_H 399,11137
#define HAVE_SQLITE 402,11193
#define HAVE_SQLITE3_H 405,11275
#define HAVE_SRANDOM 408,11355
#define HAVE_STAT 411,11430
#define HAVE_STAT64 414,11504
#define HAVE_STATFS 417,11580
#define HAVE_STATVFS 420,11657
#define HAVE_STDARG_H 423,11739
#define HAVE_STDATOMIC_H 426,11825
#define HAVE_STDBOOL_H 429,11901
#define HAVE_STDINT_H 432,11985
#define HAVE_STDLIB_H 435,12068
#define HAVE_STRINGS_H 438,12152
#define HAVE_STRING_H 441,12236
#define HAVE_STRNDUP 444,12315
#define HAVE_STRNLEN 447,12393
#define HAVE_SYSCONF 450,12471
#define HAVE_SYS_FILE_H 460,12762
#define HAVE_SYS_IOCTL_H 463,12850
#define HAVE_SYS_MMAN_H 466,12938
#define HAVE_SYS_MOUNT_H 469,13026
#define HAVE_SYS_MSG_H 472,13113
#define HAVE_SYS_PARAM_H 479,13315
#define HAVE_SYS_RESOURCE_H 482,13407
#define HAVE_SYS_SELECT_H 485,13500
#define HAVE_SYS_SOCKET_H 488,13591
#define HAVE_SYS_STATVFS_H 491,13683
#define HAVE_SYS_STAT_H 494,13773
#define HAVE_SYS_SYSINFO_H 497,13863
#define HAVE_SYS_TIMEB_H 500,13954
#define HAVE_SYS_TIME_H 503,14042
#define HAVE_SYS_TYPES_H 506,14130
#define HAVE_SYS_VFS_H 512,14309
#define HAVE_THREAD_LOCAL_GCC 515,14378
#define HAVE_TIMEGM 518,14464
#define HAVE_TM_GMTOFF 521,14543
#define HAVE_UNALIGNED_64_ACCESS 527,14716
#define HAVE_UNISTD_H 530,14810
#define HAVE_UNISTRING 533,14866
#define HAVE_UNISTR_H 536,14950
#define HAVE_VFORK 539,15027
#define HAVE_WAIT4 545,15185
#define HAVE_WORKING_FORK 548,15242
#define HAVE_WORKING_VFORK 551,15307
#define HAVE_ZBAR 554,15368
#define HAVE_ZLIB 560,15510
#define HAVE__BOOL 563,15585
#define ICONV_CONST 566,15672
#define IFCONFIG 569,15717
#define IF_TUN_HDR 572,15786
#define INCLUDE_MANPAGES 575,15867
#define IP6TABLES 578,15919
#define IPTABLES 581,15983
#define LIBCURL_FEATURE_ASYNCHDNS 584,16066
#define LIBCURL_FEATURE_IDN 587,16141
#define LIBCURL_FEATURE_IPV6 590,16211
#define LIBCURL_FEATURE_LIBZ 596,16356
#define LIBCURL_FEATURE_NTLM 599,16427
#define LIBCURL_FEATURE_SSL 602,16497
#define LIBCURL_PROTOCOL_DICT 608,16641
#define LIBCURL_PROTOCOL_FILE 611,16713
#define LIBCURL_PROTOCOL_FTP 614,16784
#define LIBCURL_PROTOCOL_FTPS 617,16855
#define LIBCURL_PROTOCOL_HTTP 620,16927
#define LIBCURL_PROTOCOL_HTTPS 623,17000
#define LIBCURL_PROTOCOL_IMAP 626,17073
#define LIBCURL_PROTOCOL_POP3 632,17220
#define LIBCURL_PROTOCOL_RTSP 635,17292
#define LIBCURL_PROTOCOL_SMTP 638,17364
#define LIBCURL_PROTOCOL_TELNET 641,17438
#define LIBCURL_PROTOCOL_TFTP 644,17512
#define LINUX 647,17603
#define LT_OBJDIR 650,17698
#define NEED_LIBGCRYPT_VERSION 653,17759
#define PACKAGE 665,18062
#define PACKAGE_BUGREPORT 668,18167
#define PACKAGE_NAME 671,18262
#define PACKAGE_STRING 674,18352
#define PACKAGE_TARNAME 677,18466
#define PACKAGE_URL 680,18548
#define PACKAGE_VERSION 683,18617
#define PATH_TO_IP 686,18683
#define STDC_HEADERS 695,18952
#define SYSCTL 698,18997
#define UPNPC 704,19149
#define VCS_VERSION 707,19215
#define VERSION 710,19284
#define X_DISPLAY_MISSING 713,19396
# define _DARWIN_USE_64_BIT_INODE 717,19510

builddir/meson-private/sanitycheckc.c,14
int main(1,0

builddir/src/include/gnunet_config.h,295
#define GNUNET_CONFIG_H22,833
#define GNUNET_VERSION 34,1038
#define GNUNET_MAJOR_VERSION 37,1116
#define GNUNET_MINOR_VERSION 40,1168
#define GNUNET_MICRO_VERSION 43,1220
#define GNUNET_EXPERIMENTAL 46,1300
#define GNUNET_CURL_GNUTLS 49,1377
#define GNUNET_FS_EXTRACTOR_ENABLED 56,1563

builddir/gnunet_private_config.h,1389
#define GNUNET_DEFAULT_INTERFACE 8,109
#define HAVE_ATOLL 10,150
#define HAVE_EXPLICIT_BZERO 12,172
#define HAVE_FREEIFADDRS 14,203
#define HAVE_GETADDRINFO 16,231
#define HAVE_GETHOSTBYNAME 18,259
#define HAVE_GETHOSTBYNAME2 20,289
#define HAVE_GETIFADDRS 22,320
#define HAVE_GETRESGID 24,347
#define HAVE_GETRLIMIT 26,373
#define HAVE_GETRUSAGE 28,399
#define HAVE_INITGROUPS 30,425
#define HAVE_MALLINFO2 32,452
#define HAVE_MALLOC_USABLE_SIZE 34,478
#define HAVE_MREMAP 36,513
#define HAVE_RANDOM 38,536
#define HAVE_SETRESUID 40,559
#define HAVE_SETRLIMIT 42,585
#define HAVE_SRANDOM 44,611
#define HAVE_STAT 46,635
#define HAVE_STAT64 48,656
#define HAVE_STATFS 50,679
#define HAVE_STATVFS 52,702
#define HAVE_STRNDUP 54,726
#define HAVE_STRNLEN 56,750
#define HAVE_TIMEGM 58,774
#define HAVE_WAIT4 60,797
#define IFCONFIG 62,819
#define IPTABLES 64,858
#define JAVAPORT 66,897
#define PACKAGE_VERSION 68,917
#define PATH_TO_IP 70,951
#define PKGDATADIRECTORY 72,986
#define START_ON_DEMAND 74,1036
#define SYSCONFDIR 76,1065
#define UNIXONLY 78,1100
#define VCS_VERSION 80,1120
#define build_target 82,1154
#define curl_gnutls 84,1184
#undef enable_experimental86,1207
#define extractor 88,1235
#define gnunet_major_version 90,1256
#define gnunet_micro_version 92,1288
#define gnunet_minor_version 94,1320
#define gnunet_version 96,1353

src/service/messenger/testing_messenger_traits.c,0

src/service/testbed/testing_testbed_traits.c,0

src/service/peerstore/peerstore_common.h,0

src/service/rest/namestore_plugin.h,0

src/service/rest/identity_plugin.h,0

src/service/rest/copying_plugin.h,0

src/service/rest/reclaim_plugin.h,0

src/service/rest/json_reclaim.h,0

src/service/rest/config_plugin.h,0

src/service/rest/gns_plugin.h,0

src/service/rest/openid_plugin.h,0

src/service/arm/testing_arm_traits.c,0

src/contrib/service/rps/gnunet-service-rps_custommap.h,0

src/contrib/service/rps/gnunet-service-rps_view.h,0

src/lib/testing/test_testing_plugin_ping.c,0

doc/old/doc.h,0

doc/old/tutorial/examples/007.c,0

doc/old/tutorial/examples/013.c,0

doc/old/tutorial/examples/014.c,0

doc/old/tutorial/examples/015.c,0

doc/old/tutorial/examples/013.1.c,0

doc/old/tutorial/examples/009.c,0

doc/old/tutorial/examples/016.c,0

doc/old/tutorial/examples/017.c,0
